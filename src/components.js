import * as zp from "vue";
import { inject as Zt, provide as ta, Fragment as te, defineComponent as L, toRefs as We, renderSlot as S, shallowRef as rt, readonly as Da, toValue as Re, customRef as Lc, getCurrentScope as Il, onScopeDispose as El, effectScope as Oc, watch as ye, computed as T, onBeforeUnmount as Di, watchEffect as ot, isRef as ht, reactive as ba, unref as u, getCurrentInstance as fa, toRef as Ge, ref as N, nextTick as Be, onMounted as Pe, toHandlerKey as rC, camelize as rm, onUnmounted as Bt, h as ln, Comment as Fc, mergeProps as O, cloneVNode as sm, createBlock as k, openBlock as h, withCtx as _, createVNode as V, createCommentVNode as D, withKeys as nt, normalizeStyle as It, Teleport as Mi, normalizeProps as pe, guardReactiveProps as me, createElementVNode as J, toDisplayString as X, withModifiers as ze, createTextVNode as ee, markRaw as im, createElementBlock as M, renderList as le, resolveDynamicComponent as ut, watchPostEffect as om, shallowReadonly as Kr, mergeDefaults as lm, watchSyncEffect as sC, withMemo as iC, onBeforeMount as um, toRaw as Tl, useSlots as Se, toHandlers as Ri, hasInjectionContext as zc, onDeactivated as oC, onActivated as lC, resolveComponent as dm, normalizeClass as A, mergeModels as mt, useModel as lt, shallowReactive as uC, useId as Rn, useTemplateRef as Bl, createSlots as Ia, useAttrs as dC, onBeforeUpdate as cC, onUpdated as fC } from "vue";
function nd(e) {
  return typeof e == "string" ? `'${e}'` : new pC().serialize(e);
}
const pC = /* @__PURE__ */ function() {
  class e {
    #e = /* @__PURE__ */ new Map();
    compare(a, n) {
      const r = typeof a, s = typeof n;
      return r === "string" && s === "string" ? a.localeCompare(n) : r === "number" && s === "number" ? a - n : String.prototype.localeCompare.call(this.serialize(a, !0), this.serialize(n, !0));
    }
    serialize(a, n) {
      if (a === null) return "null";
      switch (typeof a) {
        case "string":
          return n ? a : `'${a}'`;
        case "bigint":
          return `${a}n`;
        case "object":
          return this.$object(a);
        case "function":
          return this.$function(a);
      }
      return String(a);
    }
    serializeObject(a) {
      const n = Object.prototype.toString.call(a);
      if (n !== "[object Object]") return this.serializeBuiltInType(n.length < 10 ? `unknown:${n}` : n.slice(8, -1), a);
      const r = a.constructor, s = r === Object || r === void 0 ? "" : r.name;
      if (s !== "" && globalThis[s] === r) return this.serializeBuiltInType(s, a);
      if (typeof a.toJSON == "function") {
        const i = a.toJSON();
        return s + (i !== null && typeof i == "object" ? this.$object(i) : `(${this.serialize(i)})`);
      }
      return this.serializeObjectEntries(s, Object.entries(a));
    }
    serializeBuiltInType(a, n) {
      const r = this["$" + a];
      if (r) return r.call(this, n);
      if (typeof n?.entries == "function") return this.serializeObjectEntries(a, n.entries());
      throw new Error(`Cannot serialize ${a}`);
    }
    serializeObjectEntries(a, n) {
      const r = Array.from(n).sort((i, o) => this.compare(i[0], o[0]));
      let s = `${a}{`;
      for (let i = 0; i < r.length; i++) {
        const [o, l] = r[i];
        s += `${this.serialize(o, !0)}:${this.serialize(l)}`, i < r.length - 1 && (s += ",");
      }
      return s + "}";
    }
    $object(a) {
      let n = this.#e.get(a);
      return n === void 0 && (this.#e.set(a, `#${this.#e.size}`), n = this.serializeObject(a), this.#e.set(a, n)), n;
    }
    $function(a) {
      const n = Function.prototype.toString.call(a);
      return n.slice(-15) === "[native code] }" ? `${a.name || ""}()[native]` : `${a.name}(${a.length})${n.replace(/\s*\n\s*/g, "")}`;
    }
    $Array(a) {
      let n = "[";
      for (let r = 0; r < a.length; r++) n += this.serialize(a[r]), r < a.length - 1 && (n += ",");
      return n + "]";
    }
    $Date(a) {
      try {
        return `Date(${a.toISOString()})`;
      } catch {
        return "Date(null)";
      }
    }
    $ArrayBuffer(a) {
      return `ArrayBuffer[${new Uint8Array(a).join(",")}]`;
    }
    $Set(a) {
      return `Set${this.$Array(Array.from(a).sort((n, r) => this.compare(n, r)))}`;
    }
    $Map(a) {
      return this.serializeObjectEntries("Map", a.entries());
    }
  }
  for (const t of ["Error", "RegExp", "URL"]) e.prototype["$" + t] = function(a) {
    return `${t}(${a})`;
  };
  for (const t of ["Int8Array", "Uint8Array", "Uint8ClampedArray", "Int16Array", "Uint16Array", "Int32Array", "Uint32Array", "Float32Array", "Float64Array"]) e.prototype["$" + t] = function(a) {
    return `${t}[${a.join(",")}]`;
  };
  for (const t of ["BigInt64Array", "BigUint64Array"]) e.prototype["$" + t] = function(a) {
    return `${t}[${a.join("n,")}${a.length > 0 ? "n" : ""}]`;
  };
  return e;
}();
function ca(e, t) {
  return e === t || nd(e) === nd(t);
}
function Mo(e, t, a) {
  const n = e.findIndex((o) => ca(o, t)), r = e.findIndex((o) => ca(o, a));
  if (n === -1 || r === -1) return [];
  const [s, i] = [n, r].sort((o, l) => o - l);
  return e.slice(s, i + 1);
}
function hi(e, t = Number.NEGATIVE_INFINITY, a = Number.POSITIVE_INFINITY) {
  return Math.min(a, Math.max(t, e));
}
function no(e, t) {
  let a = e;
  const n = t.toString(), r = n.indexOf("."), s = r >= 0 ? n.length - r : 0;
  if (s > 0) {
    const i = 10 ** s;
    a = Math.round(a * i) / i;
  }
  return a;
}
function gC(e, t, a, n) {
  t = Number(t), a = Number(a);
  const r = (e - (Number.isNaN(t) ? 0 : t)) % n;
  let s = no(Math.abs(r) * 2 >= n ? e + Math.sign(r) * (n - Math.abs(r)) : e - r, n);
  return Number.isNaN(t) ? !Number.isNaN(a) && s > a && (s = Math.floor(no(a / n, n)) * n) : s < t ? s = t : !Number.isNaN(a) && s > a && (s = t + Math.floor(no((a - t) / n, n)) * n), s = no(s, n), s;
}
function Me(e, t) {
  const a = typeof e == "string" && !t ? `${e}Context` : t, n = Symbol(a);
  return [(i) => {
    const o = Zt(n, i);
    if (o || o === null) return o;
    throw new Error(`Injection \`${n.toString()}\` not found. Component must be used within ${Array.isArray(e) ? `one of the following components: ${e.join(", ")}` : `\`${e}\``}`);
  }, (i) => (ta(n, i), i)];
}
function dt() {
  let e = document.activeElement;
  if (e == null) return null;
  for (; e != null && e.shadowRoot != null && e.shadowRoot.activeElement != null; ) e = e.shadowRoot.activeElement;
  return e;
}
function Ar(e, t, a) {
  const n = a.originalEvent.target, r = new CustomEvent(e, {
    bubbles: !1,
    cancelable: !0,
    detail: a
  });
  t && n.addEventListener(e, t, { once: !0 }), n.dispatchEvent(r);
}
function un(e) {
  return e == null;
}
function rd(e, t) {
  return un(e) ? !1 : Array.isArray(e) ? e.some((a) => ca(a, t)) : ca(e, t);
}
function qc(e) {
  return e ? e.flatMap((t) => t.type === te ? qc(t.children) : [t]) : [];
}
const vC = ["INPUT", "TEXTAREA"];
function Mr(e, t, a, n = {}) {
  if (!t || n.enableIgnoredElement && vC.includes(t.nodeName)) return null;
  const { arrowKeyOptions: r = "both", attributeName: s = "[data-reka-collection-item]", itemsArray: i = [], loop: o = !0, dir: l = "ltr", preventScroll: d = !0, focus: c = !1 } = n, [f, p, g, v, m, y] = [
    e.key === "ArrowRight",
    e.key === "ArrowLeft",
    e.key === "ArrowUp",
    e.key === "ArrowDown",
    e.key === "Home",
    e.key === "End"
  ], x = g || v, b = f || p;
  if (!m && !y && (!x && !b || r === "vertical" && b || r === "horizontal" && x)) return null;
  const C = a ? Array.from(a.querySelectorAll(s)) : i;
  if (!C.length) return null;
  d && e.preventDefault();
  let w = null;
  return b || x ? w = cm(C, t, {
    goForward: x ? v : l === "ltr" ? f : p,
    loop: o
  }) : m ? w = C.at(0) || null : y && (w = C.at(-1) || null), c && w?.focus(), w;
}
function cm(e, t, a, n = e.length) {
  if (--n === 0) return null;
  const r = e.indexOf(t), s = a.goForward ? r + 1 : r - 1;
  if (!a.loop && (s < 0 || s >= e.length)) return null;
  const i = (s + e.length) % e.length, o = e[i];
  return o ? o.hasAttribute("disabled") && o.getAttribute("disabled") !== "false" ? cm(e, o, a, n) : o : null;
}
const [Pl, hC] = Me("ConfigProvider");
var mC = /* @__PURE__ */ L({
  inheritAttrs: !1,
  __name: "ConfigProvider",
  props: {
    dir: {
      type: String,
      required: !1,
      default: "ltr"
    },
    locale: {
      type: String,
      required: !1,
      default: "en"
    },
    scrollBody: {
      type: [Boolean, Object],
      required: !1,
      default: !0
    },
    nonce: {
      type: String,
      required: !1,
      default: void 0
    },
    useId: {
      type: Function,
      required: !1,
      default: void 0
    }
  },
  setup(e) {
    const t = e, { dir: a, locale: n, scrollBody: r, nonce: s } = We(t);
    return hC({
      dir: a,
      locale: n,
      scrollBody: r,
      nonce: s,
      useId: t.useId
    }), (i, o) => S(i.$slots, "default");
  }
}), yC = mC;
function bC(e, t) {
  var a;
  const n = rt();
  return ot(() => {
    n.value = e();
  }, {
    ...t,
    flush: (a = void 0) != null ? a : "sync"
  }), Da(n);
}
function Ln(e) {
  return Il() ? (El(e), !0) : !1;
}
function xr() {
  const e = /* @__PURE__ */ new Set(), t = (s) => {
    e.delete(s);
  };
  return {
    on: (s) => {
      e.add(s);
      const i = () => t(s);
      return Ln(i), {
        off: i
      };
    },
    off: t,
    trigger: (...s) => Promise.all(Array.from(e).map((i) => i(...s))),
    clear: () => {
      e.clear();
    }
  };
}
function wC(e) {
  let t = !1, a;
  const n = Oc(!0);
  return (...r) => (t || (a = n.run(() => e(...r)), t = !0), a);
}
function fm(e) {
  let t = 0, a, n;
  const r = () => {
    t -= 1, n && t <= 0 && (n.stop(), a = void 0, n = void 0);
  };
  return (...s) => (t += 1, n || (n = Oc(!0), a = n.run(() => e(...s))), Ln(r), a);
}
function CC(e) {
  if (!ht(e))
    return ba(e);
  const t = new Proxy({}, {
    get(a, n, r) {
      return u(Reflect.get(e.value, n, r));
    },
    set(a, n, r) {
      return ht(e.value[n]) && !ht(r) ? e.value[n].value = r : e.value[n] = r, !0;
    },
    deleteProperty(a, n) {
      return Reflect.deleteProperty(e.value, n);
    },
    has(a, n) {
      return Reflect.has(e.value, n);
    },
    ownKeys() {
      return Object.keys(e.value);
    },
    getOwnPropertyDescriptor() {
      return {
        enumerable: !0,
        configurable: !0
      };
    }
  });
  return ba(t);
}
function Vc(e) {
  return CC(T(e));
}
function pm(e, ...t) {
  const a = t.flat(), n = a[0];
  return Vc(() => Object.fromEntries(typeof n == "function" ? Object.entries(We(e)).filter(([r, s]) => !n(Re(s), r)) : Object.entries(We(e)).filter((r) => !a.includes(r[0]))));
}
const Aa = typeof window < "u" && typeof document < "u";
typeof WorkerGlobalScope < "u" && globalThis instanceof WorkerGlobalScope;
const xC = (e) => typeof e < "u", SC = (e) => e != null, _C = Object.prototype.toString, kC = (e) => _C.call(e) === "[object Object]", mi = () => {
}, qp = /* @__PURE__ */ AC();
function AC() {
  var e, t;
  return Aa && ((e = window?.navigator) == null ? void 0 : e.userAgent) && (/iP(?:ad|hone|od)/.test(window.navigator.userAgent) || ((t = window?.navigator) == null ? void 0 : t.maxTouchPoints) > 2 && /iPad|Macintosh/.test(window?.navigator.userAgent));
}
function gm(e, t) {
  function a(...n) {
    return new Promise((r, s) => {
      Promise.resolve(e(() => t.apply(this, n), { fn: t, thisArg: this, args: n })).then(r).catch(s);
    });
  }
  return a;
}
const vm = (e) => e();
function $C(e, t = {}) {
  let a, n, r = mi;
  const s = (l) => {
    clearTimeout(l), r(), r = mi;
  };
  let i;
  return (l) => {
    const d = Re(e), c = Re(t.maxWait);
    return a && s(a), d <= 0 || c !== void 0 && c <= 0 ? (n && (s(n), n = null), Promise.resolve(l())) : new Promise((f, p) => {
      r = t.rejectOnCancel ? p : f, i = l, c && !n && (n = setTimeout(() => {
        a && s(a), n = null, f(i());
      }, c)), a = setTimeout(() => {
        n && s(n), n = null, f(l());
      }, d);
    });
  };
}
function IC(e = vm, t = {}) {
  const {
    initialState: a = "active"
  } = t, n = TC(a === "active");
  function r() {
    n.value = !1;
  }
  function s() {
    n.value = !0;
  }
  const i = (...o) => {
    n.value && e(...o);
  };
  return { isActive: Da(n), pause: r, resume: s, eventFilter: i };
}
function EC(e) {
  return fa();
}
function Ro(e) {
  return Array.isArray(e) ? e : [e];
}
function TC(...e) {
  if (e.length !== 1)
    return Ge(...e);
  const t = e[0];
  return typeof t == "function" ? Da(Lc(() => ({ get: t, set: mi }))) : N(t);
}
function Li(e, t = 1e4) {
  return Lc((a, n) => {
    let r = Re(e), s;
    const i = () => setTimeout(() => {
      r = Re(e), n();
    }, Re(t));
    return Ln(() => {
      clearTimeout(s);
    }), {
      get() {
        return a(), r;
      },
      set(o) {
        r = o, n(), clearTimeout(s), s = i();
      }
    };
  });
}
function BC(e, t = 200, a = {}) {
  return gm(
    $C(t, a),
    e
  );
}
function PC(e, t, a = {}) {
  const {
    eventFilter: n = vm,
    ...r
  } = a;
  return ye(
    e,
    gm(
      n,
      t
    ),
    r
  );
}
function Vp(e, t, a = {}) {
  const {
    eventFilter: n,
    initialState: r = "active",
    ...s
  } = a, { eventFilter: i, pause: o, resume: l, isActive: d } = IC(n, { initialState: r });
  return { stop: PC(
    e,
    t,
    {
      ...s,
      eventFilter: i
    }
  ), pause: o, resume: l, isActive: d };
}
function DC(e, t, ...[a]) {
  const {
    flush: n = "sync",
    deep: r = !1,
    immediate: s = !0,
    direction: i = "both",
    transform: o = {}
  } = a || {}, l = [], d = "ltr" in o && o.ltr || ((p) => p), c = "rtl" in o && o.rtl || ((p) => p);
  return (i === "both" || i === "ltr") && l.push(Vp(
    e,
    (p) => {
      l.forEach((g) => g.pause()), t.value = d(p), l.forEach((g) => g.resume());
    },
    { flush: n, deep: r, immediate: s }
  )), (i === "both" || i === "rtl") && l.push(Vp(
    t,
    (p) => {
      l.forEach((g) => g.pause()), e.value = c(p), l.forEach((g) => g.resume());
    },
    { flush: n, deep: r, immediate: s }
  )), () => {
    l.forEach((p) => p.stop());
  };
}
const MC = Re;
function RC(e, t) {
  EC() && Di(e, t);
}
function Nc(e, t, a = {}) {
  const {
    immediate: n = !0,
    immediateCallback: r = !1
  } = a, s = rt(!1);
  let i = null;
  function o() {
    i && (clearTimeout(i), i = null);
  }
  function l() {
    s.value = !1, o();
  }
  function d(...c) {
    r && e(), o(), s.value = !0, i = setTimeout(() => {
      s.value = !1, i = null, e(...c);
    }, Re(t));
  }
  return n && (s.value = !0, Aa && d()), Ln(l), {
    isPending: Da(s),
    start: d,
    stop: l
  };
}
function LC(e = 1e3, t = {}) {
  const {
    controls: a = !1,
    callback: n
  } = t, r = Nc(
    n ?? mi,
    e,
    t
  ), s = T(() => !r.isPending.value);
  return a ? {
    ready: s,
    ...r
  } : s;
}
function OC(e, t, a) {
  return ye(
    e,
    t,
    {
      ...a,
      immediate: !0
    }
  );
}
const On = Aa ? window : void 0;
function sa(e) {
  var t;
  const a = Re(e);
  return (t = a?.$el) != null ? t : a;
}
function ra(...e) {
  const t = [], a = () => {
    t.forEach((o) => o()), t.length = 0;
  }, n = (o, l, d, c) => (o.addEventListener(l, d, c), () => o.removeEventListener(l, d, c)), r = T(() => {
    const o = Ro(Re(e[0])).filter((l) => l != null);
    return o.every((l) => typeof l != "string") ? o : void 0;
  }), s = OC(
    () => {
      var o, l;
      return [
        (l = (o = r.value) == null ? void 0 : o.map((d) => sa(d))) != null ? l : [On].filter((d) => d != null),
        Ro(Re(r.value ? e[1] : e[0])),
        Ro(u(r.value ? e[2] : e[1])),
        // @ts-expect-error - TypeScript gets the correct types, but somehow still complains
        Re(r.value ? e[3] : e[2])
      ];
    },
    ([o, l, d, c]) => {
      if (a(), !o?.length || !l?.length || !d?.length)
        return;
      const f = kC(c) ? { ...c } : c;
      t.push(
        ...o.flatMap(
          (p) => l.flatMap(
            (g) => d.map((v) => n(p, g, v, f))
          )
        )
      );
    },
    { flush: "post" }
  ), i = () => {
    s(), a();
  };
  return Ln(a), i;
}
function Hc() {
  const e = rt(!1), t = fa();
  return t && Pe(() => {
    e.value = !0;
  }, t), e;
}
function hm(e) {
  const t = Hc();
  return T(() => (t.value, !!e()));
}
function FC(e, t, a = {}) {
  const { window: n = On, ...r } = a;
  let s;
  const i = hm(() => n && "MutationObserver" in n), o = () => {
    s && (s.disconnect(), s = void 0);
  }, l = T(() => {
    const p = Re(e), g = Ro(p).map(sa).filter(SC);
    return new Set(g);
  }), d = ye(
    () => l.value,
    (p) => {
      o(), i.value && p.size && (s = new MutationObserver(t), p.forEach((g) => s.observe(g, r)));
    },
    { immediate: !0, flush: "post" }
  ), c = () => s?.takeRecords(), f = () => {
    d(), o();
  };
  return Ln(f), {
    isSupported: i,
    stop: f,
    takeRecords: c
  };
}
function zC(e, t, a = {}) {
  const {
    window: n = On,
    document: r = n?.document,
    flush: s = "sync"
  } = a;
  if (!n || !r)
    return mi;
  let i;
  const o = (c) => {
    i?.(), i = c;
  }, l = ot(() => {
    const c = sa(e);
    if (c) {
      const { stop: f } = FC(
        r,
        (p) => {
          p.map((v) => [...v.removedNodes]).flat().some((v) => v === c || v.contains(c)) && t(p);
        },
        {
          window: n,
          childList: !0,
          subtree: !0
        }
      );
      o(f);
    }
  }, { flush: s }), d = () => {
    l(), o();
  };
  return Ln(d), d;
}
function qC(e) {
  return typeof e == "function" ? e : typeof e == "string" ? (t) => t.key === e : Array.isArray(e) ? (t) => e.includes(t.key) : () => !0;
}
function jc(...e) {
  let t, a, n = {};
  e.length === 3 ? (t = e[0], a = e[1], n = e[2]) : e.length === 2 ? typeof e[1] == "object" ? (t = !0, a = e[0], n = e[1]) : (t = e[0], a = e[1]) : (t = !0, a = e[0]);
  const {
    target: r = On,
    eventName: s = "keydown",
    passive: i = !1,
    dedupe: o = !1
  } = n, l = qC(t);
  return ra(r, s, (c) => {
    c.repeat && Re(o) || l(c) && a(c);
  }, i);
}
function VC(e = {}) {
  var t;
  const {
    window: a = On,
    deep: n = !0,
    triggerOnRemoval: r = !1
  } = e, s = (t = e.document) != null ? t : a?.document, i = () => {
    var d;
    let c = s?.activeElement;
    if (n)
      for (; c?.shadowRoot; )
        c = (d = c?.shadowRoot) == null ? void 0 : d.activeElement;
    return c;
  }, o = rt(), l = () => {
    o.value = i();
  };
  if (a) {
    const d = {
      capture: !0,
      passive: !0
    };
    ra(
      a,
      "blur",
      (c) => {
        c.relatedTarget === null && l();
      },
      d
    ), ra(
      a,
      "focus",
      l,
      d
    );
  }
  return r && zC(o, l, { document: s }), l(), o;
}
function mm(e, t = {}) {
  const {
    immediate: a = !0,
    fpsLimit: n = void 0,
    window: r = On,
    once: s = !1
  } = t, i = rt(!1), o = T(() => n ? 1e3 / Re(n) : null);
  let l = 0, d = null;
  function c(g) {
    if (!i.value || !r)
      return;
    l || (l = g);
    const v = g - l;
    if (o.value && v < o.value) {
      d = r.requestAnimationFrame(c);
      return;
    }
    if (l = g, e({ delta: v, timestamp: g }), s) {
      i.value = !1, d = null;
      return;
    }
    d = r.requestAnimationFrame(c);
  }
  function f() {
    !i.value && r && (i.value = !0, l = 0, d = r.requestAnimationFrame(c));
  }
  function p() {
    i.value = !1, d != null && r && (r.cancelAnimationFrame(d), d = null);
  }
  return a && f(), Ln(p), {
    isActive: Da(i),
    pause: p,
    resume: f
  };
}
function NC(e) {
  return JSON.parse(JSON.stringify(e));
}
function ps(e, t, a = {}) {
  const { window: n = On, ...r } = a;
  let s;
  const i = hm(() => n && "ResizeObserver" in n), o = () => {
    s && (s.disconnect(), s = void 0);
  }, l = T(() => {
    const f = Re(e);
    return Array.isArray(f) ? f.map((p) => sa(p)) : [sa(f)];
  }), d = ye(
    l,
    (f) => {
      if (o(), i.value && n) {
        s = new ResizeObserver(t);
        for (const p of f)
          p && s.observe(p, r);
      }
    },
    { immediate: !0, flush: "post" }
  ), c = () => {
    o(), d();
  };
  return Ln(c), {
    isSupported: i,
    stop: c
  };
}
const HC = "focusin", jC = "focusout", KC = ":focus-within";
function GC(e, t = {}) {
  const { window: a = On } = t, n = T(() => sa(e)), r = rt(!1), s = T(() => r.value), i = VC(t);
  if (!a || !i.value)
    return { focused: s };
  const o = { passive: !0 };
  return ra(n, HC, () => r.value = !0, o), ra(n, jC, () => {
    var l, d, c;
    return r.value = (c = (d = (l = n.value) == null ? void 0 : l.matches) == null ? void 0 : d.call(l, KC)) != null ? c : !1;
  }, o), { focused: s };
}
function Ze(e, t, a, n = {}) {
  var r, s, i;
  const {
    clone: o = !1,
    passive: l = !1,
    eventName: d,
    deep: c = !1,
    defaultValue: f,
    shouldEmit: p
  } = n, g = fa(), v = a || g?.emit || ((r = g?.$emit) == null ? void 0 : r.bind(g)) || ((i = (s = g?.proxy) == null ? void 0 : s.$emit) == null ? void 0 : i.bind(g?.proxy));
  let m = d;
  t || (t = "modelValue"), m = m || `update:${t.toString()}`;
  const y = (C) => o ? typeof o == "function" ? o(C) : NC(C) : C, x = () => xC(e[t]) ? y(e[t]) : f, b = (C) => {
    p ? p(C) && v(m, C) : v(m, C);
  };
  if (l) {
    const C = x(), w = N(C);
    let $ = !1;
    return ye(
      () => e[t],
      (B) => {
        $ || ($ = !0, w.value = y(B), Be(() => $ = !1));
      }
    ), ye(
      w,
      (B) => {
        !$ && (B !== e[t] || c) && b(B);
      },
      { deep: c }
    ), w;
  } else
    return T({
      get() {
        return x();
      },
      set(C) {
        b(C);
      }
    });
}
function su(e) {
  if (e === null || typeof e != "object")
    return !1;
  const t = Object.getPrototypeOf(e);
  return t !== null && t !== Object.prototype && Object.getPrototypeOf(t) !== null || Symbol.iterator in e ? !1 : Symbol.toStringTag in e ? Object.prototype.toString.call(e) === "[object Module]" : !0;
}
function sd(e, t, a = ".", n) {
  if (!su(t))
    return sd(e, {}, a, n);
  const r = Object.assign({}, t);
  for (const s in e) {
    if (s === "__proto__" || s === "constructor")
      continue;
    const i = e[s];
    i != null && (n && n(r, s, i, a) || (Array.isArray(i) && Array.isArray(r[s]) ? r[s] = [...i, ...r[s]] : su(i) && su(r[s]) ? r[s] = sd(
      i,
      r[s],
      (a ? `${a}.` : "") + s.toString(),
      n
    ) : r[s] = i));
  }
  return r;
}
function UC(e) {
  return (...t) => (
    // eslint-disable-next-line unicorn/no-array-reduce
    t.reduce((a, n) => sd(a, n, "", e), {})
  );
}
const Ct = UC(), WC = fm(() => {
  const e = N(/* @__PURE__ */ new Map()), t = N(), a = T(() => {
    for (const i of e.value.values()) if (i) return !0;
    return !1;
  }), n = Pl({ scrollBody: N(!0) });
  let r = null;
  const s = () => {
    document.body.style.paddingRight = "", document.body.style.marginRight = "", document.body.style.pointerEvents = "", document.documentElement.style.removeProperty("--scrollbar-width"), document.body.style.overflow = t.value ?? "", qp && r?.(), t.value = void 0;
  };
  return ye(a, (i, o) => {
    if (!Aa) return;
    if (!i) {
      o && s();
      return;
    }
    t.value === void 0 && (t.value = document.body.style.overflow);
    const l = window.innerWidth - document.documentElement.clientWidth, d = {
      padding: l,
      margin: 0
    }, c = n.scrollBody?.value ? typeof n.scrollBody.value == "object" ? Ct({
      padding: n.scrollBody.value.padding === !0 ? l : n.scrollBody.value.padding,
      margin: n.scrollBody.value.margin === !0 ? l : n.scrollBody.value.margin
    }, d) : d : {
      padding: 0,
      margin: 0
    };
    l > 0 && (document.body.style.paddingRight = typeof c.padding == "number" ? `${c.padding}px` : String(c.padding), document.body.style.marginRight = typeof c.margin == "number" ? `${c.margin}px` : String(c.margin), document.documentElement.style.setProperty("--scrollbar-width", `${l}px`), document.body.style.overflow = "hidden"), qp && (r = ra(document, "touchmove", (f) => YC(f), { passive: !1 })), Be(() => {
      document.body.style.pointerEvents = "none", document.body.style.overflow = "hidden";
    });
  }, {
    immediate: !0,
    flush: "sync"
  }), e;
});
function Oi(e) {
  const t = Math.random().toString(36).substring(2, 7), a = WC();
  a.value.set(t, e ?? !1);
  const n = T({
    get: () => a.value.get(t) ?? !1,
    set: (r) => a.value.set(t, r)
  });
  return RC(() => {
    a.value.delete(t);
  }), n;
}
function ym(e) {
  const t = window.getComputedStyle(e);
  if (t.overflowX === "scroll" || t.overflowY === "scroll" || t.overflowX === "auto" && e.clientWidth < e.scrollWidth || t.overflowY === "auto" && e.clientHeight < e.scrollHeight) return !0;
  {
    const a = e.parentNode;
    return !(a instanceof Element) || a.tagName === "BODY" ? !1 : ym(a);
  }
}
function YC(e) {
  const t = e || window.event, a = t.target;
  return a instanceof Element && ym(a) ? !1 : t.touches.length > 1 ? !0 : (t.preventDefault && t.cancelable && t.preventDefault(), !1);
}
function is(e, t) {
  return e - t * Math.floor(e / t);
}
const bm = 1721426;
function yr(e, t, a, n) {
  t = Fi(e, t);
  let r = t - 1, s = -2;
  return a <= 2 ? s = 0 : Wn(t) && (s = -1), bm - 1 + 365 * r + Math.floor(r / 4) - Math.floor(r / 100) + Math.floor(r / 400) + Math.floor((367 * a - 362) / 12 + s + n);
}
function Wn(e) {
  return e % 4 === 0 && (e % 100 !== 0 || e % 400 === 0);
}
function Fi(e, t) {
  return e === "BC" ? 1 - t : t;
}
function Dl(e) {
  let t = "AD";
  return e <= 0 && (t = "BC", e = 1 - e), [
    t,
    e
  ];
}
const XC = {
  standard: [
    31,
    28,
    31,
    30,
    31,
    30,
    31,
    31,
    30,
    31,
    30,
    31
  ],
  leapyear: [
    31,
    29,
    31,
    30,
    31,
    30,
    31,
    31,
    30,
    31,
    30,
    31
  ]
};
class Ya {
  fromJulianDay(t) {
    let a = t, n = a - bm, r = Math.floor(n / 146097), s = is(n, 146097), i = Math.floor(s / 36524), o = is(s, 36524), l = Math.floor(o / 1461), d = is(o, 1461), c = Math.floor(d / 365), f = r * 400 + i * 100 + l * 4 + c + (i !== 4 && c !== 4 ? 1 : 0), [p, g] = Dl(f), v = a - yr(p, g, 1, 1), m = 2;
    a < yr(p, g, 3, 1) ? m = 0 : Wn(g) && (m = 1);
    let y = Math.floor(((v + m) * 12 + 373) / 367), x = a - yr(p, g, y, 1) + 1;
    return new jt(p, g, y, x);
  }
  toJulianDay(t) {
    return yr(t.era, t.year, t.month, t.day);
  }
  getDaysInMonth(t) {
    return XC[Wn(t.year) ? "leapyear" : "standard"][t.month - 1];
  }
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  getMonthsInYear(t) {
    return 12;
  }
  getDaysInYear(t) {
    return Wn(t.year) ? 366 : 365;
  }
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  getYearsInEra(t) {
    return 9999;
  }
  getEras() {
    return [
      "BC",
      "AD"
    ];
  }
  isInverseEra(t) {
    return t.era === "BC";
  }
  balanceDate(t) {
    t.year <= 0 && (t.era = t.era === "BC" ? "AD" : "BC", t.year = 1 - t.year);
  }
  constructor() {
    this.identifier = "gregory";
  }
}
const JC = {
  "001": 1,
  AD: 1,
  AE: 6,
  AF: 6,
  AI: 1,
  AL: 1,
  AM: 1,
  AN: 1,
  AR: 1,
  AT: 1,
  AU: 1,
  AX: 1,
  AZ: 1,
  BA: 1,
  BE: 1,
  BG: 1,
  BH: 6,
  BM: 1,
  BN: 1,
  BY: 1,
  CH: 1,
  CL: 1,
  CM: 1,
  CN: 1,
  CR: 1,
  CY: 1,
  CZ: 1,
  DE: 1,
  DJ: 6,
  DK: 1,
  DZ: 6,
  EC: 1,
  EE: 1,
  EG: 6,
  ES: 1,
  FI: 1,
  FJ: 1,
  FO: 1,
  FR: 1,
  GB: 1,
  GE: 1,
  GF: 1,
  GP: 1,
  GR: 1,
  HR: 1,
  HU: 1,
  IE: 1,
  IQ: 6,
  IR: 6,
  IS: 1,
  IT: 1,
  JO: 6,
  KG: 1,
  KW: 6,
  KZ: 1,
  LB: 1,
  LI: 1,
  LK: 1,
  LT: 1,
  LU: 1,
  LV: 1,
  LY: 6,
  MC: 1,
  MD: 1,
  ME: 1,
  MK: 1,
  MN: 1,
  MQ: 1,
  MV: 5,
  MY: 1,
  NL: 1,
  NO: 1,
  NZ: 1,
  OM: 6,
  PL: 1,
  QA: 6,
  RE: 1,
  RO: 1,
  RS: 1,
  RU: 1,
  SD: 6,
  SE: 1,
  SI: 1,
  SK: 1,
  SM: 1,
  SY: 6,
  TJ: 1,
  TM: 1,
  TR: 1,
  UA: 1,
  UY: 1,
  UZ: 1,
  VA: 1,
  VN: 1,
  XK: 1
};
function Ut(e, t) {
  return t = ma(t, e.calendar), e.era === t.era && e.year === t.year && e.month === t.month && e.day === t.day;
}
function Kc(e, t) {
  return t = ma(t, e.calendar), e = id(e), t = id(t), e.era === t.era && e.year === t.year && e.month === t.month;
}
function Un(e, t) {
  return Gc(e.calendar, t.calendar) && Ut(e, t);
}
function Np(e, t) {
  return Gc(e.calendar, t.calendar) && Kc(e, t);
}
function Gc(e, t) {
  var a, n, r, s;
  return (s = (r = (a = e.isEqual) === null || a === void 0 ? void 0 : a.call(e, t)) !== null && r !== void 0 ? r : (n = t.isEqual) === null || n === void 0 ? void 0 : n.call(t, e)) !== null && s !== void 0 ? s : e.identifier === t.identifier;
}
function wm(e, t) {
  return Ut(e, xm(t));
}
function Cm(e, t, a) {
  let n = e.calendar.toJulianDay(e), r = tx(t), s = Math.ceil(n + 1 - r) % 7;
  return s < 0 && (s += 7), s;
}
function QC(e) {
  return $n(Date.now(), e);
}
function xm(e) {
  return rx(QC(e));
}
function Sm(e, t) {
  return e.calendar.toJulianDay(e) - t.calendar.toJulianDay(t);
}
function ZC(e, t) {
  return Hp(e) - Hp(t);
}
function Hp(e) {
  return e.hour * 36e5 + e.minute * 6e4 + e.second * 1e3 + e.millisecond;
}
let iu = null;
function Ss() {
  return iu == null && (iu = new Intl.DateTimeFormat().resolvedOptions().timeZone), iu;
}
function id(e) {
  return e.subtract({
    days: e.day - 1
  });
}
function jp(e) {
  return e.add({
    days: e.calendar.getDaysInMonth(e) - e.day
  });
}
const Kp = /* @__PURE__ */ new Map();
function ex(e) {
  if (Intl.Locale) {
    let a = Kp.get(e);
    return a || (a = new Intl.Locale(e).maximize().region, a && Kp.set(e, a)), a;
  }
  let t = e.split("-")[1];
  return t === "u" ? void 0 : t;
}
function tx(e) {
  let t = ex(e);
  return t && JC[t] || 0;
}
function gs(e) {
  e = ma(e, new Ya());
  let t = Fi(e.era, e.year);
  return _m(t, e.month, e.day, e.hour, e.minute, e.second, e.millisecond);
}
function _m(e, t, a, n, r, s, i) {
  let o = /* @__PURE__ */ new Date();
  return o.setUTCHours(n, r, s, i), o.setUTCFullYear(e, t - 1, a), o.getTime();
}
function od(e, t) {
  if (t === "UTC") return 0;
  if (e > 0 && t === Ss()) return new Date(e).getTimezoneOffset() * -6e4;
  let { year: a, month: n, day: r, hour: s, minute: i, second: o } = km(e, t);
  return _m(a, n, r, s, i, o, 0) - Math.floor(e / 1e3) * 1e3;
}
const Gp = /* @__PURE__ */ new Map();
function km(e, t) {
  let a = Gp.get(t);
  a || (a = new Intl.DateTimeFormat("en-US", {
    timeZone: t,
    hour12: !1,
    era: "short",
    year: "numeric",
    month: "numeric",
    day: "numeric",
    hour: "numeric",
    minute: "numeric",
    second: "numeric"
  }), Gp.set(t, a));
  let n = a.formatToParts(new Date(e)), r = {};
  for (let s of n) s.type !== "literal" && (r[s.type] = s.value);
  return {
    // Firefox returns B instead of BC... https://bugzilla.mozilla.org/show_bug.cgi?id=1752253
    year: r.era === "BC" || r.era === "B" ? -r.year + 1 : +r.year,
    month: +r.month,
    day: +r.day,
    hour: r.hour === "24" ? 0 : +r.hour,
    minute: +r.minute,
    second: +r.second
  };
}
const Up = 864e5;
function ax(e, t, a, n) {
  return (a === n ? [
    a
  ] : [
    a,
    n
  ]).filter((s) => nx(e, t, s));
}
function nx(e, t, a) {
  let n = km(a, t);
  return e.year === n.year && e.month === n.month && e.day === n.day && e.hour === n.hour && e.minute === n.minute && e.second === n.second;
}
function An(e, t, a = "compatible") {
  let n = vs(e);
  if (t === "UTC") return gs(n);
  if (t === Ss() && a === "compatible") {
    n = ma(n, new Ya());
    let l = /* @__PURE__ */ new Date(), d = Fi(n.era, n.year);
    return l.setFullYear(d, n.month - 1, n.day), l.setHours(n.hour, n.minute, n.second, n.millisecond), l.getTime();
  }
  let r = gs(n), s = od(r - Up, t), i = od(r + Up, t), o = ax(n, t, r - s, r - i);
  if (o.length === 1) return o[0];
  if (o.length > 1) switch (a) {
    // 'compatible' means 'earlier' for "fall back" transitions
    case "compatible":
    case "earlier":
      return o[0];
    case "later":
      return o[o.length - 1];
    case "reject":
      throw new RangeError("Multiple possible absolute times found");
  }
  switch (a) {
    case "earlier":
      return Math.min(r - s, r - i);
    // 'compatible' means 'later' for "spring forward" transitions
    case "compatible":
    case "later":
      return Math.max(r - s, r - i);
    case "reject":
      throw new RangeError("No such absolute time found");
  }
}
function Am(e, t, a = "compatible") {
  return new Date(An(e, t, a));
}
function $n(e, t) {
  let a = od(e, t), n = new Date(e + a), r = n.getUTCFullYear(), s = n.getUTCMonth() + 1, i = n.getUTCDate(), o = n.getUTCHours(), l = n.getUTCMinutes(), d = n.getUTCSeconds(), c = n.getUTCMilliseconds();
  return new ms(r < 1 ? "BC" : "AD", r < 1 ? -r + 1 : r, s, i, t, a, o, l, d, c);
}
function rx(e) {
  return new jt(e.calendar, e.era, e.year, e.month, e.day);
}
function vs(e, t) {
  let a = 0, n = 0, r = 0, s = 0;
  if ("timeZone" in e) ({ hour: a, minute: n, second: r, millisecond: s } = e);
  else if ("hour" in e && !t) return e;
  return t && ({ hour: a, minute: n, second: r, millisecond: s } = t), new hs(e.calendar, e.era, e.year, e.month, e.day, a, n, r, s);
}
function ma(e, t) {
  if (Gc(e.calendar, t)) return e;
  let a = t.fromJulianDay(e.calendar.toJulianDay(e)), n = e.copy();
  return n.calendar = t, n.era = a.era, n.year = a.year, n.month = a.month, n.day = a.day, $r(n), n;
}
function sx(e, t, a) {
  if (e instanceof ms)
    return e.timeZone === t ? e : ox(e, t);
  let n = An(e, t, a);
  return $n(n, t);
}
function ix(e) {
  let t = gs(e) - e.offset;
  return new Date(t);
}
function ox(e, t) {
  let a = gs(e) - e.offset;
  return ma($n(a, t), e.calendar);
}
const Ks = 36e5;
function Ml(e, t) {
  let a = e.copy(), n = "hour" in a ? cx(a, t) : 0;
  ld(a, t.years || 0), a.calendar.balanceYearMonth && a.calendar.balanceYearMonth(a, e), a.month += t.months || 0, ud(a), $m(a), a.day += (t.weeks || 0) * 7, a.day += t.days || 0, a.day += n, lx(a), a.calendar.balanceDate && a.calendar.balanceDate(a), a.year < 1 && (a.year = 1, a.month = 1, a.day = 1);
  let r = a.calendar.getYearsInEra(a);
  if (a.year > r) {
    var s, i;
    let l = (s = (i = a.calendar).isInverseEra) === null || s === void 0 ? void 0 : s.call(i, a);
    a.year = r, a.month = l ? 1 : a.calendar.getMonthsInYear(a), a.day = l ? 1 : a.calendar.getDaysInMonth(a);
  }
  a.month < 1 && (a.month = 1, a.day = 1);
  let o = a.calendar.getMonthsInYear(a);
  return a.month > o && (a.month = o, a.day = a.calendar.getDaysInMonth(a)), a.day = Math.max(1, Math.min(a.calendar.getDaysInMonth(a), a.day)), a;
}
function ld(e, t) {
  var a, n;
  !((a = (n = e.calendar).isInverseEra) === null || a === void 0) && a.call(n, e) && (t = -t), e.year += t;
}
function ud(e) {
  for (; e.month < 1; )
    ld(e, -1), e.month += e.calendar.getMonthsInYear(e);
  let t = 0;
  for (; e.month > (t = e.calendar.getMonthsInYear(e)); )
    e.month -= t, ld(e, 1);
}
function lx(e) {
  for (; e.day < 1; )
    e.month--, ud(e), e.day += e.calendar.getDaysInMonth(e);
  for (; e.day > e.calendar.getDaysInMonth(e); )
    e.day -= e.calendar.getDaysInMonth(e), e.month++, ud(e);
}
function $m(e) {
  e.month = Math.max(1, Math.min(e.calendar.getMonthsInYear(e), e.month)), e.day = Math.max(1, Math.min(e.calendar.getDaysInMonth(e), e.day));
}
function $r(e) {
  e.calendar.constrainDate && e.calendar.constrainDate(e), e.year = Math.max(1, Math.min(e.calendar.getYearsInEra(e), e.year)), $m(e);
}
function Im(e) {
  let t = {};
  for (let a in e) typeof e[a] == "number" && (t[a] = -e[a]);
  return t;
}
function Em(e, t) {
  return Ml(e, Im(t));
}
function Uc(e, t) {
  let a = e.copy();
  return t.era != null && (a.era = t.era), t.year != null && (a.year = t.year), t.month != null && (a.month = t.month), t.day != null && (a.day = t.day), $r(a), a;
}
function Yo(e, t) {
  let a = e.copy();
  return t.hour != null && (a.hour = t.hour), t.minute != null && (a.minute = t.minute), t.second != null && (a.second = t.second), t.millisecond != null && (a.millisecond = t.millisecond), dx(a), a;
}
function ux(e) {
  e.second += Math.floor(e.millisecond / 1e3), e.millisecond = ro(e.millisecond, 1e3), e.minute += Math.floor(e.second / 60), e.second = ro(e.second, 60), e.hour += Math.floor(e.minute / 60), e.minute = ro(e.minute, 60);
  let t = Math.floor(e.hour / 24);
  return e.hour = ro(e.hour, 24), t;
}
function dx(e) {
  e.millisecond = Math.max(0, Math.min(e.millisecond, 1e3)), e.second = Math.max(0, Math.min(e.second, 59)), e.minute = Math.max(0, Math.min(e.minute, 59)), e.hour = Math.max(0, Math.min(e.hour, 23));
}
function ro(e, t) {
  let a = e % t;
  return a < 0 && (a += t), a;
}
function cx(e, t) {
  return e.hour += t.hours || 0, e.minute += t.minutes || 0, e.second += t.seconds || 0, e.millisecond += t.milliseconds || 0, ux(e);
}
function Wc(e, t, a, n) {
  let r = e.copy();
  switch (t) {
    case "era": {
      let o = e.calendar.getEras(), l = o.indexOf(e.era);
      if (l < 0) throw new Error("Invalid era: " + e.era);
      l = In(l, a, 0, o.length - 1, n?.round), r.era = o[l], $r(r);
      break;
    }
    case "year":
      var s, i;
      !((s = (i = r.calendar).isInverseEra) === null || s === void 0) && s.call(i, r) && (a = -a), r.year = In(e.year, a, -1 / 0, 9999, n?.round), r.year === -1 / 0 && (r.year = 1), r.calendar.balanceYearMonth && r.calendar.balanceYearMonth(r, e);
      break;
    case "month":
      r.month = In(e.month, a, 1, e.calendar.getMonthsInYear(e), n?.round);
      break;
    case "day":
      r.day = In(e.day, a, 1, e.calendar.getDaysInMonth(e), n?.round);
      break;
    default:
      throw new Error("Unsupported field " + t);
  }
  return e.calendar.balanceDate && e.calendar.balanceDate(r), $r(r), r;
}
function Tm(e, t, a, n) {
  let r = e.copy();
  switch (t) {
    case "hour": {
      let s = e.hour, i = 0, o = 23;
      if (n?.hourCycle === 12) {
        let l = s >= 12;
        i = l ? 12 : 0, o = l ? 23 : 11;
      }
      r.hour = In(s, a, i, o, n?.round);
      break;
    }
    case "minute":
      r.minute = In(e.minute, a, 0, 59, n?.round);
      break;
    case "second":
      r.second = In(e.second, a, 0, 59, n?.round);
      break;
    case "millisecond":
      r.millisecond = In(e.millisecond, a, 0, 999, n?.round);
      break;
    default:
      throw new Error("Unsupported field " + t);
  }
  return r;
}
function In(e, t, a, n, r = !1) {
  if (r) {
    e += Math.sign(t), e < a && (e = n);
    let s = Math.abs(t);
    t > 0 ? e = Math.ceil(e / s) * s : e = Math.floor(e / s) * s, e > n && (e = a);
  } else
    e += t, e < a ? e = n - (a - e - 1) : e > n && (e = a + (e - n - 1));
  return e;
}
function Bm(e, t) {
  let a;
  if (t.years != null && t.years !== 0 || t.months != null && t.months !== 0 || t.weeks != null && t.weeks !== 0 || t.days != null && t.days !== 0) {
    let r = Ml(vs(e), {
      years: t.years,
      months: t.months,
      weeks: t.weeks,
      days: t.days
    });
    a = An(r, e.timeZone);
  } else
    a = gs(e) - e.offset;
  a += t.milliseconds || 0, a += (t.seconds || 0) * 1e3, a += (t.minutes || 0) * 6e4, a += (t.hours || 0) * 36e5;
  let n = $n(a, e.timeZone);
  return ma(n, e.calendar);
}
function fx(e, t) {
  return Bm(e, Im(t));
}
function px(e, t, a, n) {
  switch (t) {
    case "hour": {
      let r = 0, s = 23;
      if (n?.hourCycle === 12) {
        let v = e.hour >= 12;
        r = v ? 12 : 0, s = v ? 23 : 11;
      }
      let i = vs(e), o = ma(Yo(i, {
        hour: r
      }), new Ya()), l = [
        An(o, e.timeZone, "earlier"),
        An(o, e.timeZone, "later")
      ].filter((v) => $n(v, e.timeZone).day === o.day)[0], d = ma(Yo(i, {
        hour: s
      }), new Ya()), c = [
        An(d, e.timeZone, "earlier"),
        An(d, e.timeZone, "later")
      ].filter((v) => $n(v, e.timeZone).day === d.day).pop(), f = gs(e) - e.offset, p = Math.floor(f / Ks), g = f % Ks;
      return f = In(p, a, Math.floor(l / Ks), Math.floor(c / Ks), n?.round) * Ks + g, ma($n(f, e.timeZone), e.calendar);
    }
    case "minute":
    case "second":
    case "millisecond":
      return Tm(e, t, a, n);
    case "era":
    case "year":
    case "month":
    case "day": {
      let r = Wc(vs(e), t, a, n), s = An(r, e.timeZone);
      return ma($n(s, e.timeZone), e.calendar);
    }
    default:
      throw new Error("Unsupported field " + t);
  }
}
function gx(e, t, a) {
  let n = vs(e), r = Yo(Uc(n, t), t);
  if (r.compare(n) === 0) return e;
  let s = An(r, e.timeZone, a);
  return ma($n(s, e.timeZone), e.calendar);
}
function vx(e) {
  return `${String(e.hour).padStart(2, "0")}:${String(e.minute).padStart(2, "0")}:${String(e.second).padStart(2, "0")}${e.millisecond ? String(e.millisecond / 1e3).slice(1) : ""}`;
}
function Pm(e) {
  let t = ma(e, new Ya()), a;
  return t.era === "BC" ? a = t.year === 1 ? "0000" : "-" + String(Math.abs(1 - t.year)).padStart(6, "00") : a = String(t.year).padStart(4, "0"), `${a}-${String(t.month).padStart(2, "0")}-${String(t.day).padStart(2, "0")}`;
}
function Dm(e) {
  return `${Pm(e)}T${vx(e)}`;
}
function hx(e) {
  let t = Math.sign(e) < 0 ? "-" : "+";
  e = Math.abs(e);
  let a = Math.floor(e / 36e5), n = e % 36e5 / 6e4;
  return `${t}${String(a).padStart(2, "0")}:${String(n).padStart(2, "0")}`;
}
function mx(e) {
  return `${Dm(e)}${hx(e.offset)}[${e.timeZone}]`;
}
function yx(e, t) {
  if (t.has(e))
    throw new TypeError("Cannot initialize the same private elements twice on an object");
}
function Yc(e, t, a) {
  yx(e, t), t.set(e, a);
}
function Xc(e) {
  let t = typeof e[0] == "object" ? e.shift() : new Ya(), a;
  if (typeof e[0] == "string") a = e.shift();
  else {
    let i = t.getEras();
    a = i[i.length - 1];
  }
  let n = e.shift(), r = e.shift(), s = e.shift();
  return [
    t,
    a,
    n,
    r,
    s
  ];
}
var bx = /* @__PURE__ */ new WeakMap();
class jt {
  /** Returns a copy of this date. */
  copy() {
    return this.era ? new jt(this.calendar, this.era, this.year, this.month, this.day) : new jt(this.calendar, this.year, this.month, this.day);
  }
  /** Returns a new `CalendarDate` with the given duration added to it. */
  add(t) {
    return Ml(this, t);
  }
  /** Returns a new `CalendarDate` with the given duration subtracted from it. */
  subtract(t) {
    return Em(this, t);
  }
  /** Returns a new `CalendarDate` with the given fields set to the provided values. Other fields will be constrained accordingly. */
  set(t) {
    return Uc(this, t);
  }
  /**
  * Returns a new `CalendarDate` with the given field adjusted by a specified amount.
  * When the resulting value reaches the limits of the field, it wraps around.
  */
  cycle(t, a, n) {
    return Wc(this, t, a, n);
  }
  /** Converts the date to a native JavaScript Date object, with the time set to midnight in the given time zone. */
  toDate(t) {
    return Am(this, t);
  }
  /** Converts the date to an ISO 8601 formatted string. */
  toString() {
    return Pm(this);
  }
  /** Compares this date with another. A negative result indicates that this date is before the given one, and a positive date indicates that it is after. */
  compare(t) {
    return Sm(this, t);
  }
  constructor(...t) {
    Yc(this, bx, {
      writable: !0,
      value: void 0
    });
    let [a, n, r, s, i] = Xc(t);
    this.calendar = a, this.era = n, this.year = r, this.month = s, this.day = i, $r(this);
  }
}
var wx = /* @__PURE__ */ new WeakMap();
class hs {
  /** Returns a copy of this date. */
  copy() {
    return this.era ? new hs(this.calendar, this.era, this.year, this.month, this.day, this.hour, this.minute, this.second, this.millisecond) : new hs(this.calendar, this.year, this.month, this.day, this.hour, this.minute, this.second, this.millisecond);
  }
  /** Returns a new `CalendarDateTime` with the given duration added to it. */
  add(t) {
    return Ml(this, t);
  }
  /** Returns a new `CalendarDateTime` with the given duration subtracted from it. */
  subtract(t) {
    return Em(this, t);
  }
  /** Returns a new `CalendarDateTime` with the given fields set to the provided values. Other fields will be constrained accordingly. */
  set(t) {
    return Uc(Yo(this, t), t);
  }
  /**
  * Returns a new `CalendarDateTime` with the given field adjusted by a specified amount.
  * When the resulting value reaches the limits of the field, it wraps around.
  */
  cycle(t, a, n) {
    switch (t) {
      case "era":
      case "year":
      case "month":
      case "day":
        return Wc(this, t, a, n);
      default:
        return Tm(this, t, a, n);
    }
  }
  /** Converts the date to a native JavaScript Date object in the given time zone. */
  toDate(t, a) {
    return Am(this, t, a);
  }
  /** Converts the date to an ISO 8601 formatted string. */
  toString() {
    return Dm(this);
  }
  /** Compares this date with another. A negative result indicates that this date is before the given one, and a positive date indicates that it is after. */
  compare(t) {
    let a = Sm(this, t);
    return a === 0 ? ZC(this, vs(t)) : a;
  }
  constructor(...t) {
    Yc(this, wx, {
      writable: !0,
      value: void 0
    });
    let [a, n, r, s, i] = Xc(t);
    this.calendar = a, this.era = n, this.year = r, this.month = s, this.day = i, this.hour = t.shift() || 0, this.minute = t.shift() || 0, this.second = t.shift() || 0, this.millisecond = t.shift() || 0, $r(this);
  }
}
var Cx = /* @__PURE__ */ new WeakMap();
class ms {
  /** Returns a copy of this date. */
  copy() {
    return this.era ? new ms(this.calendar, this.era, this.year, this.month, this.day, this.timeZone, this.offset, this.hour, this.minute, this.second, this.millisecond) : new ms(this.calendar, this.year, this.month, this.day, this.timeZone, this.offset, this.hour, this.minute, this.second, this.millisecond);
  }
  /** Returns a new `ZonedDateTime` with the given duration added to it. */
  add(t) {
    return Bm(this, t);
  }
  /** Returns a new `ZonedDateTime` with the given duration subtracted from it. */
  subtract(t) {
    return fx(this, t);
  }
  /** Returns a new `ZonedDateTime` with the given fields set to the provided values. Other fields will be constrained accordingly. */
  set(t, a) {
    return gx(this, t, a);
  }
  /**
  * Returns a new `ZonedDateTime` with the given field adjusted by a specified amount.
  * When the resulting value reaches the limits of the field, it wraps around.
  */
  cycle(t, a, n) {
    return px(this, t, a, n);
  }
  /** Converts the date to a native JavaScript Date object. */
  toDate() {
    return ix(this);
  }
  /** Converts the date to an ISO 8601 formatted string, including the UTC offset and time zone identifier. */
  toString() {
    return mx(this);
  }
  /** Converts the date to an ISO 8601 formatted string in UTC. */
  toAbsoluteString() {
    return this.toDate().toISOString();
  }
  /** Compares this date with another. A negative result indicates that this date is before the given one, and a positive date indicates that it is after. */
  compare(t) {
    return this.toDate().getTime() - sx(t, this.timeZone).toDate().getTime();
  }
  constructor(...t) {
    Yc(this, Cx, {
      writable: !0,
      value: void 0
    });
    let [a, n, r, s, i] = Xc(t), o = t.shift(), l = t.shift();
    this.calendar = a, this.era = n, this.year = r, this.month = s, this.day = i, this.timeZone = o, this.offset = l, this.hour = t.shift() || 0, this.minute = t.shift() || 0, this.second = t.shift() || 0, this.millisecond = t.shift() || 0, $r(this);
  }
}
const os = [
  [
    1868,
    9,
    8
  ],
  [
    1912,
    7,
    30
  ],
  [
    1926,
    12,
    25
  ],
  [
    1989,
    1,
    8
  ],
  [
    2019,
    5,
    1
  ]
], xx = [
  [
    1912,
    7,
    29
  ],
  [
    1926,
    12,
    24
  ],
  [
    1989,
    1,
    7
  ],
  [
    2019,
    4,
    30
  ]
], Lo = [
  1867,
  1911,
  1925,
  1988,
  2018
], Kn = [
  "meiji",
  "taisho",
  "showa",
  "heisei",
  "reiwa"
];
function Wp(e) {
  const t = os.findIndex(([a, n, r]) => e.year < a || e.year === a && e.month < n || e.year === a && e.month === n && e.day < r);
  return t === -1 ? os.length - 1 : t === 0 ? 0 : t - 1;
}
function ou(e) {
  let t = Lo[Kn.indexOf(e.era)];
  if (!t) throw new Error("Unknown era: " + e.era);
  return new jt(e.year + t, e.month, e.day);
}
class Sx extends Ya {
  fromJulianDay(t) {
    let a = super.fromJulianDay(t), n = Wp(a);
    return new jt(this, Kn[n], a.year - Lo[n], a.month, a.day);
  }
  toJulianDay(t) {
    return super.toJulianDay(ou(t));
  }
  balanceDate(t) {
    let a = ou(t), n = Wp(a);
    Kn[n] !== t.era && (t.era = Kn[n], t.year = a.year - Lo[n]), this.constrainDate(t);
  }
  constrainDate(t) {
    let a = Kn.indexOf(t.era), n = xx[a];
    if (n != null) {
      let [r, s, i] = n, o = r - Lo[a];
      t.year = Math.max(1, Math.min(o, t.year)), t.year === o && (t.month = Math.min(s, t.month), t.month === s && (t.day = Math.min(i, t.day)));
    }
    if (t.year === 1 && a >= 0) {
      let [, r, s] = os[a];
      t.month = Math.max(r, t.month), t.month === r && (t.day = Math.max(s, t.day));
    }
  }
  getEras() {
    return Kn;
  }
  getYearsInEra(t) {
    let a = Kn.indexOf(t.era), n = os[a], r = os[a + 1];
    if (r == null)
      return 9999 - n[0] + 1;
    let s = r[0] - n[0];
    return (t.month < r[1] || t.month === r[1] && t.day < r[2]) && s++, s;
  }
  getDaysInMonth(t) {
    return super.getDaysInMonth(ou(t));
  }
  getMinimumMonthInYear(t) {
    let a = Yp(t);
    return a ? a[1] : 1;
  }
  getMinimumDayInMonth(t) {
    let a = Yp(t);
    return a && t.month === a[1] ? a[2] : 1;
  }
  constructor(...t) {
    super(...t), this.identifier = "japanese";
  }
}
function Yp(e) {
  if (e.year === 1) {
    let t = Kn.indexOf(e.era);
    return os[t];
  }
}
const Mm = -543;
class _x extends Ya {
  fromJulianDay(t) {
    let a = super.fromJulianDay(t), n = Fi(a.era, a.year);
    return new jt(this, n - Mm, a.month, a.day);
  }
  toJulianDay(t) {
    return super.toJulianDay(Xp(t));
  }
  getEras() {
    return [
      "BE"
    ];
  }
  getDaysInMonth(t) {
    return super.getDaysInMonth(Xp(t));
  }
  balanceDate() {
  }
  constructor(...t) {
    super(...t), this.identifier = "buddhist";
  }
}
function Xp(e) {
  let [t, a] = Dl(e.year + Mm);
  return new jt(t, a, e.month, e.day);
}
const Xo = 1911;
function Rm(e) {
  return e.era === "minguo" ? e.year + Xo : 1 - e.year + Xo;
}
function Jp(e) {
  let t = e - Xo;
  return t > 0 ? [
    "minguo",
    t
  ] : [
    "before_minguo",
    1 - t
  ];
}
class kx extends Ya {
  fromJulianDay(t) {
    let a = super.fromJulianDay(t), n = Fi(a.era, a.year), [r, s] = Jp(n);
    return new jt(this, r, s, a.month, a.day);
  }
  toJulianDay(t) {
    return super.toJulianDay(Qp(t));
  }
  getEras() {
    return [
      "before_minguo",
      "minguo"
    ];
  }
  balanceDate(t) {
    let [a, n] = Jp(Rm(t));
    t.era = a, t.year = n;
  }
  isInverseEra(t) {
    return t.era === "before_minguo";
  }
  getDaysInMonth(t) {
    return super.getDaysInMonth(Qp(t));
  }
  getYearsInEra(t) {
    return t.era === "before_minguo" ? 9999 : 9999 - Xo;
  }
  constructor(...t) {
    super(...t), this.identifier = "roc";
  }
}
function Qp(e) {
  let [t, a] = Dl(Rm(e));
  return new jt(t, a, e.month, e.day);
}
const Zp = 1948320, eg = [
  0,
  31,
  62,
  93,
  124,
  155,
  186,
  216,
  246,
  276,
  306,
  336
  // Esfand
];
class Ax {
  fromJulianDay(t) {
    let a = t - Zp, n = 1 + Math.floor((33 * a + 3) / 12053), r = 365 * (n - 1) + Math.floor((8 * n + 21) / 33), s = a - r, i = s < 216 ? Math.floor(s / 31) : Math.floor((s - 6) / 30), o = s - eg[i] + 1;
    return new jt(this, n, i + 1, o);
  }
  toJulianDay(t) {
    let a = Zp - 1 + 365 * (t.year - 1) + Math.floor((8 * t.year + 21) / 33);
    return a += eg[t.month - 1], a += t.day, a;
  }
  getMonthsInYear() {
    return 12;
  }
  getDaysInMonth(t) {
    return t.month <= 6 ? 31 : t.month <= 11 || is(25 * t.year + 11, 33) < 8 ? 30 : 29;
  }
  getEras() {
    return [
      "AP"
    ];
  }
  getYearsInEra() {
    return 9377;
  }
  constructor() {
    this.identifier = "persian";
  }
}
const lu = 78, tg = 80;
class $x extends Ya {
  fromJulianDay(t) {
    let a = super.fromJulianDay(t), n = a.year - lu, r = t - yr(a.era, a.year, 1, 1), s;
    r < tg ? (n--, s = Wn(a.year - 1) ? 31 : 30, r += s + 155 + 90 + 10) : (s = Wn(a.year) ? 31 : 30, r -= tg);
    let i, o;
    if (r < s)
      i = 1, o = r + 1;
    else {
      let l = r - s;
      l < 155 ? (i = Math.floor(l / 31) + 2, o = l % 31 + 1) : (l -= 155, i = Math.floor(l / 30) + 7, o = l % 30 + 1);
    }
    return new jt(this, n, i, o);
  }
  toJulianDay(t) {
    let a = t.year + lu, [n, r] = Dl(a), s, i;
    return Wn(r) ? (s = 31, i = yr(n, r, 3, 21)) : (s = 30, i = yr(n, r, 3, 22)), t.month === 1 ? i + t.day - 1 : (i += s + Math.min(t.month - 2, 5) * 31, t.month >= 8 && (i += (t.month - 7) * 30), i += t.day - 1, i);
  }
  getDaysInMonth(t) {
    return t.month === 1 && Wn(t.year + lu) || t.month >= 2 && t.month <= 6 ? 31 : 30;
  }
  getYearsInEra() {
    return 9919;
  }
  getEras() {
    return [
      "saka"
    ];
  }
  balanceDate() {
  }
  constructor(...t) {
    super(...t), this.identifier = "indian";
  }
}
const Jo = 1948440, ag = 1948439, Ba = 1300, Gr = 1600, Ix = 460322;
function Qo(e, t, a, n) {
  return n + Math.ceil(29.5 * (a - 1)) + (t - 1) * 354 + Math.floor((3 + 11 * t) / 30) + e - 1;
}
function Lm(e, t, a) {
  let n = Math.floor((30 * (a - t) + 10646) / 10631), r = Math.min(12, Math.ceil((a - (29 + Qo(t, n, 1, 1))) / 29.5) + 1), s = a - Qo(t, n, r, 1) + 1;
  return new jt(e, n, r, s);
}
function ng(e) {
  return (14 + 11 * e) % 30 < 11;
}
class Jc {
  fromJulianDay(t) {
    return Lm(this, Jo, t);
  }
  toJulianDay(t) {
    return Qo(Jo, t.year, t.month, t.day);
  }
  getDaysInMonth(t) {
    let a = 29 + t.month % 2;
    return t.month === 12 && ng(t.year) && a++, a;
  }
  getMonthsInYear() {
    return 12;
  }
  getDaysInYear(t) {
    return ng(t.year) ? 355 : 354;
  }
  getYearsInEra() {
    return 9665;
  }
  getEras() {
    return [
      "AH"
    ];
  }
  constructor() {
    this.identifier = "islamic-civil";
  }
}
class Ex extends Jc {
  fromJulianDay(t) {
    return Lm(this, ag, t);
  }
  toJulianDay(t) {
    return Qo(ag, t.year, t.month, t.day);
  }
  constructor(...t) {
    super(...t), this.identifier = "islamic-tbla";
  }
}
const Tx = "qgpUDckO1AbqBmwDrQpVBakGkgepC9QF2gpcBS0NlQZKB1QLagutBa4ETwoXBYsGpQbVCtYCWwmdBE0KJg2VDawFtgm6AlsKKwWVCsoG6Qr0AnYJtgJWCcoKpAvSC9kF3AJtCU0FpQpSC6ULtAW2CVcFlwJLBaMGUgdlC2oFqworBZUMSg2lDcoF1gpXCasESwmlClILagt1BXYCtwhbBFUFqQW0BdoJ3QRuAjYJqgpUDbIN1QXaAlsJqwRVCkkLZAtxC7QFtQpVCiUNkg7JDtQG6QprCasEkwpJDaQNsg25CroEWworBZUKKgtVC1wFvQQ9Ah0JlQpKC1oLbQW2AjsJmwRVBqkGVAdqC2wFrQpVBSkLkgupC9QF2gpaBasKlQVJB2QHqgu1BbYCVgpNDiULUgtqC60FrgIvCZcESwalBqwG1gpdBZ0ETQoWDZUNqgW1BdoCWwmtBJUFygbkBuoK9QS2AlYJqgpUC9IL2QXqAm0JrQSVCkoLpQuyBbUJ1gSXCkcFkwZJB1ULagVrCisFiwpGDaMNygXWCtsEawJLCaUKUgtpC3UFdgG3CFsCKwVlBbQF2gntBG0BtgimClINqQ3UBdoKWwmrBFMGKQdiB6kLsgW1ClUFJQuSDckO0gbpCmsFqwRVCikNVA2qDbUJugQ7CpsETQqqCtUK2gJdCV4ELgqaDFUNsga5BroEXQotBZUKUguoC7QLuQXaAloJSgukDdEO6AZqC20FNQWVBkoNqA3UDdoGWwWdAisGFQtKC5ULqgWuCi4JjwwnBZUGqgbWCl0FnQI=";
let dd, ls;
function Oo(e) {
  return Ix + ls[e - Ba];
}
function Qs(e, t) {
  let a = e - Ba, n = 1 << 11 - (t - 1);
  return (dd[a] & n) === 0 ? 29 : 30;
}
function rg(e, t) {
  let a = Oo(e);
  for (let n = 1; n < t; n++) a += Qs(e, n);
  return a;
}
function sg(e) {
  return ls[e + 1 - Ba] - ls[e - Ba];
}
class Bx extends Jc {
  fromJulianDay(t) {
    let a = t - Jo, n = Oo(Ba), r = Oo(Gr);
    if (a < n || a > r) return super.fromJulianDay(t);
    {
      let s = Ba - 1, i = 1, o = 1;
      for (; o > 0; ) {
        s++, o = a - Oo(s) + 1;
        let l = sg(s);
        if (o === l) {
          i = 12;
          break;
        } else if (o < l) {
          let d = Qs(s, i);
          for (i = 1; o > d; )
            o -= d, i++, d = Qs(s, i);
          break;
        }
      }
      return new jt(this, s, i, a - rg(s, i) + 1);
    }
  }
  toJulianDay(t) {
    return t.year < Ba || t.year > Gr ? super.toJulianDay(t) : Jo + rg(t.year, t.month) + (t.day - 1);
  }
  getDaysInMonth(t) {
    return t.year < Ba || t.year > Gr ? super.getDaysInMonth(t) : Qs(t.year, t.month);
  }
  getDaysInYear(t) {
    return t.year < Ba || t.year > Gr ? super.getDaysInYear(t) : sg(t.year);
  }
  constructor() {
    if (super(), this.identifier = "islamic-umalqura", dd || (dd = new Uint16Array(Uint8Array.from(atob(Tx), (t) => t.charCodeAt(0)).buffer)), !ls) {
      ls = new Uint32Array(Gr - Ba + 1);
      let t = 0;
      for (let a = Ba; a <= Gr; a++) {
        ls[a - Ba] = t;
        for (let n = 1; n <= 12; n++) t += Qs(a, n);
      }
    }
  }
}
const ig = 347997, Om = 1080, Fm = 24 * Om, Px = 29, Dx = 12 * Om + 793, Mx = Px * Fm + Dx;
function hr(e) {
  return is(e * 7 + 1, 19) < 7;
}
function Fo(e) {
  let t = Math.floor((235 * e - 234) / 19), a = 12084 + 13753 * t, n = t * 29 + Math.floor(a / 25920);
  return is(3 * (n + 1), 7) < 3 && (n += 1), n;
}
function Rx(e) {
  let t = Fo(e - 1), a = Fo(e);
  return Fo(e + 1) - a === 356 ? 2 : a - t === 382 ? 1 : 0;
}
function si(e) {
  return Fo(e) + Rx(e);
}
function zm(e) {
  return si(e + 1) - si(e);
}
function Lx(e) {
  let t = zm(e);
  switch (t > 380 && (t -= 30), t) {
    case 353:
      return 0;
    // deficient
    case 354:
      return 1;
    // normal
    case 355:
      return 2;
  }
}
function so(e, t) {
  if (t >= 6 && !hr(e) && t++, t === 4 || t === 7 || t === 9 || t === 11 || t === 13) return 29;
  let a = Lx(e);
  return t === 2 ? a === 2 ? 30 : 29 : t === 3 ? a === 0 ? 29 : 30 : t === 6 ? hr(e) ? 30 : 0 : 30;
}
class Ox {
  fromJulianDay(t) {
    let a = t - ig, n = a * Fm / Mx, r = Math.floor((19 * n + 234) / 235) + 1, s = si(r), i = Math.floor(a - s);
    for (; i < 1; )
      r--, s = si(r), i = Math.floor(a - s);
    let o = 1, l = 0;
    for (; l < i; )
      l += so(r, o), o++;
    o--, l -= so(r, o);
    let d = i - l;
    return new jt(this, r, o, d);
  }
  toJulianDay(t) {
    let a = si(t.year);
    for (let n = 1; n < t.month; n++) a += so(t.year, n);
    return a + t.day + ig;
  }
  getDaysInMonth(t) {
    return so(t.year, t.month);
  }
  getMonthsInYear(t) {
    return hr(t.year) ? 13 : 12;
  }
  getDaysInYear(t) {
    return zm(t.year);
  }
  getYearsInEra() {
    return 9999;
  }
  getEras() {
    return [
      "AM"
    ];
  }
  balanceYearMonth(t, a) {
    a.year !== t.year && (hr(a.year) && !hr(t.year) && a.month > 6 ? t.month-- : !hr(a.year) && hr(t.year) && a.month > 6 && t.month++);
  }
  constructor() {
    this.identifier = "hebrew";
  }
}
const cd = 1723856, og = 1824665, fd = 5500;
function Zo(e, t, a, n) {
  return e + 365 * t + Math.floor(t / 4) + 30 * (a - 1) + n - 1;
}
function Qc(e, t) {
  let a = Math.floor(4 * (t - e) / 1461), n = 1 + Math.floor((t - Zo(e, a, 1, 1)) / 30), r = t + 1 - Zo(e, a, n, 1);
  return [
    a,
    n,
    r
  ];
}
function qm(e) {
  return Math.floor(e % 4 / 3);
}
function Vm(e, t) {
  return t % 13 !== 0 ? 30 : qm(e) + 5;
}
class Zc {
  fromJulianDay(t) {
    let [a, n, r] = Qc(cd, t), s = "AM";
    return a <= 0 && (s = "AA", a += fd), new jt(this, s, a, n, r);
  }
  toJulianDay(t) {
    let a = t.year;
    return t.era === "AA" && (a -= fd), Zo(cd, a, t.month, t.day);
  }
  getDaysInMonth(t) {
    return Vm(t.year, t.month);
  }
  getMonthsInYear() {
    return 13;
  }
  getDaysInYear(t) {
    return 365 + qm(t.year);
  }
  getYearsInEra(t) {
    return t.era === "AA" ? 9999 : 9991;
  }
  getEras() {
    return [
      "AA",
      "AM"
    ];
  }
  constructor() {
    this.identifier = "ethiopic";
  }
}
class Fx extends Zc {
  fromJulianDay(t) {
    let [a, n, r] = Qc(cd, t);
    return a += fd, new jt(this, "AA", a, n, r);
  }
  getEras() {
    return [
      "AA"
    ];
  }
  getYearsInEra() {
    return 9999;
  }
  constructor(...t) {
    super(...t), this.identifier = "ethioaa";
  }
}
class zx extends Zc {
  fromJulianDay(t) {
    let [a, n, r] = Qc(og, t), s = "CE";
    return a <= 0 && (s = "BCE", a = 1 - a), new jt(this, s, a, n, r);
  }
  toJulianDay(t) {
    let a = t.year;
    return t.era === "BCE" && (a = 1 - a), Zo(og, a, t.month, t.day);
  }
  getDaysInMonth(t) {
    let a = t.year;
    return t.era === "BCE" && (a = 1 - a), Vm(a, t.month);
  }
  isInverseEra(t) {
    return t.era === "BCE";
  }
  balanceDate(t) {
    t.year <= 0 && (t.era = t.era === "BCE" ? "CE" : "BCE", t.year = 1 - t.year);
  }
  getEras() {
    return [
      "BCE",
      "CE"
    ];
  }
  getYearsInEra(t) {
    return t.era === "BCE" ? 9999 : 9715;
  }
  constructor(...t) {
    super(...t), this.identifier = "coptic";
  }
}
function qx(e) {
  switch (e) {
    case "buddhist":
      return new _x();
    case "ethiopic":
      return new Zc();
    case "ethioaa":
      return new Fx();
    case "coptic":
      return new zx();
    case "hebrew":
      return new Ox();
    case "indian":
      return new $x();
    case "islamic-civil":
      return new Jc();
    case "islamic-tbla":
      return new Ex();
    case "islamic-umalqura":
      return new Bx();
    case "japanese":
      return new Sx();
    case "persian":
      return new Ax();
    case "roc":
      return new kx();
    case "gregory":
    default:
      return new Ya();
  }
}
let uu = /* @__PURE__ */ new Map();
class Sn {
  /** Formats a date as a string according to the locale and format options passed to the constructor. */
  format(t) {
    return this.formatter.format(t);
  }
  /** Formats a date to an array of parts such as separators, numbers, punctuation, and more. */
  formatToParts(t) {
    return this.formatter.formatToParts(t);
  }
  /** Formats a date range as a string. */
  formatRange(t, a) {
    if (typeof this.formatter.formatRange == "function")
      return this.formatter.formatRange(t, a);
    if (a < t) throw new RangeError("End date must be >= start date");
    return `${this.formatter.format(t)} – ${this.formatter.format(a)}`;
  }
  /** Formats a date range as an array of parts. */
  formatRangeToParts(t, a) {
    if (typeof this.formatter.formatRangeToParts == "function")
      return this.formatter.formatRangeToParts(t, a);
    if (a < t) throw new RangeError("End date must be >= start date");
    let n = this.formatter.formatToParts(t), r = this.formatter.formatToParts(a);
    return [
      ...n.map((s) => ({
        ...s,
        source: "startRange"
      })),
      {
        type: "literal",
        value: " – ",
        source: "shared"
      },
      ...r.map((s) => ({
        ...s,
        source: "endRange"
      }))
    ];
  }
  /** Returns the resolved formatting options based on the values passed to the constructor. */
  resolvedOptions() {
    let t = this.formatter.resolvedOptions();
    return Hx() && (this.resolvedHourCycle || (this.resolvedHourCycle = jx(t.locale, this.options)), t.hourCycle = this.resolvedHourCycle, t.hour12 = this.resolvedHourCycle === "h11" || this.resolvedHourCycle === "h12"), t.calendar === "ethiopic-amete-alem" && (t.calendar = "ethioaa"), t;
  }
  constructor(t, a = {}) {
    this.formatter = Nm(t, a), this.options = a;
  }
}
const Vx = {
  true: {
    // Only Japanese uses the h11 style for 12 hour time. All others use h12.
    ja: "h11"
  },
  false: {}
};
function Nm(e, t = {}) {
  if (typeof t.hour12 == "boolean" && Nx()) {
    t = {
      ...t
    };
    let r = Vx[String(t.hour12)][e.split("-")[0]], s = t.hour12 ? "h12" : "h23";
    t.hourCycle = r ?? s, delete t.hour12;
  }
  let a = e + (t ? Object.entries(t).sort((r, s) => r[0] < s[0] ? -1 : 1).join() : "");
  if (uu.has(a)) return uu.get(a);
  let n = new Intl.DateTimeFormat(e, t);
  return uu.set(a, n), n;
}
let du = null;
function Nx() {
  return du == null && (du = new Intl.DateTimeFormat("en-US", {
    hour: "numeric",
    hour12: !1
  }).format(new Date(2020, 2, 3, 0)) === "24"), du;
}
let cu = null;
function Hx() {
  return cu == null && (cu = new Intl.DateTimeFormat("fr", {
    hour: "numeric",
    hour12: !1
  }).resolvedOptions().hourCycle === "h12"), cu;
}
function jx(e, t) {
  if (!t.timeStyle && !t.hour) return;
  e = e.replace(/(-u-)?-nu-[a-zA-Z0-9]+/, ""), e += (e.includes("-u-") ? "" : "-u") + "-nu-latn";
  let a = Nm(e, {
    ...t,
    timeZone: void 0
    // use local timezone
  }), n = parseInt(a.formatToParts(new Date(2020, 2, 3, 0)).find((s) => s.type === "hour").value, 10), r = parseInt(a.formatToParts(new Date(2020, 2, 3, 23)).find((s) => s.type === "hour").value, 10);
  if (n === 0 && r === 23) return "h23";
  if (n === 24 && r === 23) return "h24";
  if (n === 0 && r === 11) return "h11";
  if (n === 12 && r === 11) return "h12";
  throw new Error("Unexpected hour cycle result");
}
function Ka(e, t = Ss()) {
  return ef(e) ? e.toDate() : e.toDate(t);
}
function Kx(e) {
  return e instanceof hs;
}
function ef(e) {
  return e instanceof ms;
}
function Gx(e) {
  return Kx(e) || ef(e);
}
function En(e) {
  if (e instanceof Date) {
    const t = e.getFullYear(), a = e.getMonth() + 1;
    return new Date(t, a, 0).getDate();
  } else return e.set({ day: 100 }).day;
}
function Sr(e, t) {
  return e.compare(t) < 0;
}
function zo(e, t) {
  return e.compare(t) > 0;
}
function Ux(e, t) {
  return e.compare(t) <= 0;
}
function Wx(e, t) {
  return e.compare(t) >= 0;
}
function Yx(e, t, a) {
  return Wx(e, t) && Ux(e, a);
}
function fu(e, t, a) {
  return zo(e, t) && Sr(e, a);
}
function Xx(e, t, a) {
  const n = Cm(e, a);
  return t > n ? e.subtract({ days: n + 7 - t }) : t === n ? e : e.subtract({ days: n - t });
}
function Jx(e, t, a) {
  const n = Cm(e, a), r = t === 0 ? 6 : t - 1;
  return n === r ? e : n > r ? e.add({ days: 7 - n + r }) : e.add({ days: r - n });
}
function Qx(e, t, a, n, r) {
  if (a === void 0 && n === void 0 && r === void 0) return !0;
  let s = e.add({ days: 1 });
  if ((n?.(s) || a?.(s)) && !r?.(s)) return !1;
  const i = t;
  for (; s.compare(i) < 0; )
    if (s = s.add({ days: 1 }), (n?.(s) || a?.(s)) && !r?.(s)) return !1;
  return !0;
}
function Hm(e) {
  const { defaultValue: t, defaultPlaceholder: a, granularity: n = "day", locale: r = "en" } = e;
  if (Array.isArray(t) && t.length) return t.at(-1).copy();
  if (t && !Array.isArray(t)) return t.copy();
  if (a) return a.copy();
  const s = /* @__PURE__ */ new Date(), i = s.getFullYear(), o = s.getMonth() + 1, l = s.getDate(), d = [
    "hour",
    "minute",
    "second"
  ], c = new Sn(r), f = qx(c.resolvedOptions().calendar);
  return d.includes(n ?? "day") ? ma(new hs(i, o, l, 0, 0, 0), f) : ma(new jt(i, o, l), f);
}
function Zx(e, t) {
  const a = [];
  for (let n = 0; n < e.length; n += t) a.push(e.slice(n, n + t));
  return a;
}
function jm(e) {
  const t = e.querySelector("[data-selected]");
  if (t) return t.focus();
  const a = e.querySelector("[data-today]");
  if (a) return a.focus();
  const n = e.querySelector("[data-reka-calendar-day]");
  if (n) return n.focus();
}
function pd(e, t) {
  const a = [];
  let n = e.add({ days: 1 });
  const r = t;
  for (; n.compare(r) < 0; )
    a.push(n), n = n.add({ days: 1 });
  return a;
}
function pu(e) {
  const { dateObj: t, weekStartsOn: a, fixedWeeks: n, locale: r } = e, s = En(t), i = Array.from({ length: s }, (y, x) => t.set({ day: x + 1 })), o = id(t), l = jp(t), d = Xx(o, a, r), c = Jx(l, a, r), f = pd(d.subtract({ days: 1 }), o), p = pd(l, c.add({ days: 1 })), g = f.length + i.length + p.length;
  if (n && g < 42) {
    const y = 42 - g;
    let x = p[p.length - 1];
    x || (x = jp(t));
    const b = Array.from({ length: y }, (C, w) => {
      const $ = w + 1;
      return x.add({ days: $ });
    });
    p.push(...b);
  }
  const v = f.concat(i, p), m = Zx(v, 7);
  return {
    value: t,
    cells: v,
    rows: m
  };
}
function cr(e) {
  const { numberOfMonths: t, dateObj: a, ...n } = e, r = [];
  if (!t || t === 1)
    return r.push(pu({
      ...n,
      dateObj: a
    })), r;
  r.push(pu({
    ...n,
    dateObj: a
  }));
  for (let s = 1; s < t; s++) {
    const i = a.add({ months: s });
    r.push(pu({
      ...n,
      dateObj: i
    }));
  }
  return r;
}
function tf(e, t = {}) {
  const a = N(e);
  function n() {
    return a.value;
  }
  function r(y) {
    a.value = y;
  }
  function s(y, x) {
    return new Sn(a.value, {
      ...t,
      ...x
    }).format(y);
  }
  function i(y, x = !0) {
    return Gx(y) && x ? s(Ka(y), {
      dateStyle: "long",
      timeStyle: "long"
    }) : s(Ka(y), { dateStyle: "long" });
  }
  function o(y, x = {}) {
    return new Sn(a.value, {
      ...t,
      month: "long",
      year: "numeric",
      ...x
    }).format(y);
  }
  function l(y, x = {}) {
    return new Sn(a.value, {
      ...t,
      month: "long",
      ...x
    }).format(y);
  }
  function d() {
    const y = xm(Ss());
    return [
      1,
      2,
      3,
      4,
      5,
      6,
      7,
      8,
      9,
      10,
      11,
      12
    ].map((b) => ({
      label: l(Ka(y.set({ month: b }))),
      value: b
    }));
  }
  function c(y, x = {}) {
    return new Sn(a.value, {
      ...t,
      year: "numeric",
      ...x
    }).format(y);
  }
  function f(y, x) {
    return ef(y) ? new Sn(a.value, {
      ...t,
      ...x,
      timeZone: y.timeZone
    }).formatToParts(Ka(y)) : new Sn(a.value, {
      ...t,
      ...x
    }).formatToParts(Ka(y));
  }
  function p(y, x = "narrow") {
    return new Sn(a.value, {
      ...t,
      weekday: x
    }).format(y);
  }
  function g(y) {
    const b = new Sn(a.value, {
      ...t,
      hour: "numeric",
      minute: "numeric"
    }).formatToParts(y).find((C) => C.type === "dayPeriod")?.value;
    return b === "PM" || b === "p.m." ? "PM" : "AM";
  }
  const v = {
    year: "numeric",
    month: "numeric",
    day: "numeric",
    hour: "numeric",
    minute: "numeric",
    second: "numeric"
  };
  function m(y, x, b = {}) {
    const C = {
      ...v,
      ...b
    }, $ = f(y, C).find((B) => B.type === x);
    return $ ? $.value : "";
  }
  return {
    setLocale: r,
    getLocale: n,
    fullMonth: l,
    fullYear: c,
    fullMonthAndYear: o,
    toParts: f,
    custom: s,
    part: m,
    dayPeriod: g,
    selectedDate: i,
    dayOfWeek: p,
    getMonths: d
  };
}
function Yt(e) {
  const t = Pl({ dir: N("ltr") });
  return T(() => e?.value || t.dir?.value || "ltr");
}
function en(e) {
  const t = fa(), a = t?.type.emits, n = {};
  return a?.length || console.warn(`No emitted event found. Please check component: ${t?.type.__name}`), a?.forEach((r) => {
    n[rC(rm(r))] = (...s) => e(r, ...s);
  }), n;
}
function af(e) {
  const t = T(() => u(e)), a = T(() => new Intl.Collator("en", {
    usage: "search",
    ...t.value
  }));
  return {
    startsWith: (i, o) => o.length === 0 ? !0 : (i = i.normalize("NFC"), o = o.normalize("NFC"), a.value.compare(i.slice(0, o.length), o) === 0),
    endsWith: (i, o) => o.length === 0 ? !0 : (i = i.normalize("NFC"), o = o.normalize("NFC"), a.value.compare(i.slice(-o.length), o) === 0),
    contains: (i, o) => {
      if (o.length === 0) return !0;
      i = i.normalize("NFC"), o = o.normalize("NFC");
      let l = 0;
      const d = o.length;
      for (; l + d <= i.length; l++) {
        const c = i.slice(l, l + d);
        if (a.value.compare(o, c) === 0) return !0;
      }
      return !1;
    }
  };
}
let gu = 0;
function nf() {
  ot((e) => {
    if (!Aa) return;
    const t = document.querySelectorAll("[data-reka-focus-guard]");
    document.body.insertAdjacentElement("afterbegin", t[0] ?? lg()), document.body.insertAdjacentElement("beforeend", t[1] ?? lg()), gu++, e(() => {
      gu === 1 && document.querySelectorAll("[data-reka-focus-guard]").forEach((a) => a.remove()), gu--;
    });
  });
}
function lg() {
  const e = document.createElement("span");
  return e.setAttribute("data-reka-focus-guard", ""), e.tabIndex = 0, e.style.outline = "none", e.style.opacity = "0", e.style.position = "fixed", e.style.pointerEvents = "none", e;
}
function hn(e) {
  return T(() => MC(e) ? !!sa(e)?.closest("form") : !0);
}
function Z() {
  const e = fa(), t = N(), a = T(() => ["#text", "#comment"].includes(t.value?.$el.nodeName) ? t.value?.$el.nextElementSibling : sa(t)), n = Object.assign({}, e.exposed), r = {};
  for (const i in e.props) Object.defineProperty(r, i, {
    enumerable: !0,
    configurable: !0,
    get: () => e.props[i]
  });
  if (Object.keys(n).length > 0) for (const i in n) Object.defineProperty(r, i, {
    enumerable: !0,
    configurable: !0,
    get: () => n[i]
  });
  Object.defineProperty(r, "$el", {
    enumerable: !0,
    configurable: !0,
    get: () => e.vnode.el
  }), e.exposed = r;
  function s(i) {
    t.value = i, i && (Object.defineProperty(r, "$el", {
      enumerable: !0,
      configurable: !0,
      get: () => i instanceof Element ? i : i.$el
    }), e.exposed = r);
  }
  return {
    forwardRef: s,
    currentRef: t,
    currentElement: a
  };
}
function xt(e) {
  const t = fa(), a = Object.keys(t?.type.props ?? {}).reduce((r, s) => {
    const i = (t?.type.props[s]).default;
    return i !== void 0 && (r[s] = i), r;
  }, {}), n = Ge(e);
  return T(() => {
    const r = {}, s = t?.vnode.props ?? {};
    return Object.keys(s).forEach((i) => {
      r[rm(i)] = s[i];
    }), Object.keys({
      ...a,
      ...r
    }).reduce((i, o) => (n.value[o] !== void 0 && (i[o] = n.value[o]), i), {});
  });
}
function Xe(e, t) {
  const a = xt(e), n = t ? en(t) : {};
  return T(() => ({
    ...a.value,
    ...n
  }));
}
function Km(e, t) {
  const a = Li(!1, 300), n = N(null), r = xr();
  function s() {
    n.value = null, a.value = !1;
  }
  function i(o, l) {
    const d = o.currentTarget, c = {
      x: o.clientX,
      y: o.clientY
    }, f = eS(c, d.getBoundingClientRect()), p = tS(c, f), g = aS(l.getBoundingClientRect()), v = rS([...p, ...g]);
    n.value = v, a.value = !0;
  }
  return ot((o) => {
    if (e.value && t.value) {
      const l = (c) => i(c, t.value), d = (c) => i(c, e.value);
      e.value.addEventListener("pointerleave", l), t.value.addEventListener("pointerleave", d), o(() => {
        e.value?.removeEventListener("pointerleave", l), t.value?.removeEventListener("pointerleave", d);
      });
    }
  }), ot((o) => {
    if (n.value) {
      const l = (d) => {
        if (!n.value || !(d.target instanceof HTMLElement)) return;
        const c = d.target, f = {
          x: d.clientX,
          y: d.clientY
        }, p = e.value?.contains(c) || t.value?.contains(c), g = !nS(f, n.value), v = !!c.closest("[data-grace-area-trigger]");
        p ? s() : (g || v) && (s(), r.trigger());
      };
      e.value?.ownerDocument.addEventListener("pointermove", l), o(() => e.value?.ownerDocument.removeEventListener("pointermove", l));
    }
  }), {
    isPointerInTransit: a,
    onPointerExit: r.on
  };
}
function eS(e, t) {
  const a = Math.abs(t.top - e.y), n = Math.abs(t.bottom - e.y), r = Math.abs(t.right - e.x), s = Math.abs(t.left - e.x);
  switch (Math.min(a, n, r, s)) {
    case s:
      return "left";
    case r:
      return "right";
    case a:
      return "top";
    case n:
      return "bottom";
    default:
      throw new Error("unreachable");
  }
}
function tS(e, t, a = 5) {
  const n = [];
  switch (t) {
    case "top":
      n.push({
        x: e.x - a,
        y: e.y + a
      }, {
        x: e.x + a,
        y: e.y + a
      });
      break;
    case "bottom":
      n.push({
        x: e.x - a,
        y: e.y - a
      }, {
        x: e.x + a,
        y: e.y - a
      });
      break;
    case "left":
      n.push({
        x: e.x + a,
        y: e.y - a
      }, {
        x: e.x + a,
        y: e.y + a
      });
      break;
    case "right":
      n.push({
        x: e.x - a,
        y: e.y - a
      }, {
        x: e.x - a,
        y: e.y + a
      });
      break;
  }
  return n;
}
function aS(e) {
  const { top: t, right: a, bottom: n, left: r } = e;
  return [
    {
      x: r,
      y: t
    },
    {
      x: a,
      y: t
    },
    {
      x: a,
      y: n
    },
    {
      x: r,
      y: n
    }
  ];
}
function nS(e, t) {
  const { x: a, y: n } = e;
  let r = !1;
  for (let s = 0, i = t.length - 1; s < t.length; i = s++) {
    const o = t[s].x, l = t[s].y, d = t[i].x, c = t[i].y;
    l > n != c > n && a < (d - o) * (n - l) / (c - l) + o && (r = !r);
  }
  return r;
}
function rS(e) {
  const t = e.slice();
  return t.sort((a, n) => a.x < n.x ? -1 : a.x > n.x ? 1 : a.y < n.y ? -1 : a.y > n.y ? 1 : 0), sS(t);
}
function sS(e) {
  if (e.length <= 1) return e.slice();
  const t = [];
  for (let n = 0; n < e.length; n++) {
    const r = e[n];
    for (; t.length >= 2; ) {
      const s = t[t.length - 1], i = t[t.length - 2];
      if ((s.x - i.x) * (r.y - i.y) >= (s.y - i.y) * (r.x - i.x)) t.pop();
      else break;
    }
    t.push(r);
  }
  t.pop();
  const a = [];
  for (let n = e.length - 1; n >= 0; n--) {
    const r = e[n];
    for (; a.length >= 2; ) {
      const s = a[a.length - 1], i = a[a.length - 2];
      if ((s.x - i.x) * (r.y - i.y) >= (s.y - i.y) * (r.x - i.x)) a.pop();
      else break;
    }
    a.push(r);
  }
  return a.pop(), t.length === 1 && a.length === 1 && t[0].x === a[0].x && t[0].y === a[0].y ? t : t.concat(a);
}
var iS = function(e) {
  if (typeof document > "u")
    return null;
  var t = Array.isArray(e) ? e[0] : e;
  return t.ownerDocument.body;
}, Ur = /* @__PURE__ */ new WeakMap(), io = /* @__PURE__ */ new WeakMap(), oo = {}, vu = 0, Gm = function(e) {
  return e && (e.host || Gm(e.parentNode));
}, oS = function(e, t) {
  return t.map(function(a) {
    if (e.contains(a))
      return a;
    var n = Gm(a);
    return n && e.contains(n) ? n : (console.error("aria-hidden", a, "in not contained inside", e, ". Doing nothing"), null);
  }).filter(function(a) {
    return !!a;
  });
}, lS = function(e, t, a, n) {
  var r = oS(t, Array.isArray(e) ? e : [e]);
  oo[a] || (oo[a] = /* @__PURE__ */ new WeakMap());
  var s = oo[a], i = [], o = /* @__PURE__ */ new Set(), l = new Set(r), d = function(f) {
    !f || o.has(f) || (o.add(f), d(f.parentNode));
  };
  r.forEach(d);
  var c = function(f) {
    !f || l.has(f) || Array.prototype.forEach.call(f.children, function(p) {
      if (o.has(p))
        c(p);
      else
        try {
          var g = p.getAttribute(n), v = g !== null && g !== "false", m = (Ur.get(p) || 0) + 1, y = (s.get(p) || 0) + 1;
          Ur.set(p, m), s.set(p, y), i.push(p), m === 1 && v && io.set(p, !0), y === 1 && p.setAttribute(a, "true"), v || p.setAttribute(n, "true");
        } catch (x) {
          console.error("aria-hidden: cannot operate on ", p, x);
        }
    });
  };
  return c(t), o.clear(), vu++, function() {
    i.forEach(function(f) {
      var p = Ur.get(f) - 1, g = s.get(f) - 1;
      Ur.set(f, p), s.set(f, g), p || (io.has(f) || f.removeAttribute(n), io.delete(f)), g || f.removeAttribute(a);
    }), vu--, vu || (Ur = /* @__PURE__ */ new WeakMap(), Ur = /* @__PURE__ */ new WeakMap(), io = /* @__PURE__ */ new WeakMap(), oo = {});
  };
}, uS = function(e, t, a) {
  a === void 0 && (a = "data-aria-hidden");
  var n = Array.from(Array.isArray(e) ? e : [e]), r = iS(e);
  return r ? (n.push.apply(n, Array.from(r.querySelectorAll("[aria-live], script"))), lS(n, r, a, "aria-hidden")) : function() {
    return null;
  };
};
function zi(e) {
  let t;
  ye(() => sa(e), (a) => {
    a ? t = uS(a) : t && t();
  }), Bt(() => {
    t && t();
  });
}
let dS = 0;
function pt(e, t = "reka") {
  if (e) return e;
  if ("useId" in zp) return `${t}-${zp.useId?.()}`;
  const a = Pl({ useId: void 0 });
  return a.useId ? `${t}-${a.useId()}` : `${t}-${++dS}`;
}
function qi() {
  return {
    ALT: "Alt",
    ARROW_DOWN: "ArrowDown",
    ARROW_LEFT: "ArrowLeft",
    ARROW_RIGHT: "ArrowRight",
    ARROW_UP: "ArrowUp",
    BACKSPACE: "Backspace",
    CAPS_LOCK: "CapsLock",
    CONTROL: "Control",
    DELETE: "Delete",
    END: "End",
    ENTER: "Enter",
    ESCAPE: "Escape",
    F1: "F1",
    F10: "F10",
    F11: "F11",
    F12: "F12",
    F2: "F2",
    F3: "F3",
    F4: "F4",
    F5: "F5",
    F6: "F6",
    F7: "F7",
    F8: "F8",
    F9: "F9",
    HOME: "Home",
    META: "Meta",
    PAGE_DOWN: "PageDown",
    PAGE_UP: "PageUp",
    SHIFT: "Shift",
    SPACE: " ",
    TAB: "Tab",
    CTRL: "Control",
    ASTERISK: "*",
    SPACE_CODE: "Space"
  };
}
function rf(e) {
  const t = Pl({ locale: N("en") });
  return T(() => e?.value || t.locale?.value || "en");
}
function cS(e, t) {
  const a = N(), n = (s, i) => {
    if (t.multiple && Array.isArray(e.value)) if (t.selectionBehavior === "replace")
      e.value = [s], a.value = s;
    else {
      const o = e.value.findIndex((l) => i(l));
      o !== -1 ? e.value = e.value.filter((l, d) => d !== o) : e.value = [...e.value, s];
    }
    else t.selectionBehavior === "replace" ? e.value = { ...s } : !Array.isArray(e.value) && i(e.value) ? e.value = void 0 : e.value = { ...s };
    return e.value;
  };
  function r(s, i, o, l) {
    if (!a?.value || !t.multiple || !Array.isArray(e.value)) return;
    const c = o().filter((p) => p.ref.dataset.disabled !== "").find((p) => p.ref === i)?.value;
    if (!c) return;
    let f = null;
    switch (s) {
      case "prev":
      case "next": {
        f = Mo(l, a.value, c);
        break;
      }
      case "first": {
        f = Mo(l, a.value, l?.[0]);
        break;
      }
      case "last": {
        f = Mo(l, a.value, l?.[l.length - 1]);
        break;
      }
    }
    e.value = f;
  }
  return {
    firstValue: a,
    onSelectItem: n,
    handleMultipleReplace: r
  };
}
function Um(e) {
  const t = N(), a = T(() => t.value?.width ?? 0), n = T(() => t.value?.height ?? 0);
  return Pe(() => {
    const r = sa(e);
    if (r) {
      t.value = {
        width: r.offsetWidth,
        height: r.offsetHeight
      };
      const s = new ResizeObserver((i) => {
        if (!Array.isArray(i) || !i.length) return;
        const o = i[0];
        let l, d;
        if ("borderBoxSize" in o) {
          const c = o.borderBoxSize, f = Array.isArray(c) ? c[0] : c;
          l = f.inlineSize, d = f.blockSize;
        } else
          l = r.offsetWidth, d = r.offsetHeight;
        t.value = {
          width: l,
          height: d
        };
      });
      return s.observe(r, { box: "border-box" }), () => s.unobserve(r);
    } else t.value = void 0;
  }), {
    width: a,
    height: n
  };
}
function fS(e, t) {
  const a = N(e);
  function n(s) {
    return t[a.value][s] ?? a.value;
  }
  return {
    state: a,
    dispatch: (s) => {
      a.value = n(s);
    }
  };
}
function Vi(e) {
  const t = Li("", 1e3);
  return {
    search: t,
    handleTypeaheadSearch: (r, s) => {
      t.value = t.value + r;
      {
        const i = dt(), o = s.map((p) => ({
          ...p,
          textValue: p.value?.textValue ?? p.ref.textContent?.trim() ?? ""
        })), l = o.find((p) => p.ref === i), d = o.map((p) => p.textValue), c = gS(d, t.value, l?.textValue), f = o.find((p) => p.textValue === c);
        return f && f.ref.focus(), f?.ref;
      }
    },
    resetTypeahead: () => {
      t.value = "";
    }
  };
}
function pS(e, t) {
  return e.map((a, n) => e[(t + n) % e.length]);
}
function gS(e, t, a) {
  const r = t.length > 1 && Array.from(t).every((d) => d === t[0]) ? t[0] : t, s = a ? e.indexOf(a) : -1;
  let i = pS(e, Math.max(s, 0));
  r.length === 1 && (i = i.filter((d) => d !== a));
  const l = i.find((d) => d.toLowerCase().startsWith(r.toLowerCase()));
  return l !== a ? l : void 0;
}
function vS(e, t) {
  const a = N({}), n = N("none"), r = N(e), s = e.value ? "mounted" : "unmounted";
  let i;
  const o = t.value?.ownerDocument.defaultView ?? On, { state: l, dispatch: d } = fS(s, {
    mounted: {
      UNMOUNT: "unmounted",
      ANIMATION_OUT: "unmountSuspended"
    },
    unmountSuspended: {
      MOUNT: "mounted",
      ANIMATION_END: "unmounted"
    },
    unmounted: { MOUNT: "mounted" }
  }), c = (y) => {
    if (Aa) {
      const x = new CustomEvent(y, {
        bubbles: !1,
        cancelable: !1
      });
      t.value?.dispatchEvent(x);
    }
  };
  ye(e, async (y, x) => {
    const b = x !== y;
    if (await Be(), b) {
      const C = n.value, w = lo(t.value);
      y ? (d("MOUNT"), c("enter"), w === "none" && c("after-enter")) : w === "none" || w === "undefined" || a.value?.display === "none" ? (d("UNMOUNT"), c("leave"), c("after-leave")) : x && C !== w ? (d("ANIMATION_OUT"), c("leave")) : (d("UNMOUNT"), c("after-leave"));
    }
  }, { immediate: !0 });
  const f = (y) => {
    const x = lo(t.value), b = x.includes(y.animationName), C = l.value === "mounted" ? "enter" : "leave";
    if (y.target === t.value && b && (c(`after-${C}`), d("ANIMATION_END"), !r.value)) {
      const w = t.value.style.animationFillMode;
      t.value.style.animationFillMode = "forwards", i = o?.setTimeout(() => {
        t.value?.style.animationFillMode === "forwards" && (t.value.style.animationFillMode = w);
      });
    }
    y.target === t.value && x === "none" && d("ANIMATION_END");
  }, p = (y) => {
    y.target === t.value && (n.value = lo(t.value));
  }, g = ye(t, (y, x) => {
    y ? (a.value = getComputedStyle(y), y.addEventListener("animationstart", p), y.addEventListener("animationcancel", f), y.addEventListener("animationend", f)) : (d("ANIMATION_END"), i !== void 0 && o?.clearTimeout(i), x?.removeEventListener("animationstart", p), x?.removeEventListener("animationcancel", f), x?.removeEventListener("animationend", f));
  }, { immediate: !0 }), v = ye(l, () => {
    const y = lo(t.value);
    n.value = l.value === "mounted" ? y : "none";
  });
  return Bt(() => {
    g(), v();
  }), { isPresent: T(() => ["mounted", "unmountSuspended"].includes(l.value)) };
}
function lo(e) {
  return e && getComputedStyle(e).animationName || "none";
}
var Xt = L({
  name: "Presence",
  props: {
    present: {
      type: Boolean,
      required: !0
    },
    forceMount: { type: Boolean }
  },
  slots: {},
  setup(e, { slots: t, expose: a }) {
    const { present: n, forceMount: r } = We(e), s = N(), { isPresent: i } = vS(n, s);
    a({ present: i });
    let o = t.default({ present: i.value });
    o = qc(o || []);
    const l = fa();
    if (o && o?.length > 1) {
      const d = l?.parent?.type.name ? `<${l.parent.type.name} />` : "component";
      throw new Error([
        `Detected an invalid children for \`${d}\` for  \`Presence\` component.`,
        "",
        "Note: Presence works similarly to `v-if` directly, but it waits for animation/transition to finished before unmounting. So it expect only one direct child of valid VNode type.",
        "You can apply a few solutions:",
        ["Provide a single child element so that `presence` directive attach correctly.", "Ensure the first child is an actual element instead of a raw text node or comment node."].map((c) => `  - ${c}`).join(`
`)
      ].join(`
`));
    }
    return () => r.value || n.value || i.value ? ln(t.default({ present: i.value })[0], { ref: (d) => {
      const c = sa(d);
      return typeof c?.hasAttribute > "u" || (c?.hasAttribute("data-reka-popper-content-wrapper") ? s.value = c.firstElementChild : s.value = c), c;
    } }) : null;
  }
});
const Tn = L({
  name: "PrimitiveSlot",
  inheritAttrs: !1,
  setup(e, { attrs: t, slots: a }) {
    return () => {
      if (!a.default) return null;
      const n = qc(a.default()), r = n.findIndex((l) => l.type !== Fc);
      if (r === -1) return n;
      const s = n[r];
      delete s.props?.ref;
      const i = s.props ? O(t, s.props) : t, o = sm({
        ...s,
        props: {}
      }, i);
      return n.length === 1 ? o : (n[r] = o, n);
    };
  }
}), hS = [
  "area",
  "img",
  "input"
], U = L({
  name: "Primitive",
  inheritAttrs: !1,
  props: {
    asChild: {
      type: Boolean,
      default: !1
    },
    as: {
      type: [String, Object],
      default: "div"
    }
  },
  setup(e, { attrs: t, slots: a }) {
    const n = e.asChild ? "template" : e.as;
    return typeof n == "string" && hS.includes(n) ? () => ln(n, t) : n !== "template" ? () => ln(e.as, t, { default: a.default }) : () => ln(Tn, t, { default: a.default });
  }
});
function ea() {
  const e = N(), t = T(() => ["#text", "#comment"].includes(e.value?.$el.nodeName) ? e.value?.$el.nextElementSibling : sa(e));
  return {
    primitiveElement: e,
    currentElement: t
  };
}
const [Wm, mS] = Me("CollapsibleRoot");
var yS = /* @__PURE__ */ L({
  __name: "CollapsibleRoot",
  props: {
    defaultOpen: {
      type: Boolean,
      required: !1,
      default: !1
    },
    open: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    unmountOnHide: {
      type: Boolean,
      required: !1,
      default: !0
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  emits: ["update:open"],
  setup(e, { expose: t, emit: a }) {
    const n = e, s = Ze(n, "open", a, {
      defaultValue: n.defaultOpen,
      passive: n.open === void 0
    }), { disabled: i, unmountOnHide: o } = We(n);
    return mS({
      contentId: "",
      disabled: i,
      open: s,
      unmountOnHide: o,
      onOpenToggle: () => {
        i.value || (s.value = !s.value);
      }
    }), t({ open: s }), Z(), (l, d) => (h(), k(u(U), {
      as: l.as,
      "as-child": n.asChild,
      "data-state": u(s) ? "open" : "closed",
      "data-disabled": u(i) ? "" : void 0
    }, {
      default: _(() => [S(l.$slots, "default", { open: u(s) })]),
      _: 3
    }, 8, [
      "as",
      "as-child",
      "data-state",
      "data-disabled"
    ]));
  }
}), Ym = yS, bS = /* @__PURE__ */ L({
  inheritAttrs: !1,
  __name: "CollapsibleContent",
  props: {
    forceMount: {
      type: Boolean,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  emits: ["contentFound"],
  setup(e, { emit: t }) {
    const a = e, n = t, r = Wm();
    r.contentId ||= pt(void 0, "reka-collapsible-content");
    const s = N(), { forwardRef: i, currentElement: o } = Z(), l = N(0), d = N(0), c = T(() => r.open.value), f = N(c.value), p = N();
    ye(() => [c.value, s.value?.present], async () => {
      await Be();
      const v = o.value;
      if (!v) return;
      p.value = p.value || {
        transitionDuration: v.style.transitionDuration,
        animationName: v.style.animationName
      }, v.style.transitionDuration = "0s", v.style.animationName = "none";
      const m = v.getBoundingClientRect();
      d.value = m.height, l.value = m.width, f.value || (v.style.transitionDuration = p.value.transitionDuration, v.style.animationName = p.value.animationName);
    }, { immediate: !0 });
    const g = T(() => f.value && r.open.value);
    return Pe(() => {
      requestAnimationFrame(() => {
        f.value = !1;
      });
    }), ra(o, "beforematch", (v) => {
      requestAnimationFrame(() => {
        r.onOpenToggle(), n("contentFound");
      });
    }), (v, m) => (h(), k(u(Xt), {
      ref_key: "presentRef",
      ref: s,
      present: v.forceMount || u(r).open.value,
      "force-mount": !0
    }, {
      default: _(({ present: y }) => [V(u(U), O(v.$attrs, {
        id: u(r).contentId,
        ref: u(i),
        "as-child": a.asChild,
        as: v.as,
        hidden: y ? void 0 : u(r).unmountOnHide.value ? "" : "until-found",
        "data-state": g.value ? void 0 : u(r).open.value ? "open" : "closed",
        "data-disabled": u(r).disabled?.value ? "" : void 0,
        style: {
          "--reka-collapsible-content-height": `${d.value}px`,
          "--reka-collapsible-content-width": `${l.value}px`
        }
      }), {
        default: _(() => [!u(r).unmountOnHide.value || y ? S(v.$slots, "default", { key: 0 }) : D("v-if", !0)]),
        _: 2
      }, 1040, [
        "id",
        "as-child",
        "as",
        "hidden",
        "data-state",
        "data-disabled",
        "style"
      ])]),
      _: 3
    }, 8, ["present"]));
  }
}), Xm = bS, wS = /* @__PURE__ */ L({
  __name: "CollapsibleTrigger",
  props: {
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "button"
    }
  },
  setup(e) {
    const t = e;
    Z();
    const a = Wm();
    return (n, r) => (h(), k(u(U), {
      type: n.as === "button" ? "button" : void 0,
      as: n.as,
      "as-child": t.asChild,
      "aria-controls": u(a).contentId,
      "aria-expanded": u(a).open.value,
      "data-state": u(a).open.value ? "open" : "closed",
      "data-disabled": u(a).disabled?.value ? "" : void 0,
      disabled: u(a).disabled?.value,
      onClick: u(a).onOpenToggle
    }, {
      default: _(() => [S(n.$slots, "default")]),
      _: 3
    }, 8, [
      "type",
      "as",
      "as-child",
      "aria-controls",
      "aria-expanded",
      "data-state",
      "data-disabled",
      "disabled",
      "onClick"
    ]));
  }
}), Jm = wS;
function CS({ type: e, defaultValue: t, modelValue: a }) {
  const n = a || t;
  return a !== void 0 || t !== void 0 ? Array.isArray(n) ? "multiple" : "single" : e ?? "single";
}
function xS({ type: e, defaultValue: t, modelValue: a }) {
  return e || CS({
    type: e,
    defaultValue: t,
    modelValue: a
  });
}
function SS({ type: e, defaultValue: t }) {
  return t !== void 0 ? t : e === "single" ? void 0 : [];
}
function _S(e, t) {
  const a = T(() => xS(e)), n = Ze(e, "modelValue", t, {
    defaultValue: SS(e),
    passive: e.modelValue === void 0,
    deep: !0
  });
  function r(i) {
    if (a.value === "single") n.value = ca(i, n.value) ? void 0 : i;
    else {
      const o = Array.isArray(n.value) ? [...n.value || []] : [n.value].filter(Boolean);
      if (rd(o, i)) {
        const l = o.findIndex((d) => ca(d, i));
        o.splice(l, 1);
      } else o.push(i);
      n.value = o;
    }
  }
  const s = T(() => a.value === "single");
  return {
    modelValue: n,
    changeModelValue: r,
    isSingle: s
  };
}
const [Rl, kS] = Me("AccordionRoot");
var AS = /* @__PURE__ */ L({
  __name: "AccordionRoot",
  props: {
    collapsible: {
      type: Boolean,
      required: !1,
      default: !1
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    dir: {
      type: String,
      required: !1
    },
    orientation: {
      type: String,
      required: !1,
      default: "vertical"
    },
    unmountOnHide: {
      type: Boolean,
      required: !1,
      default: !0
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    },
    type: {
      type: String,
      required: !1
    },
    modelValue: {
      type: null,
      required: !1
    },
    defaultValue: {
      type: null,
      required: !1
    }
  },
  emits: ["update:modelValue"],
  setup(e, { emit: t }) {
    const a = e, n = t, { dir: r, disabled: s, unmountOnHide: i } = We(a), o = Yt(r), { modelValue: l, changeModelValue: d, isSingle: c } = _S(a, n), { forwardRef: f, currentElement: p } = Z();
    return kS({
      disabled: s,
      direction: o,
      orientation: a.orientation,
      parentElement: p,
      isSingle: c,
      collapsible: a.collapsible,
      modelValue: l,
      changeModelValue: d,
      unmountOnHide: i
    }), (g, v) => (h(), k(u(U), {
      ref: u(f),
      "as-child": g.asChild,
      as: g.as
    }, {
      default: _(() => [S(g.$slots, "default", { modelValue: u(l) })]),
      _: 3
    }, 8, ["as-child", "as"]));
  }
}), gd = AS, vd = /* @__PURE__ */ function(e) {
  return e.Open = "open", e.Closed = "closed", e;
}(vd || {});
const [sf, $S] = Me("AccordionItem");
var IS = /* @__PURE__ */ L({
  __name: "AccordionItem",
  props: {
    disabled: {
      type: Boolean,
      required: !1
    },
    value: {
      type: String,
      required: !0
    },
    unmountOnHide: {
      type: Boolean,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  setup(e, { expose: t }) {
    const a = e, n = Rl(), r = T(() => n.isSingle.value ? a.value === n.modelValue.value : Array.isArray(n.modelValue.value) && n.modelValue.value.includes(a.value)), s = T(() => n.disabled.value || a.disabled), i = T(() => s.value ? "" : void 0), o = T(() => r.value ? vd.Open : vd.Closed);
    t({
      open: r,
      dataDisabled: i
    });
    const { currentRef: l, currentElement: d } = Z();
    $S({
      open: r,
      dataState: o,
      disabled: s,
      dataDisabled: i,
      triggerId: "",
      currentRef: l,
      currentElement: d,
      value: T(() => a.value)
    });
    function c(f) {
      const p = f.target;
      if (Array.from(n.parentElement.value?.querySelectorAll("[data-reka-collection-item]") ?? []).findIndex((m) => m === p) === -1) return null;
      Mr(f, p, n.parentElement.value, {
        arrowKeyOptions: n.orientation,
        dir: n.direction.value,
        focus: !0
      });
    }
    return (f, p) => (h(), k(u(Ym), {
      "data-orientation": u(n).orientation,
      "data-disabled": i.value,
      "data-state": o.value,
      disabled: s.value,
      open: r.value,
      as: a.as,
      "as-child": a.asChild,
      "unmount-on-hide": u(n).unmountOnHide.value,
      onKeydown: nt(c, [
        "up",
        "down",
        "left",
        "right",
        "home",
        "end"
      ])
    }, {
      default: _(() => [S(f.$slots, "default", { open: r.value })]),
      _: 3
    }, 8, [
      "data-orientation",
      "data-disabled",
      "data-state",
      "disabled",
      "open",
      "as",
      "as-child",
      "unmount-on-hide"
    ]));
  }
}), Qm = IS, ES = /* @__PURE__ */ L({
  __name: "AccordionContent",
  props: {
    forceMount: {
      type: Boolean,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  setup(e) {
    const t = e, a = Rl(), n = sf();
    return Z(), (r, s) => (h(), k(u(Xm), {
      role: "region",
      "as-child": t.asChild,
      as: r.as,
      "force-mount": t.forceMount,
      "aria-labelledby": u(n).triggerId,
      "data-state": u(n).dataState.value,
      "data-disabled": u(n).dataDisabled.value,
      "data-orientation": u(a).orientation,
      style: {
        "--reka-accordion-content-width": "var(--reka-collapsible-content-width)",
        "--reka-accordion-content-height": "var(--reka-collapsible-content-height)"
      },
      onContentFound: s[0] || (s[0] = (i) => u(a).changeModelValue(u(n).value.value))
    }, {
      default: _(() => [S(r.$slots, "default")]),
      _: 3
    }, 8, [
      "as-child",
      "as",
      "force-mount",
      "aria-labelledby",
      "data-state",
      "data-disabled",
      "data-orientation"
    ]));
  }
}), Zm = ES, TS = /* @__PURE__ */ L({
  __name: "AccordionHeader",
  props: {
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "h3"
    }
  },
  setup(e) {
    const t = e, a = Rl(), n = sf();
    return Z(), (r, s) => (h(), k(u(U), {
      as: t.as,
      "as-child": t.asChild,
      "data-orientation": u(a).orientation,
      "data-state": u(n).dataState.value,
      "data-disabled": u(n).dataDisabled.value
    }, {
      default: _(() => [S(r.$slots, "default")]),
      _: 3
    }, 8, [
      "as",
      "as-child",
      "data-orientation",
      "data-state",
      "data-disabled"
    ]));
  }
}), BS = TS, PS = /* @__PURE__ */ L({
  __name: "AccordionTrigger",
  props: {
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  setup(e) {
    const t = e, a = Rl(), n = sf();
    n.triggerId ||= pt(void 0, "reka-accordion-trigger");
    function r() {
      const s = a.isSingle.value && n.open.value && !a.collapsible;
      n.disabled.value || s || a.changeModelValue(n.value.value);
    }
    return (s, i) => (h(), k(u(Jm), {
      id: u(n).triggerId,
      ref: u(n).currentRef,
      "data-reka-collection-item": "",
      as: t.as,
      "as-child": t.asChild,
      "aria-disabled": u(n).disabled.value || void 0,
      "aria-expanded": u(n).open.value || !1,
      "data-disabled": u(n).dataDisabled.value,
      "data-orientation": u(a).orientation,
      "data-state": u(n).dataState.value,
      disabled: u(n).disabled.value,
      onClick: r
    }, {
      default: _(() => [S(s.$slots, "default")]),
      _: 3
    }, 8, [
      "id",
      "as",
      "as-child",
      "aria-disabled",
      "aria-expanded",
      "data-disabled",
      "data-orientation",
      "data-state",
      "disabled"
    ]));
  }
}), hd = PS;
const [mn, DS] = Me("DialogRoot");
var MS = /* @__PURE__ */ L({
  inheritAttrs: !1,
  __name: "DialogRoot",
  props: {
    open: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    defaultOpen: {
      type: Boolean,
      required: !1,
      default: !1
    },
    modal: {
      type: Boolean,
      required: !1,
      default: !0
    }
  },
  emits: ["update:open"],
  setup(e, { emit: t }) {
    const a = e, r = Ze(a, "open", t, {
      defaultValue: a.defaultOpen,
      passive: a.open === void 0
    }), s = N(), i = N(), { modal: o } = We(a);
    return DS({
      open: r,
      modal: o,
      openModal: () => {
        r.value = !0;
      },
      onOpenChange: (l) => {
        r.value = l;
      },
      onOpenToggle: () => {
        r.value = !r.value;
      },
      contentId: "",
      titleId: "",
      descriptionId: "",
      triggerElement: s,
      contentElement: i
    }), (l, d) => S(l.$slots, "default", {
      open: u(r),
      close: () => r.value = !1
    });
  }
}), of = MS, RS = /* @__PURE__ */ L({
  __name: "DialogClose",
  props: {
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "button"
    }
  },
  setup(e) {
    const t = e;
    Z();
    const a = mn();
    return (n, r) => (h(), k(u(U), O(t, {
      type: n.as === "button" ? "button" : void 0,
      onClick: r[0] || (r[0] = (s) => u(a).onOpenChange(!1))
    }), {
      default: _(() => [S(n.$slots, "default")]),
      _: 3
    }, 16, ["type"]));
  }
}), ey = RS;
const LS = "dismissableLayer.pointerDownOutside", OS = "dismissableLayer.focusOutside";
function ty(e, t) {
  const a = t.closest("[data-dismissable-layer]"), n = e.dataset.dismissableLayer === "" ? e : e.querySelector("[data-dismissable-layer]"), r = Array.from(e.ownerDocument.querySelectorAll("[data-dismissable-layer]"));
  return !!(a && (n === a || r.indexOf(n) < r.indexOf(a)));
}
function FS(e, t, a = !0) {
  const n = t?.value?.ownerDocument ?? globalThis?.document, r = N(!1), s = N(() => {
  });
  return ot((i) => {
    if (!Aa || !Re(a)) return;
    const o = async (d) => {
      const c = d.target;
      if (!(!t?.value || !c)) {
        if (ty(t.value, c)) {
          r.value = !1;
          return;
        }
        if (d.target && !r.value) {
          let p = function() {
            Ar(LS, e, f);
          };
          const f = { originalEvent: d };
          d.pointerType === "touch" ? (n.removeEventListener("click", s.value), s.value = p, n.addEventListener("click", s.value, { once: !0 })) : p();
        } else n.removeEventListener("click", s.value);
        r.value = !1;
      }
    }, l = window.setTimeout(() => {
      n.addEventListener("pointerdown", o);
    }, 0);
    i(() => {
      window.clearTimeout(l), n.removeEventListener("pointerdown", o), n.removeEventListener("click", s.value);
    });
  }), { onPointerDownCapture: () => {
    Re(a) && (r.value = !0);
  } };
}
function zS(e, t, a = !0) {
  const n = t?.value?.ownerDocument ?? globalThis?.document, r = N(!1);
  return ot((s) => {
    if (!Aa || !Re(a)) return;
    const i = async (o) => {
      if (!t?.value) return;
      await Be(), await Be();
      const l = o.target;
      !t.value || !l || ty(t.value, l) || o.target && !r.value && Ar(OS, e, { originalEvent: o });
    };
    n.addEventListener("focusin", i), s(() => n.removeEventListener("focusin", i));
  }), {
    onFocusCapture: () => {
      Re(a) && (r.value = !0);
    },
    onBlurCapture: () => {
      Re(a) && (r.value = !1);
    }
  };
}
const Ha = ba({
  layersRoot: /* @__PURE__ */ new Set(),
  layersWithOutsidePointerEventsDisabled: /* @__PURE__ */ new Set(),
  branches: /* @__PURE__ */ new Set()
});
var qS = /* @__PURE__ */ L({
  __name: "DismissableLayer",
  props: {
    disableOutsidePointerEvents: {
      type: Boolean,
      required: !1,
      default: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  emits: [
    "escapeKeyDown",
    "pointerDownOutside",
    "focusOutside",
    "interactOutside",
    "dismiss"
  ],
  setup(e, { emit: t }) {
    const a = e, n = t, { forwardRef: r, currentElement: s } = Z(), i = T(() => s.value?.ownerDocument ?? globalThis.document), o = T(() => Ha.layersRoot), l = T(() => s.value ? Array.from(o.value).indexOf(s.value) : -1), d = T(() => Ha.layersWithOutsidePointerEventsDisabled.size > 0), c = T(() => {
      const v = Array.from(o.value), [m] = [...Ha.layersWithOutsidePointerEventsDisabled].slice(-1), y = v.indexOf(m);
      return l.value >= y;
    }), f = FS(async (v) => {
      const m = [...Ha.branches].some((y) => y?.contains(v.target));
      !c.value || m || (n("pointerDownOutside", v), n("interactOutside", v), await Be(), v.defaultPrevented || n("dismiss"));
    }, s), p = zS((v) => {
      [...Ha.branches].some((y) => y?.contains(v.target)) || (n("focusOutside", v), n("interactOutside", v), v.defaultPrevented || n("dismiss"));
    }, s);
    jc("Escape", (v) => {
      l.value === o.value.size - 1 && (n("escapeKeyDown", v), v.defaultPrevented || n("dismiss"));
    });
    let g;
    return ot((v) => {
      s.value && (a.disableOutsidePointerEvents && (Ha.layersWithOutsidePointerEventsDisabled.size === 0 && (g = i.value.body.style.pointerEvents, i.value.body.style.pointerEvents = "none"), Ha.layersWithOutsidePointerEventsDisabled.add(s.value)), o.value.add(s.value), v(() => {
        a.disableOutsidePointerEvents && Ha.layersWithOutsidePointerEventsDisabled.size === 1 && (i.value.body.style.pointerEvents = g);
      }));
    }), ot((v) => {
      v(() => {
        s.value && (o.value.delete(s.value), Ha.layersWithOutsidePointerEventsDisabled.delete(s.value));
      });
    }), (v, m) => (h(), k(u(U), {
      ref: u(r),
      "as-child": v.asChild,
      as: v.as,
      "data-dismissable-layer": "",
      style: It({ pointerEvents: d.value ? c.value ? "auto" : "none" : void 0 }),
      onFocusCapture: u(p).onFocusCapture,
      onBlurCapture: u(p).onBlurCapture,
      onPointerdownCapture: u(f).onPointerDownCapture
    }, {
      default: _(() => [S(v.$slots, "default")]),
      _: 3
    }, 8, [
      "as-child",
      "as",
      "style",
      "onFocusCapture",
      "onBlurCapture",
      "onPointerdownCapture"
    ]));
  }
}), sr = qS, VS = /* @__PURE__ */ L({
  __name: "DismissableLayerBranch",
  props: {
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  setup(e) {
    const t = e, { forwardRef: a, currentElement: n } = Z();
    return Pe(() => {
      Ha.branches.add(n.value);
    }), Bt(() => {
      Ha.branches.delete(n.value);
    }), (r, s) => (h(), k(u(U), O({ ref: u(a) }, t), {
      default: _(() => [S(r.$slots, "default")]),
      _: 3
    }, 16));
  }
}), NS = VS;
const HS = wC(() => N([]));
function jS() {
  const e = HS();
  return {
    add(t) {
      const a = e.value[0];
      t !== a && a?.pause(), e.value = ug(e.value, t), e.value.unshift(t);
    },
    remove(t) {
      e.value = ug(e.value, t), e.value[0]?.resume();
    }
  };
}
function ug(e, t) {
  const a = [...e], n = a.indexOf(t);
  return n !== -1 && a.splice(n, 1), a;
}
function KS(e) {
  return e.filter((t) => t.tagName !== "A");
}
const hu = "focusScope.autoFocusOnMount", mu = "focusScope.autoFocusOnUnmount", dg = {
  bubbles: !1,
  cancelable: !0
};
function qo(e, { select: t = !1 } = {}) {
  const a = dt();
  for (const n of e)
    if (Hn(n, { select: t }), dt() !== a) return !0;
}
function GS(e) {
  const t = lf(e), a = cg(t, e), n = cg(t.reverse(), e);
  return [a, n];
}
function lf(e) {
  const t = [], a = document.createTreeWalker(e, NodeFilter.SHOW_ELEMENT, { acceptNode: (n) => {
    const r = n.tagName === "INPUT" && n.type === "hidden";
    return n.disabled || n.hidden || r ? NodeFilter.FILTER_SKIP : n.tabIndex >= 0 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;
  } });
  for (; a.nextNode(); ) t.push(a.currentNode);
  return t;
}
function cg(e, t) {
  for (const a of e) if (!US(a, { upTo: t })) return a;
}
function US(e, { upTo: t }) {
  if (getComputedStyle(e).visibility === "hidden") return !0;
  for (; e; ) {
    if (t !== void 0 && e === t) return !1;
    if (getComputedStyle(e).display === "none") return !0;
    e = e.parentElement;
  }
  return !1;
}
function WS(e) {
  return e instanceof HTMLInputElement && "select" in e;
}
function Hn(e, { select: t = !1 } = {}) {
  if (e && e.focus) {
    const a = dt();
    e.focus({ preventScroll: !0 }), e !== a && WS(e) && t && e.select();
  }
}
var YS = /* @__PURE__ */ L({
  __name: "FocusScope",
  props: {
    loop: {
      type: Boolean,
      required: !1,
      default: !1
    },
    trapped: {
      type: Boolean,
      required: !1,
      default: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  emits: ["mountAutoFocus", "unmountAutoFocus"],
  setup(e, { emit: t }) {
    const a = e, n = t, { currentRef: r, currentElement: s } = Z(), i = N(null), o = jS(), l = ba({
      paused: !1,
      pause() {
        this.paused = !0;
      },
      resume() {
        this.paused = !1;
      }
    });
    ot((c) => {
      if (!Aa) return;
      const f = s.value;
      if (!a.trapped) return;
      function p(y) {
        if (l.paused || !f) return;
        const x = y.target;
        f.contains(x) ? i.value = x : Hn(i.value, { select: !0 });
      }
      function g(y) {
        if (l.paused || !f) return;
        const x = y.relatedTarget;
        x !== null && (f.contains(x) || Hn(i.value, { select: !0 }));
      }
      function v(y) {
        f.contains(i.value) || Hn(f);
      }
      document.addEventListener("focusin", p), document.addEventListener("focusout", g);
      const m = new MutationObserver(v);
      f && m.observe(f, {
        childList: !0,
        subtree: !0
      }), c(() => {
        document.removeEventListener("focusin", p), document.removeEventListener("focusout", g), m.disconnect();
      });
    }), ot(async (c) => {
      const f = s.value;
      if (await Be(), !f) return;
      o.add(l);
      const p = dt();
      if (!f.contains(p)) {
        const v = new CustomEvent(hu, dg);
        f.addEventListener(hu, (m) => n("mountAutoFocus", m)), f.dispatchEvent(v), v.defaultPrevented || (qo(KS(lf(f)), { select: !0 }), dt() === p && Hn(f));
      }
      c(() => {
        f.removeEventListener(hu, (y) => n("mountAutoFocus", y));
        const v = new CustomEvent(mu, dg), m = (y) => {
          n("unmountAutoFocus", y);
        };
        f.addEventListener(mu, m), f.dispatchEvent(v), setTimeout(() => {
          v.defaultPrevented || Hn(p ?? document.body, { select: !0 }), f.removeEventListener(mu, m), o.remove(l);
        }, 0);
      });
    });
    function d(c) {
      if (!a.loop && !a.trapped || l.paused) return;
      const f = c.key === "Tab" && !c.altKey && !c.ctrlKey && !c.metaKey, p = dt();
      if (f && p) {
        const g = c.currentTarget, [v, m] = GS(g);
        v && m ? !c.shiftKey && p === m ? (c.preventDefault(), a.loop && Hn(v, { select: !0 })) : c.shiftKey && p === v && (c.preventDefault(), a.loop && Hn(m, { select: !0 })) : p === g && c.preventDefault();
      }
    }
    return (c, f) => (h(), k(u(U), {
      ref_key: "currentRef",
      ref: r,
      tabindex: "-1",
      "as-child": c.asChild,
      as: c.as,
      onKeydown: d
    }, {
      default: _(() => [S(c.$slots, "default")]),
      _: 3
    }, 8, ["as-child", "as"]));
  }
}), Ni = YS;
const XS = "menu.itemSelect", md = ["Enter", " "], JS = [
  "ArrowDown",
  "PageUp",
  "Home"
], ay = [
  "ArrowUp",
  "PageDown",
  "End"
], QS = [...JS, ...ay], ZS = {
  ltr: [...md, "ArrowRight"],
  rtl: [...md, "ArrowLeft"]
}, e_ = {
  ltr: ["ArrowLeft"],
  rtl: ["ArrowRight"]
};
function uf(e) {
  return e ? "open" : "closed";
}
function el(e) {
  return e === "indeterminate";
}
function df(e) {
  return el(e) ? "indeterminate" : e ? "checked" : "unchecked";
}
function yd(e) {
  const t = dt();
  for (const a of e)
    if (a === t || (a.focus(), dt() !== t)) return;
}
function t_(e, t) {
  const { x: a, y: n } = e;
  let r = !1;
  for (let s = 0, i = t.length - 1; s < t.length; i = s++) {
    const o = t[s].x, l = t[s].y, d = t[i].x, c = t[i].y;
    l > n != c > n && a < (d - o) * (n - l) / (c - l) + o && (r = !r);
  }
  return r;
}
function a_(e, t) {
  if (!t) return !1;
  const a = {
    x: e.clientX,
    y: e.clientY
  };
  return t_(a, t);
}
function yi(e) {
  return e.pointerType === "mouse";
}
const n_ = "DialogTitle", r_ = "DialogContent";
function s_({ titleName: e = n_, contentName: t = r_, componentLink: a = "dialog.html#title", titleId: n, descriptionId: r, contentElement: s }) {
  const i = `Warning: \`${t}\` requires a \`${e}\` for the component to be accessible for screen reader users.

If you want to hide the \`${e}\`, you can wrap it with our VisuallyHidden component.

For more information, see https://www.reka-ui.com/docs/components/${a}`, o = `Warning: Missing \`Description\` or \`aria-describedby="undefined"\` for ${t}.`;
  Pe(() => {
    document.getElementById(n) || console.warn(i);
    const d = s.value?.getAttribute("aria-describedby");
    r && d && (document.getElementById(r) || console.warn(o));
  });
}
var i_ = /* @__PURE__ */ L({
  __name: "DialogContentImpl",
  props: {
    forceMount: {
      type: Boolean,
      required: !1
    },
    trapFocus: {
      type: Boolean,
      required: !1
    },
    disableOutsidePointerEvents: {
      type: Boolean,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  emits: [
    "escapeKeyDown",
    "pointerDownOutside",
    "focusOutside",
    "interactOutside",
    "openAutoFocus",
    "closeAutoFocus"
  ],
  setup(e, { emit: t }) {
    const a = e, n = t, r = mn(), { forwardRef: s, currentElement: i } = Z();
    return r.titleId ||= pt(void 0, "reka-dialog-title"), r.descriptionId ||= pt(void 0, "reka-dialog-description"), Pe(() => {
      r.contentElement = i, dt() !== document.body && (r.triggerElement.value = dt());
    }), process.env.NODE_ENV !== "production" && s_({
      titleName: "DialogTitle",
      contentName: "DialogContent",
      componentLink: "dialog.html#title",
      titleId: r.titleId,
      descriptionId: r.descriptionId,
      contentElement: i
    }), (o, l) => (h(), k(u(Ni), {
      "as-child": "",
      loop: "",
      trapped: a.trapFocus,
      onMountAutoFocus: l[5] || (l[5] = (d) => n("openAutoFocus", d)),
      onUnmountAutoFocus: l[6] || (l[6] = (d) => n("closeAutoFocus", d))
    }, {
      default: _(() => [V(u(sr), O({
        id: u(r).contentId,
        ref: u(s),
        as: o.as,
        "as-child": o.asChild,
        "disable-outside-pointer-events": o.disableOutsidePointerEvents,
        role: "dialog",
        "aria-describedby": u(r).descriptionId,
        "aria-labelledby": u(r).titleId,
        "data-state": u(uf)(u(r).open.value)
      }, o.$attrs, {
        onDismiss: l[0] || (l[0] = (d) => u(r).onOpenChange(!1)),
        onEscapeKeyDown: l[1] || (l[1] = (d) => n("escapeKeyDown", d)),
        onFocusOutside: l[2] || (l[2] = (d) => n("focusOutside", d)),
        onInteractOutside: l[3] || (l[3] = (d) => n("interactOutside", d)),
        onPointerDownOutside: l[4] || (l[4] = (d) => n("pointerDownOutside", d))
      }), {
        default: _(() => [S(o.$slots, "default")]),
        _: 3
      }, 16, [
        "id",
        "as",
        "as-child",
        "disable-outside-pointer-events",
        "aria-describedby",
        "aria-labelledby",
        "data-state"
      ])]),
      _: 3
    }, 8, ["trapped"]));
  }
}), ny = i_, o_ = /* @__PURE__ */ L({
  __name: "DialogContentModal",
  props: {
    forceMount: {
      type: Boolean,
      required: !1
    },
    trapFocus: {
      type: Boolean,
      required: !1
    },
    disableOutsidePointerEvents: {
      type: Boolean,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  emits: [
    "escapeKeyDown",
    "pointerDownOutside",
    "focusOutside",
    "interactOutside",
    "openAutoFocus",
    "closeAutoFocus"
  ],
  setup(e, { emit: t }) {
    const a = e, n = t, r = mn(), s = en(n), { forwardRef: i, currentElement: o } = Z();
    return zi(o), (l, d) => (h(), k(ny, O({
      ...a,
      ...u(s)
    }, {
      ref: u(i),
      "trap-focus": u(r).open.value,
      "disable-outside-pointer-events": !0,
      onCloseAutoFocus: d[0] || (d[0] = (c) => {
        c.defaultPrevented || (c.preventDefault(), u(r).triggerElement.value?.focus());
      }),
      onPointerDownOutside: d[1] || (d[1] = (c) => {
        const f = c.detail.originalEvent, p = f.button === 0 && f.ctrlKey === !0;
        (f.button === 2 || p) && c.preventDefault();
      }),
      onFocusOutside: d[2] || (d[2] = (c) => {
        c.preventDefault();
      })
    }), {
      default: _(() => [S(l.$slots, "default")]),
      _: 3
    }, 16, ["trap-focus"]));
  }
}), l_ = o_, u_ = /* @__PURE__ */ L({
  __name: "DialogContentNonModal",
  props: {
    forceMount: {
      type: Boolean,
      required: !1
    },
    trapFocus: {
      type: Boolean,
      required: !1
    },
    disableOutsidePointerEvents: {
      type: Boolean,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  emits: [
    "escapeKeyDown",
    "pointerDownOutside",
    "focusOutside",
    "interactOutside",
    "openAutoFocus",
    "closeAutoFocus"
  ],
  setup(e, { emit: t }) {
    const a = e, r = en(t);
    Z();
    const s = mn(), i = N(!1), o = N(!1);
    return (l, d) => (h(), k(ny, O({
      ...a,
      ...u(r)
    }, {
      "trap-focus": !1,
      "disable-outside-pointer-events": !1,
      onCloseAutoFocus: d[0] || (d[0] = (c) => {
        c.defaultPrevented || (i.value || u(s).triggerElement.value?.focus(), c.preventDefault()), i.value = !1, o.value = !1;
      }),
      onInteractOutside: d[1] || (d[1] = (c) => {
        c.defaultPrevented || (i.value = !0, c.detail.originalEvent.type === "pointerdown" && (o.value = !0));
        const f = c.target;
        u(s).triggerElement.value?.contains(f) && c.preventDefault(), c.detail.originalEvent.type === "focusin" && o.value && c.preventDefault();
      })
    }), {
      default: _(() => [S(l.$slots, "default")]),
      _: 3
    }, 16));
  }
}), d_ = u_, c_ = /* @__PURE__ */ L({
  __name: "DialogContent",
  props: {
    forceMount: {
      type: Boolean,
      required: !1
    },
    disableOutsidePointerEvents: {
      type: Boolean,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  emits: [
    "escapeKeyDown",
    "pointerDownOutside",
    "focusOutside",
    "interactOutside",
    "openAutoFocus",
    "closeAutoFocus"
  ],
  setup(e, { emit: t }) {
    const a = e, n = t, r = mn(), s = en(n), { forwardRef: i } = Z();
    return (o, l) => (h(), k(u(Xt), { present: o.forceMount || u(r).open.value }, {
      default: _(() => [u(r).modal.value ? (h(), k(l_, O({
        key: 0,
        ref: u(i)
      }, {
        ...a,
        ...u(s),
        ...o.$attrs
      }), {
        default: _(() => [S(o.$slots, "default")]),
        _: 3
      }, 16)) : (h(), k(d_, O({
        key: 1,
        ref: u(i)
      }, {
        ...a,
        ...u(s),
        ...o.$attrs
      }), {
        default: _(() => [S(o.$slots, "default")]),
        _: 3
      }, 16))]),
      _: 3
    }, 8, ["present"]));
  }
}), cf = c_, f_ = /* @__PURE__ */ L({
  __name: "DialogDescription",
  props: {
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "p"
    }
  },
  setup(e) {
    const t = e;
    Z();
    const a = mn();
    return (n, r) => (h(), k(u(U), O(t, { id: u(a).descriptionId }), {
      default: _(() => [S(n.$slots, "default")]),
      _: 3
    }, 16, ["id"]));
  }
}), ys = f_, p_ = /* @__PURE__ */ L({
  __name: "DialogOverlayImpl",
  props: {
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  setup(e) {
    const t = mn();
    return Oi(!0), Z(), (a, n) => (h(), k(u(U), {
      as: a.as,
      "as-child": a.asChild,
      "data-state": u(t).open.value ? "open" : "closed",
      style: { "pointer-events": "auto" }
    }, {
      default: _(() => [S(a.$slots, "default")]),
      _: 3
    }, 8, [
      "as",
      "as-child",
      "data-state"
    ]));
  }
}), g_ = p_, v_ = /* @__PURE__ */ L({
  __name: "DialogOverlay",
  props: {
    forceMount: {
      type: Boolean,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  setup(e) {
    const t = mn(), { forwardRef: a } = Z();
    return (n, r) => u(t)?.modal.value ? (h(), k(u(Xt), {
      key: 0,
      present: n.forceMount || u(t).open.value
    }, {
      default: _(() => [V(g_, O(n.$attrs, {
        ref: u(a),
        as: n.as,
        "as-child": n.asChild
      }), {
        default: _(() => [S(n.$slots, "default")]),
        _: 3
      }, 16, ["as", "as-child"])]),
      _: 3
    }, 8, ["present"])) : D("v-if", !0);
  }
}), ff = v_, h_ = /* @__PURE__ */ L({
  __name: "Teleport",
  props: {
    to: {
      type: null,
      required: !1,
      default: "body"
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    defer: {
      type: Boolean,
      required: !1
    },
    forceMount: {
      type: Boolean,
      required: !1
    }
  },
  setup(e) {
    const t = Hc();
    return (a, n) => u(t) || a.forceMount ? (h(), k(Mi, {
      key: 0,
      to: a.to,
      disabled: a.disabled,
      defer: a.defer
    }, [S(a.$slots, "default")], 8, [
      "to",
      "disabled",
      "defer"
    ])) : D("v-if", !0);
  }
}), ir = h_, m_ = /* @__PURE__ */ L({
  __name: "DialogPortal",
  props: {
    to: {
      type: null,
      required: !1
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    defer: {
      type: Boolean,
      required: !1
    },
    forceMount: {
      type: Boolean,
      required: !1
    }
  },
  setup(e) {
    const t = e;
    return (a, n) => (h(), k(u(ir), pe(me(t)), {
      default: _(() => [S(a.$slots, "default")]),
      _: 3
    }, 16));
  }
}), pf = m_, y_ = /* @__PURE__ */ L({
  __name: "DialogTitle",
  props: {
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "h2"
    }
  },
  setup(e) {
    const t = e, a = mn();
    return Z(), (n, r) => (h(), k(u(U), O(t, { id: u(a).titleId }), {
      default: _(() => [S(n.$slots, "default")]),
      _: 3
    }, 16, ["id"]));
  }
}), bs = y_, b_ = /* @__PURE__ */ L({
  __name: "DialogTrigger",
  props: {
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "button"
    }
  },
  setup(e) {
    const t = e, a = mn(), { forwardRef: n, currentElement: r } = Z();
    return a.contentId ||= pt(void 0, "reka-dialog-content"), Pe(() => {
      a.triggerElement.value = r.value;
    }), (s, i) => (h(), k(u(U), O(t, {
      ref: u(n),
      type: s.as === "button" ? "button" : void 0,
      "aria-haspopup": "dialog",
      "aria-expanded": u(a).open.value || !1,
      "aria-controls": u(a).open.value ? u(a).contentId : void 0,
      "data-state": u(a).open.value ? "open" : "closed",
      onClick: u(a).onOpenToggle
    }), {
      default: _(() => [S(s.$slots, "default")]),
      _: 3
    }, 16, [
      "type",
      "aria-expanded",
      "aria-controls",
      "data-state",
      "onClick"
    ]));
  }
}), gf = b_;
function w_(e) {
  function t(n) {
    return Array.isArray(e.date.value) ? e.date.value.some((r) => Ut(r, n)) : e.date.value ? Ut(e.date.value, n) : !1;
  }
  const a = T(() => {
    if (Array.isArray(e.date.value)) {
      if (!e.date.value.length) return !1;
      for (const n of e.date.value)
        if (e.isDateDisabled?.(n) || e.isDateUnavailable?.(n)) return !0;
    } else {
      if (!e.date.value) return !1;
      if (e.isDateDisabled?.(e.date.value) || e.isDateUnavailable?.(e.date.value)) return !0;
    }
    return !1;
  });
  return {
    isDateSelected: t,
    isInvalid: a
  };
}
function C_(e, t) {
  const a = t(e), n = a.compare(e), r = {};
  return n >= 7 && (r.day = 1), n >= En(e) && (r.month = 1), a.set({ ...r });
}
function x_(e, t) {
  const a = t(e), n = e.compare(a), r = {};
  return n >= 7 && (r.day = 35), n >= En(e) && (r.month = 13), a.set({ ...r });
}
function S_(e, t) {
  return t(e);
}
function __(e, t) {
  return t(e);
}
function ry(e) {
  const t = tf(e.locale.value), a = T(() => {
    const m = { calendar: e.placeholder.value.calendar.identifier };
    return e.placeholder.value.calendar.identifier === "gregory" && e.placeholder.value.era === "BC" && (m.era = "short"), m;
  }), n = N(cr({
    dateObj: e.placeholder.value,
    weekStartsOn: e.weekStartsOn.value,
    locale: e.locale.value,
    fixedWeeks: e.fixedWeeks.value,
    numberOfMonths: e.numberOfMonths.value
  })), r = T(() => n.value.map((m) => m.value));
  function s(m) {
    return !r.value.some((y) => Np(m, y));
  }
  const i = (m) => {
    if (!e.maxValue.value || !n.value.length) return !1;
    if (e.disabled.value) return !0;
    const y = n.value[n.value.length - 1].value;
    if (!m && !e.nextPage.value) {
      const b = y.add({ months: 1 }).set({ day: 1 });
      return zo(b, e.maxValue.value);
    }
    const x = C_(y, m || e.nextPage.value);
    return zo(x, e.maxValue.value);
  }, o = (m) => {
    if (!e.minValue.value || !n.value.length) return !1;
    if (e.disabled.value) return !0;
    const y = n.value[0].value;
    if (!m && !e.prevPage.value) {
      const b = y.subtract({ months: 1 }).set({ day: 35 });
      return Sr(b, e.minValue.value);
    }
    const x = x_(y, m || e.prevPage.value);
    return Sr(x, e.minValue.value);
  };
  function l(m) {
    return !!(e.isDateDisabled?.(m) || e.disabled.value || e.maxValue.value && zo(m, e.maxValue.value) || e.minValue.value && Sr(m, e.minValue.value));
  }
  const d = (m) => !!e.isDateUnavailable?.(m), c = T(() => n.value.length ? n.value[0].rows[0].map((m) => t.dayOfWeek(Ka(m), e.weekdayFormat.value)) : []), f = (m) => {
    const y = n.value[0].value;
    if (!m && !e.nextPage.value) {
      const w = y.add({ months: e.pagedNavigation.value ? e.numberOfMonths.value : 1 }), $ = cr({
        dateObj: w,
        weekStartsOn: e.weekStartsOn.value,
        locale: e.locale.value,
        fixedWeeks: e.fixedWeeks.value,
        numberOfMonths: e.numberOfMonths.value
      });
      n.value = $, e.placeholder.value = $[0].value.set({ day: 1 });
      return;
    }
    const x = S_(y, m || e.nextPage.value), b = cr({
      dateObj: x,
      weekStartsOn: e.weekStartsOn.value,
      locale: e.locale.value,
      fixedWeeks: e.fixedWeeks.value,
      numberOfMonths: e.numberOfMonths.value
    });
    n.value = b;
    const C = {};
    if (!m) {
      const w = b[0].value.compare(y);
      w >= En(y) && (C.day = 1), w >= 365 && (C.month = 1);
    }
    e.placeholder.value = b[0].value.set({ ...C });
  }, p = (m) => {
    const y = n.value[0].value;
    if (!m && !e.prevPage.value) {
      const w = y.subtract({ months: e.pagedNavigation.value ? e.numberOfMonths.value : 1 }), $ = cr({
        dateObj: w,
        weekStartsOn: e.weekStartsOn.value,
        locale: e.locale.value,
        fixedWeeks: e.fixedWeeks.value,
        numberOfMonths: e.numberOfMonths.value
      });
      n.value = $, e.placeholder.value = $[0].value.set({ day: 1 });
      return;
    }
    const x = __(y, m || e.prevPage.value), b = cr({
      dateObj: x,
      weekStartsOn: e.weekStartsOn.value,
      locale: e.locale.value,
      fixedWeeks: e.fixedWeeks.value,
      numberOfMonths: e.numberOfMonths.value
    });
    n.value = b;
    const C = {};
    if (!m) {
      const w = y.compare(b[0].value);
      w >= En(y) && (C.day = 1), w >= 365 && (C.month = 1);
    }
    e.placeholder.value = b[0].value.set({ ...C });
  };
  ye(e.placeholder, (m) => {
    r.value.some((y) => Np(y, m)) || (n.value = cr({
      dateObj: m,
      weekStartsOn: e.weekStartsOn.value,
      locale: e.locale.value,
      fixedWeeks: e.fixedWeeks.value,
      numberOfMonths: e.numberOfMonths.value
    }));
  }), ye([
    e.locale,
    e.weekStartsOn,
    e.fixedWeeks,
    e.numberOfMonths
  ], () => {
    n.value = cr({
      dateObj: e.placeholder.value,
      weekStartsOn: e.weekStartsOn.value,
      locale: e.locale.value,
      fixedWeeks: e.fixedWeeks.value,
      numberOfMonths: e.numberOfMonths.value
    });
  });
  const g = T(() => {
    if (!n.value.length) return "";
    if (e.locale.value !== t.getLocale() && t.setLocale(e.locale.value), n.value.length === 1) {
      const B = n.value[0].value;
      return `${t.fullMonthAndYear(Ka(B), a.value)}`;
    }
    const m = Ka(n.value[0].value), y = Ka(n.value[n.value.length - 1].value), x = t.fullMonth(m, a.value), b = t.fullMonth(y, a.value), C = t.fullYear(m, a.value), w = t.fullYear(y, a.value);
    return C === w ? `${x} - ${b} ${w}` : `${x} ${C} - ${b} ${w}`;
  }), v = T(() => `${e.calendarLabel.value ?? "Event Date"}, ${g.value}`);
  return {
    isDateDisabled: l,
    isDateUnavailable: d,
    isNextButtonDisabled: i,
    isPrevButtonDisabled: o,
    grid: n,
    weekdays: c,
    visibleView: r,
    isOutsideVisibleView: s,
    formatter: t,
    nextPage: f,
    prevPage: p,
    headingValue: g,
    fullCalendarLabel: v
  };
}
const k_ = { style: {
  border: "0px",
  clip: "rect(0px, 0px, 0px, 0px)",
  "clip-path": "inset(50%)",
  height: "1px",
  margin: "-1px",
  overflow: "hidden",
  padding: "0px",
  position: "absolute",
  "white-space": "nowrap",
  width: "1px"
} }, A_ = {
  role: "heading",
  "aria-level": "2"
}, [_s, $_] = Me("CalendarRoot");
var I_ = /* @__PURE__ */ L({
  __name: "CalendarRoot",
  props: {
    defaultValue: {
      type: null,
      required: !1,
      default: void 0
    },
    defaultPlaceholder: {
      type: null,
      required: !1
    },
    placeholder: {
      type: null,
      required: !1,
      default: void 0
    },
    pagedNavigation: {
      type: Boolean,
      required: !1,
      default: !1
    },
    preventDeselect: {
      type: Boolean,
      required: !1,
      default: !1
    },
    weekStartsOn: {
      type: Number,
      required: !1,
      default: 0
    },
    weekdayFormat: {
      type: String,
      required: !1,
      default: "narrow"
    },
    calendarLabel: {
      type: String,
      required: !1
    },
    fixedWeeks: {
      type: Boolean,
      required: !1,
      default: !1
    },
    maxValue: {
      type: null,
      required: !1
    },
    minValue: {
      type: null,
      required: !1
    },
    locale: {
      type: String,
      required: !1
    },
    numberOfMonths: {
      type: Number,
      required: !1,
      default: 1
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    readonly: {
      type: Boolean,
      required: !1,
      default: !1
    },
    initialFocus: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isDateDisabled: {
      type: Function,
      required: !1,
      default: void 0
    },
    isDateUnavailable: {
      type: Function,
      required: !1,
      default: void 0
    },
    dir: {
      type: String,
      required: !1
    },
    nextPage: {
      type: Function,
      required: !1
    },
    prevPage: {
      type: Function,
      required: !1
    },
    modelValue: {
      type: null,
      required: !1
    },
    multiple: {
      type: Boolean,
      required: !1,
      default: !1
    },
    disableDaysOutsideCurrentView: {
      type: Boolean,
      required: !1,
      default: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "div"
    }
  },
  emits: ["update:modelValue", "update:placeholder"],
  setup(e, { emit: t }) {
    const a = e, n = t, { disabled: r, readonly: s, initialFocus: i, pagedNavigation: o, weekStartsOn: l, weekdayFormat: d, fixedWeeks: c, multiple: f, minValue: p, maxValue: g, numberOfMonths: v, preventDeselect: m, isDateDisabled: y, isDateUnavailable: x, calendarLabel: b, defaultValue: C, nextPage: w, prevPage: $, dir: B, locale: I, disableDaysOutsideCurrentView: E } = We(a), { primitiveElement: P, currentElement: R } = ea(), F = rf(I), H = Yt(B), j = Ze(a, "modelValue", n, {
      defaultValue: C.value,
      passive: a.modelValue === void 0
    }), K = Hm({
      defaultPlaceholder: a.placeholder,
      defaultValue: j.value,
      locale: a.locale
    }), z = Ze(a, "placeholder", n, {
      defaultValue: a.defaultPlaceholder ?? K.copy(),
      passive: a.placeholder === void 0
    });
    function G(re) {
      z.value = re.copy();
    }
    const { fullCalendarLabel: Y, headingValue: q, isDateDisabled: Q, isDateUnavailable: se, isNextButtonDisabled: ce, isPrevButtonDisabled: oe, weekdays: xe, isOutsideVisibleView: $e, nextPage: Le, prevPage: Ye, formatter: ne, grid: ae } = ry({
      locale: F,
      placeholder: z,
      weekStartsOn: l,
      fixedWeeks: c,
      numberOfMonths: v,
      minValue: p,
      maxValue: g,
      disabled: r,
      weekdayFormat: d,
      pagedNavigation: o,
      isDateDisabled: y.value,
      isDateUnavailable: x.value,
      calendarLabel: b,
      nextPage: w,
      prevPage: $
    }), { isInvalid: be, isDateSelected: De } = w_({
      date: j,
      isDateDisabled: Q,
      isDateUnavailable: se
    });
    ye(j, (re) => {
      if (Array.isArray(re) && re.length) {
        const de = re[re.length - 1];
        de && !Un(z.value, de) && G(de);
      } else !Array.isArray(re) && re && !Un(z.value, re) && G(re);
    });
    function Ke(re) {
      if (f.value) {
        if (!j.value) j.value = [re.copy()];
        else if (Array.isArray(j.value)) {
          if (j.value.findIndex((_e) => Ut(_e, re)) === -1) j.value = [...j.value, re];
          else if (!m.value) {
            const _e = j.value.filter((ie) => !Ut(ie, re));
            if (!_e.length) {
              z.value = re.copy(), j.value = void 0;
              return;
            }
            j.value = _e.map((ie) => ie.copy());
          }
        }
      } else {
        if (!j.value) {
          j.value = re.copy();
          return;
        }
        !m.value && Un(j.value, re) ? (z.value = re.copy(), j.value = void 0) : j.value = re.copy();
      }
    }
    return Pe(() => {
      i.value && jm(R.value);
    }), $_({
      isDateUnavailable: se,
      dir: H,
      isDateDisabled: Q,
      locale: F,
      formatter: ne,
      modelValue: j,
      placeholder: z,
      disabled: r,
      initialFocus: i,
      pagedNavigation: o,
      grid: ae,
      weekDays: xe,
      weekStartsOn: l,
      weekdayFormat: d,
      fixedWeeks: c,
      multiple: f,
      numberOfMonths: v,
      readonly: s,
      preventDeselect: m,
      fullCalendarLabel: Y,
      headingValue: q,
      isInvalid: be,
      isDateSelected: De,
      isNextButtonDisabled: ce,
      isPrevButtonDisabled: oe,
      isOutsideVisibleView: $e,
      nextPage: Le,
      prevPage: Ye,
      parentElement: R,
      onPlaceholderChange: G,
      onDateChange: Ke,
      disableDaysOutsideCurrentView: E
    }), (re, de) => (h(), k(u(U), {
      ref_key: "primitiveElement",
      ref: P,
      as: re.as,
      "as-child": re.asChild,
      role: "application",
      "aria-label": u(Y),
      "data-readonly": u(s) ? "" : void 0,
      "data-disabled": u(r) ? "" : void 0,
      "data-invalid": u(be) ? "" : void 0,
      dir: u(H)
    }, {
      default: _(() => [S(re.$slots, "default", {
        date: u(z),
        grid: u(ae),
        weekDays: u(xe),
        weekStartsOn: u(l),
        locale: u(F),
        fixedWeeks: u(c),
        modelValue: u(j)
      }), J("div", k_, [J("div", A_, X(u(Y)), 1)])]),
      _: 3
    }, 8, [
      "as",
      "as-child",
      "aria-label",
      "data-readonly",
      "data-disabled",
      "data-invalid",
      "dir"
    ]));
  }
}), E_ = I_, T_ = /* @__PURE__ */ L({
  __name: "CalendarCell",
  props: {
    date: {
      type: null,
      required: !0
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "td"
    }
  },
  setup(e) {
    const t = _s();
    return (a, n) => (h(), k(u(U), {
      as: a.as,
      "as-child": a.asChild,
      role: "gridcell",
      "aria-selected": u(t).isDateSelected(a.date) ? !0 : void 0,
      "aria-disabled": u(t).isDateDisabled(a.date) || u(t).isDateUnavailable?.(a.date) || u(t).disableDaysOutsideCurrentView.value,
      "data-disabled": u(t).isDateDisabled(a.date) || u(t).disableDaysOutsideCurrentView.value ? "" : void 0
    }, {
      default: _(() => [S(a.$slots, "default")]),
      _: 3
    }, 8, [
      "as",
      "as-child",
      "aria-selected",
      "aria-disabled",
      "data-disabled"
    ]));
  }
}), B_ = T_;
const P_ = "[data-reka-calendar-cell-trigger]:not([data-outside-view]):not([data-outside-visible-view])";
function us(e) {
  return Array.from(e.querySelectorAll(P_)) ?? [];
}
var D_ = /* @__PURE__ */ L({
  __name: "CalendarCellTrigger",
  props: {
    day: {
      type: null,
      required: !0
    },
    month: {
      type: null,
      required: !0
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "div"
    }
  },
  setup(e) {
    const t = e, a = qi(), n = _s(), { primitiveElement: r, currentElement: s } = ea(), i = T(() => t.day.day.toLocaleString(n.locale.value)), o = T(() => n.formatter.custom(Ka(t.day), {
      weekday: "long",
      month: "long",
      day: "numeric",
      year: "numeric"
    })), l = T(() => n.isDateUnavailable?.(t.day) ?? !1), d = T(() => wm(t.day, Ss())), c = T(() => !Kc(t.day, t.month)), f = T(() => n.isOutsideVisibleView(t.day)), p = T(() => n.isDateDisabled(t.day) || n.disableDaysOutsideCurrentView.value && c.value), g = T(() => !n.disabled.value && Ut(t.day, n.placeholder.value)), v = T(() => n.isDateSelected(t.day));
    function m(b) {
      n.readonly.value || n.isDateDisabled(b) || n.isDateUnavailable?.(b) || n.onDateChange(b);
    }
    function y() {
      p.value || m(t.day);
    }
    function x(b) {
      if (p.value) return;
      b.preventDefault(), b.stopPropagation();
      const C = n.parentElement.value, w = 7, $ = n.dir.value === "rtl" ? -1 : 1;
      switch (b.code) {
        case a.ARROW_RIGHT:
          B(s.value, $);
          break;
        case a.ARROW_LEFT:
          B(s.value, -$);
          break;
        case a.ARROW_UP:
          B(s.value, -w);
          break;
        case a.ARROW_DOWN:
          B(s.value, w);
          break;
        case a.ENTER:
        case a.SPACE_CODE:
          m(t.day);
      }
      function B(I, E) {
        const P = us(C);
        if (!P.length) return;
        const F = P.indexOf(I) + E;
        if (F >= 0 && F < P.length) {
          P[F].hasAttribute("data-disabled") && B(P[F], E), P[F].focus();
          return;
        }
        if (F < 0) {
          if (n.isPrevButtonDisabled()) return;
          n.prevPage(), Be(() => {
            const H = us(C);
            if (!H.length) return;
            if (!n.pagedNavigation.value && n.numberOfMonths.value > 1) {
              const z = En(n.placeholder.value) - Math.abs(F);
              H[z].hasAttribute("data-disabled") && B(H[z], E), H[z].focus();
              return;
            }
            const j = H.length - Math.abs(F);
            H[j].hasAttribute("data-disabled") && B(H[j], E), H[j].focus();
          });
          return;
        }
        if (F >= P.length) {
          if (n.isNextButtonDisabled()) return;
          n.nextPage(), Be(() => {
            const H = us(C);
            if (!H.length) return;
            if (!n.pagedNavigation.value && n.numberOfMonths.value > 1) {
              const K = En(n.placeholder.value.add({ months: n.numberOfMonths.value - 1 })), z = F - P.length + (H.length - K);
              H[z].hasAttribute("data-disabled") && B(H[z], E), H[z].focus();
              return;
            }
            const j = F - P.length;
            H[j].hasAttribute("data-disabled") && B(H[j], E), H[j].focus();
          });
        }
      }
    }
    return (b, C) => (h(), k(u(U), O({
      ref_key: "primitiveElement",
      ref: r
    }, t, {
      role: "button",
      "aria-label": o.value,
      "data-reka-calendar-cell-trigger": "",
      "aria-disabled": p.value || l.value ? !0 : void 0,
      "data-selected": v.value ? !0 : void 0,
      "data-value": b.day.toString(),
      "data-disabled": p.value ? "" : void 0,
      "data-unavailable": l.value ? "" : void 0,
      "data-today": d.value ? "" : void 0,
      "data-outside-view": c.value ? "" : void 0,
      "data-outside-visible-view": f.value ? "" : void 0,
      "data-focused": g.value ? "" : void 0,
      tabindex: g.value ? 0 : c.value || p.value ? void 0 : -1,
      onClick: y,
      onKeydown: [nt(x, [
        "up",
        "down",
        "left",
        "right",
        "space",
        "enter"
      ]), C[0] || (C[0] = nt(ze(() => {
      }, ["prevent"]), ["enter"]))]
    }), {
      default: _(() => [S(b.$slots, "default", {
        dayValue: i.value,
        disabled: p.value,
        today: d.value,
        selected: v.value,
        outsideView: c.value,
        outsideVisibleView: f.value,
        unavailable: l.value
      }, () => [ee(X(i.value), 1)])]),
      _: 3
    }, 16, [
      "aria-label",
      "aria-disabled",
      "data-selected",
      "data-value",
      "data-disabled",
      "data-unavailable",
      "data-today",
      "data-outside-view",
      "data-outside-visible-view",
      "data-focused",
      "tabindex"
    ]));
  }
}), M_ = D_, R_ = /* @__PURE__ */ L({
  __name: "CalendarGrid",
  props: {
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "table"
    }
  },
  setup(e) {
    const t = e, a = _s(), n = T(() => a.disabled.value ? !0 : void 0), r = T(() => a.readonly.value ? !0 : void 0);
    return (s, i) => (h(), k(u(U), O(t, {
      tabindex: "-1",
      role: "grid",
      "aria-readonly": r.value,
      "aria-disabled": n.value,
      "data-readonly": r.value && "",
      "data-disabled": n.value && ""
    }), {
      default: _(() => [S(s.$slots, "default")]),
      _: 3
    }, 16, [
      "aria-readonly",
      "aria-disabled",
      "data-readonly",
      "data-disabled"
    ]));
  }
}), L_ = R_, O_ = /* @__PURE__ */ L({
  __name: "CalendarGridBody",
  props: {
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "tbody"
    }
  },
  setup(e) {
    const t = e;
    return (a, n) => (h(), k(u(U), pe(me(t)), {
      default: _(() => [S(a.$slots, "default")]),
      _: 3
    }, 16));
  }
}), F_ = O_, z_ = /* @__PURE__ */ L({
  __name: "CalendarGridHead",
  props: {
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "thead"
    }
  },
  setup(e) {
    const t = e;
    return (a, n) => (h(), k(u(U), O(t, { "aria-hidden": "true" }), {
      default: _(() => [S(a.$slots, "default")]),
      _: 3
    }, 16));
  }
}), q_ = z_, V_ = /* @__PURE__ */ L({
  __name: "CalendarGridRow",
  props: {
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "tr"
    }
  },
  setup(e) {
    const t = e;
    return (a, n) => (h(), k(u(U), pe(me(t)), {
      default: _(() => [S(a.$slots, "default")]),
      _: 3
    }, 16));
  }
}), N_ = V_, H_ = /* @__PURE__ */ L({
  __name: "CalendarHeadCell",
  props: {
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "th"
    }
  },
  setup(e) {
    const t = e;
    return (a, n) => (h(), k(u(U), pe(me(t)), {
      default: _(() => [S(a.$slots, "default")]),
      _: 3
    }, 16));
  }
}), j_ = H_, K_ = /* @__PURE__ */ L({
  __name: "CalendarHeader",
  props: {
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "div"
    }
  },
  setup(e) {
    const t = e;
    return (a, n) => (h(), k(u(U), pe(me(t)), {
      default: _(() => [S(a.$slots, "default")]),
      _: 3
    }, 16));
  }
}), G_ = K_, U_ = /* @__PURE__ */ L({
  __name: "CalendarHeading",
  props: {
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "div"
    }
  },
  setup(e) {
    const t = e, a = _s();
    return (n, r) => (h(), k(u(U), O(t, { "data-disabled": u(a).disabled.value ? "" : void 0 }), {
      default: _(() => [S(n.$slots, "default", { headingValue: u(a).headingValue.value }, () => [ee(X(u(a).headingValue.value), 1)])]),
      _: 3
    }, 16, ["data-disabled"]));
  }
}), W_ = U_, Y_ = /* @__PURE__ */ L({
  __name: "CalendarNext",
  props: {
    nextPage: {
      type: Function,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "button"
    }
  },
  setup(e) {
    const t = e, a = T(() => n.disabled.value || n.isNextButtonDisabled(t.nextPage)), n = _s();
    return (r, s) => (h(), k(u(U), {
      as: t.as,
      "as-child": t.asChild,
      "aria-label": "Next page",
      type: r.as === "button" ? "button" : void 0,
      "aria-disabled": a.value || void 0,
      "data-disabled": a.value || void 0,
      disabled: a.value,
      onClick: s[0] || (s[0] = (i) => u(n).nextPage(t.nextPage))
    }, {
      default: _(() => [S(r.$slots, "default", { disabled: a.value }, () => [s[1] || (s[1] = ee(" Next page "))])]),
      _: 3
    }, 8, [
      "as",
      "as-child",
      "type",
      "aria-disabled",
      "data-disabled",
      "disabled"
    ]));
  }
}), X_ = Y_, J_ = /* @__PURE__ */ L({
  __name: "CalendarPrev",
  props: {
    prevPage: {
      type: Function,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "button"
    }
  },
  setup(e) {
    const t = e, a = T(() => n.disabled.value || n.isPrevButtonDisabled(t.prevPage)), n = _s();
    return (r, s) => (h(), k(u(U), {
      "aria-label": "Previous page",
      as: t.as,
      "as-child": t.asChild,
      type: r.as === "button" ? "button" : void 0,
      "aria-disabled": a.value || void 0,
      "data-disabled": a.value || void 0,
      disabled: a.value,
      onClick: s[0] || (s[0] = (i) => u(n).prevPage(t.prevPage))
    }, {
      default: _(() => [S(r.$slots, "default", { disabled: a.value }, () => [s[1] || (s[1] = ee(" Prev page "))])]),
      _: 3
    }, 8, [
      "as",
      "as-child",
      "type",
      "aria-disabled",
      "data-disabled",
      "disabled"
    ]));
  }
}), Q_ = J_;
const fg = "data-reka-collection-item";
function yt(e = {}) {
  const { key: t = "", isProvider: a = !1 } = e, n = `${t}CollectionProvider`;
  let r;
  if (a) {
    const c = N(/* @__PURE__ */ new Map());
    r = {
      collectionRef: N(),
      itemMap: c
    }, ta(n, r);
  } else r = Zt(n);
  const s = (c = !1) => {
    const f = r.collectionRef.value;
    if (!f) return [];
    const p = Array.from(f.querySelectorAll(`[${fg}]`)), v = Array.from(r.itemMap.value.values()).sort((m, y) => p.indexOf(m.ref) - p.indexOf(y.ref));
    return c ? v : v.filter((m) => m.ref.dataset.disabled !== "");
  }, i = L({
    name: "CollectionSlot",
    setup(c, { slots: f }) {
      const { primitiveElement: p, currentElement: g } = ea();
      return ye(g, () => {
        r.collectionRef.value = g.value;
      }), () => ln(Tn, { ref: p }, f);
    }
  }), o = L({
    name: "CollectionItem",
    inheritAttrs: !1,
    props: { value: { validator: () => !0 } },
    setup(c, { slots: f, attrs: p }) {
      const { primitiveElement: g, currentElement: v } = ea();
      return ot((m) => {
        if (v.value) {
          const y = im(v.value);
          r.itemMap.value.set(y, {
            ref: v.value,
            value: c.value
          }), m(() => r.itemMap.value.delete(y));
        }
      }), () => ln(Tn, {
        ...p,
        [fg]: "",
        ref: g
      }, f);
    }
  }), l = T(() => Array.from(r.itemMap.value.values())), d = T(() => r.itemMap.value.size);
  return {
    getItems: s,
    reactiveItems: l,
    itemMapSize: d,
    CollectionSlot: i,
    CollectionItem: o
  };
}
const Z_ = "rovingFocusGroup.onEntryFocus", ek = {
  bubbles: !1,
  cancelable: !0
}, sy = {
  ArrowLeft: "prev",
  ArrowUp: "prev",
  ArrowRight: "next",
  ArrowDown: "next",
  PageUp: "first",
  Home: "first",
  PageDown: "last",
  End: "last"
};
function tk(e, t) {
  return t !== "rtl" ? e : e === "ArrowLeft" ? "ArrowRight" : e === "ArrowRight" ? "ArrowLeft" : e;
}
function iy(e, t, a) {
  const n = tk(e.key, a);
  if (!(t === "vertical" && ["ArrowLeft", "ArrowRight"].includes(n)) && !(t === "horizontal" && ["ArrowUp", "ArrowDown"].includes(n)))
    return sy[n];
}
function oy(e, t = !1) {
  const a = dt();
  for (const n of e)
    if (n === a || (n.focus({ preventScroll: t }), dt() !== a)) return;
}
function ak(e, t) {
  return e.map((a, n) => e[(t + n) % e.length]);
}
const [nk, rk] = Me("RovingFocusGroup");
var sk = /* @__PURE__ */ L({
  __name: "RovingFocusGroup",
  props: {
    orientation: {
      type: String,
      required: !1,
      default: void 0
    },
    dir: {
      type: String,
      required: !1
    },
    loop: {
      type: Boolean,
      required: !1,
      default: !1
    },
    currentTabStopId: {
      type: [String, null],
      required: !1
    },
    defaultCurrentTabStopId: {
      type: String,
      required: !1
    },
    preventScrollOnEntryFocus: {
      type: Boolean,
      required: !1,
      default: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  emits: ["entryFocus", "update:currentTabStopId"],
  setup(e, { expose: t, emit: a }) {
    const n = e, r = a, { loop: s, orientation: i, dir: o } = We(n), l = Yt(o), d = Ze(n, "currentTabStopId", r, {
      defaultValue: n.defaultCurrentTabStopId,
      passive: n.currentTabStopId === void 0
    }), c = N(!1), f = N(!1), p = N(0), { getItems: g, CollectionSlot: v } = yt({ isProvider: !0 });
    function m(x) {
      const b = !f.value;
      if (x.currentTarget && x.target === x.currentTarget && b && !c.value) {
        const C = new CustomEvent(Z_, ek);
        if (x.currentTarget.dispatchEvent(C), r("entryFocus", C), !C.defaultPrevented) {
          const w = g().map((P) => P.ref).filter((P) => P.dataset.disabled !== ""), $ = w.find((P) => P.getAttribute("data-active") === ""), B = w.find((P) => P.getAttribute("data-highlighted") === ""), I = w.find((P) => P.id === d.value), E = [
            $,
            B,
            I,
            ...w
          ].filter(Boolean);
          oy(E, n.preventScrollOnEntryFocus);
        }
      }
      f.value = !1;
    }
    function y() {
      setTimeout(() => {
        f.value = !1;
      }, 1);
    }
    return t({ getItems: g }), rk({
      loop: s,
      dir: l,
      orientation: i,
      currentTabStopId: d,
      onItemFocus: (x) => {
        d.value = x;
      },
      onItemShiftTab: () => {
        c.value = !0;
      },
      onFocusableItemAdd: () => {
        p.value++;
      },
      onFocusableItemRemove: () => {
        p.value--;
      }
    }), (x, b) => (h(), k(u(v), null, {
      default: _(() => [V(u(U), {
        tabindex: c.value || p.value === 0 ? -1 : 0,
        "data-orientation": u(i),
        as: x.as,
        "as-child": x.asChild,
        dir: u(l),
        style: { outline: "none" },
        onMousedown: b[0] || (b[0] = (C) => f.value = !0),
        onMouseup: y,
        onFocus: m,
        onBlur: b[1] || (b[1] = (C) => c.value = !1)
      }, {
        default: _(() => [S(x.$slots, "default")]),
        _: 3
      }, 8, [
        "tabindex",
        "data-orientation",
        "as",
        "as-child",
        "dir"
      ])]),
      _: 3
    }));
  }
}), Hi = sk, ik = /* @__PURE__ */ L({
  __name: "RovingFocusItem",
  props: {
    tabStopId: {
      type: String,
      required: !1
    },
    focusable: {
      type: Boolean,
      required: !1,
      default: !0
    },
    active: {
      type: Boolean,
      required: !1
    },
    allowShiftKey: {
      type: Boolean,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "span"
    }
  },
  setup(e) {
    const t = e, a = nk(), n = pt(), r = T(() => t.tabStopId || n), s = T(() => a.currentTabStopId.value === r.value), { getItems: i, CollectionItem: o } = yt();
    Pe(() => {
      t.focusable && a.onFocusableItemAdd();
    }), Bt(() => {
      t.focusable && a.onFocusableItemRemove();
    });
    function l(d) {
      if (d.key === "Tab" && d.shiftKey) {
        a.onItemShiftTab();
        return;
      }
      if (d.target !== d.currentTarget) return;
      const c = iy(d, a.orientation.value, a.dir.value);
      if (c !== void 0) {
        if (d.metaKey || d.ctrlKey || d.altKey || !t.allowShiftKey && d.shiftKey) return;
        d.preventDefault();
        let f = [...i().map((p) => p.ref).filter((p) => p.dataset.disabled !== "")];
        if (c === "last") f.reverse();
        else if (c === "prev" || c === "next") {
          c === "prev" && f.reverse();
          const p = f.indexOf(d.currentTarget);
          f = a.loop.value ? ak(f, p + 1) : f.slice(p + 1);
        }
        Be(() => oy(f));
      }
    }
    return (d, c) => (h(), k(u(o), null, {
      default: _(() => [V(u(U), {
        tabindex: s.value ? 0 : -1,
        "data-orientation": u(a).orientation.value,
        "data-active": d.active ? "" : void 0,
        "data-disabled": d.focusable ? void 0 : "",
        as: d.as,
        "as-child": d.asChild,
        onMousedown: c[0] || (c[0] = (f) => {
          d.focusable ? u(a).onItemFocus(r.value) : f.preventDefault();
        }),
        onFocus: c[1] || (c[1] = (f) => u(a).onItemFocus(r.value)),
        onKeydown: l
      }, {
        default: _(() => [S(d.$slots, "default")]),
        _: 3
      }, 8, [
        "tabindex",
        "data-orientation",
        "data-active",
        "data-disabled",
        "as",
        "as-child"
      ])]),
      _: 3
    }));
  }
}), Ll = ik, ok = /* @__PURE__ */ L({
  __name: "VisuallyHidden",
  props: {
    feature: {
      type: String,
      required: !1,
      default: "focusable"
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "span"
    }
  },
  setup(e) {
    return (t, a) => (h(), k(u(U), {
      as: t.as,
      "as-child": t.asChild,
      "aria-hidden": t.feature === "focusable" ? "true" : void 0,
      "data-hidden": t.feature === "fully-hidden" ? "" : void 0,
      tabindex: t.feature === "fully-hidden" ? "-1" : void 0,
      style: {
        position: "absolute",
        border: 0,
        width: "1px",
        height: "1px",
        padding: 0,
        margin: "-1px",
        overflow: "hidden",
        clip: "rect(0, 0, 0, 0)",
        clipPath: "inset(50%)",
        whiteSpace: "nowrap",
        wordWrap: "normal"
      }
    }, {
      default: _(() => [S(t.$slots, "default")]),
      _: 3
    }, 8, [
      "as",
      "as-child",
      "aria-hidden",
      "data-hidden",
      "tabindex"
    ]));
  }
}), Fn = ok, lk = /* @__PURE__ */ L({
  inheritAttrs: !1,
  __name: "VisuallyHiddenInputBubble",
  props: {
    name: {
      type: String,
      required: !0
    },
    value: {
      type: null,
      required: !0
    },
    checked: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    required: {
      type: Boolean,
      required: !1
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    feature: {
      type: String,
      required: !1,
      default: "fully-hidden"
    }
  },
  setup(e) {
    const t = e, { primitiveElement: a, currentElement: n } = ea(), r = T(() => t.checked ?? t.value);
    return ye(r, (s, i) => {
      if (!n.value) return;
      const o = n.value, l = window.HTMLInputElement.prototype, c = Object.getOwnPropertyDescriptor(l, "value").set;
      if (c && s !== i) {
        const f = new Event("input", { bubbles: !0 }), p = new Event("change", { bubbles: !0 });
        c.call(o, s), o.dispatchEvent(f), o.dispatchEvent(p);
      }
    }), (s, i) => (h(), k(Fn, O({
      ref_key: "primitiveElement",
      ref: a
    }, {
      ...t,
      ...s.$attrs
    }, { as: "input" }), null, 16));
  }
}), pg = lk, uk = /* @__PURE__ */ L({
  inheritAttrs: !1,
  __name: "VisuallyHiddenInput",
  props: {
    name: {
      type: String,
      required: !0
    },
    value: {
      type: null,
      required: !0
    },
    checked: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    required: {
      type: Boolean,
      required: !1
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    feature: {
      type: String,
      required: !1,
      default: "fully-hidden"
    }
  },
  setup(e) {
    const t = e, a = T(() => typeof t.value == "object" && Array.isArray(t.value) && t.value.length === 0 && t.required), n = T(() => typeof t.value == "string" || typeof t.value == "number" || typeof t.value == "boolean" || t.value === null || t.value === void 0 ? [{
      name: t.name,
      value: t.value
    }] : typeof t.value == "object" && Array.isArray(t.value) ? t.value.flatMap((r, s) => typeof r == "object" ? Object.entries(r).map(([i, o]) => ({
      name: `${t.name}[${s}][${i}]`,
      value: o
    })) : {
      name: `${t.name}[${s}]`,
      value: r
    }) : t.value !== null && typeof t.value == "object" && !Array.isArray(t.value) ? Object.entries(t.value).map(([r, s]) => ({
      name: `${t.name}[${r}]`,
      value: s
    })) : []);
    return (r, s) => (h(), M(te, null, [D(" We render single input if it's required "), a.value ? (h(), k(pg, O({ key: r.name }, {
      ...t,
      ...r.$attrs
    }, {
      name: r.name,
      value: r.value
    }), null, 16, ["name", "value"])) : (h(!0), M(te, { key: 1 }, le(n.value, (i) => (h(), k(pg, O({ key: i.name }, { ref_for: !0 }, {
      ...t,
      ...r.$attrs
    }, {
      name: i.name,
      value: i.value
    }), null, 16, ["name", "value"]))), 128))], 2112));
  }
}), yn = uk;
const [dk, ck] = Me("CheckboxGroupRoot");
var fk = /* @__PURE__ */ L({
  __name: "CheckboxGroupRoot",
  props: {
    defaultValue: {
      type: Array,
      required: !1
    },
    modelValue: {
      type: Array,
      required: !1
    },
    rovingFocus: {
      type: Boolean,
      required: !1,
      default: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    dir: {
      type: String,
      required: !1
    },
    orientation: {
      type: String,
      required: !1
    },
    loop: {
      type: Boolean,
      required: !1
    },
    name: {
      type: String,
      required: !1
    },
    required: {
      type: Boolean,
      required: !1
    }
  },
  emits: ["update:modelValue"],
  setup(e, { emit: t }) {
    const a = e, n = t, { disabled: r, rovingFocus: s, dir: i } = We(a), o = Yt(i), { primitiveElement: l, currentElement: d } = ea(), c = hn(d), f = Ze(a, "modelValue", n, {
      defaultValue: a.defaultValue ?? [],
      passive: a.modelValue === void 0
    }), p = T(() => s.value ? {
      loop: a.loop,
      dir: o.value,
      orientation: a.orientation
    } : {});
    return ck({
      modelValue: f,
      rovingFocus: s,
      disabled: r
    }), (g, v) => (h(), k(ut(u(s) ? u(Hi) : u(U)), O({
      ref_key: "primitiveElement",
      ref: l,
      as: g.as,
      "as-child": g.asChild
    }, p.value), {
      default: _(() => [S(g.$slots, "default"), u(c) && g.name ? (h(), k(u(yn), {
        key: 0,
        name: g.name,
        value: u(f),
        required: g.required
      }, null, 8, [
        "name",
        "value",
        "required"
      ])) : D("v-if", !0)]),
      _: 3
    }, 16, ["as", "as-child"]));
  }
}), pk = fk;
function tl(e) {
  return e === "indeterminate";
}
function ly(e) {
  return tl(e) ? "indeterminate" : e ? "checked" : "unchecked";
}
const [gk, vk] = Me("CheckboxRoot");
var hk = /* @__PURE__ */ L({
  inheritAttrs: !1,
  __name: "CheckboxRoot",
  props: {
    defaultValue: {
      type: [Boolean, String],
      required: !1
    },
    modelValue: {
      type: [
        Boolean,
        String,
        null
      ],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    value: {
      type: null,
      required: !1,
      default: "on"
    },
    id: {
      type: String,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "button"
    },
    name: {
      type: String,
      required: !1
    },
    required: {
      type: Boolean,
      required: !1
    }
  },
  emits: ["update:modelValue"],
  setup(e, { emit: t }) {
    const a = e, n = t, { forwardRef: r, currentElement: s } = Z(), i = dk(null), o = Ze(a, "modelValue", n, {
      defaultValue: a.defaultValue,
      passive: a.modelValue === void 0
    }), l = T(() => i?.disabled.value || a.disabled), d = T(() => un(i?.modelValue.value) ? o.value === "indeterminate" ? "indeterminate" : o.value : rd(i.modelValue.value, a.value));
    function c() {
      if (un(i?.modelValue.value))
        o.value = tl(o.value) ? !0 : !o.value;
      else {
        const g = [...i.modelValue.value || []];
        if (rd(g, a.value)) {
          const v = g.findIndex((m) => ca(m, a.value));
          g.splice(v, 1);
        } else g.push(a.value);
        i.modelValue.value = g;
      }
    }
    const f = hn(s), p = T(() => a.id && s.value ? document.querySelector(`[for="${a.id}"]`)?.innerText : void 0);
    return vk({
      disabled: l,
      state: d
    }), (g, v) => (h(), k(ut(u(i)?.rovingFocus.value ? u(Ll) : u(U)), O(g.$attrs, {
      id: g.id,
      ref: u(r),
      role: "checkbox",
      "as-child": g.asChild,
      as: g.as,
      type: g.as === "button" ? "button" : void 0,
      "aria-checked": u(tl)(d.value) ? "mixed" : d.value,
      "aria-required": g.required,
      "aria-label": g.$attrs["aria-label"] || p.value,
      "data-state": u(ly)(d.value),
      "data-disabled": l.value ? "" : void 0,
      disabled: l.value,
      focusable: u(i)?.rovingFocus.value ? !l.value : void 0,
      onKeydown: nt(ze(() => {
      }, ["prevent"]), ["enter"]),
      onClick: c
    }), {
      default: _(() => [S(g.$slots, "default", {
        modelValue: u(o),
        state: d.value
      }), u(f) && g.name && !u(i) ? (h(), k(u(yn), {
        key: 0,
        type: "checkbox",
        checked: !!d.value,
        name: g.name,
        value: g.value,
        disabled: l.value,
        required: g.required
      }, null, 8, [
        "checked",
        "name",
        "value",
        "disabled",
        "required"
      ])) : D("v-if", !0)]),
      _: 3
    }, 16, [
      "id",
      "as-child",
      "as",
      "type",
      "aria-checked",
      "aria-required",
      "aria-label",
      "data-state",
      "data-disabled",
      "disabled",
      "focusable",
      "onKeydown"
    ]));
  }
}), mk = hk, yk = /* @__PURE__ */ L({
  __name: "CheckboxIndicator",
  props: {
    forceMount: {
      type: Boolean,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "span"
    }
  },
  setup(e) {
    const { forwardRef: t } = Z(), a = gk();
    return (n, r) => (h(), k(u(Xt), { present: n.forceMount || u(tl)(u(a).state.value) || u(a).state.value === !0 }, {
      default: _(() => [V(u(U), O({
        ref: u(t),
        "data-state": u(ly)(u(a).state.value),
        "data-disabled": u(a).disabled.value ? "" : void 0,
        style: { pointerEvents: "none" },
        "as-child": n.asChild,
        as: n.as
      }, n.$attrs), {
        default: _(() => [S(n.$slots, "default")]),
        _: 3
      }, 16, [
        "data-state",
        "data-disabled",
        "as-child",
        "as"
      ])]),
      _: 3
    }, 8, ["present"]));
  }
}), bk = yk;
const [uy, wk] = Me("PopperRoot");
var Ck = /* @__PURE__ */ L({
  inheritAttrs: !1,
  __name: "PopperRoot",
  setup(e) {
    const t = N();
    return wk({
      anchor: t,
      onAnchorChange: (a) => t.value = a
    }), (a, n) => S(a.$slots, "default");
  }
}), Rr = Ck, xk = /* @__PURE__ */ L({
  __name: "PopperAnchor",
  props: {
    reference: {
      type: null,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  setup(e) {
    const t = e, { forwardRef: a, currentElement: n } = Z(), r = uy();
    return om(() => {
      r.onAnchorChange(t.reference ?? n.value);
    }), (s, i) => (h(), k(u(U), {
      ref: u(a),
      as: s.as,
      "as-child": s.asChild
    }, {
      default: _(() => [S(s.$slots, "default")]),
      _: 3
    }, 8, ["as", "as-child"]));
  }
}), Lr = xk;
const Sk = {
  key: 0,
  d: "M0 0L6 6L12 0"
}, _k = {
  key: 1,
  d: "M0 0L4.58579 4.58579C5.36683 5.36683 6.63316 5.36684 7.41421 4.58579L12 0"
};
var kk = /* @__PURE__ */ L({
  __name: "Arrow",
  props: {
    width: {
      type: Number,
      required: !1,
      default: 10
    },
    height: {
      type: Number,
      required: !1,
      default: 5
    },
    rounded: {
      type: Boolean,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "svg"
    }
  },
  setup(e) {
    const t = e;
    return Z(), (a, n) => (h(), k(u(U), O(t, {
      width: a.width,
      height: a.height,
      viewBox: a.asChild ? void 0 : "0 0 12 6",
      preserveAspectRatio: a.asChild ? void 0 : "none"
    }), {
      default: _(() => [S(a.$slots, "default", {}, () => [a.rounded ? (h(), M("path", _k)) : (h(), M("path", Sk))])]),
      _: 3
    }, 16, [
      "width",
      "height",
      "viewBox",
      "preserveAspectRatio"
    ]));
  }
}), Ak = kk;
function $k(e) {
  return e !== null;
}
function Ik(e) {
  return {
    name: "transformOrigin",
    options: e,
    fn(t) {
      const { placement: a, rects: n, middlewareData: r } = t, i = r.arrow?.centerOffset !== 0, o = i ? 0 : e.arrowWidth, l = i ? 0 : e.arrowHeight, [d, c] = bd(a), f = {
        start: "0%",
        center: "50%",
        end: "100%"
      }[c], p = (r.arrow?.x ?? 0) + o / 2, g = (r.arrow?.y ?? 0) + l / 2;
      let v = "", m = "";
      return d === "bottom" ? (v = i ? f : `${p}px`, m = `${-l}px`) : d === "top" ? (v = i ? f : `${p}px`, m = `${n.floating.height + l}px`) : d === "right" ? (v = `${-l}px`, m = i ? f : `${g}px`) : d === "left" && (v = `${n.floating.width + l}px`, m = i ? f : `${g}px`), { data: {
        x: v,
        y: m
      } };
    }
  };
}
function bd(e) {
  const [t, a = "center"] = e.split("-");
  return [t, a];
}
const Ek = ["top", "right", "bottom", "left"], Qn = Math.min, Sa = Math.max, al = Math.round, uo = Math.floor, dn = (e) => ({
  x: e,
  y: e
}), Tk = {
  left: "right",
  right: "left",
  bottom: "top",
  top: "bottom"
}, Bk = {
  start: "end",
  end: "start"
};
function wd(e, t, a) {
  return Sa(e, Qn(t, a));
}
function Bn(e, t) {
  return typeof e == "function" ? e(t) : e;
}
function Pn(e) {
  return e.split("-")[0];
}
function ks(e) {
  return e.split("-")[1];
}
function vf(e) {
  return e === "x" ? "y" : "x";
}
function hf(e) {
  return e === "y" ? "height" : "width";
}
const Pk = /* @__PURE__ */ new Set(["top", "bottom"]);
function sn(e) {
  return Pk.has(Pn(e)) ? "y" : "x";
}
function mf(e) {
  return vf(sn(e));
}
function Dk(e, t, a) {
  a === void 0 && (a = !1);
  const n = ks(e), r = mf(e), s = hf(r);
  let i = r === "x" ? n === (a ? "end" : "start") ? "right" : "left" : n === "start" ? "bottom" : "top";
  return t.reference[s] > t.floating[s] && (i = nl(i)), [i, nl(i)];
}
function Mk(e) {
  const t = nl(e);
  return [Cd(e), t, Cd(t)];
}
function Cd(e) {
  return e.replace(/start|end/g, (t) => Bk[t]);
}
const gg = ["left", "right"], vg = ["right", "left"], Rk = ["top", "bottom"], Lk = ["bottom", "top"];
function Ok(e, t, a) {
  switch (e) {
    case "top":
    case "bottom":
      return a ? t ? vg : gg : t ? gg : vg;
    case "left":
    case "right":
      return t ? Rk : Lk;
    default:
      return [];
  }
}
function Fk(e, t, a, n) {
  const r = ks(e);
  let s = Ok(Pn(e), a === "start", n);
  return r && (s = s.map((i) => i + "-" + r), t && (s = s.concat(s.map(Cd)))), s;
}
function nl(e) {
  return e.replace(/left|right|bottom|top/g, (t) => Tk[t]);
}
function zk(e) {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0,
    ...e
  };
}
function dy(e) {
  return typeof e != "number" ? zk(e) : {
    top: e,
    right: e,
    bottom: e,
    left: e
  };
}
function rl(e) {
  const {
    x: t,
    y: a,
    width: n,
    height: r
  } = e;
  return {
    width: n,
    height: r,
    top: a,
    left: t,
    right: t + n,
    bottom: a + r,
    x: t,
    y: a
  };
}
function hg(e, t, a) {
  let {
    reference: n,
    floating: r
  } = e;
  const s = sn(t), i = mf(t), o = hf(i), l = Pn(t), d = s === "y", c = n.x + n.width / 2 - r.width / 2, f = n.y + n.height / 2 - r.height / 2, p = n[o] / 2 - r[o] / 2;
  let g;
  switch (l) {
    case "top":
      g = {
        x: c,
        y: n.y - r.height
      };
      break;
    case "bottom":
      g = {
        x: c,
        y: n.y + n.height
      };
      break;
    case "right":
      g = {
        x: n.x + n.width,
        y: f
      };
      break;
    case "left":
      g = {
        x: n.x - r.width,
        y: f
      };
      break;
    default:
      g = {
        x: n.x,
        y: n.y
      };
  }
  switch (ks(t)) {
    case "start":
      g[i] -= p * (a && d ? -1 : 1);
      break;
    case "end":
      g[i] += p * (a && d ? -1 : 1);
      break;
  }
  return g;
}
const qk = async (e, t, a) => {
  const {
    placement: n = "bottom",
    strategy: r = "absolute",
    middleware: s = [],
    platform: i
  } = a, o = s.filter(Boolean), l = await (i.isRTL == null ? void 0 : i.isRTL(t));
  let d = await i.getElementRects({
    reference: e,
    floating: t,
    strategy: r
  }), {
    x: c,
    y: f
  } = hg(d, n, l), p = n, g = {}, v = 0;
  for (let m = 0; m < o.length; m++) {
    const {
      name: y,
      fn: x
    } = o[m], {
      x: b,
      y: C,
      data: w,
      reset: $
    } = await x({
      x: c,
      y: f,
      initialPlacement: n,
      placement: p,
      strategy: r,
      middlewareData: g,
      rects: d,
      platform: i,
      elements: {
        reference: e,
        floating: t
      }
    });
    c = b ?? c, f = C ?? f, g = {
      ...g,
      [y]: {
        ...g[y],
        ...w
      }
    }, $ && v <= 50 && (v++, typeof $ == "object" && ($.placement && (p = $.placement), $.rects && (d = $.rects === !0 ? await i.getElementRects({
      reference: e,
      floating: t,
      strategy: r
    }) : $.rects), {
      x: c,
      y: f
    } = hg(d, p, l)), m = -1);
  }
  return {
    x: c,
    y: f,
    placement: p,
    strategy: r,
    middlewareData: g
  };
};
async function bi(e, t) {
  var a;
  t === void 0 && (t = {});
  const {
    x: n,
    y: r,
    platform: s,
    rects: i,
    elements: o,
    strategy: l
  } = e, {
    boundary: d = "clippingAncestors",
    rootBoundary: c = "viewport",
    elementContext: f = "floating",
    altBoundary: p = !1,
    padding: g = 0
  } = Bn(t, e), v = dy(g), y = o[p ? f === "floating" ? "reference" : "floating" : f], x = rl(await s.getClippingRect({
    element: (a = await (s.isElement == null ? void 0 : s.isElement(y))) == null || a ? y : y.contextElement || await (s.getDocumentElement == null ? void 0 : s.getDocumentElement(o.floating)),
    boundary: d,
    rootBoundary: c,
    strategy: l
  })), b = f === "floating" ? {
    x: n,
    y: r,
    width: i.floating.width,
    height: i.floating.height
  } : i.reference, C = await (s.getOffsetParent == null ? void 0 : s.getOffsetParent(o.floating)), w = await (s.isElement == null ? void 0 : s.isElement(C)) ? await (s.getScale == null ? void 0 : s.getScale(C)) || {
    x: 1,
    y: 1
  } : {
    x: 1,
    y: 1
  }, $ = rl(s.convertOffsetParentRelativeRectToViewportRelativeRect ? await s.convertOffsetParentRelativeRectToViewportRelativeRect({
    elements: o,
    rect: b,
    offsetParent: C,
    strategy: l
  }) : b);
  return {
    top: (x.top - $.top + v.top) / w.y,
    bottom: ($.bottom - x.bottom + v.bottom) / w.y,
    left: (x.left - $.left + v.left) / w.x,
    right: ($.right - x.right + v.right) / w.x
  };
}
const Vk = (e) => ({
  name: "arrow",
  options: e,
  async fn(t) {
    const {
      x: a,
      y: n,
      placement: r,
      rects: s,
      platform: i,
      elements: o,
      middlewareData: l
    } = t, {
      element: d,
      padding: c = 0
    } = Bn(e, t) || {};
    if (d == null)
      return {};
    const f = dy(c), p = {
      x: a,
      y: n
    }, g = mf(r), v = hf(g), m = await i.getDimensions(d), y = g === "y", x = y ? "top" : "left", b = y ? "bottom" : "right", C = y ? "clientHeight" : "clientWidth", w = s.reference[v] + s.reference[g] - p[g] - s.floating[v], $ = p[g] - s.reference[g], B = await (i.getOffsetParent == null ? void 0 : i.getOffsetParent(d));
    let I = B ? B[C] : 0;
    (!I || !await (i.isElement == null ? void 0 : i.isElement(B))) && (I = o.floating[C] || s.floating[v]);
    const E = w / 2 - $ / 2, P = I / 2 - m[v] / 2 - 1, R = Qn(f[x], P), F = Qn(f[b], P), H = R, j = I - m[v] - F, K = I / 2 - m[v] / 2 + E, z = wd(H, K, j), G = !l.arrow && ks(r) != null && K !== z && s.reference[v] / 2 - (K < H ? R : F) - m[v] / 2 < 0, Y = G ? K < H ? K - H : K - j : 0;
    return {
      [g]: p[g] + Y,
      data: {
        [g]: z,
        centerOffset: K - z - Y,
        ...G && {
          alignmentOffset: Y
        }
      },
      reset: G
    };
  }
}), Nk = function(e) {
  return e === void 0 && (e = {}), {
    name: "flip",
    options: e,
    async fn(t) {
      var a, n;
      const {
        placement: r,
        middlewareData: s,
        rects: i,
        initialPlacement: o,
        platform: l,
        elements: d
      } = t, {
        mainAxis: c = !0,
        crossAxis: f = !0,
        fallbackPlacements: p,
        fallbackStrategy: g = "bestFit",
        fallbackAxisSideDirection: v = "none",
        flipAlignment: m = !0,
        ...y
      } = Bn(e, t);
      if ((a = s.arrow) != null && a.alignmentOffset)
        return {};
      const x = Pn(r), b = sn(o), C = Pn(o) === o, w = await (l.isRTL == null ? void 0 : l.isRTL(d.floating)), $ = p || (C || !m ? [nl(o)] : Mk(o)), B = v !== "none";
      !p && B && $.push(...Fk(o, m, v, w));
      const I = [o, ...$], E = await bi(t, y), P = [];
      let R = ((n = s.flip) == null ? void 0 : n.overflows) || [];
      if (c && P.push(E[x]), f) {
        const K = Dk(r, i, w);
        P.push(E[K[0]], E[K[1]]);
      }
      if (R = [...R, {
        placement: r,
        overflows: P
      }], !P.every((K) => K <= 0)) {
        var F, H;
        const K = (((F = s.flip) == null ? void 0 : F.index) || 0) + 1, z = I[K];
        if (z && (!(f === "alignment" ? b !== sn(z) : !1) || // We leave the current main axis only if every placement on that axis
        // overflows the main axis.
        R.every((q) => q.overflows[0] > 0 && sn(q.placement) === b)))
          return {
            data: {
              index: K,
              overflows: R
            },
            reset: {
              placement: z
            }
          };
        let G = (H = R.filter((Y) => Y.overflows[0] <= 0).sort((Y, q) => Y.overflows[1] - q.overflows[1])[0]) == null ? void 0 : H.placement;
        if (!G)
          switch (g) {
            case "bestFit": {
              var j;
              const Y = (j = R.filter((q) => {
                if (B) {
                  const Q = sn(q.placement);
                  return Q === b || // Create a bias to the `y` side axis due to horizontal
                  // reading directions favoring greater width.
                  Q === "y";
                }
                return !0;
              }).map((q) => [q.placement, q.overflows.filter((Q) => Q > 0).reduce((Q, se) => Q + se, 0)]).sort((q, Q) => q[1] - Q[1])[0]) == null ? void 0 : j[0];
              Y && (G = Y);
              break;
            }
            case "initialPlacement":
              G = o;
              break;
          }
        if (r !== G)
          return {
            reset: {
              placement: G
            }
          };
      }
      return {};
    }
  };
};
function mg(e, t) {
  return {
    top: e.top - t.height,
    right: e.right - t.width,
    bottom: e.bottom - t.height,
    left: e.left - t.width
  };
}
function yg(e) {
  return Ek.some((t) => e[t] >= 0);
}
const Hk = function(e) {
  return e === void 0 && (e = {}), {
    name: "hide",
    options: e,
    async fn(t) {
      const {
        rects: a
      } = t, {
        strategy: n = "referenceHidden",
        ...r
      } = Bn(e, t);
      switch (n) {
        case "referenceHidden": {
          const s = await bi(t, {
            ...r,
            elementContext: "reference"
          }), i = mg(s, a.reference);
          return {
            data: {
              referenceHiddenOffsets: i,
              referenceHidden: yg(i)
            }
          };
        }
        case "escaped": {
          const s = await bi(t, {
            ...r,
            altBoundary: !0
          }), i = mg(s, a.floating);
          return {
            data: {
              escapedOffsets: i,
              escaped: yg(i)
            }
          };
        }
        default:
          return {};
      }
    }
  };
}, cy = /* @__PURE__ */ new Set(["left", "top"]);
async function jk(e, t) {
  const {
    placement: a,
    platform: n,
    elements: r
  } = e, s = await (n.isRTL == null ? void 0 : n.isRTL(r.floating)), i = Pn(a), o = ks(a), l = sn(a) === "y", d = cy.has(i) ? -1 : 1, c = s && l ? -1 : 1, f = Bn(t, e);
  let {
    mainAxis: p,
    crossAxis: g,
    alignmentAxis: v
  } = typeof f == "number" ? {
    mainAxis: f,
    crossAxis: 0,
    alignmentAxis: null
  } : {
    mainAxis: f.mainAxis || 0,
    crossAxis: f.crossAxis || 0,
    alignmentAxis: f.alignmentAxis
  };
  return o && typeof v == "number" && (g = o === "end" ? v * -1 : v), l ? {
    x: g * c,
    y: p * d
  } : {
    x: p * d,
    y: g * c
  };
}
const Kk = function(e) {
  return e === void 0 && (e = 0), {
    name: "offset",
    options: e,
    async fn(t) {
      var a, n;
      const {
        x: r,
        y: s,
        placement: i,
        middlewareData: o
      } = t, l = await jk(t, e);
      return i === ((a = o.offset) == null ? void 0 : a.placement) && (n = o.arrow) != null && n.alignmentOffset ? {} : {
        x: r + l.x,
        y: s + l.y,
        data: {
          ...l,
          placement: i
        }
      };
    }
  };
}, Gk = function(e) {
  return e === void 0 && (e = {}), {
    name: "shift",
    options: e,
    async fn(t) {
      const {
        x: a,
        y: n,
        placement: r
      } = t, {
        mainAxis: s = !0,
        crossAxis: i = !1,
        limiter: o = {
          fn: (y) => {
            let {
              x,
              y: b
            } = y;
            return {
              x,
              y: b
            };
          }
        },
        ...l
      } = Bn(e, t), d = {
        x: a,
        y: n
      }, c = await bi(t, l), f = sn(Pn(r)), p = vf(f);
      let g = d[p], v = d[f];
      if (s) {
        const y = p === "y" ? "top" : "left", x = p === "y" ? "bottom" : "right", b = g + c[y], C = g - c[x];
        g = wd(b, g, C);
      }
      if (i) {
        const y = f === "y" ? "top" : "left", x = f === "y" ? "bottom" : "right", b = v + c[y], C = v - c[x];
        v = wd(b, v, C);
      }
      const m = o.fn({
        ...t,
        [p]: g,
        [f]: v
      });
      return {
        ...m,
        data: {
          x: m.x - a,
          y: m.y - n,
          enabled: {
            [p]: s,
            [f]: i
          }
        }
      };
    }
  };
}, Uk = function(e) {
  return e === void 0 && (e = {}), {
    options: e,
    fn(t) {
      const {
        x: a,
        y: n,
        placement: r,
        rects: s,
        middlewareData: i
      } = t, {
        offset: o = 0,
        mainAxis: l = !0,
        crossAxis: d = !0
      } = Bn(e, t), c = {
        x: a,
        y: n
      }, f = sn(r), p = vf(f);
      let g = c[p], v = c[f];
      const m = Bn(o, t), y = typeof m == "number" ? {
        mainAxis: m,
        crossAxis: 0
      } : {
        mainAxis: 0,
        crossAxis: 0,
        ...m
      };
      if (l) {
        const C = p === "y" ? "height" : "width", w = s.reference[p] - s.floating[C] + y.mainAxis, $ = s.reference[p] + s.reference[C] - y.mainAxis;
        g < w ? g = w : g > $ && (g = $);
      }
      if (d) {
        var x, b;
        const C = p === "y" ? "width" : "height", w = cy.has(Pn(r)), $ = s.reference[f] - s.floating[C] + (w && ((x = i.offset) == null ? void 0 : x[f]) || 0) + (w ? 0 : y.crossAxis), B = s.reference[f] + s.reference[C] + (w ? 0 : ((b = i.offset) == null ? void 0 : b[f]) || 0) - (w ? y.crossAxis : 0);
        v < $ ? v = $ : v > B && (v = B);
      }
      return {
        [p]: g,
        [f]: v
      };
    }
  };
}, Wk = function(e) {
  return e === void 0 && (e = {}), {
    name: "size",
    options: e,
    async fn(t) {
      var a, n;
      const {
        placement: r,
        rects: s,
        platform: i,
        elements: o
      } = t, {
        apply: l = () => {
        },
        ...d
      } = Bn(e, t), c = await bi(t, d), f = Pn(r), p = ks(r), g = sn(r) === "y", {
        width: v,
        height: m
      } = s.floating;
      let y, x;
      f === "top" || f === "bottom" ? (y = f, x = p === (await (i.isRTL == null ? void 0 : i.isRTL(o.floating)) ? "start" : "end") ? "left" : "right") : (x = f, y = p === "end" ? "top" : "bottom");
      const b = m - c.top - c.bottom, C = v - c.left - c.right, w = Qn(m - c[y], b), $ = Qn(v - c[x], C), B = !t.middlewareData.shift;
      let I = w, E = $;
      if ((a = t.middlewareData.shift) != null && a.enabled.x && (E = C), (n = t.middlewareData.shift) != null && n.enabled.y && (I = b), B && !p) {
        const R = Sa(c.left, 0), F = Sa(c.right, 0), H = Sa(c.top, 0), j = Sa(c.bottom, 0);
        g ? E = v - 2 * (R !== 0 || F !== 0 ? R + F : Sa(c.left, c.right)) : I = m - 2 * (H !== 0 || j !== 0 ? H + j : Sa(c.top, c.bottom));
      }
      await l({
        ...t,
        availableWidth: E,
        availableHeight: I
      });
      const P = await i.getDimensions(o.floating);
      return v !== P.width || m !== P.height ? {
        reset: {
          rects: !0
        }
      } : {};
    }
  };
};
function Ol() {
  return typeof window < "u";
}
function Or(e) {
  return yf(e) ? (e.nodeName || "").toLowerCase() : "#document";
}
function ka(e) {
  var t;
  return (e == null || (t = e.ownerDocument) == null ? void 0 : t.defaultView) || window;
}
function bn(e) {
  var t;
  return (t = (yf(e) ? e.ownerDocument : e.document) || window.document) == null ? void 0 : t.documentElement;
}
function yf(e) {
  return Ol() ? e instanceof Node || e instanceof ka(e).Node : !1;
}
function Xa(e) {
  return Ol() ? e instanceof Element || e instanceof ka(e).Element : !1;
}
function pn(e) {
  return Ol() ? e instanceof HTMLElement || e instanceof ka(e).HTMLElement : !1;
}
function bg(e) {
  return !Ol() || typeof ShadowRoot > "u" ? !1 : e instanceof ShadowRoot || e instanceof ka(e).ShadowRoot;
}
const Yk = /* @__PURE__ */ new Set(["inline", "contents"]);
function ji(e) {
  const {
    overflow: t,
    overflowX: a,
    overflowY: n,
    display: r
  } = Ja(e);
  return /auto|scroll|overlay|hidden|clip/.test(t + n + a) && !Yk.has(r);
}
const Xk = /* @__PURE__ */ new Set(["table", "td", "th"]);
function Jk(e) {
  return Xk.has(Or(e));
}
const Qk = [":popover-open", ":modal"];
function Fl(e) {
  return Qk.some((t) => {
    try {
      return e.matches(t);
    } catch {
      return !1;
    }
  });
}
const Zk = ["transform", "translate", "scale", "rotate", "perspective"], eA = ["transform", "translate", "scale", "rotate", "perspective", "filter"], tA = ["paint", "layout", "strict", "content"];
function bf(e) {
  const t = wf(), a = Xa(e) ? Ja(e) : e;
  return Zk.some((n) => a[n] ? a[n] !== "none" : !1) || (a.containerType ? a.containerType !== "normal" : !1) || !t && (a.backdropFilter ? a.backdropFilter !== "none" : !1) || !t && (a.filter ? a.filter !== "none" : !1) || eA.some((n) => (a.willChange || "").includes(n)) || tA.some((n) => (a.contain || "").includes(n));
}
function aA(e) {
  let t = Zn(e);
  for (; pn(t) && !ws(t); ) {
    if (bf(t))
      return t;
    if (Fl(t))
      return null;
    t = Zn(t);
  }
  return null;
}
function wf() {
  return typeof CSS > "u" || !CSS.supports ? !1 : CSS.supports("-webkit-backdrop-filter", "none");
}
const nA = /* @__PURE__ */ new Set(["html", "body", "#document"]);
function ws(e) {
  return nA.has(Or(e));
}
function Ja(e) {
  return ka(e).getComputedStyle(e);
}
function zl(e) {
  return Xa(e) ? {
    scrollLeft: e.scrollLeft,
    scrollTop: e.scrollTop
  } : {
    scrollLeft: e.scrollX,
    scrollTop: e.scrollY
  };
}
function Zn(e) {
  if (Or(e) === "html")
    return e;
  const t = (
    // Step into the shadow DOM of the parent of a slotted node.
    e.assignedSlot || // DOM Element detected.
    e.parentNode || // ShadowRoot detected.
    bg(e) && e.host || // Fallback.
    bn(e)
  );
  return bg(t) ? t.host : t;
}
function fy(e) {
  const t = Zn(e);
  return ws(t) ? e.ownerDocument ? e.ownerDocument.body : e.body : pn(t) && ji(t) ? t : fy(t);
}
function wi(e, t, a) {
  var n;
  t === void 0 && (t = []), a === void 0 && (a = !0);
  const r = fy(e), s = r === ((n = e.ownerDocument) == null ? void 0 : n.body), i = ka(r);
  if (s) {
    const o = xd(i);
    return t.concat(i, i.visualViewport || [], ji(r) ? r : [], o && a ? wi(o) : []);
  }
  return t.concat(r, wi(r, [], a));
}
function xd(e) {
  return e.parent && Object.getPrototypeOf(e.parent) ? e.frameElement : null;
}
function py(e) {
  const t = Ja(e);
  let a = parseFloat(t.width) || 0, n = parseFloat(t.height) || 0;
  const r = pn(e), s = r ? e.offsetWidth : a, i = r ? e.offsetHeight : n, o = al(a) !== s || al(n) !== i;
  return o && (a = s, n = i), {
    width: a,
    height: n,
    $: o
  };
}
function Cf(e) {
  return Xa(e) ? e : e.contextElement;
}
function ds(e) {
  const t = Cf(e);
  if (!pn(t))
    return dn(1);
  const a = t.getBoundingClientRect(), {
    width: n,
    height: r,
    $: s
  } = py(t);
  let i = (s ? al(a.width) : a.width) / n, o = (s ? al(a.height) : a.height) / r;
  return (!i || !Number.isFinite(i)) && (i = 1), (!o || !Number.isFinite(o)) && (o = 1), {
    x: i,
    y: o
  };
}
const rA = /* @__PURE__ */ dn(0);
function gy(e) {
  const t = ka(e);
  return !wf() || !t.visualViewport ? rA : {
    x: t.visualViewport.offsetLeft,
    y: t.visualViewport.offsetTop
  };
}
function sA(e, t, a) {
  return t === void 0 && (t = !1), !a || t && a !== ka(e) ? !1 : t;
}
function Ir(e, t, a, n) {
  t === void 0 && (t = !1), a === void 0 && (a = !1);
  const r = e.getBoundingClientRect(), s = Cf(e);
  let i = dn(1);
  t && (n ? Xa(n) && (i = ds(n)) : i = ds(e));
  const o = sA(s, a, n) ? gy(s) : dn(0);
  let l = (r.left + o.x) / i.x, d = (r.top + o.y) / i.y, c = r.width / i.x, f = r.height / i.y;
  if (s) {
    const p = ka(s), g = n && Xa(n) ? ka(n) : n;
    let v = p, m = xd(v);
    for (; m && n && g !== v; ) {
      const y = ds(m), x = m.getBoundingClientRect(), b = Ja(m), C = x.left + (m.clientLeft + parseFloat(b.paddingLeft)) * y.x, w = x.top + (m.clientTop + parseFloat(b.paddingTop)) * y.y;
      l *= y.x, d *= y.y, c *= y.x, f *= y.y, l += C, d += w, v = ka(m), m = xd(v);
    }
  }
  return rl({
    width: c,
    height: f,
    x: l,
    y: d
  });
}
function xf(e, t) {
  const a = zl(e).scrollLeft;
  return t ? t.left + a : Ir(bn(e)).left + a;
}
function vy(e, t, a) {
  a === void 0 && (a = !1);
  const n = e.getBoundingClientRect(), r = n.left + t.scrollLeft - (a ? 0 : (
    // RTL <body> scrollbar.
    xf(e, n)
  )), s = n.top + t.scrollTop;
  return {
    x: r,
    y: s
  };
}
function iA(e) {
  let {
    elements: t,
    rect: a,
    offsetParent: n,
    strategy: r
  } = e;
  const s = r === "fixed", i = bn(n), o = t ? Fl(t.floating) : !1;
  if (n === i || o && s)
    return a;
  let l = {
    scrollLeft: 0,
    scrollTop: 0
  }, d = dn(1);
  const c = dn(0), f = pn(n);
  if ((f || !f && !s) && ((Or(n) !== "body" || ji(i)) && (l = zl(n)), pn(n))) {
    const g = Ir(n);
    d = ds(n), c.x = g.x + n.clientLeft, c.y = g.y + n.clientTop;
  }
  const p = i && !f && !s ? vy(i, l, !0) : dn(0);
  return {
    width: a.width * d.x,
    height: a.height * d.y,
    x: a.x * d.x - l.scrollLeft * d.x + c.x + p.x,
    y: a.y * d.y - l.scrollTop * d.y + c.y + p.y
  };
}
function oA(e) {
  return Array.from(e.getClientRects());
}
function lA(e) {
  const t = bn(e), a = zl(e), n = e.ownerDocument.body, r = Sa(t.scrollWidth, t.clientWidth, n.scrollWidth, n.clientWidth), s = Sa(t.scrollHeight, t.clientHeight, n.scrollHeight, n.clientHeight);
  let i = -a.scrollLeft + xf(e);
  const o = -a.scrollTop;
  return Ja(n).direction === "rtl" && (i += Sa(t.clientWidth, n.clientWidth) - r), {
    width: r,
    height: s,
    x: i,
    y: o
  };
}
function uA(e, t) {
  const a = ka(e), n = bn(e), r = a.visualViewport;
  let s = n.clientWidth, i = n.clientHeight, o = 0, l = 0;
  if (r) {
    s = r.width, i = r.height;
    const d = wf();
    (!d || d && t === "fixed") && (o = r.offsetLeft, l = r.offsetTop);
  }
  return {
    width: s,
    height: i,
    x: o,
    y: l
  };
}
const dA = /* @__PURE__ */ new Set(["absolute", "fixed"]);
function cA(e, t) {
  const a = Ir(e, !0, t === "fixed"), n = a.top + e.clientTop, r = a.left + e.clientLeft, s = pn(e) ? ds(e) : dn(1), i = e.clientWidth * s.x, o = e.clientHeight * s.y, l = r * s.x, d = n * s.y;
  return {
    width: i,
    height: o,
    x: l,
    y: d
  };
}
function wg(e, t, a) {
  let n;
  if (t === "viewport")
    n = uA(e, a);
  else if (t === "document")
    n = lA(bn(e));
  else if (Xa(t))
    n = cA(t, a);
  else {
    const r = gy(e);
    n = {
      x: t.x - r.x,
      y: t.y - r.y,
      width: t.width,
      height: t.height
    };
  }
  return rl(n);
}
function hy(e, t) {
  const a = Zn(e);
  return a === t || !Xa(a) || ws(a) ? !1 : Ja(a).position === "fixed" || hy(a, t);
}
function fA(e, t) {
  const a = t.get(e);
  if (a)
    return a;
  let n = wi(e, [], !1).filter((o) => Xa(o) && Or(o) !== "body"), r = null;
  const s = Ja(e).position === "fixed";
  let i = s ? Zn(e) : e;
  for (; Xa(i) && !ws(i); ) {
    const o = Ja(i), l = bf(i);
    !l && o.position === "fixed" && (r = null), (s ? !l && !r : !l && o.position === "static" && !!r && dA.has(r.position) || ji(i) && !l && hy(e, i)) ? n = n.filter((c) => c !== i) : r = o, i = Zn(i);
  }
  return t.set(e, n), n;
}
function pA(e) {
  let {
    element: t,
    boundary: a,
    rootBoundary: n,
    strategy: r
  } = e;
  const i = [...a === "clippingAncestors" ? Fl(t) ? [] : fA(t, this._c) : [].concat(a), n], o = i[0], l = i.reduce((d, c) => {
    const f = wg(t, c, r);
    return d.top = Sa(f.top, d.top), d.right = Qn(f.right, d.right), d.bottom = Qn(f.bottom, d.bottom), d.left = Sa(f.left, d.left), d;
  }, wg(t, o, r));
  return {
    width: l.right - l.left,
    height: l.bottom - l.top,
    x: l.left,
    y: l.top
  };
}
function gA(e) {
  const {
    width: t,
    height: a
  } = py(e);
  return {
    width: t,
    height: a
  };
}
function vA(e, t, a) {
  const n = pn(t), r = bn(t), s = a === "fixed", i = Ir(e, !0, s, t);
  let o = {
    scrollLeft: 0,
    scrollTop: 0
  };
  const l = dn(0);
  function d() {
    l.x = xf(r);
  }
  if (n || !n && !s)
    if ((Or(t) !== "body" || ji(r)) && (o = zl(t)), n) {
      const g = Ir(t, !0, s, t);
      l.x = g.x + t.clientLeft, l.y = g.y + t.clientTop;
    } else r && d();
  s && !n && r && d();
  const c = r && !n && !s ? vy(r, o) : dn(0), f = i.left + o.scrollLeft - l.x - c.x, p = i.top + o.scrollTop - l.y - c.y;
  return {
    x: f,
    y: p,
    width: i.width,
    height: i.height
  };
}
function yu(e) {
  return Ja(e).position === "static";
}
function Cg(e, t) {
  if (!pn(e) || Ja(e).position === "fixed")
    return null;
  if (t)
    return t(e);
  let a = e.offsetParent;
  return bn(e) === a && (a = a.ownerDocument.body), a;
}
function my(e, t) {
  const a = ka(e);
  if (Fl(e))
    return a;
  if (!pn(e)) {
    let r = Zn(e);
    for (; r && !ws(r); ) {
      if (Xa(r) && !yu(r))
        return r;
      r = Zn(r);
    }
    return a;
  }
  let n = Cg(e, t);
  for (; n && Jk(n) && yu(n); )
    n = Cg(n, t);
  return n && ws(n) && yu(n) && !bf(n) ? a : n || aA(e) || a;
}
const hA = async function(e) {
  const t = this.getOffsetParent || my, a = this.getDimensions, n = await a(e.floating);
  return {
    reference: vA(e.reference, await t(e.floating), e.strategy),
    floating: {
      x: 0,
      y: 0,
      width: n.width,
      height: n.height
    }
  };
};
function mA(e) {
  return Ja(e).direction === "rtl";
}
const yA = {
  convertOffsetParentRelativeRectToViewportRelativeRect: iA,
  getDocumentElement: bn,
  getClippingRect: pA,
  getOffsetParent: my,
  getElementRects: hA,
  getClientRects: oA,
  getDimensions: gA,
  getScale: ds,
  isElement: Xa,
  isRTL: mA
};
function yy(e, t) {
  return e.x === t.x && e.y === t.y && e.width === t.width && e.height === t.height;
}
function bA(e, t) {
  let a = null, n;
  const r = bn(e);
  function s() {
    var o;
    clearTimeout(n), (o = a) == null || o.disconnect(), a = null;
  }
  function i(o, l) {
    o === void 0 && (o = !1), l === void 0 && (l = 1), s();
    const d = e.getBoundingClientRect(), {
      left: c,
      top: f,
      width: p,
      height: g
    } = d;
    if (o || t(), !p || !g)
      return;
    const v = uo(f), m = uo(r.clientWidth - (c + p)), y = uo(r.clientHeight - (f + g)), x = uo(c), C = {
      rootMargin: -v + "px " + -m + "px " + -y + "px " + -x + "px",
      threshold: Sa(0, Qn(1, l)) || 1
    };
    let w = !0;
    function $(B) {
      const I = B[0].intersectionRatio;
      if (I !== l) {
        if (!w)
          return i();
        I ? i(!1, I) : n = setTimeout(() => {
          i(!1, 1e-7);
        }, 1e3);
      }
      I === 1 && !yy(d, e.getBoundingClientRect()) && i(), w = !1;
    }
    try {
      a = new IntersectionObserver($, {
        ...C,
        // Handle <iframe>s
        root: r.ownerDocument
      });
    } catch {
      a = new IntersectionObserver($, C);
    }
    a.observe(e);
  }
  return i(!0), s;
}
function wA(e, t, a, n) {
  n === void 0 && (n = {});
  const {
    ancestorScroll: r = !0,
    ancestorResize: s = !0,
    elementResize: i = typeof ResizeObserver == "function",
    layoutShift: o = typeof IntersectionObserver == "function",
    animationFrame: l = !1
  } = n, d = Cf(e), c = r || s ? [...d ? wi(d) : [], ...wi(t)] : [];
  c.forEach((x) => {
    r && x.addEventListener("scroll", a, {
      passive: !0
    }), s && x.addEventListener("resize", a);
  });
  const f = d && o ? bA(d, a) : null;
  let p = -1, g = null;
  i && (g = new ResizeObserver((x) => {
    let [b] = x;
    b && b.target === d && g && (g.unobserve(t), cancelAnimationFrame(p), p = requestAnimationFrame(() => {
      var C;
      (C = g) == null || C.observe(t);
    })), a();
  }), d && !l && g.observe(d), g.observe(t));
  let v, m = l ? Ir(e) : null;
  l && y();
  function y() {
    const x = Ir(e);
    m && !yy(m, x) && a(), m = x, v = requestAnimationFrame(y);
  }
  return a(), () => {
    var x;
    c.forEach((b) => {
      r && b.removeEventListener("scroll", a), s && b.removeEventListener("resize", a);
    }), f?.(), (x = g) == null || x.disconnect(), g = null, l && cancelAnimationFrame(v);
  };
}
const CA = Kk, xA = Gk, xg = Nk, SA = Wk, _A = Hk, kA = Vk, AA = Uk, $A = (e, t, a) => {
  const n = /* @__PURE__ */ new Map(), r = {
    platform: yA,
    ...a
  }, s = {
    ...r.platform,
    _c: n
  };
  return qk(e, t, {
    ...r,
    platform: s
  });
};
function IA(e) {
  return e != null && typeof e == "object" && "$el" in e;
}
function Sd(e) {
  if (IA(e)) {
    const t = e.$el;
    return yf(t) && Or(t) === "#comment" ? null : t;
  }
  return e;
}
function Jr(e) {
  return typeof e == "function" ? e() : u(e);
}
function EA(e) {
  return {
    name: "arrow",
    options: e,
    fn(t) {
      const a = Sd(Jr(e.element));
      return a == null ? {} : kA({
        element: a,
        padding: e.padding
      }).fn(t);
    }
  };
}
function by(e) {
  return typeof window > "u" ? 1 : (e.ownerDocument.defaultView || window).devicePixelRatio || 1;
}
function Sg(e, t) {
  const a = by(e);
  return Math.round(t * a) / a;
}
function TA(e, t, a) {
  a === void 0 && (a = {});
  const n = a.whileElementsMounted, r = T(() => {
    var I;
    return (I = Jr(a.open)) != null ? I : !0;
  }), s = T(() => Jr(a.middleware)), i = T(() => {
    var I;
    return (I = Jr(a.placement)) != null ? I : "bottom";
  }), o = T(() => {
    var I;
    return (I = Jr(a.strategy)) != null ? I : "absolute";
  }), l = T(() => {
    var I;
    return (I = Jr(a.transform)) != null ? I : !0;
  }), d = T(() => Sd(e.value)), c = T(() => Sd(t.value)), f = N(0), p = N(0), g = N(o.value), v = N(i.value), m = rt({}), y = N(!1), x = T(() => {
    const I = {
      position: g.value,
      left: "0",
      top: "0"
    };
    if (!c.value)
      return I;
    const E = Sg(c.value, f.value), P = Sg(c.value, p.value);
    return l.value ? {
      ...I,
      transform: "translate(" + E + "px, " + P + "px)",
      ...by(c.value) >= 1.5 && {
        willChange: "transform"
      }
    } : {
      position: g.value,
      left: E + "px",
      top: P + "px"
    };
  });
  let b;
  function C() {
    if (d.value == null || c.value == null)
      return;
    const I = r.value;
    $A(d.value, c.value, {
      middleware: s.value,
      placement: i.value,
      strategy: o.value
    }).then((E) => {
      f.value = E.x, p.value = E.y, g.value = E.strategy, v.value = E.placement, m.value = E.middlewareData, y.value = I !== !1;
    });
  }
  function w() {
    typeof b == "function" && (b(), b = void 0);
  }
  function $() {
    if (w(), n === void 0) {
      C();
      return;
    }
    if (d.value != null && c.value != null) {
      b = n(d.value, c.value, C);
      return;
    }
  }
  function B() {
    r.value || (y.value = !1);
  }
  return ye([s, i, o, r], C, {
    flush: "sync"
  }), ye([d, c], $, {
    flush: "sync"
  }), ye(r, B, {
    flush: "sync"
  }), Il() && El(w), {
    x: Kr(f),
    y: Kr(p),
    strategy: Kr(g),
    placement: Kr(v),
    middlewareData: Kr(m),
    isPositioned: Kr(y),
    floatingStyles: x,
    update: C
  };
}
const wy = {
  side: "bottom",
  sideOffset: 0,
  sideFlip: !0,
  align: "center",
  alignOffset: 0,
  alignFlip: !0,
  arrowPadding: 0,
  avoidCollisions: !0,
  collisionBoundary: () => [],
  collisionPadding: 0,
  sticky: "partial",
  hideWhenDetached: !1,
  positionStrategy: "fixed",
  updatePositionStrategy: "optimized",
  prioritizePosition: !1
}, [BA, PA] = Me("PopperContent");
var DA = /* @__PURE__ */ L({
  inheritAttrs: !1,
  __name: "PopperContent",
  props: /* @__PURE__ */ lm({
    side: {
      type: null,
      required: !1
    },
    sideOffset: {
      type: Number,
      required: !1
    },
    sideFlip: {
      type: Boolean,
      required: !1
    },
    align: {
      type: null,
      required: !1
    },
    alignOffset: {
      type: Number,
      required: !1
    },
    alignFlip: {
      type: Boolean,
      required: !1
    },
    avoidCollisions: {
      type: Boolean,
      required: !1
    },
    collisionBoundary: {
      type: null,
      required: !1
    },
    collisionPadding: {
      type: [Number, Object],
      required: !1
    },
    arrowPadding: {
      type: Number,
      required: !1
    },
    sticky: {
      type: String,
      required: !1
    },
    hideWhenDetached: {
      type: Boolean,
      required: !1
    },
    positionStrategy: {
      type: String,
      required: !1
    },
    updatePositionStrategy: {
      type: String,
      required: !1
    },
    disableUpdateOnLayoutShift: {
      type: Boolean,
      required: !1
    },
    prioritizePosition: {
      type: Boolean,
      required: !1
    },
    reference: {
      type: null,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  }, { ...wy }),
  emits: ["placed"],
  setup(e, { emit: t }) {
    const a = e, n = t, r = uy(), { forwardRef: s, currentElement: i } = Z(), o = N(), l = N(), { width: d, height: c } = Um(l), f = T(() => a.side + (a.align !== "center" ? `-${a.align}` : "")), p = T(() => typeof a.collisionPadding == "number" ? a.collisionPadding : {
      top: 0,
      right: 0,
      bottom: 0,
      left: 0,
      ...a.collisionPadding
    }), g = T(() => Array.isArray(a.collisionBoundary) ? a.collisionBoundary : [a.collisionBoundary]), v = T(() => ({
      padding: p.value,
      boundary: g.value.filter($k),
      altBoundary: g.value.length > 0
    })), m = T(() => ({
      mainAxis: a.sideFlip,
      crossAxis: a.alignFlip
    })), y = bC(() => [
      CA({
        mainAxis: a.sideOffset + c.value,
        alignmentAxis: a.alignOffset
      }),
      a.prioritizePosition && a.avoidCollisions && xg({
        ...v.value,
        ...m.value
      }),
      a.avoidCollisions && xA({
        mainAxis: !0,
        crossAxis: !!a.prioritizePosition,
        limiter: a.sticky === "partial" ? AA() : void 0,
        ...v.value
      }),
      !a.prioritizePosition && a.avoidCollisions && xg({
        ...v.value,
        ...m.value
      }),
      SA({
        ...v.value,
        apply: ({ elements: H, rects: j, availableWidth: K, availableHeight: z }) => {
          const { width: G, height: Y } = j.reference, q = H.floating.style;
          q.setProperty("--reka-popper-available-width", `${K}px`), q.setProperty("--reka-popper-available-height", `${z}px`), q.setProperty("--reka-popper-anchor-width", `${G}px`), q.setProperty("--reka-popper-anchor-height", `${Y}px`);
        }
      }),
      l.value && EA({
        element: l.value,
        padding: a.arrowPadding
      }),
      Ik({
        arrowWidth: d.value,
        arrowHeight: c.value
      }),
      a.hideWhenDetached && _A({
        strategy: "referenceHidden",
        ...v.value
      })
    ]), x = T(() => a.reference ?? r.anchor.value), { floatingStyles: b, placement: C, isPositioned: w, middlewareData: $ } = TA(x, o, {
      strategy: a.positionStrategy,
      placement: f,
      whileElementsMounted: (...H) => wA(...H, {
        layoutShift: !a.disableUpdateOnLayoutShift,
        animationFrame: a.updatePositionStrategy === "always"
      }),
      middleware: y
    }), B = T(() => bd(C.value)[0]), I = T(() => bd(C.value)[1]);
    om(() => {
      w.value && n("placed");
    });
    const E = T(() => $.value.arrow?.centerOffset !== 0), P = N("");
    ot(() => {
      i.value && (P.value = window.getComputedStyle(i.value).zIndex);
    });
    const R = T(() => $.value.arrow?.x ?? 0), F = T(() => $.value.arrow?.y ?? 0);
    return PA({
      placedSide: B,
      onArrowChange: (H) => l.value = H,
      arrowX: R,
      arrowY: F,
      shouldHideArrow: E
    }), (H, j) => (h(), M("div", {
      ref_key: "floatingRef",
      ref: o,
      "data-reka-popper-content-wrapper": "",
      style: It({
        ...u(b),
        transform: u(w) ? u(b).transform : "translate(0, -200%)",
        minWidth: "max-content",
        zIndex: P.value,
        "--reka-popper-transform-origin": [u($).transformOrigin?.x, u($).transformOrigin?.y].join(" "),
        ...u($).hide?.referenceHidden && {
          visibility: "hidden",
          pointerEvents: "none"
        }
      })
    }, [V(u(U), O({ ref: u(s) }, H.$attrs, {
      "as-child": a.asChild,
      as: H.as,
      "data-side": B.value,
      "data-align": I.value,
      style: { animation: u(w) ? void 0 : "none" }
    }), {
      default: _(() => [S(H.$slots, "default")]),
      _: 3
    }, 16, [
      "as-child",
      "as",
      "data-side",
      "data-align",
      "style"
    ])], 4));
  }
}), As = DA;
const MA = {
  top: "bottom",
  right: "left",
  bottom: "top",
  left: "right"
};
var RA = /* @__PURE__ */ L({
  inheritAttrs: !1,
  __name: "PopperArrow",
  props: {
    width: {
      type: Number,
      required: !1
    },
    height: {
      type: Number,
      required: !1
    },
    rounded: {
      type: Boolean,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "svg"
    }
  },
  setup(e) {
    const { forwardRef: t } = Z(), a = BA(), n = T(() => MA[a.placedSide.value]);
    return (r, s) => (h(), M("span", {
      ref: (i) => {
        u(a).onArrowChange(i);
      },
      style: It({
        position: "absolute",
        left: u(a).arrowX?.value ? `${u(a).arrowX?.value}px` : void 0,
        top: u(a).arrowY?.value ? `${u(a).arrowY?.value}px` : void 0,
        [n.value]: 0,
        transformOrigin: {
          top: "",
          right: "0 0",
          bottom: "center 0",
          left: "100% 0"
        }[u(a).placedSide.value],
        transform: {
          top: "translateY(100%)",
          right: "translateY(50%) rotate(90deg) translateX(-50%)",
          bottom: "rotate(180deg)",
          left: "translateY(50%) rotate(-90deg) translateX(50%)"
        }[u(a).placedSide.value],
        visibility: u(a).shouldHideArrow.value ? "hidden" : void 0
      })
    }, [V(Ak, O(r.$attrs, {
      ref: u(t),
      style: { display: "block" },
      as: r.as,
      "as-child": r.asChild,
      rounded: r.rounded,
      width: r.width,
      height: r.height
    }), {
      default: _(() => [S(r.$slots, "default")]),
      _: 3
    }, 16, [
      "as",
      "as-child",
      "rounded",
      "width",
      "height"
    ])], 4));
  }
}), $s = RA, LA = /* @__PURE__ */ L({
  __name: "ComboboxAnchor",
  props: {
    reference: {
      type: null,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  setup(e) {
    const { forwardRef: t } = Z();
    return (a, n) => (h(), k(u(Lr), {
      "as-child": "",
      reference: a.reference
    }, {
      default: _(() => [V(u(U), O({
        ref: u(t),
        "as-child": a.asChild,
        as: a.as
      }, a.$attrs), {
        default: _(() => [S(a.$slots, "default")]),
        _: 3
      }, 16, ["as-child", "as"])]),
      _: 3
    }, 8, ["reference"]));
  }
}), Cy = LA;
function OA(e, t, a) {
  return e === void 0 ? !1 : Array.isArray(e) ? e.some((n) => ii(n, t, a)) : ii(e, t, a);
}
function ii(e, t, a) {
  return e === void 0 || t === void 0 ? !1 : typeof e == "string" ? e === t : typeof a == "function" ? a(e, t) : typeof a == "string" ? e?.[a] === t?.[a] : ca(e, t);
}
const [ql, FA] = Me("ListboxRoot");
var zA = /* @__PURE__ */ L({
  __name: "ListboxRoot",
  props: {
    modelValue: {
      type: null,
      required: !1
    },
    defaultValue: {
      type: null,
      required: !1
    },
    multiple: {
      type: Boolean,
      required: !1
    },
    orientation: {
      type: String,
      required: !1,
      default: "vertical"
    },
    dir: {
      type: String,
      required: !1
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    selectionBehavior: {
      type: String,
      required: !1,
      default: "toggle"
    },
    highlightOnHover: {
      type: Boolean,
      required: !1
    },
    by: {
      type: [String, Function],
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    },
    name: {
      type: String,
      required: !1
    },
    required: {
      type: Boolean,
      required: !1
    }
  },
  emits: [
    "update:modelValue",
    "highlight",
    "entryFocus",
    "leave"
  ],
  setup(e, { expose: t, emit: a }) {
    const n = e, r = a, { multiple: s, highlightOnHover: i, orientation: o, disabled: l, selectionBehavior: d, dir: c } = We(n), { getItems: f } = yt({ isProvider: !0 }), { handleTypeaheadSearch: p } = Vi(), { primitiveElement: g, currentElement: v } = ea(), m = qi(), y = Yt(c), x = hn(v), b = N(), C = N(!1), w = N(!0), $ = Ze(n, "modelValue", r, {
      defaultValue: n.defaultValue ?? (s.value ? [] : void 0),
      passive: n.modelValue === void 0,
      deep: !0
    });
    function B(ne) {
      if (C.value = !0, n.multiple) {
        const ae = Array.isArray($.value) ? [...$.value] : [], be = ae.findIndex((De) => ii(De, ne, n.by));
        n.selectionBehavior === "toggle" ? (be === -1 ? ae.push(ne) : ae.splice(be, 1), $.value = ae) : ($.value = [ne], b.value = ne);
      } else n.selectionBehavior === "toggle" && ii($.value, ne, n.by) ? $.value = void 0 : $.value = ne;
      setTimeout(() => {
        C.value = !1;
      }, 1);
    }
    const I = N(null), E = N(null), P = N(!1), R = N(!1), F = xr(), H = xr(), j = xr();
    function K() {
      return f().map((ne) => ne.ref).filter((ne) => ne.dataset.disabled !== "");
    }
    function z(ne, ae = !0) {
      if (!ne) return;
      I.value = ne, w.value && I.value.focus(), ae && I.value.scrollIntoView({ block: "nearest" });
      const be = f().find((De) => De.ref === ne);
      r("highlight", be);
    }
    function G(ne) {
      if (P.value) j.trigger(ne);
      else {
        const ae = f().find((be) => ii(be.value, ne, n.by));
        ae && (I.value = ae.ref, z(ae.ref));
      }
    }
    function Y(ne) {
      I.value && I.value.isConnected && (ne.preventDefault(), ne.stopPropagation(), R.value || I.value.click());
    }
    function q(ne) {
      if (w.value) {
        if (C.value = !0, P.value) H.trigger(ne);
        else {
          const ae = ne.altKey || ne.ctrlKey || ne.metaKey;
          if (ae && ne.key === "a" && s.value) {
            const be = f(), De = be.map((Ke) => Ke.value);
            $.value = [...De], ne.preventDefault(), z(be[be.length - 1].ref);
          } else if (!ae) {
            const be = p(ne.key, f());
            be && z(be);
          }
        }
        setTimeout(() => {
          C.value = !1;
        }, 1);
      }
    }
    function Q() {
      R.value = !0;
    }
    function se() {
      Be(() => {
        R.value = !1;
      });
    }
    function ce() {
      Be(() => {
        const ne = new KeyboardEvent("keydown", { key: "PageUp" });
        $e(ne);
      });
    }
    function oe(ne) {
      const ae = I.value;
      ae?.isConnected && (E.value = ae), I.value = null, r("leave", ne);
    }
    function xe(ne) {
      const ae = new CustomEvent("listbox.entryFocus", {
        bubbles: !1,
        cancelable: !0
      });
      if (ne.currentTarget?.dispatchEvent(ae), r("entryFocus", ae), !ae.defaultPrevented)
        if (E.value) z(E.value);
        else {
          const be = K()?.[0];
          z(be);
        }
    }
    function $e(ne) {
      const ae = iy(ne, o.value, y.value);
      if (!ae) return;
      let be = K();
      if (I.value) {
        if (ae === "last") be.reverse();
        else if (ae === "prev" || ae === "next") {
          ae === "prev" && be.reverse();
          const De = be.indexOf(I.value);
          be = be.slice(De + 1);
        }
        Le(ne, be[0]);
      }
      if (be.length) {
        const De = !I.value && ae === "prev" ? be.length - 1 : 0;
        z(be[De]);
      }
      if (P.value) return H.trigger(ne);
    }
    function Le(ne, ae) {
      if (!(P.value || n.selectionBehavior !== "replace" || !s.value || !Array.isArray($.value) || (ne.altKey || ne.ctrlKey || ne.metaKey) && !ne.shiftKey) && ne.shiftKey) {
        const De = f().filter((de) => de.ref.dataset.disabled !== "");
        let Ke = De.find((de) => de.ref === ae)?.value;
        if (ne.key === m.END ? Ke = De[De.length - 1].value : ne.key === m.HOME && (Ke = De[0].value), !Ke || !b.value) return;
        const re = Mo(De.map((de) => de.value), b.value, Ke);
        $.value = re;
      }
    }
    async function Ye(ne) {
      if (await Be(), P.value) F.trigger(ne);
      else {
        const ae = K(), be = ae.find((De) => De.dataset.state === "checked");
        be ? z(be) : ae.length && z(ae[0]);
      }
    }
    return ye($, () => {
      C.value || Be(() => {
        Ye();
      });
    }, {
      immediate: !0,
      deep: !0
    }), t({
      highlightedElement: I,
      highlightItem: G,
      highlightFirstItem: ce,
      highlightSelected: Ye,
      getItems: f
    }), FA({
      modelValue: $,
      onValueChange: B,
      multiple: s,
      orientation: o,
      dir: y,
      disabled: l,
      highlightOnHover: i,
      highlightedElement: I,
      isVirtual: P,
      virtualFocusHook: F,
      virtualKeydownHook: H,
      virtualHighlightHook: j,
      by: n.by,
      firstValue: b,
      selectionBehavior: d,
      focusable: w,
      onLeave: oe,
      onEnter: xe,
      changeHighlight: z,
      onKeydownEnter: Y,
      onKeydownNavigation: $e,
      onKeydownTypeAhead: q,
      onCompositionStart: Q,
      onCompositionEnd: se,
      highlightFirstItem: ce
    }), (ne, ae) => (h(), k(u(U), {
      ref_key: "primitiveElement",
      ref: g,
      as: ne.as,
      "as-child": ne.asChild,
      dir: u(y),
      "data-disabled": u(l) ? "" : void 0,
      onPointerleave: oe,
      onFocusout: ae[0] || (ae[0] = async (be) => {
        const De = be.relatedTarget || be.target;
        await Be(), I.value && u(v) && !u(v).contains(De) && oe(be);
      })
    }, {
      default: _(() => [S(ne.$slots, "default", { modelValue: u($) }), u(x) && ne.name ? (h(), k(u(yn), {
        key: 0,
        name: ne.name,
        value: u($),
        disabled: u(l),
        required: ne.required
      }, null, 8, [
        "name",
        "value",
        "disabled",
        "required"
      ])) : D("v-if", !0)]),
      _: 3
    }, 8, [
      "as",
      "as-child",
      "dir",
      "data-disabled"
    ]));
  }
}), xy = zA, qA = /* @__PURE__ */ L({
  __name: "ListboxContent",
  props: {
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  setup(e) {
    const { CollectionSlot: t } = yt(), a = ql(), n = Li(!1, 10);
    return (r, s) => (h(), k(u(t), null, {
      default: _(() => [V(u(U), {
        role: "listbox",
        as: r.as,
        "as-child": r.asChild,
        tabindex: u(a).focusable.value ? u(a).highlightedElement.value ? "-1" : "0" : void 0,
        "aria-orientation": u(a).orientation.value,
        "aria-multiselectable": !!u(a).multiple.value,
        "data-orientation": u(a).orientation.value,
        onMousedown: s[0] || (s[0] = ze((i) => n.value = !0, ["left"])),
        onFocus: s[1] || (s[1] = (i) => {
          u(n) || u(a).onEnter(i);
        }),
        onKeydown: [
          s[2] || (s[2] = nt(ze((i) => {
            u(a).focusable.value && u(a).onKeydownNavigation(i);
          }, ["prevent"]), [
            "down",
            "up",
            "left",
            "right",
            "home",
            "end"
          ])),
          nt(u(a).onKeydownEnter, ["enter"]),
          u(a).onKeydownTypeAhead
        ]
      }, {
        default: _(() => [S(r.$slots, "default")]),
        _: 3
      }, 8, [
        "as",
        "as-child",
        "tabindex",
        "aria-orientation",
        "aria-multiselectable",
        "data-orientation",
        "onKeydown"
      ])]),
      _: 3
    }));
  }
}), Sy = qA, VA = /* @__PURE__ */ L({
  __name: "ListboxFilter",
  props: {
    modelValue: {
      type: String,
      required: !1
    },
    autoFocus: {
      type: Boolean,
      required: !1
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "input"
    }
  },
  emits: ["update:modelValue"],
  setup(e, { emit: t }) {
    const a = e, r = Ze(a, "modelValue", t, {
      defaultValue: "",
      passive: a.modelValue === void 0
    }), s = ql(), { primitiveElement: i, currentElement: o } = ea(), l = T(() => a.disabled || s.disabled.value || !1), d = N();
    return sC(() => d.value = s.highlightedElement.value?.id), Pe(() => {
      s.focusable.value = !1, setTimeout(() => {
        a.autoFocus && o.value?.focus();
      }, 1);
    }), Bt(() => {
      s.focusable.value = !0;
    }), (c, f) => (h(), k(u(U), {
      ref_key: "primitiveElement",
      ref: i,
      as: c.as,
      "as-child": c.asChild,
      value: u(r),
      disabled: l.value ? "" : void 0,
      "data-disabled": l.value ? "" : void 0,
      "aria-disabled": l.value ?? void 0,
      "aria-activedescendant": d.value,
      type: "text",
      onKeydown: [nt(ze(u(s).onKeydownNavigation, ["prevent"]), [
        "down",
        "up",
        "home",
        "end"
      ]), nt(u(s).onKeydownEnter, ["enter"])],
      onInput: f[0] || (f[0] = (p) => {
        r.value = p.target.value, u(s).highlightFirstItem();
      }),
      onCompositionstart: u(s).onCompositionStart,
      onCompositionend: u(s).onCompositionEnd
    }, {
      default: _(() => [S(c.$slots, "default", { modelValue: u(r) })]),
      _: 3
    }, 8, [
      "as",
      "as-child",
      "value",
      "disabled",
      "data-disabled",
      "aria-disabled",
      "aria-activedescendant",
      "onKeydown",
      "onCompositionstart",
      "onCompositionend"
    ]));
  }
}), _y = VA;
const [NA, HA] = Me("ListboxGroup");
var jA = /* @__PURE__ */ L({
  __name: "ListboxGroup",
  props: {
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  setup(e) {
    const t = e, a = pt(void 0, "reka-listbox-group");
    return HA({ id: a }), (n, r) => (h(), k(u(U), O({ role: "group" }, t, { "aria-labelledby": u(a) }), {
      default: _(() => [S(n.$slots, "default")]),
      _: 3
    }, 16, ["aria-labelledby"]));
  }
}), ky = jA, KA = /* @__PURE__ */ L({
  __name: "ListboxGroupLabel",
  props: {
    for: {
      type: String,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "div"
    }
  },
  setup(e) {
    const t = e, a = NA({ id: "" });
    return (n, r) => (h(), k(u(U), O(t, { id: u(a).id }), {
      default: _(() => [S(n.$slots, "default")]),
      _: 3
    }, 16, ["id"]));
  }
}), GA = KA;
const UA = "listbox.select", [WA, YA] = Me("ListboxItem");
var XA = /* @__PURE__ */ L({
  __name: "ListboxItem",
  props: {
    value: {
      type: null,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "div"
    }
  },
  emits: ["select"],
  setup(e, { emit: t }) {
    const a = e, n = t, r = pt(void 0, "reka-listbox-item"), { CollectionItem: s } = yt(), { forwardRef: i, currentElement: o } = Z(), l = ql(), d = T(() => o.value === l.highlightedElement.value), c = T(() => OA(l.modelValue.value, a.value, l.by)), f = T(() => l.disabled.value || a.disabled);
    async function p(v) {
      n("select", v), !v?.defaultPrevented && !f.value && v && (l.onValueChange(a.value), l.changeHighlight(o.value));
    }
    function g(v) {
      const m = {
        originalEvent: v,
        value: a.value
      };
      Ar(UA, p, m);
    }
    return YA({ isSelected: c }), (v, m) => (h(), k(u(s), { value: v.value }, {
      default: _(() => [iC([d.value, c.value], () => V(u(U), O({ id: u(r) }, v.$attrs, {
        ref: u(i),
        role: "option",
        tabindex: u(l).focusable.value ? d.value ? "0" : "-1" : -1,
        "aria-selected": c.value,
        as: v.as,
        "as-child": v.asChild,
        disabled: f.value ? "" : void 0,
        "data-disabled": f.value ? "" : void 0,
        "data-highlighted": d.value ? "" : void 0,
        "data-state": c.value ? "checked" : "unchecked",
        onClick: g,
        onKeydown: nt(ze(g, ["prevent"]), ["space"]),
        onPointermove: m[0] || (m[0] = (y) => {
          u(l).highlightedElement.value !== u(o) && (u(l).highlightOnHover.value ? u(l).changeHighlight(u(o), !1) : u(l).focusable.value || u(l).changeHighlight(u(o), !1));
        })
      }), {
        default: _(() => [S(v.$slots, "default")]),
        _: 3
      }, 16, [
        "id",
        "tabindex",
        "aria-selected",
        "as",
        "as-child",
        "disabled",
        "data-disabled",
        "data-highlighted",
        "data-state",
        "onKeydown"
      ]), m, 1)]),
      _: 3
    }, 8, ["value"]));
  }
}), Ay = XA, JA = /* @__PURE__ */ L({
  __name: "ListboxItemIndicator",
  props: {
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "span"
    }
  },
  setup(e) {
    const t = e;
    Z();
    const a = WA();
    return (n, r) => u(a).isSelected.value ? (h(), k(u(U), O({
      key: 0,
      "aria-hidden": "true"
    }, t), {
      default: _(() => [S(n.$slots, "default")]),
      _: 3
    }, 16)) : D("v-if", !0);
  }
}), $y = JA;
const [or, QA] = Me("ComboboxRoot");
var ZA = /* @__PURE__ */ L({
  __name: "ComboboxRoot",
  props: {
    open: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    defaultOpen: {
      type: Boolean,
      required: !1
    },
    resetSearchTermOnBlur: {
      type: Boolean,
      required: !1,
      default: !0
    },
    resetSearchTermOnSelect: {
      type: Boolean,
      required: !1,
      default: !0
    },
    openOnFocus: {
      type: Boolean,
      required: !1,
      default: !1
    },
    openOnClick: {
      type: Boolean,
      required: !1,
      default: !1
    },
    ignoreFilter: {
      type: Boolean,
      required: !1
    },
    modelValue: {
      type: null,
      required: !1
    },
    defaultValue: {
      type: null,
      required: !1
    },
    multiple: {
      type: Boolean,
      required: !1
    },
    dir: {
      type: String,
      required: !1
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    highlightOnHover: {
      type: Boolean,
      required: !1
    },
    by: {
      type: [String, Function],
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    },
    name: {
      type: String,
      required: !1
    },
    required: {
      type: Boolean,
      required: !1
    }
  },
  emits: [
    "update:modelValue",
    "highlight",
    "update:open"
  ],
  setup(e, { expose: t, emit: a }) {
    const n = e, r = a, { primitiveElement: s, currentElement: i } = ea(), { multiple: o, disabled: l, ignoreFilter: d, resetSearchTermOnSelect: c, openOnFocus: f, openOnClick: p, dir: g } = We(n), v = Yt(g), m = Ze(n, "modelValue", r, {
      defaultValue: n.defaultValue ?? (o.value ? [] : void 0),
      passive: n.modelValue === void 0,
      deep: !0
    }), y = Ze(n, "open", r, {
      defaultValue: n.defaultOpen,
      passive: n.open === void 0
    });
    async function x(K) {
      y.value = K, F.value = "", K ? (await Be(), s.value?.highlightSelected(), C.value = !0) : C.value = !1, $.value?.focus(), setTimeout(() => {
        !K && n.resetSearchTermOnBlur && b.trigger();
      }, 1);
    }
    const b = xr(), C = N(!1), w = N(!1), $ = N(), B = N(), I = T(() => s.value?.highlightedElement ?? void 0), E = N(/* @__PURE__ */ new Map()), P = N(/* @__PURE__ */ new Map()), { contains: R } = af({ sensitivity: "base" }), F = N(""), H = T((K) => {
      if (!F.value || n.ignoreFilter || w.value) return {
        count: E.value.size,
        items: K?.items ?? /* @__PURE__ */ new Map(),
        groups: K?.groups ?? new Set(P.value.keys())
      };
      let z = 0;
      const G = /* @__PURE__ */ new Map(), Y = /* @__PURE__ */ new Set();
      for (const [q, Q] of E.value) {
        const se = R(Q, F.value);
        G.set(q, se ? 1 : 0), se && z++;
      }
      for (const [q, Q] of P.value) for (const se of Q) if (G.get(se) > 0) {
        Y.add(q);
        break;
      }
      return {
        count: z,
        items: G,
        groups: Y
      };
    }), j = fa();
    return Pe(() => {
      j?.exposed && (j.exposed.highlightItem = s.value?.highlightItem, j.exposed.highlightFirstItem = s.value?.highlightFirstItem, j.exposed.highlightSelected = s.value?.highlightSelected);
    }), t({
      filtered: H,
      highlightedElement: I,
      highlightItem: s.value?.highlightItem,
      highlightFirstItem: s.value?.highlightFirstItem,
      highlightSelected: s.value?.highlightSelected
    }), QA({
      modelValue: m,
      multiple: o,
      disabled: l,
      open: y,
      onOpenChange: x,
      contentId: "",
      isUserInputted: C,
      isVirtual: w,
      inputElement: $,
      highlightedElement: I,
      onInputElementChange: (K) => $.value = K,
      triggerElement: B,
      onTriggerElementChange: (K) => B.value = K,
      parentElement: i,
      resetSearchTermOnSelect: c,
      onResetSearchTerm: b.on,
      allItems: E,
      allGroups: P,
      filterSearch: F,
      filterState: H,
      ignoreFilter: d,
      openOnFocus: f,
      openOnClick: p
    }), (K, z) => (h(), k(u(Rr), null, {
      default: _(() => [V(u(xy), O({
        ref_key: "primitiveElement",
        ref: s
      }, K.$attrs, {
        modelValue: u(m),
        "onUpdate:modelValue": z[0] || (z[0] = (G) => ht(m) ? m.value = G : null),
        style: { pointerEvents: u(y) ? "auto" : void 0 },
        as: K.as,
        "as-child": K.asChild,
        dir: u(v),
        multiple: u(o),
        name: K.name,
        required: K.required,
        disabled: u(l),
        "highlight-on-hover": !0,
        by: n.by,
        onHighlight: z[1] || (z[1] = (G) => r("highlight", G))
      }), {
        default: _(() => [S(K.$slots, "default", {
          open: u(y),
          modelValue: u(m)
        })]),
        _: 3
      }, 16, [
        "modelValue",
        "style",
        "as",
        "as-child",
        "dir",
        "multiple",
        "name",
        "required",
        "disabled",
        "by"
      ])]),
      _: 3
    }));
  }
}), Iy = ZA;
const [e$, t$] = Me("ComboboxContent");
var a$ = /* @__PURE__ */ L({
  __name: "ComboboxContentImpl",
  props: {
    position: {
      type: String,
      required: !1,
      default: "inline"
    },
    bodyLock: {
      type: Boolean,
      required: !1
    },
    side: {
      type: null,
      required: !1
    },
    sideOffset: {
      type: Number,
      required: !1
    },
    sideFlip: {
      type: Boolean,
      required: !1
    },
    align: {
      type: null,
      required: !1
    },
    alignOffset: {
      type: Number,
      required: !1
    },
    alignFlip: {
      type: Boolean,
      required: !1
    },
    avoidCollisions: {
      type: Boolean,
      required: !1
    },
    collisionBoundary: {
      type: null,
      required: !1
    },
    collisionPadding: {
      type: [Number, Object],
      required: !1
    },
    arrowPadding: {
      type: Number,
      required: !1
    },
    sticky: {
      type: String,
      required: !1
    },
    hideWhenDetached: {
      type: Boolean,
      required: !1
    },
    positionStrategy: {
      type: String,
      required: !1
    },
    updatePositionStrategy: {
      type: String,
      required: !1
    },
    disableUpdateOnLayoutShift: {
      type: Boolean,
      required: !1
    },
    prioritizePosition: {
      type: Boolean,
      required: !1
    },
    reference: {
      type: null,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    },
    disableOutsidePointerEvents: {
      type: Boolean,
      required: !1
    }
  },
  emits: [
    "escapeKeyDown",
    "pointerDownOutside",
    "focusOutside",
    "interactOutside"
  ],
  setup(e, { emit: t }) {
    const a = e, n = t, { position: r } = We(a), s = or(), { forwardRef: i, currentElement: o } = Z();
    Oi(a.bodyLock), zi(s.parentElement);
    const l = T(() => a.position === "popper" ? a : {}), d = xt(l.value), c = {
      boxSizing: "border-box",
      "--reka-combobox-content-transform-origin": "var(--reka-popper-transform-origin)",
      "--reka-combobox-content-available-width": "var(--reka-popper-available-width)",
      "--reka-combobox-content-available-height": "var(--reka-popper-available-height)",
      "--reka-combobox-trigger-width": "var(--reka-popper-anchor-width)",
      "--reka-combobox-trigger-height": "var(--reka-popper-anchor-height)"
    };
    t$({ position: r });
    const f = N(!1);
    return Pe(() => {
      s.inputElement.value && (f.value = o.value.contains(s.inputElement.value), f.value && s.inputElement.value.focus());
    }), Bt(() => {
      f.value && s.triggerElement.value?.focus();
    }), (p, g) => (h(), k(u(Sy), { "as-child": "" }, {
      default: _(() => [V(u(sr), {
        "as-child": "",
        "disable-outside-pointer-events": p.disableOutsidePointerEvents,
        onDismiss: g[0] || (g[0] = (v) => u(s).onOpenChange(!1)),
        onFocusOutside: g[1] || (g[1] = (v) => {
          u(s).parentElement.value?.contains(v.target) && v.preventDefault(), n("focusOutside", v);
        }),
        onInteractOutside: g[2] || (g[2] = (v) => n("interactOutside", v)),
        onEscapeKeyDown: g[3] || (g[3] = (v) => n("escapeKeyDown", v)),
        onPointerDownOutside: g[4] || (g[4] = (v) => {
          u(s).parentElement.value?.contains(v.target) && v.preventDefault(), n("pointerDownOutside", v);
        })
      }, {
        default: _(() => [(h(), k(ut(u(r) === "popper" ? u(As) : u(U)), O({
          ...p.$attrs,
          ...u(d)
        }, {
          id: u(s).contentId,
          ref: u(i),
          "data-state": u(s).open.value ? "open" : "closed",
          style: {
            display: "flex",
            flexDirection: "column",
            outline: "none",
            ...u(r) === "popper" ? c : {}
          }
        }), {
          default: _(() => [S(p.$slots, "default")]),
          _: 3
        }, 16, [
          "id",
          "data-state",
          "style"
        ]))]),
        _: 3
      }, 8, ["disable-outside-pointer-events"])]),
      _: 3
    }));
  }
}), n$ = a$, r$ = /* @__PURE__ */ L({
  __name: "ComboboxArrow",
  props: {
    width: {
      type: Number,
      required: !1,
      default: 10
    },
    height: {
      type: Number,
      required: !1,
      default: 5
    },
    rounded: {
      type: Boolean,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "svg"
    }
  },
  setup(e) {
    const t = e, a = or(), n = e$();
    return Z(), (r, s) => u(a).open.value && u(n).position.value === "popper" ? (h(), k(u($s), pe(O({ key: 0 }, t)), {
      default: _(() => [S(r.$slots, "default")]),
      _: 3
    }, 16)) : D("v-if", !0);
  }
}), Ey = r$, s$ = /* @__PURE__ */ L({
  __name: "ComboboxContent",
  props: {
    forceMount: {
      type: Boolean,
      required: !1
    },
    position: {
      type: String,
      required: !1
    },
    bodyLock: {
      type: Boolean,
      required: !1
    },
    side: {
      type: null,
      required: !1
    },
    sideOffset: {
      type: Number,
      required: !1
    },
    sideFlip: {
      type: Boolean,
      required: !1
    },
    align: {
      type: null,
      required: !1
    },
    alignOffset: {
      type: Number,
      required: !1
    },
    alignFlip: {
      type: Boolean,
      required: !1
    },
    avoidCollisions: {
      type: Boolean,
      required: !1
    },
    collisionBoundary: {
      type: null,
      required: !1
    },
    collisionPadding: {
      type: [Number, Object],
      required: !1
    },
    arrowPadding: {
      type: Number,
      required: !1
    },
    sticky: {
      type: String,
      required: !1
    },
    hideWhenDetached: {
      type: Boolean,
      required: !1
    },
    positionStrategy: {
      type: String,
      required: !1
    },
    updatePositionStrategy: {
      type: String,
      required: !1
    },
    disableUpdateOnLayoutShift: {
      type: Boolean,
      required: !1
    },
    prioritizePosition: {
      type: Boolean,
      required: !1
    },
    reference: {
      type: null,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    },
    disableOutsidePointerEvents: {
      type: Boolean,
      required: !1
    }
  },
  emits: [
    "escapeKeyDown",
    "pointerDownOutside",
    "focusOutside",
    "interactOutside"
  ],
  setup(e, { emit: t }) {
    const r = Xe(e, t), { forwardRef: s } = Z(), i = or();
    return i.contentId ||= pt(void 0, "reka-combobox-content"), (o, l) => (h(), k(u(Xt), { present: o.forceMount || u(i).open.value }, {
      default: _(() => [V(n$, O({
        ...u(r),
        ...o.$attrs
      }, { ref: u(s) }), {
        default: _(() => [S(o.$slots, "default")]),
        _: 3
      }, 16)]),
      _: 3
    }, 8, ["present"]));
  }
}), Ty = s$, i$ = /* @__PURE__ */ L({
  __name: "ComboboxEmpty",
  props: {
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  setup(e) {
    const t = e, a = or(), n = T(() => a.ignoreFilter.value ? a.allItems.value.size === 0 : a.filterState.value.count === 0);
    return (r, s) => n.value ? (h(), k(u(U), pe(O({ key: 0 }, t)), {
      default: _(() => [S(r.$slots, "default", {}, () => [s[0] || (s[0] = ee("No options"))])]),
      _: 3
    }, 16)) : D("v-if", !0);
  }
}), By = i$;
const [Py, o$] = Me("ComboboxGroup");
var l$ = /* @__PURE__ */ L({
  __name: "ComboboxGroup",
  props: {
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  setup(e) {
    const t = e, a = pt(void 0, "reka-combobox-group"), n = or(), r = T(() => n.ignoreFilter.value ? !0 : n.filterSearch.value ? n.filterState.value.groups.has(a) : !0), s = o$({
      id: a,
      labelId: ""
    });
    return Pe(() => {
      n.allGroups.value.has(a) || n.allGroups.value.set(a, /* @__PURE__ */ new Set());
    }), Bt(() => {
      n.allGroups.value.delete(a);
    }), (i, o) => (h(), k(u(ky), O({
      id: u(a),
      "aria-labelledby": u(s).labelId
    }, t, { hidden: r.value ? void 0 : !0 }), {
      default: _(() => [S(i.$slots, "default")]),
      _: 3
    }, 16, [
      "id",
      "aria-labelledby",
      "hidden"
    ]));
  }
}), sl = l$, u$ = /* @__PURE__ */ L({
  __name: "ComboboxInput",
  props: {
    displayValue: {
      type: Function,
      required: !1
    },
    modelValue: {
      type: String,
      required: !1
    },
    autoFocus: {
      type: Boolean,
      required: !1
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "input"
    }
  },
  emits: ["update:modelValue"],
  setup(e, { emit: t }) {
    const a = e, n = t, r = or(), s = ql(), { primitiveElement: i, currentElement: o } = ea(), l = Ze(a, "modelValue", n, { passive: a.modelValue === void 0 });
    Pe(() => {
      o.value && r.onInputElementChange(o.value);
    });
    function d(v) {
      r.open.value || r.onOpenChange(!0);
    }
    function c(v) {
      const m = v.target;
      r.open.value ? r.filterSearch.value = m.value : (r.onOpenChange(!0), Be(() => {
        m.value && (r.filterSearch.value = m.value, s.highlightFirstItem());
      }));
    }
    function f() {
      r.openOnFocus.value && !r.open.value && r.onOpenChange(!0);
    }
    function p() {
      r.openOnClick.value && !r.open.value && r.onOpenChange(!0);
    }
    function g() {
      const v = r.modelValue.value;
      a.displayValue ? l.value = a.displayValue(v) : !r.multiple.value && v && !Array.isArray(v) && typeof v != "object" ? l.value = v.toString() : l.value = "", Be(() => {
        l.value = l.value;
      });
    }
    return r.onResetSearchTerm(() => {
      g();
    }), ye(r.modelValue, async () => {
      !r.isUserInputted.value && r.resetSearchTermOnSelect.value && g();
    }, {
      immediate: !0,
      deep: !0
    }), ye(r.filterState, () => {
      r.isVirtual.value || s.highlightFirstItem();
    }), (v, m) => (h(), k(u(_y), {
      ref_key: "primitiveElement",
      ref: i,
      modelValue: u(l),
      "onUpdate:modelValue": m[0] || (m[0] = (y) => ht(l) ? l.value = y : null),
      as: v.as,
      "as-child": v.asChild,
      "auto-focus": v.autoFocus,
      disabled: v.disabled,
      "aria-expanded": u(r).open.value,
      "aria-controls": u(r).contentId,
      "aria-autocomplete": "list",
      role: "combobox",
      autocomplete: "off",
      onClick: p,
      onInput: c,
      onKeydown: nt(ze(d, ["prevent"]), ["down", "up"]),
      onFocus: f
    }, {
      default: _(() => [S(v.$slots, "default")]),
      _: 3
    }, 8, [
      "modelValue",
      "as",
      "as-child",
      "auto-focus",
      "disabled",
      "aria-expanded",
      "aria-controls",
      "onKeydown"
    ]));
  }
}), _d = u$, d$ = /* @__PURE__ */ L({
  __name: "ComboboxItem",
  props: {
    textValue: {
      type: String,
      required: !1
    },
    value: {
      type: null,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  emits: ["select"],
  setup(e, { emit: t }) {
    const a = e, n = t, r = pt(void 0, "reka-combobox-item"), s = or(), i = Py(null), { primitiveElement: o, currentElement: l } = ea();
    if (a.value === "") throw new Error("A <ComboboxItem /> must have a value prop that is not an empty string. This is because the Combobox value can be set to an empty string to clear the selection and show the placeholder.");
    const d = T(() => {
      if (s.isVirtual.value || s.ignoreFilter.value || !s.filterSearch.value) return !0;
      {
        const c = s.filterState.value.items.get(r);
        return c === void 0 ? !0 : c > 0;
      }
    });
    return Pe(() => {
      s.allItems.value.set(r, a.textValue || l.value.textContent || l.value.innerText);
      const c = i?.id;
      c && (s.allGroups.value.has(c) ? s.allGroups.value.get(c)?.add(r) : s.allGroups.value.set(c, /* @__PURE__ */ new Set([r])));
    }), Bt(() => {
      s.allItems.value.delete(r);
    }), (c, f) => d.value ? (h(), k(u(Ay), O({ key: 0 }, a, {
      id: u(r),
      ref_key: "primitiveElement",
      ref: o,
      disabled: u(s).disabled.value || c.disabled,
      onSelect: f[0] || (f[0] = (p) => {
        n("select", p), !p.defaultPrevented && !u(s).multiple.value && !c.disabled && !u(s).disabled.value && (p.preventDefault(), u(s).onOpenChange(!1), u(s).modelValue.value = a.value);
      })
    }), {
      default: _(() => [S(c.$slots, "default", {}, () => [ee(X(c.value), 1)])]),
      _: 3
    }, 16, ["id", "disabled"])) : D("v-if", !0);
  }
}), il = d$, c$ = /* @__PURE__ */ L({
  __name: "ComboboxItemIndicator",
  props: {
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "span"
    }
  },
  setup(e) {
    const t = e;
    return (a, n) => (h(), k(u($y), pe(me(t)), {
      default: _(() => [S(a.$slots, "default")]),
      _: 3
    }, 16));
  }
}), Dy = c$, f$ = /* @__PURE__ */ L({
  __name: "ComboboxLabel",
  props: {
    for: {
      type: String,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "div"
    }
  },
  setup(e) {
    const t = e;
    Z();
    const a = Py({
      id: "",
      labelId: ""
    });
    return a.labelId ||= pt(void 0, "reka-combobox-group-label"), (n, r) => (h(), k(u(U), O(t, { id: u(a).labelId }), {
      default: _(() => [S(n.$slots, "default")]),
      _: 3
    }, 16, ["id"]));
  }
}), My = f$, p$ = /* @__PURE__ */ L({
  __name: "ComboboxPortal",
  props: {
    to: {
      type: null,
      required: !1
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    defer: {
      type: Boolean,
      required: !1
    },
    forceMount: {
      type: Boolean,
      required: !1
    }
  },
  setup(e) {
    const t = e;
    return (a, n) => (h(), k(u(ir), pe(me(t)), {
      default: _(() => [S(a.$slots, "default")]),
      _: 3
    }, 16));
  }
}), Ry = p$, g$ = /* @__PURE__ */ L({
  __name: "ComboboxSeparator",
  props: {
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  setup(e) {
    const t = e;
    return Z(), (a, n) => (h(), k(u(U), O(t, { "aria-hidden": "true" }), {
      default: _(() => [S(a.$slots, "default")]),
      _: 3
    }, 16));
  }
}), Ly = g$, v$ = /* @__PURE__ */ L({
  __name: "ComboboxTrigger",
  props: {
    disabled: {
      type: Boolean,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "button"
    }
  },
  setup(e) {
    const t = e, { forwardRef: a, currentElement: n } = Z(), r = or(), s = T(() => t.disabled || r.disabled.value || !1);
    return Pe(() => {
      n.value && r.onTriggerElementChange(n.value);
    }), (i, o) => (h(), k(u(U), O(t, {
      ref: u(a),
      type: i.as === "button" ? "button" : void 0,
      tabindex: "-1",
      "aria-label": "Show popup",
      "aria-haspopup": "listbox",
      "aria-expanded": u(r).open.value,
      "aria-controls": u(r).contentId,
      "data-state": u(r).open.value ? "open" : "closed",
      disabled: s.value,
      "data-disabled": s.value ? "" : void 0,
      "aria-disabled": s.value ?? void 0,
      onClick: o[0] || (o[0] = (l) => u(r).onOpenChange(!u(r).open.value))
    }), {
      default: _(() => [S(i.$slots, "default")]),
      _: 3
    }, 16, [
      "type",
      "aria-expanded",
      "aria-controls",
      "data-state",
      "disabled",
      "data-disabled",
      "aria-disabled"
    ]));
  }
}), Oy = v$, h$ = /* @__PURE__ */ L({
  __name: "MenuAnchor",
  props: {
    reference: {
      type: null,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  setup(e) {
    const t = e;
    return (a, n) => (h(), k(u(Lr), pe(me(t)), {
      default: _(() => [S(a.$slots, "default")]),
      _: 3
    }, 16));
  }
}), Sf = h$, m$ = /* @__PURE__ */ L({
  __name: "MenuArrow",
  props: {
    width: {
      type: Number,
      required: !1
    },
    height: {
      type: Number,
      required: !1
    },
    rounded: {
      type: Boolean,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  setup(e) {
    const t = e;
    return (a, n) => (h(), k(u($s), pe(me(t)), {
      default: _(() => [S(a.$slots, "default")]),
      _: 3
    }, 16));
  }
}), Fy = m$;
function y$() {
  const e = N(!1);
  return Pe(() => {
    ra("keydown", () => {
      e.value = !0;
    }, {
      capture: !0,
      passive: !0
    }), ra(["pointerdown", "pointermove"], () => {
      e.value = !1;
    }, {
      capture: !0,
      passive: !0
    });
  }), e;
}
const b$ = fm(y$), [Fr, zy] = Me(["MenuRoot", "MenuSub"], "MenuContext"), [Ki, w$] = Me("MenuRoot");
var C$ = /* @__PURE__ */ L({
  __name: "MenuRoot",
  props: {
    open: {
      type: Boolean,
      required: !1,
      default: !1
    },
    dir: {
      type: String,
      required: !1
    },
    modal: {
      type: Boolean,
      required: !1,
      default: !0
    }
  },
  emits: ["update:open"],
  setup(e, { emit: t }) {
    const a = e, n = t, { modal: r, dir: s } = We(a), i = Yt(s), o = Ze(a, "open", n), l = N(), d = b$();
    return zy({
      open: o,
      onOpenChange: (c) => {
        o.value = c;
      },
      content: l,
      onContentChange: (c) => {
        l.value = c;
      }
    }), w$({
      onClose: () => {
        o.value = !1;
      },
      isUsingKeyboardRef: d,
      dir: i,
      modal: r
    }), (c, f) => (h(), k(u(Rr), null, {
      default: _(() => [S(c.$slots, "default")]),
      _: 3
    }));
  }
}), qy = C$;
const [_f, x$] = Me("MenuContent");
var S$ = /* @__PURE__ */ L({
  __name: "MenuContentImpl",
  props: /* @__PURE__ */ lm({
    loop: {
      type: Boolean,
      required: !1
    },
    disableOutsidePointerEvents: {
      type: Boolean,
      required: !1
    },
    disableOutsideScroll: {
      type: Boolean,
      required: !1
    },
    trapFocus: {
      type: Boolean,
      required: !1
    },
    side: {
      type: null,
      required: !1
    },
    sideOffset: {
      type: Number,
      required: !1
    },
    sideFlip: {
      type: Boolean,
      required: !1
    },
    align: {
      type: null,
      required: !1
    },
    alignOffset: {
      type: Number,
      required: !1
    },
    alignFlip: {
      type: Boolean,
      required: !1
    },
    avoidCollisions: {
      type: Boolean,
      required: !1
    },
    collisionBoundary: {
      type: null,
      required: !1
    },
    collisionPadding: {
      type: [Number, Object],
      required: !1
    },
    arrowPadding: {
      type: Number,
      required: !1
    },
    sticky: {
      type: String,
      required: !1
    },
    hideWhenDetached: {
      type: Boolean,
      required: !1
    },
    positionStrategy: {
      type: String,
      required: !1
    },
    updatePositionStrategy: {
      type: String,
      required: !1
    },
    disableUpdateOnLayoutShift: {
      type: Boolean,
      required: !1
    },
    prioritizePosition: {
      type: Boolean,
      required: !1
    },
    reference: {
      type: null,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  }, { ...wy }),
  emits: [
    "escapeKeyDown",
    "pointerDownOutside",
    "focusOutside",
    "interactOutside",
    "entryFocus",
    "openAutoFocus",
    "closeAutoFocus",
    "dismiss"
  ],
  setup(e, { emit: t }) {
    const a = e, n = t, r = Fr(), s = Ki(), { trapFocus: i, disableOutsidePointerEvents: o, loop: l } = We(a);
    nf(), Oi(o.value);
    const d = N(""), c = N(0), f = N(0), p = N(null), g = N("right"), v = N(0), m = N(null), y = N(), { forwardRef: x, currentElement: b } = Z(), { handleTypeaheadSearch: C } = Vi();
    ye(b, (P) => {
      r.onContentChange(P);
    }), Bt(() => {
      window.clearTimeout(c.value);
    });
    function w(P) {
      return g.value === p.value?.side && a_(P, p.value?.area);
    }
    async function $(P) {
      n("openAutoFocus", P), !P.defaultPrevented && (P.preventDefault(), b.value?.focus({ preventScroll: !0 }));
    }
    function B(P) {
      if (P.defaultPrevented) return;
      const F = P.target.closest("[data-reka-menu-content]") === P.currentTarget, H = P.ctrlKey || P.altKey || P.metaKey, j = P.key.length === 1, K = Mr(P, dt(), b.value, {
        loop: l.value,
        arrowKeyOptions: "vertical",
        dir: s?.dir.value,
        focus: !0,
        attributeName: "[data-reka-collection-item]:not([data-disabled])"
      });
      if (K) return K?.focus();
      if (P.code === "Space") return;
      const z = y.value?.getItems() ?? [];
      if (F && (P.key === "Tab" && P.preventDefault(), !H && j && C(P.key, z)), P.target !== b.value || !QS.includes(P.key)) return;
      P.preventDefault();
      const G = [...z.map((Y) => Y.ref)];
      ay.includes(P.key) && G.reverse(), yd(G);
    }
    function I(P) {
      P?.currentTarget?.contains?.(P.target) || (window.clearTimeout(c.value), d.value = "");
    }
    function E(P) {
      if (!yi(P)) return;
      const R = P.target, F = v.value !== P.clientX;
      if (P?.currentTarget?.contains(R) && F) {
        const H = P.clientX > v.value ? "right" : "left";
        g.value = H, v.value = P.clientX;
      }
    }
    return x$({
      onItemEnter: (P) => !!w(P),
      onItemLeave: (P) => {
        w(P) || (b.value?.focus(), m.value = null);
      },
      onTriggerLeave: (P) => !!w(P),
      searchRef: d,
      pointerGraceTimerRef: f,
      onPointerGraceIntentChange: (P) => {
        p.value = P;
      }
    }), (P, R) => (h(), k(u(Ni), {
      "as-child": "",
      trapped: u(i),
      onMountAutoFocus: $,
      onUnmountAutoFocus: R[7] || (R[7] = (F) => n("closeAutoFocus", F))
    }, {
      default: _(() => [V(u(sr), {
        "as-child": "",
        "disable-outside-pointer-events": u(o),
        onEscapeKeyDown: R[2] || (R[2] = (F) => n("escapeKeyDown", F)),
        onPointerDownOutside: R[3] || (R[3] = (F) => n("pointerDownOutside", F)),
        onFocusOutside: R[4] || (R[4] = (F) => n("focusOutside", F)),
        onInteractOutside: R[5] || (R[5] = (F) => n("interactOutside", F)),
        onDismiss: R[6] || (R[6] = (F) => n("dismiss"))
      }, {
        default: _(() => [V(u(Hi), {
          ref_key: "rovingFocusGroupRef",
          ref: y,
          "current-tab-stop-id": m.value,
          "onUpdate:currentTabStopId": R[0] || (R[0] = (F) => m.value = F),
          "as-child": "",
          orientation: "vertical",
          dir: u(s).dir.value,
          loop: u(l),
          onEntryFocus: R[1] || (R[1] = (F) => {
            n("entryFocus", F), u(s).isUsingKeyboardRef.value || F.preventDefault();
          })
        }, {
          default: _(() => [V(u(As), {
            ref: u(x),
            role: "menu",
            as: P.as,
            "as-child": P.asChild,
            "aria-orientation": "vertical",
            "data-reka-menu-content": "",
            "data-state": u(uf)(u(r).open.value),
            dir: u(s).dir.value,
            side: P.side,
            "side-offset": P.sideOffset,
            align: P.align,
            "align-offset": P.alignOffset,
            "avoid-collisions": P.avoidCollisions,
            "collision-boundary": P.collisionBoundary,
            "collision-padding": P.collisionPadding,
            "arrow-padding": P.arrowPadding,
            "prioritize-position": P.prioritizePosition,
            "position-strategy": P.positionStrategy,
            "update-position-strategy": P.updatePositionStrategy,
            sticky: P.sticky,
            "hide-when-detached": P.hideWhenDetached,
            reference: P.reference,
            onKeydown: B,
            onBlur: I,
            onPointermove: E
          }, {
            default: _(() => [S(P.$slots, "default")]),
            _: 3
          }, 8, [
            "as",
            "as-child",
            "data-state",
            "dir",
            "side",
            "side-offset",
            "align",
            "align-offset",
            "avoid-collisions",
            "collision-boundary",
            "collision-padding",
            "arrow-padding",
            "prioritize-position",
            "position-strategy",
            "update-position-strategy",
            "sticky",
            "hide-when-detached",
            "reference"
          ])]),
          _: 3
        }, 8, [
          "current-tab-stop-id",
          "dir",
          "loop"
        ])]),
        _: 3
      }, 8, ["disable-outside-pointer-events"])]),
      _: 3
    }, 8, ["trapped"]));
  }
}), kf = S$, _$ = /* @__PURE__ */ L({
  inheritAttrs: !1,
  __name: "MenuItemImpl",
  props: {
    disabled: {
      type: Boolean,
      required: !1
    },
    textValue: {
      type: String,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  setup(e) {
    const t = e, a = _f(), { forwardRef: n } = Z(), { CollectionItem: r } = yt(), s = N(!1);
    async function i(l) {
      l.defaultPrevented || yi(l) && (t.disabled ? a.onItemLeave(l) : a.onItemEnter(l) || l.currentTarget?.focus({ preventScroll: !0 }));
    }
    async function o(l) {
      await Be(), !l.defaultPrevented && yi(l) && a.onItemLeave(l);
    }
    return (l, d) => (h(), k(u(r), { value: { textValue: l.textValue } }, {
      default: _(() => [V(u(U), O({
        ref: u(n),
        role: "menuitem",
        tabindex: "-1"
      }, l.$attrs, {
        as: l.as,
        "as-child": l.asChild,
        "aria-disabled": l.disabled || void 0,
        "data-disabled": l.disabled ? "" : void 0,
        "data-highlighted": s.value ? "" : void 0,
        onPointermove: i,
        onPointerleave: o,
        onFocus: d[0] || (d[0] = async (c) => {
          await Be(), !(c.defaultPrevented || l.disabled) && (s.value = !0);
        }),
        onBlur: d[1] || (d[1] = async (c) => {
          await Be(), !c.defaultPrevented && (s.value = !1);
        })
      }), {
        default: _(() => [S(l.$slots, "default")]),
        _: 3
      }, 16, [
        "as",
        "as-child",
        "aria-disabled",
        "data-disabled",
        "data-highlighted"
      ])]),
      _: 3
    }, 8, ["value"]));
  }
}), Vy = _$, k$ = /* @__PURE__ */ L({
  __name: "MenuItem",
  props: {
    disabled: {
      type: Boolean,
      required: !1
    },
    textValue: {
      type: String,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  emits: ["select"],
  setup(e, { emit: t }) {
    const a = e, n = t, { forwardRef: r, currentElement: s } = Z(), i = Ki(), o = _f(), l = N(!1);
    async function d() {
      const c = s.value;
      if (!a.disabled && c) {
        const f = new CustomEvent(XS, {
          bubbles: !0,
          cancelable: !0
        });
        n("select", f), await Be(), f.defaultPrevented ? l.value = !1 : i.onClose();
      }
    }
    return (c, f) => (h(), k(Vy, O(a, {
      ref: u(r),
      onClick: d,
      onPointerdown: f[0] || (f[0] = () => {
        l.value = !0;
      }),
      onPointerup: f[1] || (f[1] = async (p) => {
        await Be(), !p.defaultPrevented && (l.value || p.currentTarget?.click());
      }),
      onKeydown: f[2] || (f[2] = async (p) => {
        const g = u(o).searchRef.value !== "";
        c.disabled || g && p.key === " " || u(md).includes(p.key) && (p.currentTarget.click(), p.preventDefault());
      })
    }), {
      default: _(() => [S(c.$slots, "default")]),
      _: 3
    }, 16));
  }
}), Vl = k$;
const [A$, Ny] = Me(["MenuCheckboxItem", "MenuRadioItem"], "MenuItemIndicatorContext");
var $$ = /* @__PURE__ */ L({
  __name: "MenuItemIndicator",
  props: {
    forceMount: {
      type: Boolean,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "span"
    }
  },
  setup(e) {
    const t = A$({ modelValue: N(!1) });
    return (a, n) => (h(), k(u(Xt), { present: a.forceMount || u(el)(u(t).modelValue.value) || u(t).modelValue.value === !0 }, {
      default: _(() => [V(u(U), {
        as: a.as,
        "as-child": a.asChild,
        "data-state": u(df)(u(t).modelValue.value)
      }, {
        default: _(() => [S(a.$slots, "default")]),
        _: 3
      }, 8, [
        "as",
        "as-child",
        "data-state"
      ])]),
      _: 3
    }, 8, ["present"]));
  }
}), Hy = $$, I$ = /* @__PURE__ */ L({
  __name: "MenuCheckboxItem",
  props: {
    modelValue: {
      type: [Boolean, String],
      required: !1,
      default: !1
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    textValue: {
      type: String,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  emits: ["select", "update:modelValue"],
  setup(e, { emit: t }) {
    const a = e, n = t, r = Ze(a, "modelValue", n);
    return Ny({ modelValue: r }), (s, i) => (h(), k(Vl, O({ role: "menuitemcheckbox" }, a, {
      "aria-checked": u(el)(u(r)) ? "mixed" : u(r),
      "data-state": u(df)(u(r)),
      onSelect: i[0] || (i[0] = async (o) => {
        n("select", o), u(el)(u(r)) ? r.value = !0 : r.value = !u(r);
      })
    }), {
      default: _(() => [S(s.$slots, "default", { modelValue: u(r) })]),
      _: 3
    }, 16, ["aria-checked", "data-state"]));
  }
}), jy = I$, E$ = /* @__PURE__ */ L({
  __name: "MenuRootContentModal",
  props: {
    loop: {
      type: Boolean,
      required: !1
    },
    side: {
      type: null,
      required: !1
    },
    sideOffset: {
      type: Number,
      required: !1
    },
    sideFlip: {
      type: Boolean,
      required: !1
    },
    align: {
      type: null,
      required: !1
    },
    alignOffset: {
      type: Number,
      required: !1
    },
    alignFlip: {
      type: Boolean,
      required: !1
    },
    avoidCollisions: {
      type: Boolean,
      required: !1
    },
    collisionBoundary: {
      type: null,
      required: !1
    },
    collisionPadding: {
      type: [Number, Object],
      required: !1
    },
    arrowPadding: {
      type: Number,
      required: !1
    },
    sticky: {
      type: String,
      required: !1
    },
    hideWhenDetached: {
      type: Boolean,
      required: !1
    },
    positionStrategy: {
      type: String,
      required: !1
    },
    updatePositionStrategy: {
      type: String,
      required: !1
    },
    disableUpdateOnLayoutShift: {
      type: Boolean,
      required: !1
    },
    prioritizePosition: {
      type: Boolean,
      required: !1
    },
    reference: {
      type: null,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  emits: [
    "escapeKeyDown",
    "pointerDownOutside",
    "focusOutside",
    "interactOutside",
    "entryFocus",
    "openAutoFocus",
    "closeAutoFocus"
  ],
  setup(e, { emit: t }) {
    const a = e, n = t, r = Xe(a, n), s = Fr(), { forwardRef: i, currentElement: o } = Z();
    return zi(o), (l, d) => (h(), k(kf, O(u(r), {
      ref: u(i),
      "trap-focus": u(s).open.value,
      "disable-outside-pointer-events": u(s).open.value,
      "disable-outside-scroll": !0,
      onDismiss: d[0] || (d[0] = (c) => u(s).onOpenChange(!1)),
      onFocusOutside: d[1] || (d[1] = ze((c) => n("focusOutside", c), ["prevent"]))
    }), {
      default: _(() => [S(l.$slots, "default")]),
      _: 3
    }, 16, ["trap-focus", "disable-outside-pointer-events"]));
  }
}), T$ = E$, B$ = /* @__PURE__ */ L({
  __name: "MenuRootContentNonModal",
  props: {
    loop: {
      type: Boolean,
      required: !1
    },
    side: {
      type: null,
      required: !1
    },
    sideOffset: {
      type: Number,
      required: !1
    },
    sideFlip: {
      type: Boolean,
      required: !1
    },
    align: {
      type: null,
      required: !1
    },
    alignOffset: {
      type: Number,
      required: !1
    },
    alignFlip: {
      type: Boolean,
      required: !1
    },
    avoidCollisions: {
      type: Boolean,
      required: !1
    },
    collisionBoundary: {
      type: null,
      required: !1
    },
    collisionPadding: {
      type: [Number, Object],
      required: !1
    },
    arrowPadding: {
      type: Number,
      required: !1
    },
    sticky: {
      type: String,
      required: !1
    },
    hideWhenDetached: {
      type: Boolean,
      required: !1
    },
    positionStrategy: {
      type: String,
      required: !1
    },
    updatePositionStrategy: {
      type: String,
      required: !1
    },
    disableUpdateOnLayoutShift: {
      type: Boolean,
      required: !1
    },
    prioritizePosition: {
      type: Boolean,
      required: !1
    },
    reference: {
      type: null,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  emits: [
    "escapeKeyDown",
    "pointerDownOutside",
    "focusOutside",
    "interactOutside",
    "entryFocus",
    "openAutoFocus",
    "closeAutoFocus"
  ],
  setup(e, { emit: t }) {
    const r = Xe(e, t), s = Fr();
    return (i, o) => (h(), k(kf, O(u(r), {
      "trap-focus": !1,
      "disable-outside-pointer-events": !1,
      "disable-outside-scroll": !1,
      onDismiss: o[0] || (o[0] = (l) => u(s).onOpenChange(!1))
    }), {
      default: _(() => [S(i.$slots, "default")]),
      _: 3
    }, 16));
  }
}), P$ = B$, D$ = /* @__PURE__ */ L({
  __name: "MenuContent",
  props: {
    forceMount: {
      type: Boolean,
      required: !1
    },
    loop: {
      type: Boolean,
      required: !1
    },
    side: {
      type: null,
      required: !1
    },
    sideOffset: {
      type: Number,
      required: !1
    },
    sideFlip: {
      type: Boolean,
      required: !1
    },
    align: {
      type: null,
      required: !1
    },
    alignOffset: {
      type: Number,
      required: !1
    },
    alignFlip: {
      type: Boolean,
      required: !1
    },
    avoidCollisions: {
      type: Boolean,
      required: !1
    },
    collisionBoundary: {
      type: null,
      required: !1
    },
    collisionPadding: {
      type: [Number, Object],
      required: !1
    },
    arrowPadding: {
      type: Number,
      required: !1
    },
    sticky: {
      type: String,
      required: !1
    },
    hideWhenDetached: {
      type: Boolean,
      required: !1
    },
    positionStrategy: {
      type: String,
      required: !1
    },
    updatePositionStrategy: {
      type: String,
      required: !1
    },
    disableUpdateOnLayoutShift: {
      type: Boolean,
      required: !1
    },
    prioritizePosition: {
      type: Boolean,
      required: !1
    },
    reference: {
      type: null,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  emits: [
    "escapeKeyDown",
    "pointerDownOutside",
    "focusOutside",
    "interactOutside",
    "entryFocus",
    "openAutoFocus",
    "closeAutoFocus"
  ],
  setup(e, { emit: t }) {
    const r = Xe(e, t), s = Fr(), i = Ki();
    return (o, l) => (h(), k(u(Xt), { present: o.forceMount || u(s).open.value }, {
      default: _(() => [u(i).modal.value ? (h(), k(T$, pe(O({ key: 0 }, {
        ...o.$attrs,
        ...u(r)
      })), {
        default: _(() => [S(o.$slots, "default")]),
        _: 3
      }, 16)) : (h(), k(P$, pe(O({ key: 1 }, {
        ...o.$attrs,
        ...u(r)
      })), {
        default: _(() => [S(o.$slots, "default")]),
        _: 3
      }, 16))]),
      _: 3
    }, 8, ["present"]));
  }
}), Ky = D$, M$ = /* @__PURE__ */ L({
  __name: "MenuGroup",
  props: {
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  setup(e) {
    const t = e;
    return (a, n) => (h(), k(u(U), O({ role: "group" }, t), {
      default: _(() => [S(a.$slots, "default")]),
      _: 3
    }, 16));
  }
}), Af = M$, R$ = /* @__PURE__ */ L({
  __name: "MenuLabel",
  props: {
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "div"
    }
  },
  setup(e) {
    const t = e;
    return (a, n) => (h(), k(u(U), pe(me(t)), {
      default: _(() => [S(a.$slots, "default")]),
      _: 3
    }, 16));
  }
}), Gy = R$, L$ = /* @__PURE__ */ L({
  __name: "MenuPortal",
  props: {
    to: {
      type: null,
      required: !1
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    defer: {
      type: Boolean,
      required: !1
    },
    forceMount: {
      type: Boolean,
      required: !1
    }
  },
  setup(e) {
    const t = e;
    return (a, n) => (h(), k(u(ir), pe(me(t)), {
      default: _(() => [S(a.$slots, "default")]),
      _: 3
    }, 16));
  }
}), Uy = L$;
const [O$, F$] = Me("MenuRadioGroup");
var z$ = /* @__PURE__ */ L({
  __name: "MenuRadioGroup",
  props: {
    modelValue: {
      type: String,
      required: !1,
      default: ""
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  emits: ["update:modelValue"],
  setup(e, { emit: t }) {
    const a = e, r = Ze(a, "modelValue", t);
    return F$({
      modelValue: r,
      onValueChange: (s) => {
        r.value = s;
      }
    }), (s, i) => (h(), k(Af, pe(me(a)), {
      default: _(() => [S(s.$slots, "default", { modelValue: u(r) })]),
      _: 3
    }, 16));
  }
}), Wy = z$, q$ = /* @__PURE__ */ L({
  __name: "MenuRadioItem",
  props: {
    value: {
      type: String,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    textValue: {
      type: String,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  emits: ["select"],
  setup(e, { emit: t }) {
    const a = e, n = t, { value: r } = We(a), s = O$(), i = T(() => s.modelValue.value === r?.value);
    return Ny({ modelValue: i }), (o, l) => (h(), k(Vl, O({ role: "menuitemradio" }, a, {
      "aria-checked": i.value,
      "data-state": u(df)(i.value),
      onSelect: l[0] || (l[0] = async (d) => {
        n("select", d), u(s).onValueChange(u(r));
      })
    }), {
      default: _(() => [S(o.$slots, "default")]),
      _: 3
    }, 16, ["aria-checked", "data-state"]));
  }
}), Yy = q$, V$ = /* @__PURE__ */ L({
  __name: "MenuSeparator",
  props: {
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  setup(e) {
    const t = e;
    return (a, n) => (h(), k(u(U), O(t, {
      role: "separator",
      "aria-orientation": "horizontal"
    }), {
      default: _(() => [S(a.$slots, "default")]),
      _: 3
    }, 16));
  }
}), Xy = V$;
const [Jy, N$] = Me("MenuSub");
var H$ = /* @__PURE__ */ L({
  __name: "MenuSub",
  props: { open: {
    type: Boolean,
    required: !1,
    default: void 0
  } },
  emits: ["update:open"],
  setup(e, { emit: t }) {
    const a = e, r = Ze(a, "open", t, {
      defaultValue: !1,
      passive: a.open === void 0
    }), s = Fr(), i = N(), o = N();
    return ot((l) => {
      s?.open.value === !1 && (r.value = !1), l(() => r.value = !1);
    }), zy({
      open: r,
      onOpenChange: (l) => {
        r.value = l;
      },
      content: o,
      onContentChange: (l) => {
        o.value = l;
      }
    }), N$({
      triggerId: "",
      contentId: "",
      trigger: i,
      onTriggerChange: (l) => {
        i.value = l;
      }
    }), (l, d) => (h(), k(u(Rr), null, {
      default: _(() => [S(l.$slots, "default")]),
      _: 3
    }));
  }
}), Qy = H$, j$ = /* @__PURE__ */ L({
  __name: "MenuSubContent",
  props: {
    forceMount: {
      type: Boolean,
      required: !1
    },
    loop: {
      type: Boolean,
      required: !1
    },
    sideOffset: {
      type: Number,
      required: !1
    },
    sideFlip: {
      type: Boolean,
      required: !1
    },
    alignOffset: {
      type: Number,
      required: !1
    },
    alignFlip: {
      type: Boolean,
      required: !1
    },
    avoidCollisions: {
      type: Boolean,
      required: !1
    },
    collisionBoundary: {
      type: null,
      required: !1
    },
    collisionPadding: {
      type: [Number, Object],
      required: !1
    },
    arrowPadding: {
      type: Number,
      required: !1
    },
    sticky: {
      type: String,
      required: !1
    },
    hideWhenDetached: {
      type: Boolean,
      required: !1
    },
    positionStrategy: {
      type: String,
      required: !1
    },
    updatePositionStrategy: {
      type: String,
      required: !1
    },
    disableUpdateOnLayoutShift: {
      type: Boolean,
      required: !1
    },
    prioritizePosition: {
      type: Boolean,
      required: !1,
      default: !0
    },
    reference: {
      type: null,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  emits: [
    "escapeKeyDown",
    "pointerDownOutside",
    "focusOutside",
    "interactOutside",
    "entryFocus",
    "openAutoFocus",
    "closeAutoFocus"
  ],
  setup(e, { emit: t }) {
    const r = Xe(e, t), s = Fr(), i = Ki(), o = Jy(), { forwardRef: l, currentElement: d } = Z();
    return o.contentId ||= pt(void 0, "reka-menu-sub-content"), (c, f) => (h(), k(u(Xt), { present: c.forceMount || u(s).open.value }, {
      default: _(() => [V(kf, O(u(r), {
        id: u(o).contentId,
        ref: u(l),
        "aria-labelledby": u(o).triggerId,
        align: "start",
        side: u(i).dir.value === "rtl" ? "left" : "right",
        "disable-outside-pointer-events": !1,
        "disable-outside-scroll": !1,
        "trap-focus": !1,
        onOpenAutoFocus: f[0] || (f[0] = ze((p) => {
          u(i).isUsingKeyboardRef.value && u(d)?.focus();
        }, ["prevent"])),
        onCloseAutoFocus: f[1] || (f[1] = ze(() => {
        }, ["prevent"])),
        onFocusOutside: f[2] || (f[2] = (p) => {
          p.defaultPrevented || p.target !== u(o).trigger.value && u(s).onOpenChange(!1);
        }),
        onEscapeKeyDown: f[3] || (f[3] = (p) => {
          u(i).onClose(), p.preventDefault();
        }),
        onKeydown: f[4] || (f[4] = (p) => {
          const g = p.currentTarget?.contains(p.target), v = u(e_)[u(i).dir.value].includes(p.key);
          g && v && (u(s).onOpenChange(!1), u(o).trigger.value?.focus(), p.preventDefault());
        })
      }), {
        default: _(() => [S(c.$slots, "default")]),
        _: 3
      }, 16, [
        "id",
        "aria-labelledby",
        "side"
      ])]),
      _: 3
    }, 8, ["present"]));
  }
}), Zy = j$, K$ = /* @__PURE__ */ L({
  __name: "MenuSubTrigger",
  props: {
    disabled: {
      type: Boolean,
      required: !1
    },
    textValue: {
      type: String,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  setup(e) {
    const t = e, a = Fr(), n = Ki(), r = Jy(), s = _f(), i = N(null);
    r.triggerId ||= pt(void 0, "reka-menu-sub-trigger");
    function o() {
      i.value && window.clearTimeout(i.value), i.value = null;
    }
    Bt(() => {
      o();
    });
    function l(f) {
      !yi(f) || s.onItemEnter(f) || !t.disabled && !a.open.value && !i.value && (s.onPointerGraceIntentChange(null), i.value = window.setTimeout(() => {
        a.onOpenChange(!0), o();
      }, 100));
    }
    async function d(f) {
      if (!yi(f)) return;
      o();
      const p = a.content.value?.getBoundingClientRect();
      if (p?.width) {
        const g = a.content.value?.dataset.side, v = g === "right", m = v ? -5 : 5, y = p[v ? "left" : "right"], x = p[v ? "right" : "left"];
        s.onPointerGraceIntentChange({
          area: [
            {
              x: f.clientX + m,
              y: f.clientY
            },
            {
              x: y,
              y: p.top
            },
            {
              x,
              y: p.top
            },
            {
              x,
              y: p.bottom
            },
            {
              x: y,
              y: p.bottom
            }
          ],
          side: g
        }), window.clearTimeout(s.pointerGraceTimerRef.value), s.pointerGraceTimerRef.value = window.setTimeout(() => s.onPointerGraceIntentChange(null), 300);
      } else {
        if (s.onTriggerLeave(f)) return;
        s.onPointerGraceIntentChange(null);
      }
    }
    async function c(f) {
      const p = s.searchRef.value !== "";
      t.disabled || p && f.key === " " || ZS[n.dir.value].includes(f.key) && (a.onOpenChange(!0), await Be(), a.content.value?.focus(), f.preventDefault());
    }
    return (f, p) => (h(), k(Sf, { "as-child": "" }, {
      default: _(() => [V(Vy, O(t, {
        id: u(r).triggerId,
        ref: (g) => {
          u(r)?.onTriggerChange(g?.$el);
        },
        "aria-haspopup": "menu",
        "aria-expanded": u(a).open.value,
        "aria-controls": u(r).contentId,
        "data-state": u(uf)(u(a).open.value),
        onClick: p[0] || (p[0] = async (g) => {
          t.disabled || g.defaultPrevented || (g.currentTarget.focus(), u(a).open.value || u(a).onOpenChange(!0));
        }),
        onPointermove: l,
        onPointerleave: d,
        onKeydown: c
      }), {
        default: _(() => [S(f.$slots, "default")]),
        _: 3
      }, 16, [
        "id",
        "aria-expanded",
        "aria-controls",
        "data-state"
      ])]),
      _: 3
    }));
  }
}), eb = K$, G$ = /* @__PURE__ */ L({
  __name: "ContextMenuArrow",
  props: {
    width: {
      type: Number,
      required: !1,
      default: 10
    },
    height: {
      type: Number,
      required: !1,
      default: 5
    },
    rounded: {
      type: Boolean,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "svg"
    }
  },
  setup(e) {
    const t = e;
    return Z(), (a, n) => (h(), k(u(Fy), pe(me(t)), {
      default: _(() => [S(a.$slots, "default")]),
      _: 3
    }, 16));
  }
}), U$ = G$, W$ = /* @__PURE__ */ L({
  __name: "ContextMenuCheckboxItem",
  props: {
    modelValue: {
      type: [Boolean, String],
      required: !1
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    textValue: {
      type: String,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  emits: ["select", "update:modelValue"],
  setup(e, { emit: t }) {
    const a = e, r = en(t);
    return Z(), (s, i) => (h(), k(u(jy), pe(me({
      ...a,
      ...u(r)
    })), {
      default: _(() => [S(s.$slots, "default")]),
      _: 3
    }, 16));
  }
}), Y$ = W$;
const [tb, X$] = Me("ContextMenuRoot");
var J$ = /* @__PURE__ */ L({
  inheritAttrs: !1,
  __name: "ContextMenuRoot",
  props: {
    pressOpenDelay: {
      type: Number,
      required: !1,
      default: 700
    },
    dir: {
      type: String,
      required: !1
    },
    modal: {
      type: Boolean,
      required: !1,
      default: !0
    }
  },
  emits: ["update:open"],
  setup(e, { emit: t }) {
    const a = e, n = t, { dir: r, modal: s, pressOpenDelay: i } = We(a);
    Z();
    const o = Yt(r), l = N(!1), d = N();
    return X$({
      open: l,
      onOpenChange: (c) => {
        l.value = c;
      },
      dir: o,
      modal: s,
      triggerElement: d,
      pressOpenDelay: i
    }), ye(l, (c) => {
      n("update:open", c);
    }), (c, f) => (h(), k(u(qy), {
      open: l.value,
      "onUpdate:open": f[0] || (f[0] = (p) => l.value = p),
      dir: u(o),
      modal: u(s)
    }, {
      default: _(() => [S(c.$slots, "default")]),
      _: 3
    }, 8, [
      "open",
      "dir",
      "modal"
    ]));
  }
}), ab = J$, Q$ = /* @__PURE__ */ L({
  __name: "ContextMenuContent",
  props: {
    forceMount: {
      type: Boolean,
      required: !1
    },
    loop: {
      type: Boolean,
      required: !1
    },
    sideFlip: {
      type: Boolean,
      required: !1
    },
    alignOffset: {
      type: Number,
      required: !1,
      default: 0
    },
    alignFlip: {
      type: Boolean,
      required: !1
    },
    avoidCollisions: {
      type: Boolean,
      required: !1,
      default: !0
    },
    collisionBoundary: {
      type: null,
      required: !1,
      default: () => []
    },
    collisionPadding: {
      type: [Number, Object],
      required: !1,
      default: 0
    },
    sticky: {
      type: String,
      required: !1,
      default: "partial"
    },
    hideWhenDetached: {
      type: Boolean,
      required: !1,
      default: !1
    },
    positionStrategy: {
      type: String,
      required: !1
    },
    disableUpdateOnLayoutShift: {
      type: Boolean,
      required: !1
    },
    prioritizePosition: {
      type: Boolean,
      required: !1
    },
    reference: {
      type: null,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  emits: [
    "escapeKeyDown",
    "pointerDownOutside",
    "focusOutside",
    "interactOutside",
    "closeAutoFocus"
  ],
  setup(e, { emit: t }) {
    const r = Xe(e, t);
    Z();
    const s = tb(), i = N(!1);
    return (o, l) => (h(), k(u(Ky), O(u(r), {
      side: "right",
      "side-offset": 2,
      align: "start",
      "update-position-strategy": "always",
      style: {
        "--reka-context-menu-content-transform-origin": "var(--reka-popper-transform-origin)",
        "--reka-context-menu-content-available-width": "var(--reka-popper-available-width)",
        "--reka-context-menu-content-available-height": "var(--reka-popper-available-height)",
        "--reka-context-menu-trigger-width": "var(--reka-popper-anchor-width)",
        "--reka-context-menu-trigger-height": "var(--reka-popper-anchor-height)"
      },
      onCloseAutoFocus: l[0] || (l[0] = (d) => {
        !d.defaultPrevented && i.value && d.preventDefault(), i.value = !1;
      }),
      onInteractOutside: l[1] || (l[1] = (d) => {
        d.detail.originalEvent.button === 2 && d.target === u(s).triggerElement.value && d.preventDefault(), !d.defaultPrevented && !u(s).modal.value && (i.value = !0);
      })
    }), {
      default: _(() => [S(o.$slots, "default")]),
      _: 3
    }, 16));
  }
}), Z$ = Q$, eI = /* @__PURE__ */ L({
  __name: "ContextMenuGroup",
  props: {
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  setup(e) {
    const t = e;
    return Z(), (a, n) => (h(), k(u(Af), pe(me(t)), {
      default: _(() => [S(a.$slots, "default")]),
      _: 3
    }, 16));
  }
}), tI = eI, aI = /* @__PURE__ */ L({
  __name: "ContextMenuItem",
  props: {
    disabled: {
      type: Boolean,
      required: !1
    },
    textValue: {
      type: String,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  emits: ["select"],
  setup(e, { emit: t }) {
    const a = e, r = en(t);
    return Z(), (s, i) => (h(), k(u(Vl), pe(me({
      ...a,
      ...u(r)
    })), {
      default: _(() => [S(s.$slots, "default")]),
      _: 3
    }, 16));
  }
}), nI = aI, rI = /* @__PURE__ */ L({
  __name: "ContextMenuItemIndicator",
  props: {
    forceMount: {
      type: Boolean,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  setup(e) {
    const t = e;
    return Z(), (a, n) => (h(), k(u(Hy), pe(me(t)), {
      default: _(() => [S(a.$slots, "default")]),
      _: 3
    }, 16));
  }
}), sI = rI, iI = /* @__PURE__ */ L({
  __name: "ContextMenuLabel",
  props: {
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  setup(e) {
    const t = e;
    return Z(), (a, n) => (h(), k(u(Gy), pe(me(t)), {
      default: _(() => [S(a.$slots, "default")]),
      _: 3
    }, 16));
  }
}), oI = iI, lI = /* @__PURE__ */ L({
  __name: "ContextMenuPortal",
  props: {
    to: {
      type: null,
      required: !1
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    defer: {
      type: Boolean,
      required: !1
    },
    forceMount: {
      type: Boolean,
      required: !1
    }
  },
  setup(e) {
    const t = e;
    return (a, n) => (h(), k(u(Uy), pe(me(t)), {
      default: _(() => [S(a.$slots, "default")]),
      _: 3
    }, 16));
  }
}), uI = lI, dI = /* @__PURE__ */ L({
  __name: "ContextMenuRadioGroup",
  props: {
    modelValue: {
      type: String,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  emits: ["update:modelValue"],
  setup(e, { emit: t }) {
    const a = e, r = en(t);
    return Z(), (s, i) => (h(), k(u(Wy), pe(me({
      ...a,
      ...u(r)
    })), {
      default: _(() => [S(s.$slots, "default")]),
      _: 3
    }, 16));
  }
}), cI = dI, fI = /* @__PURE__ */ L({
  __name: "ContextMenuRadioItem",
  props: {
    value: {
      type: String,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    textValue: {
      type: String,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  emits: ["select"],
  setup(e, { emit: t }) {
    const a = e, r = en(t);
    return Z(), (s, i) => (h(), k(u(Yy), pe(me({
      ...a,
      ...u(r)
    })), {
      default: _(() => [S(s.$slots, "default")]),
      _: 3
    }, 16));
  }
}), pI = fI, gI = /* @__PURE__ */ L({
  __name: "ContextMenuSeparator",
  props: {
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  setup(e) {
    const t = e;
    return Z(), (a, n) => (h(), k(u(Xy), pe(me(t)), {
      default: _(() => [S(a.$slots, "default")]),
      _: 3
    }, 16));
  }
}), vI = gI, hI = /* @__PURE__ */ L({
  __name: "ContextMenuSub",
  props: {
    defaultOpen: {
      type: Boolean,
      required: !1
    },
    open: {
      type: Boolean,
      required: !1,
      default: void 0
    }
  },
  emits: ["update:open"],
  setup(e, { emit: t }) {
    const a = e, n = t;
    Z();
    const r = Ze(a, "open", n, {
      defaultValue: a.defaultOpen,
      passive: a.open === void 0
    });
    return (s, i) => (h(), k(u(Qy), {
      open: u(r),
      "onUpdate:open": i[0] || (i[0] = (o) => ht(r) ? r.value = o : null)
    }, {
      default: _(() => [S(s.$slots, "default", { open: u(r) })]),
      _: 3
    }, 8, ["open"]));
  }
}), mI = hI, yI = /* @__PURE__ */ L({
  __name: "ContextMenuSubContent",
  props: {
    forceMount: {
      type: Boolean,
      required: !1
    },
    loop: {
      type: Boolean,
      required: !1
    },
    sideOffset: {
      type: Number,
      required: !1
    },
    sideFlip: {
      type: Boolean,
      required: !1
    },
    alignOffset: {
      type: Number,
      required: !1
    },
    alignFlip: {
      type: Boolean,
      required: !1
    },
    avoidCollisions: {
      type: Boolean,
      required: !1
    },
    collisionBoundary: {
      type: null,
      required: !1
    },
    collisionPadding: {
      type: [Number, Object],
      required: !1
    },
    arrowPadding: {
      type: Number,
      required: !1
    },
    sticky: {
      type: String,
      required: !1
    },
    hideWhenDetached: {
      type: Boolean,
      required: !1
    },
    positionStrategy: {
      type: String,
      required: !1
    },
    updatePositionStrategy: {
      type: String,
      required: !1
    },
    disableUpdateOnLayoutShift: {
      type: Boolean,
      required: !1
    },
    prioritizePosition: {
      type: Boolean,
      required: !1
    },
    reference: {
      type: null,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  emits: [
    "escapeKeyDown",
    "pointerDownOutside",
    "focusOutside",
    "interactOutside",
    "entryFocus",
    "openAutoFocus",
    "closeAutoFocus"
  ],
  setup(e, { emit: t }) {
    const r = Xe(e, t);
    return Z(), (s, i) => (h(), k(u(Zy), O(u(r), { style: {
      "--reka-context-menu-content-transform-origin": "var(--reka-popper-transform-origin)",
      "--reka-context-menu-content-available-width": "var(--reka-popper-available-width)",
      "--reka-context-menu-content-available-height": "var(--reka-popper-available-height)",
      "--reka-context-menu-trigger-width": "var(--reka-popper-anchor-width)",
      "--reka-context-menu-trigger-height": "var(--reka-popper-anchor-height)"
    } }), {
      default: _(() => [S(s.$slots, "default")]),
      _: 3
    }, 16));
  }
}), bI = yI, wI = /* @__PURE__ */ L({
  __name: "ContextMenuSubTrigger",
  props: {
    disabled: {
      type: Boolean,
      required: !1
    },
    textValue: {
      type: String,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  setup(e) {
    const t = e;
    return Z(), (a, n) => (h(), k(u(eb), pe(me(t)), {
      default: _(() => [S(a.$slots, "default")]),
      _: 3
    }, 16));
  }
}), CI = wI;
function _g(e) {
  return e.pointerType !== "mouse";
}
var xI = /* @__PURE__ */ L({
  inheritAttrs: !1,
  __name: "ContextMenuTrigger",
  props: {
    disabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "span"
    }
  },
  setup(e) {
    const t = e, { disabled: a } = We(t), { forwardRef: n, currentElement: r } = Z(), s = tb(), i = N({
      x: 0,
      y: 0
    }), o = T(() => ({ getBoundingClientRect: () => ({
      width: 0,
      height: 0,
      left: i.value.x,
      right: i.value.x,
      top: i.value.y,
      bottom: i.value.y,
      ...i.value
    }) })), l = N(0);
    function d() {
      window.clearTimeout(l.value);
    }
    function c(v) {
      i.value = {
        x: v.clientX,
        y: v.clientY
      }, s.onOpenChange(!0);
    }
    async function f(v) {
      a.value || (await Be(), v.defaultPrevented || (d(), c(v), v.preventDefault()));
    }
    async function p(v) {
      a.value || (await Be(), _g(v) && !v.defaultPrevented && (d(), l.value = window.setTimeout(() => c(v), s.pressOpenDelay.value)));
    }
    async function g(v) {
      a.value || (await Be(), _g(v) && !v.defaultPrevented && d());
    }
    return Pe(() => {
      r.value && (s.triggerElement.value = r.value);
    }), (v, m) => (h(), M(te, null, [V(u(Sf), {
      as: "template",
      reference: o.value
    }, null, 8, ["reference"]), V(u(U), O({
      ref: u(n),
      as: v.as,
      "as-child": v.asChild,
      "data-state": u(s).open.value ? "open" : "closed",
      "data-disabled": u(a) ? "" : void 0,
      style: {
        WebkitTouchCallout: "none",
        pointerEvents: "auto"
      }
    }, v.$attrs, {
      onContextmenu: f,
      onPointerdown: p,
      onPointermove: g,
      onPointercancel: g,
      onPointerup: g
    }), {
      default: _(() => [S(v.$slots, "default")]),
      _: 3
    }, 16, [
      "as",
      "as-child",
      "data-state",
      "data-disabled"
    ])], 64));
  }
}), nb = xI;
const [zr, SI] = Me("PopoverRoot");
var _I = /* @__PURE__ */ L({
  __name: "PopoverRoot",
  props: {
    defaultOpen: {
      type: Boolean,
      required: !1,
      default: !1
    },
    open: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    modal: {
      type: Boolean,
      required: !1,
      default: !1
    }
  },
  emits: ["update:open"],
  setup(e, { emit: t }) {
    const a = e, n = t, { modal: r } = We(a), s = Ze(a, "open", n, {
      defaultValue: a.defaultOpen,
      passive: a.open === void 0
    }), i = N(), o = N(!1);
    return SI({
      contentId: "",
      triggerId: "",
      modal: r,
      open: s,
      onOpenChange: (l) => {
        s.value = l;
      },
      onOpenToggle: () => {
        s.value = !s.value;
      },
      triggerElement: i,
      hasCustomAnchor: o
    }), (l, d) => (h(), k(u(Rr), null, {
      default: _(() => [S(l.$slots, "default", {
        open: u(s),
        close: () => s.value = !1
      })]),
      _: 3
    }));
  }
}), kI = _I, AI = /* @__PURE__ */ L({
  __name: "PopoverAnchor",
  props: {
    reference: {
      type: null,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  setup(e) {
    const t = e;
    Z();
    const a = zr();
    return um(() => {
      a.hasCustomAnchor.value = !0;
    }), Bt(() => {
      a.hasCustomAnchor.value = !1;
    }), (n, r) => (h(), k(u(Lr), pe(me(t)), {
      default: _(() => [S(n.$slots, "default")]),
      _: 3
    }, 16));
  }
}), $I = AI, II = /* @__PURE__ */ L({
  __name: "PopoverArrow",
  props: {
    width: {
      type: Number,
      required: !1,
      default: 10
    },
    height: {
      type: Number,
      required: !1,
      default: 5
    },
    rounded: {
      type: Boolean,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "svg"
    }
  },
  setup(e) {
    const t = e;
    return Z(), (a, n) => (h(), k(u($s), pe(me(t)), {
      default: _(() => [S(a.$slots, "default")]),
      _: 3
    }, 16));
  }
}), EI = II, TI = /* @__PURE__ */ L({
  __name: "PopoverClose",
  props: {
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "button"
    }
  },
  setup(e) {
    const t = e;
    Z();
    const a = zr();
    return (n, r) => (h(), k(u(U), {
      type: n.as === "button" ? "button" : void 0,
      as: n.as,
      "as-child": t.asChild,
      onClick: r[0] || (r[0] = (s) => u(a).onOpenChange(!1))
    }, {
      default: _(() => [S(n.$slots, "default")]),
      _: 3
    }, 8, [
      "type",
      "as",
      "as-child"
    ]));
  }
}), BI = TI, PI = /* @__PURE__ */ L({
  __name: "PopoverContentImpl",
  props: {
    trapFocus: {
      type: Boolean,
      required: !1
    },
    side: {
      type: null,
      required: !1
    },
    sideOffset: {
      type: Number,
      required: !1
    },
    sideFlip: {
      type: Boolean,
      required: !1
    },
    align: {
      type: null,
      required: !1
    },
    alignOffset: {
      type: Number,
      required: !1
    },
    alignFlip: {
      type: Boolean,
      required: !1
    },
    avoidCollisions: {
      type: Boolean,
      required: !1
    },
    collisionBoundary: {
      type: null,
      required: !1
    },
    collisionPadding: {
      type: [Number, Object],
      required: !1
    },
    arrowPadding: {
      type: Number,
      required: !1
    },
    sticky: {
      type: String,
      required: !1
    },
    hideWhenDetached: {
      type: Boolean,
      required: !1
    },
    positionStrategy: {
      type: String,
      required: !1
    },
    updatePositionStrategy: {
      type: String,
      required: !1
    },
    disableUpdateOnLayoutShift: {
      type: Boolean,
      required: !1
    },
    prioritizePosition: {
      type: Boolean,
      required: !1
    },
    reference: {
      type: null,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    },
    disableOutsidePointerEvents: {
      type: Boolean,
      required: !1
    }
  },
  emits: [
    "escapeKeyDown",
    "pointerDownOutside",
    "focusOutside",
    "interactOutside",
    "openAutoFocus",
    "closeAutoFocus"
  ],
  setup(e, { emit: t }) {
    const a = e, n = t, r = xt(pm(a, "trapFocus", "disableOutsidePointerEvents")), { forwardRef: s } = Z(), i = zr();
    return nf(), (o, l) => (h(), k(u(Ni), {
      "as-child": "",
      loop: "",
      trapped: o.trapFocus,
      onMountAutoFocus: l[5] || (l[5] = (d) => n("openAutoFocus", d)),
      onUnmountAutoFocus: l[6] || (l[6] = (d) => n("closeAutoFocus", d))
    }, {
      default: _(() => [V(u(sr), {
        "as-child": "",
        "disable-outside-pointer-events": o.disableOutsidePointerEvents,
        onPointerDownOutside: l[0] || (l[0] = (d) => n("pointerDownOutside", d)),
        onInteractOutside: l[1] || (l[1] = (d) => n("interactOutside", d)),
        onEscapeKeyDown: l[2] || (l[2] = (d) => n("escapeKeyDown", d)),
        onFocusOutside: l[3] || (l[3] = (d) => n("focusOutside", d)),
        onDismiss: l[4] || (l[4] = (d) => u(i).onOpenChange(!1))
      }, {
        default: _(() => [V(u(As), O(u(r), {
          id: u(i).contentId,
          ref: u(s),
          "data-state": u(i).open.value ? "open" : "closed",
          "aria-labelledby": u(i).triggerId,
          style: {
            "--reka-popover-content-transform-origin": "var(--reka-popper-transform-origin)",
            "--reka-popover-content-available-width": "var(--reka-popper-available-width)",
            "--reka-popover-content-available-height": "var(--reka-popper-available-height)",
            "--reka-popover-trigger-width": "var(--reka-popper-anchor-width)",
            "--reka-popover-trigger-height": "var(--reka-popper-anchor-height)"
          },
          role: "dialog"
        }), {
          default: _(() => [S(o.$slots, "default")]),
          _: 3
        }, 16, [
          "id",
          "data-state",
          "aria-labelledby"
        ])]),
        _: 3
      }, 8, ["disable-outside-pointer-events"])]),
      _: 3
    }, 8, ["trapped"]));
  }
}), rb = PI, DI = /* @__PURE__ */ L({
  __name: "PopoverContentModal",
  props: {
    side: {
      type: null,
      required: !1
    },
    sideOffset: {
      type: Number,
      required: !1
    },
    sideFlip: {
      type: Boolean,
      required: !1
    },
    align: {
      type: null,
      required: !1
    },
    alignOffset: {
      type: Number,
      required: !1
    },
    alignFlip: {
      type: Boolean,
      required: !1
    },
    avoidCollisions: {
      type: Boolean,
      required: !1
    },
    collisionBoundary: {
      type: null,
      required: !1
    },
    collisionPadding: {
      type: [Number, Object],
      required: !1
    },
    arrowPadding: {
      type: Number,
      required: !1
    },
    sticky: {
      type: String,
      required: !1
    },
    hideWhenDetached: {
      type: Boolean,
      required: !1
    },
    positionStrategy: {
      type: String,
      required: !1
    },
    updatePositionStrategy: {
      type: String,
      required: !1
    },
    disableUpdateOnLayoutShift: {
      type: Boolean,
      required: !1
    },
    prioritizePosition: {
      type: Boolean,
      required: !1
    },
    reference: {
      type: null,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    },
    disableOutsidePointerEvents: {
      type: Boolean,
      required: !1
    }
  },
  emits: [
    "escapeKeyDown",
    "pointerDownOutside",
    "focusOutside",
    "interactOutside",
    "openAutoFocus",
    "closeAutoFocus"
  ],
  setup(e, { emit: t }) {
    const a = e, n = t, r = zr(), s = N(!1);
    Oi(!0);
    const i = Xe(a, n), { forwardRef: o, currentElement: l } = Z();
    return zi(l), (d, c) => (h(), k(rb, O(u(i), {
      ref: u(o),
      "trap-focus": u(r).open.value,
      "disable-outside-pointer-events": "",
      onCloseAutoFocus: c[0] || (c[0] = ze((f) => {
        n("closeAutoFocus", f), s.value || u(r).triggerElement.value?.focus();
      }, ["prevent"])),
      onPointerDownOutside: c[1] || (c[1] = (f) => {
        n("pointerDownOutside", f);
        const p = f.detail.originalEvent, g = p.button === 0 && p.ctrlKey === !0, v = p.button === 2 || g;
        s.value = v;
      }),
      onFocusOutside: c[2] || (c[2] = ze(() => {
      }, ["prevent"]))
    }), {
      default: _(() => [S(d.$slots, "default")]),
      _: 3
    }, 16, ["trap-focus"]));
  }
}), MI = DI, RI = /* @__PURE__ */ L({
  __name: "PopoverContentNonModal",
  props: {
    side: {
      type: null,
      required: !1
    },
    sideOffset: {
      type: Number,
      required: !1
    },
    sideFlip: {
      type: Boolean,
      required: !1
    },
    align: {
      type: null,
      required: !1
    },
    alignOffset: {
      type: Number,
      required: !1
    },
    alignFlip: {
      type: Boolean,
      required: !1
    },
    avoidCollisions: {
      type: Boolean,
      required: !1
    },
    collisionBoundary: {
      type: null,
      required: !1
    },
    collisionPadding: {
      type: [Number, Object],
      required: !1
    },
    arrowPadding: {
      type: Number,
      required: !1
    },
    sticky: {
      type: String,
      required: !1
    },
    hideWhenDetached: {
      type: Boolean,
      required: !1
    },
    positionStrategy: {
      type: String,
      required: !1
    },
    updatePositionStrategy: {
      type: String,
      required: !1
    },
    disableUpdateOnLayoutShift: {
      type: Boolean,
      required: !1
    },
    prioritizePosition: {
      type: Boolean,
      required: !1
    },
    reference: {
      type: null,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    },
    disableOutsidePointerEvents: {
      type: Boolean,
      required: !1
    }
  },
  emits: [
    "escapeKeyDown",
    "pointerDownOutside",
    "focusOutside",
    "interactOutside",
    "openAutoFocus",
    "closeAutoFocus"
  ],
  setup(e, { emit: t }) {
    const a = e, n = t, r = zr(), s = N(!1), i = N(!1), o = Xe(a, n);
    return (l, d) => (h(), k(rb, O(u(o), {
      "trap-focus": !1,
      "disable-outside-pointer-events": !1,
      onCloseAutoFocus: d[0] || (d[0] = (c) => {
        n("closeAutoFocus", c), c.defaultPrevented || (s.value || u(r).triggerElement.value?.focus(), c.preventDefault()), s.value = !1, i.value = !1;
      }),
      onInteractOutside: d[1] || (d[1] = async (c) => {
        n("interactOutside", c), c.defaultPrevented || (s.value = !0, c.detail.originalEvent.type === "pointerdown" && (i.value = !0));
        const f = c.target;
        u(r).triggerElement.value?.contains(f) && c.preventDefault(), c.detail.originalEvent.type === "focusin" && i.value && c.preventDefault();
      })
    }), {
      default: _(() => [S(l.$slots, "default")]),
      _: 3
    }, 16));
  }
}), LI = RI, OI = /* @__PURE__ */ L({
  __name: "PopoverContent",
  props: {
    forceMount: {
      type: Boolean,
      required: !1
    },
    side: {
      type: null,
      required: !1
    },
    sideOffset: {
      type: Number,
      required: !1
    },
    sideFlip: {
      type: Boolean,
      required: !1
    },
    align: {
      type: null,
      required: !1
    },
    alignOffset: {
      type: Number,
      required: !1
    },
    alignFlip: {
      type: Boolean,
      required: !1
    },
    avoidCollisions: {
      type: Boolean,
      required: !1
    },
    collisionBoundary: {
      type: null,
      required: !1
    },
    collisionPadding: {
      type: [Number, Object],
      required: !1
    },
    arrowPadding: {
      type: Number,
      required: !1
    },
    sticky: {
      type: String,
      required: !1
    },
    hideWhenDetached: {
      type: Boolean,
      required: !1
    },
    positionStrategy: {
      type: String,
      required: !1
    },
    updatePositionStrategy: {
      type: String,
      required: !1
    },
    disableUpdateOnLayoutShift: {
      type: Boolean,
      required: !1
    },
    prioritizePosition: {
      type: Boolean,
      required: !1
    },
    reference: {
      type: null,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    },
    disableOutsidePointerEvents: {
      type: Boolean,
      required: !1
    }
  },
  emits: [
    "escapeKeyDown",
    "pointerDownOutside",
    "focusOutside",
    "interactOutside",
    "openAutoFocus",
    "closeAutoFocus"
  ],
  setup(e, { emit: t }) {
    const a = e, n = t, r = zr(), s = Xe(a, n), { forwardRef: i } = Z();
    return r.contentId ||= pt(void 0, "reka-popover-content"), (o, l) => (h(), k(u(Xt), { present: o.forceMount || u(r).open.value }, {
      default: _(() => [u(r).modal.value ? (h(), k(MI, O({ key: 0 }, u(s), { ref: u(i) }), {
        default: _(() => [S(o.$slots, "default")]),
        _: 3
      }, 16)) : (h(), k(LI, O({ key: 1 }, u(s), { ref: u(i) }), {
        default: _(() => [S(o.$slots, "default")]),
        _: 3
      }, 16))]),
      _: 3
    }, 8, ["present"]));
  }
}), FI = OI, zI = /* @__PURE__ */ L({
  __name: "PopoverPortal",
  props: {
    to: {
      type: null,
      required: !1
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    defer: {
      type: Boolean,
      required: !1
    },
    forceMount: {
      type: Boolean,
      required: !1
    }
  },
  setup(e) {
    const t = e;
    return (a, n) => (h(), k(u(ir), pe(me(t)), {
      default: _(() => [S(a.$slots, "default")]),
      _: 3
    }, 16));
  }
}), qI = zI, VI = /* @__PURE__ */ L({
  __name: "PopoverTrigger",
  props: {
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "button"
    }
  },
  setup(e) {
    const t = e, a = zr(), { forwardRef: n, currentElement: r } = Z();
    return a.triggerId ||= pt(void 0, "reka-popover-trigger"), Pe(() => {
      a.triggerElement.value = r.value;
    }), (s, i) => (h(), k(ut(u(a).hasCustomAnchor.value ? u(U) : u(Lr)), { "as-child": "" }, {
      default: _(() => [V(u(U), {
        id: u(a).triggerId,
        ref: u(n),
        type: s.as === "button" ? "button" : void 0,
        "aria-haspopup": "dialog",
        "aria-expanded": u(a).open.value,
        "aria-controls": u(a).contentId,
        "data-state": u(a).open.value ? "open" : "closed",
        as: s.as,
        "as-child": t.asChild,
        onClick: u(a).onOpenToggle
      }, {
        default: _(() => [S(s.$slots, "default")]),
        _: 3
      }, 8, [
        "id",
        "type",
        "aria-expanded",
        "aria-controls",
        "data-state",
        "as",
        "as-child",
        "onClick"
      ])]),
      _: 3
    }));
  }
}), NI = VI;
function HI(e) {
  const t = T(() => e.start.value ? !!e.isDateDisabled(e.start.value) : !1), a = T(() => e.end.value ? !!e.isDateDisabled(e.end.value) : !1), n = T(() => t.value || a.value ? !1 : !!(e.start.value && e.end.value && Sr(e.end.value, e.start.value))), r = (p) => e.start.value ? Ut(e.start.value, p) : !1, s = (p) => e.end.value ? Ut(e.end.value, p) : !1, i = (p) => e.start.value && Ut(e.start.value, p) || e.end.value && Ut(e.end.value, p) ? !0 : e.end.value && e.start.value ? fu(p, e.start.value, e.end.value) : !1, o = (p) => {
    if (e.isDateDisabled(p)) return !0;
    if (e.maximumDays?.value) {
      if (e.start.value && e.end.value) {
        if (e.fixedDate.value) {
          const g = pd(e.start.value, e.end.value).length;
          if (g <= e.maximumDays.value) {
            const v = e.maximumDays.value - g - 1, m = e.start.value.subtract({ days: v }), y = e.end.value.add({ days: v });
            return !fu(p, m, y);
          }
        }
        return !1;
      }
      if (e.start.value) {
        const g = e.start.value.add({ days: e.maximumDays.value }), v = e.start.value.subtract({ days: e.maximumDays.value });
        return !fu(p, v, g);
      }
    }
    return !e.start.value || e.end.value || Ut(e.start.value, p), !1;
  }, l = (p) => !!e.isDateHighlightable?.(p), d = T(() => {
    if (e.start.value && e.end.value && !e.fixedDate.value || !e.start.value || !e.focusedValue.value) return null;
    const p = Sr(e.start.value, e.focusedValue.value), g = p ? e.start.value : e.focusedValue.value, v = p ? e.focusedValue.value : e.start.value;
    if (Ut(g, v)) return {
      start: g,
      end: v
    };
    if (e.maximumDays?.value && !e.end.value) {
      const y = p ? g.add({ days: e.maximumDays.value }) : g.subtract({ days: e.maximumDays.value });
      return {
        start: g,
        end: y
      };
    }
    return Qx(g, v, e.allowNonContiguousRanges.value ? () => !1 : e.isDateUnavailable, o, e.isDateHighlightable) ? {
      start: g,
      end: v
    } : null;
  });
  return {
    isInvalid: n,
    isSelected: i,
    isDateHighlightable: l,
    highlightedRange: d,
    isSelectionStart: r,
    isSelectionEnd: s,
    isHighlightedStart: (p) => !d.value || !d.value.start ? !1 : Ut(d.value.start, p),
    isHighlightedEnd: (p) => !d.value || !d.value.end ? !1 : Ut(d.value.end, p),
    isDateDisabled: o
  };
}
const jI = { style: {
  border: "0px",
  clip: "rect(0px, 0px, 0px, 0px)",
  "clip-path": "inset(50%)",
  height: "1px",
  margin: "-1px",
  overflow: "hidden",
  padding: "0px",
  position: "absolute",
  "white-space": "nowrap",
  width: "1px"
} }, KI = {
  role: "heading",
  "aria-level": "2"
}, [Is, GI] = Me("RangeCalendarRoot");
var UI = /* @__PURE__ */ L({
  __name: "RangeCalendarRoot",
  props: {
    defaultPlaceholder: {
      type: null,
      required: !1
    },
    defaultValue: {
      type: Object,
      required: !1,
      default: () => ({
        start: void 0,
        end: void 0
      })
    },
    modelValue: {
      type: [Object, null],
      required: !1
    },
    placeholder: {
      type: null,
      required: !1,
      default: void 0
    },
    allowNonContiguousRanges: {
      type: Boolean,
      required: !1,
      default: !1
    },
    pagedNavigation: {
      type: Boolean,
      required: !1,
      default: !1
    },
    preventDeselect: {
      type: Boolean,
      required: !1,
      default: !1
    },
    maximumDays: {
      type: Number,
      required: !1,
      default: void 0
    },
    weekStartsOn: {
      type: Number,
      required: !1,
      default: 0
    },
    weekdayFormat: {
      type: String,
      required: !1,
      default: "narrow"
    },
    calendarLabel: {
      type: String,
      required: !1
    },
    fixedWeeks: {
      type: Boolean,
      required: !1,
      default: !1
    },
    maxValue: {
      type: null,
      required: !1
    },
    minValue: {
      type: null,
      required: !1
    },
    locale: {
      type: String,
      required: !1
    },
    numberOfMonths: {
      type: Number,
      required: !1,
      default: 1
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    readonly: {
      type: Boolean,
      required: !1,
      default: !1
    },
    initialFocus: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isDateDisabled: {
      type: Function,
      required: !1,
      default: void 0
    },
    isDateUnavailable: {
      type: Function,
      required: !1,
      default: void 0
    },
    isDateHighlightable: {
      type: Function,
      required: !1,
      default: void 0
    },
    dir: {
      type: String,
      required: !1
    },
    nextPage: {
      type: Function,
      required: !1
    },
    prevPage: {
      type: Function,
      required: !1
    },
    disableDaysOutsideCurrentView: {
      type: Boolean,
      required: !1,
      default: !1
    },
    fixedDate: {
      type: String,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "div"
    }
  },
  emits: [
    "update:modelValue",
    "update:validModelValue",
    "update:placeholder",
    "update:startValue"
  ],
  setup(e, { emit: t }) {
    const a = e, n = t, { disabled: r, readonly: s, initialFocus: i, pagedNavigation: o, weekStartsOn: l, weekdayFormat: d, fixedWeeks: c, numberOfMonths: f, preventDeselect: p, isDateUnavailable: g, isDateHighlightable: v, isDateDisabled: m, calendarLabel: y, maxValue: x, minValue: b, dir: C, locale: w, nextPage: $, prevPage: B, allowNonContiguousRanges: I, disableDaysOutsideCurrentView: E, fixedDate: P, maximumDays: R } = We(a), { primitiveElement: F, currentElement: H } = ea(), j = Yt(C), K = rf(w), z = N(), G = N(), Y = N(!1), q = Ze(a, "modelValue", n, {
      defaultValue: a.defaultValue ?? {
        start: void 0,
        end: void 0
      },
      passive: a.modelValue === void 0
    }), Q = N(q.value);
    ye(Q, (et) => {
      n("update:validModelValue", et);
    });
    const se = Hm({
      defaultPlaceholder: a.placeholder,
      defaultValue: q.value.start,
      locale: a.locale
    }), ce = N(q.value.start), oe = N(q.value.end), xe = Ze(a, "placeholder", n, {
      defaultValue: a.defaultPlaceholder ?? se.copy(),
      passive: a.placeholder === void 0
    });
    function $e(et) {
      xe.value = et.copy();
    }
    const { fullCalendarLabel: Le, headingValue: Ye, isDateDisabled: ne, isDateUnavailable: ae, isNextButtonDisabled: be, isPrevButtonDisabled: De, grid: Ke, weekdays: re, isOutsideVisibleView: de, nextPage: _e, prevPage: ie, formatter: Ne } = ry({
      locale: K,
      placeholder: xe,
      weekStartsOn: l,
      fixedWeeks: c,
      numberOfMonths: f,
      minValue: b,
      maxValue: x,
      disabled: r,
      weekdayFormat: d,
      pagedNavigation: o,
      isDateDisabled: m.value,
      isDateUnavailable: g.value,
      calendarLabel: y,
      nextPage: $,
      prevPage: B
    }), { isInvalid: Oe, isSelected: Ae, isDateHighlightable: ge, highlightedRange: Fe, isSelectionStart: ve, isSelectionEnd: ct, isHighlightedStart: St, isHighlightedEnd: ia, isDateDisabled: za } = HI({
      start: ce,
      end: oe,
      isDateDisabled: ne,
      isDateUnavailable: ae,
      isDateHighlightable: v.value,
      focusedValue: G,
      allowNonContiguousRanges: I,
      fixedDate: P,
      maximumDays: R
    });
    ye(q, (et, oa) => {
      (!oa?.start && et?.start || !et || !et.start || ce.value && !Un(et.start, ce.value)) && (ce.value = et?.start?.copy?.()), (!oa?.end && et.end || !et || !et.end || oe.value && !Un(et.end, oe.value)) && (oe.value = et?.end?.copy?.());
    }), ye(ce, (et) => {
      et && !Un(et, xe.value) && $e(et), n("update:startValue", et);
    }), ye([ce, oe], ([et, oa]) => {
      const xa = q.value;
      xa && xa.start && xa.end && et && oa && Un(xa.start, et) && Un(xa.end, oa) || (Y.value = !0, oa && et ? (Sr(oa, et) ? q.value = {
        start: oa.copy(),
        end: et.copy()
      } : q.value = {
        start: et.copy(),
        end: oa.copy()
      }, Y.value = !1, Q.value = {
        start: q.value.start?.copy(),
        end: q.value.end?.copy()
      }) : et ? q.value = {
        start: et.copy(),
        end: void 0
      } : q.value = {
        start: oa?.copy(),
        end: void 0
      });
    });
    const qn = qi();
    return ra("keydown", (et) => {
      et.key === qn.ESCAPE && Y.value && (ce.value = Q.value.start?.copy(), oe.value = Q.value.end?.copy());
    }), GI({
      isDateUnavailable: ae,
      isDateHighlightable: ge,
      startValue: ce,
      endValue: oe,
      formatter: Ne,
      modelValue: q,
      placeholder: xe,
      disabled: r,
      initialFocus: i,
      pagedNavigation: o,
      grid: Ke,
      weekDays: re,
      weekStartsOn: l,
      weekdayFormat: d,
      fixedWeeks: c,
      numberOfMonths: f,
      readonly: s,
      preventDeselect: p,
      fullCalendarLabel: Le,
      headingValue: Ye,
      isInvalid: Oe,
      isDateDisabled: za,
      allowNonContiguousRanges: I,
      highlightedRange: Fe,
      focusedValue: G,
      lastPressedDateValue: z,
      isSelected: Ae,
      isSelectionEnd: ct,
      isSelectionStart: ve,
      isNextButtonDisabled: be,
      isPrevButtonDisabled: De,
      isOutsideVisibleView: de,
      nextPage: _e,
      prevPage: ie,
      parentElement: H,
      onPlaceholderChange: $e,
      locale: K,
      dir: j,
      isHighlightedStart: St,
      isHighlightedEnd: ia,
      disableDaysOutsideCurrentView: E,
      fixedDate: P,
      maximumDays: R
    }), Pe(() => {
      i.value && jm(H.value);
    }), (et, oa) => (h(), k(u(U), {
      ref_key: "primitiveElement",
      ref: F,
      as: et.as,
      "as-child": et.asChild,
      role: "application",
      "aria-label": u(Le),
      "data-readonly": u(s) ? "" : void 0,
      "data-disabled": u(r) ? "" : void 0,
      "data-invalid": u(Oe) ? "" : void 0,
      dir: u(j)
    }, {
      default: _(() => [J("div", jI, [J("div", KI, X(u(Le)), 1)]), S(et.$slots, "default", {
        date: u(xe),
        grid: u(Ke),
        weekDays: u(re),
        weekStartsOn: u(l),
        locale: u(K),
        fixedWeeks: u(c),
        modelValue: u(q)
      })]),
      _: 3
    }, 8, [
      "as",
      "as-child",
      "aria-label",
      "data-readonly",
      "data-disabled",
      "data-invalid",
      "dir"
    ]));
  }
}), WI = UI, YI = /* @__PURE__ */ L({
  __name: "RangeCalendarCell",
  props: {
    date: {
      type: null,
      required: !0
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "td"
    }
  },
  setup(e) {
    const t = Is();
    return (a, n) => (h(), k(u(U), {
      as: a.as,
      "as-child": a.asChild,
      role: "gridcell",
      "aria-selected": u(t).isSelected(a.date) ? !0 : void 0,
      "aria-disabled": u(t).isDateDisabled(a.date) || u(t).isDateUnavailable?.(a.date) || u(t).disableDaysOutsideCurrentView.value,
      "data-disabled": u(t).isDateDisabled(a.date) || u(t).disableDaysOutsideCurrentView.value ? "" : void 0
    }, {
      default: _(() => [S(a.$slots, "default")]),
      _: 3
    }, 8, [
      "as",
      "as-child",
      "aria-selected",
      "aria-disabled",
      "data-disabled"
    ]));
  }
}), XI = YI, JI = /* @__PURE__ */ L({
  __name: "RangeCalendarCellTrigger",
  props: {
    day: {
      type: null,
      required: !0
    },
    month: {
      type: null,
      required: !0
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "div"
    }
  },
  setup(e) {
    const t = e, a = Is(), n = qi(), { primitiveElement: r, currentElement: s } = ea(), i = T(() => a.formatter.custom(Ka(t.day), {
      weekday: "long",
      month: "long",
      day: "numeric",
      year: "numeric"
    })), o = T(() => a.isDateUnavailable?.(t.day) ?? !1), l = T(() => a.isSelected(t.day)), d = T(() => a.isSelectionStart(t.day)), c = T(() => a.isSelectionEnd(t.day)), f = T(() => a.isHighlightedStart(t.day)), p = T(() => a.isHighlightedEnd(t.day)), g = T(() => a.highlightedRange.value ? Yx(t.day, a.highlightedRange.value.start, a.highlightedRange.value.end) : !1), v = T(() => a.allowNonContiguousRanges.value), m = T(() => wm(t.day, Ss())), y = T(() => !Kc(t.day, t.month)), x = T(() => a.isOutsideVisibleView(t.day)), b = T(() => a.isDateDisabled(t.day) || a.disableDaysOutsideCurrentView.value && y.value), C = T(() => t.day.day.toLocaleString(a.locale.value)), w = T(() => !a.disabled.value && Ut(t.day, a.placeholder.value));
    function $(P, R) {
      if (!a.readonly.value && !(a.isDateDisabled(R) || a.isDateUnavailable?.(R))) {
        if (a.lastPressedDateValue.value = R.copy(), a.startValue.value && a.highlightedRange.value === null) {
          if (Ut(R, a.startValue.value) && !a.preventDeselect.value && !a.endValue.value) {
            a.startValue.value = void 0, a.onPlaceholderChange(R);
            return;
          } else if (!a.endValue.value) {
            P.preventDefault(), a.lastPressedDateValue.value && Ut(a.lastPressedDateValue.value, R) && (a.startValue.value = R.copy());
            return;
          }
        }
        if (a.startValue.value && a.endValue.value && Ut(a.endValue.value, R) && !a.preventDeselect.value) {
          a.startValue.value = void 0, a.endValue.value = void 0, a.onPlaceholderChange(R);
          return;
        }
        a.startValue.value ? a.endValue.value ? a.endValue.value && a.startValue.value && (a.fixedDate.value ? a.fixedDate.value === "start" ? R.compare(a.startValue.value) < 0 ? a.startValue.value = R.copy() : a.endValue.value = R.copy() : a.fixedDate.value === "end" && (R.compare(a.endValue.value) > 0 ? a.endValue.value = R.copy() : a.startValue.value = R.copy()) : (a.endValue.value = void 0, a.startValue.value = R.copy())) : a.endValue.value = R.copy() : a.startValue.value = R.copy();
      }
    }
    function B(P) {
      b.value || $(P, t.day);
    }
    function I() {
      b.value || a.isDateUnavailable?.(t.day) || (a.focusedValue.value = t.day.copy());
    }
    function E(P) {
      if (b.value) return;
      P.preventDefault(), P.stopPropagation();
      const R = a.parentElement.value, F = 7, H = a.dir.value === "rtl" ? -1 : 1;
      switch (P.code) {
        case n.ARROW_RIGHT:
          j(s.value, H);
          break;
        case n.ARROW_LEFT:
          j(s.value, -H);
          break;
        case n.ARROW_UP:
          j(s.value, -F);
          break;
        case n.ARROW_DOWN:
          j(s.value, F);
          break;
        case n.ENTER:
        case n.SPACE_CODE:
          $(P, t.day);
      }
      function j(K, z) {
        const G = us(R);
        if (!G.length) return;
        const q = G.indexOf(K) + z;
        if (q >= 0 && q < G.length) {
          G[q].hasAttribute("data-disabled") && j(G[q], z), G[q].focus();
          return;
        }
        if (q < 0) {
          if (a.isPrevButtonDisabled()) return;
          a.prevPage(), Be(() => {
            const Q = us(R);
            if (!Q.length) return;
            if (!a.pagedNavigation.value && a.numberOfMonths.value > 1) {
              const oe = En(a.placeholder.value) - Math.abs(q);
              Q[oe].hasAttribute("data-disabled") && j(Q[oe], z), Q[oe].focus();
              return;
            }
            const se = Q.length - Math.abs(q);
            Q[se].hasAttribute("data-disabled") && j(Q[se], z), Q[se].focus();
          });
          return;
        }
        if (q >= G.length) {
          if (a.isNextButtonDisabled()) return;
          a.nextPage(), Be(() => {
            const Q = us(R);
            if (!Q.length) return;
            if (!a.pagedNavigation.value && a.numberOfMonths.value > 1) {
              const ce = En(a.placeholder.value.add({ months: a.numberOfMonths.value - 1 })), oe = q - G.length + (Q.length - ce);
              Q[oe].hasAttribute("data-disabled") && j(Q[oe], z), Q[oe].focus();
              return;
            }
            const se = q - G.length;
            Q[se].hasAttribute("data-disabled") && j(Q[se], z), Q[se].focus();
          });
        }
      }
    }
    return (P, R) => (h(), k(u(U), O({
      ref_key: "primitiveElement",
      ref: r
    }, t, {
      role: "button",
      "aria-label": i.value,
      "data-reka-calendar-cell-trigger": "",
      "aria-selected": l.value && (v.value || !o.value) ? !0 : void 0,
      "aria-disabled": b.value || o.value ? !0 : void 0,
      "data-highlighted": g.value && (v.value || !o.value) ? "" : void 0,
      "data-selection-start": d.value ? !0 : void 0,
      "data-selection-end": c.value ? !0 : void 0,
      "data-highlighted-start": f.value ? !0 : void 0,
      "data-highlighted-end": p.value ? !0 : void 0,
      "data-selected": l.value && (v.value || !o.value) ? !0 : void 0,
      "data-outside-visible-view": x.value ? "" : void 0,
      "data-value": P.day.toString(),
      "data-disabled": b.value ? "" : void 0,
      "data-unavailable": o.value ? "" : void 0,
      "data-today": m.value ? "" : void 0,
      "data-outside-view": y.value ? "" : void 0,
      "data-focused": w.value ? "" : void 0,
      tabindex: w.value ? 0 : y.value || b.value ? void 0 : -1,
      onClick: B,
      onFocusin: I,
      onMouseenter: I,
      onKeydown: nt(E, [
        "up",
        "down",
        "left",
        "right",
        "enter",
        "space"
      ])
    }), {
      default: _(() => [S(P.$slots, "default", {
        dayValue: C.value,
        disabled: b.value,
        today: m.value,
        selected: l.value,
        outsideView: y.value,
        outsideVisibleView: x.value,
        unavailable: o.value,
        highlighted: g.value && (v.value || !o.value),
        highlightedStart: f.value,
        highlightedEnd: p.value,
        selectionStart: d.value,
        selectionEnd: c.value
      }, () => [ee(X(C.value), 1)])]),
      _: 3
    }, 16, [
      "aria-label",
      "aria-selected",
      "aria-disabled",
      "data-highlighted",
      "data-selection-start",
      "data-selection-end",
      "data-highlighted-start",
      "data-highlighted-end",
      "data-selected",
      "data-outside-visible-view",
      "data-value",
      "data-disabled",
      "data-unavailable",
      "data-today",
      "data-outside-view",
      "data-focused",
      "tabindex"
    ]));
  }
}), QI = JI, ZI = /* @__PURE__ */ L({
  __name: "RangeCalendarGrid",
  props: {
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "table"
    }
  },
  setup(e) {
    const t = e, a = Is(), n = T(() => a.disabled.value ? !0 : void 0), r = T(() => a.readonly.value ? !0 : void 0);
    return (s, i) => (h(), k(u(U), O(t, {
      tabindex: "-1",
      role: "grid",
      "aria-readonly": r.value,
      "aria-disabled": n.value,
      "data-readonly": r.value && "",
      "data-disabled": n.value && ""
    }), {
      default: _(() => [S(s.$slots, "default")]),
      _: 3
    }, 16, [
      "aria-readonly",
      "aria-disabled",
      "data-readonly",
      "data-disabled"
    ]));
  }
}), e2 = ZI, t2 = /* @__PURE__ */ L({
  __name: "RangeCalendarGridBody",
  props: {
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "tbody"
    }
  },
  setup(e) {
    const t = e;
    return (a, n) => (h(), k(u(U), pe(me(t)), {
      default: _(() => [S(a.$slots, "default")]),
      _: 3
    }, 16));
  }
}), a2 = t2, n2 = /* @__PURE__ */ L({
  __name: "RangeCalendarGridHead",
  props: {
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "thead"
    }
  },
  setup(e) {
    const t = e;
    return (a, n) => (h(), k(u(U), O(t, { "aria-hidden": "true" }), {
      default: _(() => [S(a.$slots, "default")]),
      _: 3
    }, 16));
  }
}), r2 = n2, s2 = /* @__PURE__ */ L({
  __name: "RangeCalendarGridRow",
  props: {
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "tr"
    }
  },
  setup(e) {
    const t = e;
    return (a, n) => (h(), k(u(U), pe(me(t)), {
      default: _(() => [S(a.$slots, "default")]),
      _: 3
    }, 16));
  }
}), i2 = s2, o2 = /* @__PURE__ */ L({
  __name: "RangeCalendarHeadCell",
  props: {
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "th"
    }
  },
  setup(e) {
    const t = e;
    return (a, n) => (h(), k(u(U), pe(me(t)), {
      default: _(() => [S(a.$slots, "default")]),
      _: 3
    }, 16));
  }
}), l2 = o2, u2 = /* @__PURE__ */ L({
  __name: "RangeCalendarHeader",
  props: {
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "div"
    }
  },
  setup(e) {
    const t = e;
    return (a, n) => (h(), k(u(U), pe(me(t)), {
      default: _(() => [S(a.$slots, "default")]),
      _: 3
    }, 16));
  }
}), d2 = u2, c2 = /* @__PURE__ */ L({
  __name: "RangeCalendarHeading",
  props: {
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "div"
    }
  },
  setup(e) {
    const t = e, a = Is();
    return (n, r) => (h(), k(u(U), O(t, { "data-disabled": u(a).disabled.value ? "" : void 0 }), {
      default: _(() => [S(n.$slots, "default", { headingValue: u(a).headingValue.value }, () => [ee(X(u(a).headingValue.value), 1)])]),
      _: 3
    }, 16, ["data-disabled"]));
  }
}), f2 = c2, p2 = /* @__PURE__ */ L({
  __name: "RangeCalendarNext",
  props: {
    nextPage: {
      type: Function,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "button"
    }
  },
  setup(e) {
    const t = e, a = T(() => n.disabled.value || n.isNextButtonDisabled(t.nextPage)), n = Is();
    return (r, s) => (h(), k(u(U), O(t, {
      "aria-label": "Next page",
      type: r.as === "button" ? "button" : void 0,
      "aria-disabled": a.value || void 0,
      "data-disabled": a.value || void 0,
      disabled: a.value,
      onClick: s[0] || (s[0] = (i) => u(n).nextPage(t.nextPage))
    }), {
      default: _(() => [S(r.$slots, "default", { disabled: a.value }, () => [s[1] || (s[1] = ee(" Next page "))])]),
      _: 3
    }, 16, [
      "type",
      "aria-disabled",
      "data-disabled",
      "disabled"
    ]));
  }
}), g2 = p2, v2 = /* @__PURE__ */ L({
  __name: "RangeCalendarPrev",
  props: {
    prevPage: {
      type: Function,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "button"
    }
  },
  setup(e) {
    const t = e, a = T(() => n.disabled.value || n.isPrevButtonDisabled(t.prevPage)), n = Is();
    return (r, s) => (h(), k(u(U), O(t, {
      "aria-label": "Previous page",
      type: r.as === "button" ? "button" : void 0,
      "aria-disabled": a.value || void 0,
      "data-disabled": a.value || void 0,
      disabled: a.value,
      onClick: s[0] || (s[0] = (i) => u(n).prevPage(t.prevPage))
    }), {
      default: _(() => [S(r.$slots, "default", { disabled: a.value }, () => [s[1] || (s[1] = ee(" Prev page "))])]),
      _: 3
    }, 16, [
      "type",
      "aria-disabled",
      "data-disabled",
      "disabled"
    ]));
  }
}), h2 = v2, m2 = /* @__PURE__ */ L({
  __name: "DropdownMenuArrow",
  props: {
    width: {
      type: Number,
      required: !1,
      default: 10
    },
    height: {
      type: Number,
      required: !1,
      default: 5
    },
    rounded: {
      type: Boolean,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "svg"
    }
  },
  setup(e) {
    const t = e;
    return Z(), (a, n) => (h(), k(u(Fy), pe(me(t)), {
      default: _(() => [S(a.$slots, "default")]),
      _: 3
    }, 16));
  }
}), sb = m2, y2 = /* @__PURE__ */ L({
  __name: "DropdownMenuCheckboxItem",
  props: {
    modelValue: {
      type: [Boolean, String],
      required: !1
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    textValue: {
      type: String,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  emits: ["select", "update:modelValue"],
  setup(e, { emit: t }) {
    const a = e, r = en(t);
    return Z(), (s, i) => (h(), k(u(jy), pe(me({
      ...a,
      ...u(r)
    })), {
      default: _(() => [S(s.$slots, "default")]),
      _: 3
    }, 16));
  }
}), b2 = y2;
const [ib, w2] = Me("DropdownMenuRoot");
var C2 = /* @__PURE__ */ L({
  __name: "DropdownMenuRoot",
  props: {
    defaultOpen: {
      type: Boolean,
      required: !1
    },
    open: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    dir: {
      type: String,
      required: !1
    },
    modal: {
      type: Boolean,
      required: !1,
      default: !0
    }
  },
  emits: ["update:open"],
  setup(e, { emit: t }) {
    const a = e, n = t;
    Z();
    const r = Ze(a, "open", n, {
      defaultValue: a.defaultOpen,
      passive: a.open === void 0
    }), s = N(), { modal: i, dir: o } = We(a), l = Yt(o);
    return w2({
      open: r,
      onOpenChange: (d) => {
        r.value = d;
      },
      onOpenToggle: () => {
        r.value = !r.value;
      },
      triggerId: "",
      triggerElement: s,
      contentId: "",
      modal: i,
      dir: l
    }), (d, c) => (h(), k(u(qy), {
      open: u(r),
      "onUpdate:open": c[0] || (c[0] = (f) => ht(r) ? r.value = f : null),
      dir: u(l),
      modal: u(i)
    }, {
      default: _(() => [S(d.$slots, "default", { open: u(r) })]),
      _: 3
    }, 8, [
      "open",
      "dir",
      "modal"
    ]));
  }
}), ob = C2, x2 = /* @__PURE__ */ L({
  __name: "DropdownMenuContent",
  props: {
    forceMount: {
      type: Boolean,
      required: !1
    },
    loop: {
      type: Boolean,
      required: !1
    },
    side: {
      type: null,
      required: !1
    },
    sideOffset: {
      type: Number,
      required: !1
    },
    sideFlip: {
      type: Boolean,
      required: !1
    },
    align: {
      type: null,
      required: !1
    },
    alignOffset: {
      type: Number,
      required: !1
    },
    alignFlip: {
      type: Boolean,
      required: !1
    },
    avoidCollisions: {
      type: Boolean,
      required: !1
    },
    collisionBoundary: {
      type: null,
      required: !1
    },
    collisionPadding: {
      type: [Number, Object],
      required: !1
    },
    arrowPadding: {
      type: Number,
      required: !1
    },
    sticky: {
      type: String,
      required: !1
    },
    hideWhenDetached: {
      type: Boolean,
      required: !1
    },
    positionStrategy: {
      type: String,
      required: !1
    },
    updatePositionStrategy: {
      type: String,
      required: !1
    },
    disableUpdateOnLayoutShift: {
      type: Boolean,
      required: !1
    },
    prioritizePosition: {
      type: Boolean,
      required: !1
    },
    reference: {
      type: null,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  emits: [
    "escapeKeyDown",
    "pointerDownOutside",
    "focusOutside",
    "interactOutside",
    "closeAutoFocus"
  ],
  setup(e, { emit: t }) {
    const r = Xe(e, t);
    Z();
    const s = ib(), i = N(!1);
    function o(l) {
      l.defaultPrevented || (i.value || setTimeout(() => {
        s.triggerElement.value?.focus();
      }, 0), i.value = !1, l.preventDefault());
    }
    return s.contentId ||= pt(void 0, "reka-dropdown-menu-content"), (l, d) => (h(), k(u(Ky), O(u(r), {
      id: u(s).contentId,
      "aria-labelledby": u(s)?.triggerId,
      style: {
        "--reka-dropdown-menu-content-transform-origin": "var(--reka-popper-transform-origin)",
        "--reka-dropdown-menu-content-available-width": "var(--reka-popper-available-width)",
        "--reka-dropdown-menu-content-available-height": "var(--reka-popper-available-height)",
        "--reka-dropdown-menu-trigger-width": "var(--reka-popper-anchor-width)",
        "--reka-dropdown-menu-trigger-height": "var(--reka-popper-anchor-height)"
      },
      onCloseAutoFocus: o,
      onInteractOutside: d[0] || (d[0] = (c) => {
        if (c.defaultPrevented) return;
        const f = c.detail.originalEvent, p = f.button === 0 && f.ctrlKey === !0, g = f.button === 2 || p;
        (!u(s).modal.value || g) && (i.value = !0), u(s).triggerElement.value?.contains(c.target) && c.preventDefault();
      })
    }), {
      default: _(() => [S(l.$slots, "default")]),
      _: 3
    }, 16, ["id", "aria-labelledby"]));
  }
}), S2 = x2, _2 = /* @__PURE__ */ L({
  __name: "DropdownMenuGroup",
  props: {
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  setup(e) {
    const t = e;
    return Z(), (a, n) => (h(), k(u(Af), pe(me(t)), {
      default: _(() => [S(a.$slots, "default")]),
      _: 3
    }, 16));
  }
}), k2 = _2, A2 = /* @__PURE__ */ L({
  __name: "DropdownMenuItem",
  props: {
    disabled: {
      type: Boolean,
      required: !1
    },
    textValue: {
      type: String,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  emits: ["select"],
  setup(e, { emit: t }) {
    const a = e, r = en(t);
    return Z(), (s, i) => (h(), k(u(Vl), pe(me({
      ...a,
      ...u(r)
    })), {
      default: _(() => [S(s.$slots, "default")]),
      _: 3
    }, 16));
  }
}), $2 = A2, I2 = /* @__PURE__ */ L({
  __name: "DropdownMenuItemIndicator",
  props: {
    forceMount: {
      type: Boolean,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  setup(e) {
    const t = e;
    return Z(), (a, n) => (h(), k(u(Hy), pe(me(t)), {
      default: _(() => [S(a.$slots, "default")]),
      _: 3
    }, 16));
  }
}), E2 = I2, T2 = /* @__PURE__ */ L({
  __name: "DropdownMenuLabel",
  props: {
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  setup(e) {
    const t = e;
    return Z(), (a, n) => (h(), k(u(Gy), pe(me(t)), {
      default: _(() => [S(a.$slots, "default")]),
      _: 3
    }, 16));
  }
}), B2 = T2, P2 = /* @__PURE__ */ L({
  __name: "DropdownMenuPortal",
  props: {
    to: {
      type: null,
      required: !1
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    defer: {
      type: Boolean,
      required: !1
    },
    forceMount: {
      type: Boolean,
      required: !1
    }
  },
  setup(e) {
    const t = e;
    return (a, n) => (h(), k(u(Uy), pe(me(t)), {
      default: _(() => [S(a.$slots, "default")]),
      _: 3
    }, 16));
  }
}), D2 = P2, M2 = /* @__PURE__ */ L({
  __name: "DropdownMenuRadioGroup",
  props: {
    modelValue: {
      type: String,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  emits: ["update:modelValue"],
  setup(e, { emit: t }) {
    const a = e, r = en(t);
    return Z(), (s, i) => (h(), k(u(Wy), pe(me({
      ...a,
      ...u(r)
    })), {
      default: _(() => [S(s.$slots, "default")]),
      _: 3
    }, 16));
  }
}), R2 = M2, L2 = /* @__PURE__ */ L({
  __name: "DropdownMenuRadioItem",
  props: {
    value: {
      type: String,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    textValue: {
      type: String,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  emits: ["select"],
  setup(e, { emit: t }) {
    const r = Xe(e, t);
    return Z(), (s, i) => (h(), k(u(Yy), pe(me(u(r))), {
      default: _(() => [S(s.$slots, "default")]),
      _: 3
    }, 16));
  }
}), O2 = L2, F2 = /* @__PURE__ */ L({
  __name: "DropdownMenuSeparator",
  props: {
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  setup(e) {
    const t = e;
    return Z(), (a, n) => (h(), k(u(Xy), pe(me(t)), {
      default: _(() => [S(a.$slots, "default")]),
      _: 3
    }, 16));
  }
}), z2 = F2, q2 = /* @__PURE__ */ L({
  __name: "DropdownMenuSub",
  props: {
    defaultOpen: {
      type: Boolean,
      required: !1
    },
    open: {
      type: Boolean,
      required: !1,
      default: void 0
    }
  },
  emits: ["update:open"],
  setup(e, { emit: t }) {
    const a = e, r = Ze(a, "open", t, {
      passive: a.open === void 0,
      defaultValue: a.defaultOpen ?? !1
    });
    return Z(), (s, i) => (h(), k(u(Qy), {
      open: u(r),
      "onUpdate:open": i[0] || (i[0] = (o) => ht(r) ? r.value = o : null)
    }, {
      default: _(() => [S(s.$slots, "default", { open: u(r) })]),
      _: 3
    }, 8, ["open"]));
  }
}), V2 = q2, N2 = /* @__PURE__ */ L({
  __name: "DropdownMenuSubContent",
  props: {
    forceMount: {
      type: Boolean,
      required: !1
    },
    loop: {
      type: Boolean,
      required: !1
    },
    sideOffset: {
      type: Number,
      required: !1
    },
    sideFlip: {
      type: Boolean,
      required: !1
    },
    alignOffset: {
      type: Number,
      required: !1
    },
    alignFlip: {
      type: Boolean,
      required: !1
    },
    avoidCollisions: {
      type: Boolean,
      required: !1
    },
    collisionBoundary: {
      type: null,
      required: !1
    },
    collisionPadding: {
      type: [Number, Object],
      required: !1
    },
    arrowPadding: {
      type: Number,
      required: !1
    },
    sticky: {
      type: String,
      required: !1
    },
    hideWhenDetached: {
      type: Boolean,
      required: !1
    },
    positionStrategy: {
      type: String,
      required: !1
    },
    updatePositionStrategy: {
      type: String,
      required: !1
    },
    disableUpdateOnLayoutShift: {
      type: Boolean,
      required: !1
    },
    prioritizePosition: {
      type: Boolean,
      required: !1
    },
    reference: {
      type: null,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  emits: [
    "escapeKeyDown",
    "pointerDownOutside",
    "focusOutside",
    "interactOutside",
    "entryFocus",
    "openAutoFocus",
    "closeAutoFocus"
  ],
  setup(e, { emit: t }) {
    const r = Xe(e, t);
    return Z(), (s, i) => (h(), k(u(Zy), O(u(r), { style: {
      "--reka-dropdown-menu-content-transform-origin": "var(--reka-popper-transform-origin)",
      "--reka-dropdown-menu-content-available-width": "var(--reka-popper-available-width)",
      "--reka-dropdown-menu-content-available-height": "var(--reka-popper-available-height)",
      "--reka-dropdown-menu-trigger-width": "var(--reka-popper-anchor-width)",
      "--reka-dropdown-menu-trigger-height": "var(--reka-popper-anchor-height)"
    } }), {
      default: _(() => [S(s.$slots, "default")]),
      _: 3
    }, 16));
  }
}), H2 = N2, j2 = /* @__PURE__ */ L({
  __name: "DropdownMenuSubTrigger",
  props: {
    disabled: {
      type: Boolean,
      required: !1
    },
    textValue: {
      type: String,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  setup(e) {
    const t = e;
    return Z(), (a, n) => (h(), k(u(eb), pe(me(t)), {
      default: _(() => [S(a.$slots, "default")]),
      _: 3
    }, 16));
  }
}), K2 = j2, G2 = /* @__PURE__ */ L({
  __name: "DropdownMenuTrigger",
  props: {
    disabled: {
      type: Boolean,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "button"
    }
  },
  setup(e) {
    const t = e, a = ib(), { forwardRef: n, currentElement: r } = Z();
    return Pe(() => {
      a.triggerElement = r;
    }), a.triggerId ||= pt(void 0, "reka-dropdown-menu-trigger"), (s, i) => (h(), k(u(Sf), { "as-child": "" }, {
      default: _(() => [V(u(U), {
        id: u(a).triggerId,
        ref: u(n),
        type: s.as === "button" ? "button" : void 0,
        "as-child": t.asChild,
        as: s.as,
        "aria-haspopup": "menu",
        "aria-expanded": u(a).open.value,
        "aria-controls": u(a).open.value ? u(a).contentId : void 0,
        "data-disabled": s.disabled ? "" : void 0,
        disabled: s.disabled,
        "data-state": u(a).open.value ? "open" : "closed",
        onClick: i[0] || (i[0] = async (o) => {
          !s.disabled && o.button === 0 && o.ctrlKey === !1 && (u(a)?.onOpenToggle(), await Be(), u(a).open.value && o.preventDefault());
        }),
        onKeydown: i[1] || (i[1] = nt((o) => {
          s.disabled || (["Enter", " "].includes(o.key) && u(a).onOpenToggle(), o.key === "ArrowDown" && u(a).onOpenChange(!0), [
            "Enter",
            " ",
            "ArrowDown"
          ].includes(o.key) && o.preventDefault());
        }, [
          "enter",
          "space",
          "arrow-down"
        ]))
      }, {
        default: _(() => [S(s.$slots, "default")]),
        _: 3
      }, 8, [
        "id",
        "type",
        "as-child",
        "as",
        "aria-expanded",
        "aria-controls",
        "data-disabled",
        "disabled",
        "data-state"
      ])]),
      _: 3
    }));
  }
}), lb = G2, U2 = /* @__PURE__ */ L({
  __name: "HoverCardArrow",
  props: {
    width: {
      type: Number,
      required: !1,
      default: 10
    },
    height: {
      type: Number,
      required: !1,
      default: 5
    },
    rounded: {
      type: Boolean,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "svg"
    }
  },
  setup(e) {
    const t = e;
    return Z(), (a, n) => (h(), k(u($s), pe(me(t)), {
      default: _(() => [S(a.$slots, "default")]),
      _: 3
    }, 16));
  }
}), W2 = U2;
const [$f, Y2] = Me("HoverCardRoot");
var X2 = /* @__PURE__ */ L({
  __name: "HoverCardRoot",
  props: {
    defaultOpen: {
      type: Boolean,
      required: !1,
      default: !1
    },
    open: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    openDelay: {
      type: Number,
      required: !1,
      default: 700
    },
    closeDelay: {
      type: Number,
      required: !1,
      default: 300
    }
  },
  emits: ["update:open"],
  setup(e, { emit: t }) {
    const a = e, n = t, { openDelay: r, closeDelay: s } = We(a);
    Z();
    const i = Ze(a, "open", n, {
      defaultValue: a.defaultOpen,
      passive: a.open === void 0
    }), o = N(0), l = N(0), d = N(!1), c = N(!1), f = N(!1), p = N();
    function g() {
      clearTimeout(l.value), o.value = window.setTimeout(() => i.value = !0, r.value);
    }
    function v() {
      clearTimeout(o.value), !d.value && !c.value && (l.value = window.setTimeout(() => i.value = !1, s.value));
    }
    function m() {
      i.value = !1;
    }
    return Y2({
      open: i,
      onOpenChange(y) {
        i.value = y;
      },
      onOpen: g,
      onClose: v,
      onDismiss: m,
      hasSelectionRef: d,
      isPointerDownOnContentRef: c,
      isPointerInTransitRef: f,
      triggerElement: p
    }), (y, x) => (h(), k(u(Rr), null, {
      default: _(() => [S(y.$slots, "default", { open: u(i) })]),
      _: 3
    }));
  }
}), J2 = X2;
function kd(e) {
  return (t) => t.pointerType === "touch" ? void 0 : e();
}
function Q2(e) {
  const t = [], a = document.createTreeWalker(e, NodeFilter.SHOW_ELEMENT, { acceptNode: (n) => n.tabIndex >= 0 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP });
  for (; a.nextNode(); ) t.push(a.currentNode);
  return t;
}
var Z2 = /* @__PURE__ */ L({
  __name: "HoverCardContentImpl",
  props: {
    side: {
      type: null,
      required: !1
    },
    sideOffset: {
      type: Number,
      required: !1
    },
    sideFlip: {
      type: Boolean,
      required: !1
    },
    align: {
      type: null,
      required: !1
    },
    alignOffset: {
      type: Number,
      required: !1
    },
    alignFlip: {
      type: Boolean,
      required: !1
    },
    avoidCollisions: {
      type: Boolean,
      required: !1
    },
    collisionBoundary: {
      type: null,
      required: !1
    },
    collisionPadding: {
      type: [Number, Object],
      required: !1
    },
    arrowPadding: {
      type: Number,
      required: !1
    },
    sticky: {
      type: String,
      required: !1
    },
    hideWhenDetached: {
      type: Boolean,
      required: !1
    },
    positionStrategy: {
      type: String,
      required: !1
    },
    updatePositionStrategy: {
      type: String,
      required: !1
    },
    disableUpdateOnLayoutShift: {
      type: Boolean,
      required: !1
    },
    prioritizePosition: {
      type: Boolean,
      required: !1
    },
    reference: {
      type: null,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  emits: [
    "escapeKeyDown",
    "pointerDownOutside",
    "focusOutside",
    "interactOutside"
  ],
  setup(e, { emit: t }) {
    const a = e, n = t, r = xt(a), { forwardRef: s, currentElement: i } = Z(), o = $f(), { isPointerInTransit: l, onPointerExit: d } = Km(o.triggerElement, i);
    DC(o.isPointerInTransitRef, l, { direction: "rtl" }), d(() => {
      o.onClose();
    });
    const c = N(!1);
    let f;
    ot((g) => {
      if (c.value) {
        const v = document.body;
        f = v.style.userSelect || v.style.webkitUserSelect, v.style.userSelect = "none", v.style.webkitUserSelect = "none", g(() => {
          v.style.userSelect = f, v.style.webkitUserSelect = f;
        });
      }
    });
    function p() {
      c.value = !1, o.isPointerDownOnContentRef.value = !1, Be(() => {
        document.getSelection()?.toString() !== "" && (o.hasSelectionRef.value = !0);
      });
    }
    return Pe(() => {
      i.value && (document.addEventListener("pointerup", p), Q2(i.value).forEach((v) => v.setAttribute("tabindex", "-1")));
    }), Bt(() => {
      document.removeEventListener("pointerup", p), o.hasSelectionRef.value = !1, o.isPointerDownOnContentRef.value = !1;
    }), (g, v) => (h(), k(u(sr), {
      "as-child": "",
      "disable-outside-pointer-events": !1,
      onEscapeKeyDown: v[1] || (v[1] = (m) => n("escapeKeyDown", m)),
      onPointerDownOutside: v[2] || (v[2] = (m) => n("pointerDownOutside", m)),
      onFocusOutside: v[3] || (v[3] = ze((m) => n("focusOutside", m), ["prevent"])),
      onDismiss: u(o).onDismiss
    }, {
      default: _(() => [V(u(As), O({
        ...u(r),
        ...g.$attrs
      }, {
        ref: u(s),
        "data-state": u(o).open.value ? "open" : "closed",
        style: {
          userSelect: c.value ? "text" : void 0,
          WebkitUserSelect: c.value ? "text" : void 0,
          "--reka-hover-card-content-transform-origin": "var(--reka-popper-transform-origin)",
          "--reka-hover-card-content-available-width": "var(--reka-popper-available-width)",
          "--reka-hover-card-content-available-height": "var(--reka-popper-available-height)",
          "--reka-hover-card-trigger-width": "var(--reka-popper-anchor-width)",
          "--reka-hover-card-trigger-height": "var(--reka-popper-anchor-height)"
        },
        onPointerdown: v[0] || (v[0] = (m) => {
          m.currentTarget.contains(m.target) && (c.value = !0), u(o).hasSelectionRef.value = !1, u(o).isPointerDownOnContentRef.value = !0;
        })
      }), {
        default: _(() => [S(g.$slots, "default")]),
        _: 3
      }, 16, ["data-state", "style"])]),
      _: 3
    }, 8, ["onDismiss"]));
  }
}), eE = Z2, tE = /* @__PURE__ */ L({
  __name: "HoverCardContent",
  props: {
    forceMount: {
      type: Boolean,
      required: !1
    },
    side: {
      type: null,
      required: !1
    },
    sideOffset: {
      type: Number,
      required: !1
    },
    sideFlip: {
      type: Boolean,
      required: !1
    },
    align: {
      type: null,
      required: !1
    },
    alignOffset: {
      type: Number,
      required: !1
    },
    alignFlip: {
      type: Boolean,
      required: !1
    },
    avoidCollisions: {
      type: Boolean,
      required: !1
    },
    collisionBoundary: {
      type: null,
      required: !1
    },
    collisionPadding: {
      type: [Number, Object],
      required: !1
    },
    arrowPadding: {
      type: Number,
      required: !1
    },
    sticky: {
      type: String,
      required: !1
    },
    hideWhenDetached: {
      type: Boolean,
      required: !1
    },
    positionStrategy: {
      type: String,
      required: !1
    },
    updatePositionStrategy: {
      type: String,
      required: !1
    },
    disableUpdateOnLayoutShift: {
      type: Boolean,
      required: !1
    },
    prioritizePosition: {
      type: Boolean,
      required: !1
    },
    reference: {
      type: null,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  emits: [
    "escapeKeyDown",
    "pointerDownOutside",
    "focusOutside",
    "interactOutside"
  ],
  setup(e, { emit: t }) {
    const r = Xe(e, t), { forwardRef: s } = Z(), i = $f();
    return (o, l) => (h(), k(u(Xt), { present: o.forceMount || u(i).open.value }, {
      default: _(() => [V(eE, O(u(r), {
        ref: u(s),
        onPointerenter: l[0] || (l[0] = (d) => u(kd)(u(i).onOpen)(d))
      }), {
        default: _(() => [S(o.$slots, "default")]),
        _: 3
      }, 16)]),
      _: 3
    }, 8, ["present"]));
  }
}), aE = tE, nE = /* @__PURE__ */ L({
  __name: "HoverCardPortal",
  props: {
    to: {
      type: null,
      required: !1
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    defer: {
      type: Boolean,
      required: !1
    },
    forceMount: {
      type: Boolean,
      required: !1
    }
  },
  setup(e) {
    const t = e;
    return (a, n) => (h(), k(u(ir), pe(me(t)), {
      default: _(() => [S(a.$slots, "default")]),
      _: 3
    }, 16));
  }
}), rE = nE, sE = /* @__PURE__ */ L({
  __name: "HoverCardTrigger",
  props: {
    reference: {
      type: null,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "a"
    }
  },
  setup(e) {
    const { forwardRef: t, currentElement: a } = Z(), n = $f();
    n.triggerElement = a;
    function r() {
      setTimeout(() => {
        !n.isPointerInTransitRef.value && !n.open.value && n.onClose();
      }, 0);
    }
    return (s, i) => (h(), k(u(Lr), {
      "as-child": "",
      reference: s.reference
    }, {
      default: _(() => [V(u(U), {
        ref: u(t),
        "as-child": s.asChild,
        as: s.as,
        "data-state": u(n).open.value ? "open" : "closed",
        "data-grace-area-trigger": "",
        onPointerenter: i[0] || (i[0] = (o) => u(kd)(u(n).onOpen)(o)),
        onPointerleave: i[1] || (i[1] = (o) => u(kd)(r)(o)),
        onFocus: i[2] || (i[2] = (o) => u(n).onOpen()),
        onBlur: i[3] || (i[3] = (o) => u(n).onClose())
      }, {
        default: _(() => [S(s.$slots, "default")]),
        _: 3
      }, 8, [
        "as-child",
        "as",
        "data-state"
      ])]),
      _: 3
    }, 8, ["reference"]));
  }
}), iE = sE, oE = /* @__PURE__ */ L({
  __name: "Label",
  props: {
    for: {
      type: String,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "label"
    }
  },
  setup(e) {
    const t = e;
    return Z(), (a, n) => (h(), k(u(U), O(t, { onMousedown: n[0] || (n[0] = (r) => {
      !r.defaultPrevented && r.detail > 1 && r.preventDefault();
    }) }), {
      default: _(() => [S(a.$slots, "default")]),
      _: 3
    }, 16));
  }
}), Cs = oE;
const [qr, lE] = Me(["NavigationMenuRoot", "NavigationMenuSub"], "NavigationMenuContext");
var uE = /* @__PURE__ */ L({
  __name: "NavigationMenuRoot",
  props: {
    modelValue: {
      type: String,
      required: !1,
      default: void 0
    },
    defaultValue: {
      type: String,
      required: !1
    },
    dir: {
      type: String,
      required: !1
    },
    orientation: {
      type: String,
      required: !1,
      default: "horizontal"
    },
    delayDuration: {
      type: Number,
      required: !1,
      default: 200
    },
    skipDelayDuration: {
      type: Number,
      required: !1,
      default: 300
    },
    disableClickTrigger: {
      type: Boolean,
      required: !1,
      default: !1
    },
    disableHoverTrigger: {
      type: Boolean,
      required: !1,
      default: !1
    },
    disablePointerLeaveClose: {
      type: Boolean,
      required: !1
    },
    unmountOnHide: {
      type: Boolean,
      required: !1,
      default: !0
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "nav"
    }
  },
  emits: ["update:modelValue"],
  setup(e, { emit: t }) {
    const a = e, r = Ze(a, "modelValue", t, {
      defaultValue: a.defaultValue ?? "",
      passive: a.modelValue === void 0
    }), s = N(""), { forwardRef: i, currentElement: o } = Z(), l = N(), d = N(), c = N(), { getItems: f, CollectionSlot: p } = yt({
      key: "NavigationMenu",
      isProvider: !0
    }), { delayDuration: g, skipDelayDuration: v, dir: m, disableClickTrigger: y, disableHoverTrigger: x, unmountOnHide: b } = We(a), C = Yt(m), w = Li(!1, v), $ = T(() => r.value !== "" || w.value ? 150 : g.value), B = BC((I) => {
      typeof I == "string" && (s.value = r.value, r.value = I);
    }, $);
    return ot(() => {
      if (!r.value) return;
      const I = f().map((E) => E.ref);
      c.value = I.find((E) => E.id.includes(r.value));
    }), lE({
      isRootMenu: !0,
      modelValue: r,
      previousValue: s,
      baseId: pt(void 0, "reka-navigation-menu"),
      disableClickTrigger: y,
      disableHoverTrigger: x,
      dir: C,
      unmountOnHide: b,
      orientation: a.orientation,
      rootNavigationMenu: o,
      indicatorTrack: l,
      activeTrigger: c,
      onIndicatorTrackChange: (I) => {
        l.value = I;
      },
      viewport: d,
      onViewportChange: (I) => {
        d.value = I;
      },
      onTriggerEnter: (I) => {
        B(I);
      },
      onTriggerLeave: () => {
        w.value = !0, B("");
      },
      onContentEnter: () => {
        B();
      },
      onContentLeave: () => {
        a.disablePointerLeaveClose || B("");
      },
      onItemSelect: (I) => {
        s.value = r.value, r.value = I;
      },
      onItemDismiss: () => {
        s.value = r.value, r.value = "";
      }
    }), (I, E) => (h(), k(u(p), null, {
      default: _(() => [V(u(U), {
        ref: u(i),
        "aria-label": "Main",
        as: I.as,
        "as-child": I.asChild,
        "data-orientation": I.orientation,
        dir: u(C),
        "data-reka-navigation-menu": ""
      }, {
        default: _(() => [S(I.$slots, "default", { modelValue: u(r) })]),
        _: 3
      }, 8, [
        "as",
        "as-child",
        "data-orientation",
        "dir"
      ])]),
      _: 3
    }));
  }
}), dE = uE;
function Nl(e) {
  return e ? "open" : "closed";
}
function ub(e, t) {
  return `${e}-trigger-${t}`;
}
function If(e, t) {
  return `${e}-content-${t}`;
}
const cE = "navigationMenu.linkSelect", Vo = "navigationMenu.rootContentDismiss";
function Ad(e) {
  const t = [], a = document.createTreeWalker(e, NodeFilter.SHOW_ELEMENT, { acceptNode: (n) => {
    const r = n.tagName === "INPUT" && n.type === "hidden";
    return n.disabled || n.hidden || r ? NodeFilter.FILTER_SKIP : n.tabIndex >= 0 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;
  } });
  for (; a.nextNode(); ) t.push(a.currentNode);
  return t;
}
function db(e) {
  const t = dt();
  return e.some((a) => a === t ? !0 : (a.focus(), dt() !== t));
}
function fE(e) {
  return e.forEach((t) => {
    t.dataset.tabindex = t.getAttribute("tabindex") || "", t.setAttribute("tabindex", "-1");
  }), () => {
    e.forEach((t) => {
      const a = t.dataset.tabindex;
      t.setAttribute("tabindex", a);
    });
  };
}
function cb(e) {
  return (t) => t.pointerType === "mouse" ? e(t) : void 0;
}
const [Ef, pE] = Me("NavigationMenuItem");
var gE = /* @__PURE__ */ L({
  __name: "NavigationMenuItem",
  props: {
    value: {
      type: String,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "li"
    }
  },
  setup(e) {
    const t = e;
    Z();
    const { getItems: a } = yt({ key: "NavigationMenu" }), n = qr(), r = pt(t.value), s = N(), i = N(), o = If(n.baseId, r);
    let l = () => ({});
    const d = N(!1);
    async function c(v = "start") {
      const m = document.getElementById(o);
      if (m) {
        l();
        const y = Ad(m);
        y.length && db(v === "start" ? y : y.reverse());
      }
    }
    function f() {
      const v = document.getElementById(o);
      if (v) {
        const m = Ad(v);
        m.length && (l = fE(m));
      }
    }
    pE({
      value: r,
      contentId: o,
      triggerRef: s,
      focusProxyRef: i,
      wasEscapeCloseRef: d,
      onEntryKeyDown: c,
      onFocusProxyEnter: c,
      onContentFocusOutside: f,
      onRootContentClose: f
    });
    function p() {
      n.onItemDismiss(), s.value?.focus();
    }
    function g(v) {
      const m = dt();
      if (v.keyCode === 32 || v.key === "Enter") if (n.modelValue.value === r) {
        p(), v.preventDefault();
        return;
      } else {
        v.target.click(), v.preventDefault();
        return;
      }
      const y = a().filter((b) => b.ref.parentElement?.hasAttribute("data-menu-item")).map((b) => b.ref);
      if (!y.includes(m)) return;
      const x = Mr(v, m, void 0, {
        itemsArray: y,
        loop: !1
      });
      x && x?.focus(), v.preventDefault(), v.stopPropagation();
    }
    return (v, m) => (h(), k(u(U), {
      "as-child": v.asChild,
      as: v.as,
      "data-menu-item": "",
      onKeydown: nt(g, [
        "up",
        "down",
        "left",
        "right",
        "home",
        "end",
        "space"
      ])
    }, {
      default: _(() => [S(v.$slots, "default")]),
      _: 3
    }, 8, ["as-child", "as"]));
  }
}), vE = gE, hE = /* @__PURE__ */ L({
  __name: "NavigationMenuContentImpl",
  props: {
    disableOutsidePointerEvents: {
      type: Boolean,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  emits: [
    "escapeKeyDown",
    "pointerDownOutside",
    "focusOutside",
    "interactOutside"
  ],
  setup(e, { emit: t }) {
    const a = e, n = t, { getItems: r } = yt({ key: "NavigationMenu" }), { forwardRef: s, currentElement: i } = Z(), o = qr(), l = Ef(), d = ub(o.baseId, l.value), c = If(o.baseId, l.value), f = N(null), p = T(() => {
      const b = r().map((E) => E.ref.id.split("trigger-")[1]);
      o.dir.value === "rtl" && b.reverse();
      const C = b.indexOf(o.modelValue.value), w = b.indexOf(o.previousValue.value), $ = l.value === o.modelValue.value, B = w === b.indexOf(l.value);
      if (!$ && !B) return f.value;
      const I = (() => {
        if (C !== w) {
          if ($ && w !== -1) return C > w ? "from-end" : "from-start";
          if (B && C !== -1) return C > w ? "to-start" : "to-end";
        }
        return null;
      })();
      return f.value = I, I;
    });
    function g(b) {
      if (n("focusOutside", b), n("interactOutside", b), b.detail.originalEvent.target.hasAttribute("data-navigation-menu-trigger") && b.preventDefault(), !b.defaultPrevented) {
        l.onContentFocusOutside();
        const w = b.target;
        o.rootNavigationMenu?.value?.contains(w) && b.preventDefault();
      }
    }
    function v(b) {
      if (n("pointerDownOutside", b), !b.defaultPrevented) {
        const C = b.target, w = r().some((B) => B.ref.contains(C)), $ = o.isRootMenu && o.viewport.value?.contains(C);
        (w || $ || !o.isRootMenu) && b.preventDefault();
      }
    }
    ot((b) => {
      const C = i.value;
      if (o.isRootMenu && C) {
        const w = () => {
          o.onItemDismiss(), l.onRootContentClose(), C.contains(dt()) && l.triggerRef.value?.focus();
        };
        C.addEventListener(Vo, w), b(() => C.removeEventListener(Vo, w));
      }
    });
    function m(b) {
      n("escapeKeyDown", b), b.defaultPrevented || (o.onItemDismiss(), l.triggerRef?.value?.focus(), l.wasEscapeCloseRef.value = !0);
    }
    function y(b) {
      if (b.target.closest("[data-reka-navigation-menu]") !== o.rootNavigationMenu.value) return;
      const C = b.altKey || b.ctrlKey || b.metaKey, w = b.key === "Tab" && !C, $ = Ad(b.currentTarget);
      if (w) {
        const I = dt(), E = $.findIndex((F) => F === I), R = b.shiftKey ? $.slice(0, E).reverse() : $.slice(E + 1, $.length);
        if (db(R)) b.preventDefault();
        else {
          l.focusProxyRef.value?.focus();
          return;
        }
      }
      Mr(b, dt(), void 0, {
        itemsArray: $,
        loop: !1,
        enableIgnoredElement: !0
      })?.focus();
    }
    function x() {
      const b = new Event(Vo, {
        bubbles: !0,
        cancelable: !0
      });
      i.value?.dispatchEvent(b);
    }
    return (b, C) => (h(), k(u(sr), O({
      id: u(c),
      ref: u(s),
      "aria-labelledby": u(d),
      "data-motion": p.value,
      "data-state": u(Nl)(u(o).modelValue.value === u(l).value),
      "data-orientation": u(o).orientation
    }, a, {
      onKeydown: y,
      onEscapeKeyDown: m,
      onPointerDownOutside: v,
      onFocusOutside: g,
      onDismiss: x
    }), {
      default: _(() => [S(b.$slots, "default")]),
      _: 3
    }, 16, [
      "id",
      "aria-labelledby",
      "data-motion",
      "data-state",
      "data-orientation"
    ]));
  }
}), mE = hE, yE = /* @__PURE__ */ L({
  inheritAttrs: !1,
  __name: "NavigationMenuContent",
  props: {
    forceMount: {
      type: Boolean,
      required: !1
    },
    disableOutsidePointerEvents: {
      type: Boolean,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  emits: [
    "escapeKeyDown",
    "pointerDownOutside",
    "focusOutside",
    "interactOutside"
  ],
  setup(e, { emit: t }) {
    const a = e, n = t, r = Xe(pm(a, "forceMount"), n), { forwardRef: s } = Z(), i = qr(), o = Ef(), l = T(() => o.value === i.modelValue.value), d = T(() => i.viewport.value && !i.modelValue.value && i.previousValue.value ? i.previousValue.value === o.value : !1);
    return (c, f) => (h(), k(Mi, {
      to: u(Aa) && u(i).viewport.value ? u(i).viewport.value : "body",
      disabled: u(Aa) && u(i).viewport.value ? !u(i).viewport.value : !0
    }, [V(u(Xt), {
      present: c.forceMount || l.value || d.value,
      "force-mount": !u(i).unmountOnHide.value
    }, {
      default: _(({ present: p }) => [V(mE, O({
        ref: u(s),
        "data-state": u(Nl)(l.value),
        style: { pointerEvents: !l.value && u(i).isRootMenu ? "none" : void 0 }
      }, {
        ...c.$attrs,
        ...u(r)
      }, {
        hidden: !p,
        onPointerenter: f[0] || (f[0] = (g) => u(i).onContentEnter(u(o).value)),
        onPointerleave: f[1] || (f[1] = (g) => u(cb)(() => u(i).onContentLeave())(g)),
        onPointerDownOutside: f[2] || (f[2] = (g) => n("pointerDownOutside", g)),
        onFocusOutside: f[3] || (f[3] = (g) => n("focusOutside", g)),
        onInteractOutside: f[4] || (f[4] = (g) => n("interactOutside", g))
      }), {
        default: _(() => [S(c.$slots, "default")]),
        _: 2
      }, 1040, [
        "data-state",
        "style",
        "hidden"
      ])]),
      _: 3
    }, 8, ["present", "force-mount"])], 8, ["to", "disabled"]));
  }
}), bE = yE, wE = /* @__PURE__ */ L({
  inheritAttrs: !1,
  __name: "NavigationMenuIndicator",
  props: {
    forceMount: {
      type: Boolean,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  setup(e) {
    const t = e, { forwardRef: a } = Z(), n = qr(), r = N(), s = T(() => n.orientation === "horizontal"), i = T(() => !!n.modelValue.value), { activeTrigger: o } = n;
    function l() {
      o.value && (r.value = {
        size: s.value ? o.value.offsetWidth : o.value.offsetHeight,
        position: s.value ? o.value.offsetLeft : o.value.offsetTop
      });
    }
    return ot(() => {
      n.modelValue.value && l();
    }), ps(o, l), ps(n.indicatorTrack, l), (d, c) => u(n).indicatorTrack.value ? (h(), k(Mi, {
      key: 0,
      to: u(n).indicatorTrack.value
    }, [V(u(Xt), { present: d.forceMount || i.value }, {
      default: _(() => [V(u(U), O({
        ref: u(a),
        "aria-hidden": "true",
        "data-state": i.value ? "visible" : "hidden",
        "data-orientation": u(n).orientation,
        "as-child": t.asChild,
        as: d.as,
        style: { ...r.value ? {
          "--reka-navigation-menu-indicator-size": `${r.value.size}px`,
          "--reka-navigation-menu-indicator-position": `${r.value.position}px`
        } : {} }
      }, d.$attrs), {
        default: _(() => [S(d.$slots, "default")]),
        _: 3
      }, 16, [
        "data-state",
        "data-orientation",
        "as-child",
        "as",
        "style"
      ])]),
      _: 3
    }, 8, ["present"])], 8, ["to"])) : D("v-if", !0);
  }
}), CE = wE, xE = /* @__PURE__ */ L({
  __name: "NavigationMenuLink",
  props: {
    active: {
      type: Boolean,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "a"
    }
  },
  emits: ["select"],
  setup(e, { emit: t }) {
    const a = e, n = t, { CollectionItem: r } = yt({ key: "NavigationMenu" });
    Z();
    async function s(i) {
      const o = new CustomEvent(cE, {
        bubbles: !0,
        cancelable: !0,
        detail: { originalEvent: i }
      });
      if (n("select", o), !o.defaultPrevented && !i.metaKey) {
        const l = new CustomEvent(Vo, {
          bubbles: !0,
          cancelable: !0
        });
        i.target?.dispatchEvent(l);
      }
    }
    return (i, o) => (h(), k(u(r), null, {
      default: _(() => [V(u(U), {
        as: i.as,
        "data-active": i.active ? "" : void 0,
        "aria-current": i.active ? "page" : void 0,
        "as-child": a.asChild,
        onClick: s
      }, {
        default: _(() => [S(i.$slots, "default")]),
        _: 3
      }, 8, [
        "as",
        "data-active",
        "aria-current",
        "as-child"
      ])]),
      _: 3
    }));
  }
}), bu = xE, SE = /* @__PURE__ */ L({
  inheritAttrs: !1,
  __name: "NavigationMenuList",
  props: {
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "ul"
    }
  },
  setup(e) {
    const t = e, a = qr(), { forwardRef: n, currentElement: r } = Z();
    return Pe(() => {
      a.onIndicatorTrackChange(r.value);
    }), (s, i) => (h(), k(u(U), {
      ref: u(n),
      style: { position: "relative" }
    }, {
      default: _(() => [V(u(U), O(s.$attrs, {
        "as-child": t.asChild,
        as: s.as,
        "data-orientation": u(a).orientation
      }), {
        default: _(() => [S(s.$slots, "default")]),
        _: 3
      }, 16, [
        "as-child",
        "as",
        "data-orientation"
      ])]),
      _: 3
    }, 512));
  }
}), _E = SE;
const kE = ["aria-owns"];
var AE = /* @__PURE__ */ L({
  inheritAttrs: !1,
  __name: "NavigationMenuTrigger",
  props: {
    disabled: {
      type: Boolean,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "button"
    }
  },
  setup(e) {
    const t = e, a = qr(), n = Ef(), { CollectionItem: r } = yt({ key: "NavigationMenu" }), { forwardRef: s, currentElement: i } = Z(), o = N(""), l = N(""), d = Li(!1, 300), c = N(!1), f = T(() => n.value === a.modelValue.value);
    Pe(() => {
      n.triggerRef = i, o.value = ub(a.baseId, n.value), l.value = If(a.baseId, n.value);
    });
    function p() {
      a.disableHoverTrigger.value || (c.value = !1, n.wasEscapeCloseRef.value = !1);
    }
    function g(C) {
      if (!a.disableHoverTrigger.value && C.pointerType === "mouse") {
        if (t.disabled || c.value || n.wasEscapeCloseRef.value || d.value) return;
        a.onTriggerEnter(n.value), d.value = !0;
      }
    }
    function v(C) {
      if (!a.disableHoverTrigger.value && C.pointerType === "mouse") {
        if (t.disabled) return;
        a.onTriggerLeave(), d.value = !1;
      }
    }
    function m(C) {
      C.pointerType === "mouse" && a.disableClickTrigger.value || d.value || (f.value ? a.onItemSelect("") : a.onItemSelect(n.value), c.value = f.value);
    }
    function y(C) {
      const $ = {
        horizontal: "ArrowDown",
        vertical: a.dir.value === "rtl" ? "ArrowLeft" : "ArrowRight"
      }[a.orientation];
      f.value && C.key === $ && (n.onEntryKeyDown(), C.preventDefault(), C.stopPropagation());
    }
    function x(C) {
      n.focusProxyRef.value = sa(C);
    }
    function b(C) {
      const w = document.getElementById(n.contentId), $ = C.relatedTarget, B = $ === i.value, I = w?.contains($);
      (B || !I) && n.onFocusProxyEnter(B ? "start" : "end");
    }
    return (C, w) => (h(), M(te, null, [V(u(r), null, {
      default: _(() => [V(u(U), O({
        id: o.value,
        ref: u(s),
        disabled: C.disabled,
        "data-disabled": C.disabled ? "" : void 0,
        "data-state": u(Nl)(f.value),
        "data-navigation-menu-trigger": "",
        "aria-expanded": f.value,
        "aria-controls": l.value,
        "as-child": t.asChild,
        as: C.as
      }, C.$attrs, {
        onPointerenter: p,
        onPointermove: g,
        onPointerleave: v,
        onClick: m,
        onKeydown: y
      }), {
        default: _(() => [S(C.$slots, "default")]),
        _: 3
      }, 16, [
        "id",
        "disabled",
        "data-disabled",
        "data-state",
        "aria-expanded",
        "aria-controls",
        "as-child",
        "as"
      ])]),
      _: 3
    }), f.value ? (h(), M(te, { key: 0 }, [V(u(Fn), {
      ref: x,
      "aria-hidden": "true",
      tabindex: 0,
      onFocus: b
    }), u(a).viewport ? (h(), M("span", {
      key: 0,
      "aria-owns": l.value
    }, null, 8, kE)) : D("v-if", !0)], 64)) : D("v-if", !0)], 64));
  }
}), $E = AE, IE = /* @__PURE__ */ L({
  inheritAttrs: !1,
  __name: "NavigationMenuViewport",
  props: {
    forceMount: {
      type: Boolean,
      required: !1
    },
    align: {
      type: String,
      required: !1,
      default: "center"
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  setup(e) {
    const t = e, { forwardRef: a, currentElement: n } = Z(), r = qr(), { activeTrigger: s, rootNavigationMenu: i, modelValue: o } = r, l = N(), d = N(), c = T(() => !!r.modelValue.value);
    ye(n, () => {
      r.onViewportChange(n.value);
    });
    const f = N();
    ye([o, c], () => {
      n.value && requestAnimationFrame(() => {
        const g = n.value?.querySelector("[data-state=open]");
        f.value = g;
      });
    }, {
      immediate: !0,
      flush: "post"
    });
    function p() {
      if (f.value && s.value && i.value) {
        const g = document.documentElement.offsetWidth, v = document.documentElement.offsetHeight, m = i.value.getBoundingClientRect(), y = s.value.getBoundingClientRect(), { offsetWidth: x, offsetHeight: b } = f.value, C = y.left - m.left, w = y.top - m.top;
        let $ = null, B = null;
        switch (t.align) {
          case "start":
            $ = C, B = w;
            break;
          case "end":
            $ = C - x + y.width, B = w - b + y.height;
            break;
          default:
            $ = C - x / 2 + y.width / 2, B = w - b / 2 + y.height / 2;
        }
        const I = 10;
        $ + m.left < I && ($ = I - m.left);
        const E = $ + m.left + x;
        E > g - I && ($ -= E - g + I, $ < I - m.left && ($ = I - m.left)), B + m.top < I && (B = I - m.top);
        const P = B + m.top + b;
        P > v - I && (B -= P - v + I, B < I - m.top && (B = I - m.top)), $ = Math.round($), B = Math.round(B), d.value = {
          left: $,
          top: B
        };
      }
    }
    return ps(f, () => {
      f.value && (l.value = {
        width: f.value.offsetWidth,
        height: f.value.offsetHeight
      }, p());
    }), ps([globalThis.document?.body, i], () => {
      p();
    }), (g, v) => (h(), k(u(Xt), {
      present: g.forceMount || c.value,
      "force-mount": !u(r).unmountOnHide.value,
      onAfterLeave: v[2] || (v[2] = () => {
        l.value = void 0, d.value = void 0;
      })
    }, {
      default: _(({ present: m }) => [V(u(U), O(g.$attrs, {
        ref: u(a),
        as: g.as,
        "as-child": g.asChild,
        "data-state": u(Nl)(c.value),
        "data-orientation": u(r).orientation,
        style: {
          pointerEvents: !c.value && u(r).isRootMenu ? "none" : void 0,
          "--reka-navigation-menu-viewport-width": l.value ? `${l.value?.width}px` : void 0,
          "--reka-navigation-menu-viewport-height": l.value ? `${l.value?.height}px` : void 0,
          "--reka-navigation-menu-viewport-left": d.value ? `${d.value?.left}px` : void 0,
          "--reka-navigation-menu-viewport-top": d.value ? `${d.value?.top}px` : void 0
        },
        hidden: !m,
        onPointerenter: v[0] || (v[0] = (y) => u(r).onContentEnter(u(r).modelValue.value)),
        onPointerleave: v[1] || (v[1] = (y) => u(cb)(() => u(r).onContentLeave())(y))
      }), {
        default: _(() => [S(g.$slots, "default")]),
        _: 2
      }, 1040, [
        "as",
        "as-child",
        "data-state",
        "data-orientation",
        "style",
        "hidden"
      ])]),
      _: 3
    }, 8, ["present", "force-mount"]));
  }
}), EE = IE;
let wu = /* @__PURE__ */ new Map(), $d = !1;
try {
  $d = new Intl.NumberFormat("de-DE", {
    signDisplay: "exceptZero"
  }).resolvedOptions().signDisplay === "exceptZero";
} catch {
}
let ol = !1;
try {
  ol = new Intl.NumberFormat("de-DE", {
    style: "unit",
    unit: "degree"
  }).resolvedOptions().style === "unit";
} catch {
}
const fb = {
  degree: {
    narrow: {
      default: "°",
      "ja-JP": " 度",
      "zh-TW": "度",
      "sl-SI": " °"
    }
  }
};
class pb {
  /** Formats a number value as a string, according to the locale and options provided to the constructor. */
  format(t) {
    let a = "";
    if (!$d && this.options.signDisplay != null ? a = BE(this.numberFormatter, this.options.signDisplay, t) : a = this.numberFormatter.format(t), this.options.style === "unit" && !ol) {
      var n;
      let { unit: r, unitDisplay: s = "short", locale: i } = this.resolvedOptions();
      if (!r) return a;
      let o = (n = fb[r]) === null || n === void 0 ? void 0 : n[s];
      a += o[i] || o.default;
    }
    return a;
  }
  /** Formats a number to an array of parts such as separators, digits, punctuation, and more. */
  formatToParts(t) {
    return this.numberFormatter.formatToParts(t);
  }
  /** Formats a number range as a string. */
  formatRange(t, a) {
    if (typeof this.numberFormatter.formatRange == "function") return this.numberFormatter.formatRange(t, a);
    if (a < t) throw new RangeError("End date must be >= start date");
    return `${this.format(t)} – ${this.format(a)}`;
  }
  /** Formats a number range as an array of parts. */
  formatRangeToParts(t, a) {
    if (typeof this.numberFormatter.formatRangeToParts == "function") return this.numberFormatter.formatRangeToParts(t, a);
    if (a < t) throw new RangeError("End date must be >= start date");
    let n = this.numberFormatter.formatToParts(t), r = this.numberFormatter.formatToParts(a);
    return [
      ...n.map((s) => ({
        ...s,
        source: "startRange"
      })),
      {
        type: "literal",
        value: " – ",
        source: "shared"
      },
      ...r.map((s) => ({
        ...s,
        source: "endRange"
      }))
    ];
  }
  /** Returns the resolved formatting options based on the values passed to the constructor. */
  resolvedOptions() {
    let t = this.numberFormatter.resolvedOptions();
    return !$d && this.options.signDisplay != null && (t = {
      ...t,
      signDisplay: this.options.signDisplay
    }), !ol && this.options.style === "unit" && (t = {
      ...t,
      style: "unit",
      unit: this.options.unit,
      unitDisplay: this.options.unitDisplay
    }), t;
  }
  constructor(t, a = {}) {
    this.numberFormatter = TE(t, a), this.options = a;
  }
}
function TE(e, t = {}) {
  let { numberingSystem: a } = t;
  if (a && e.includes("-nu-") && (e.includes("-u-") || (e += "-u-"), e += `-nu-${a}`), t.style === "unit" && !ol) {
    var n;
    let { unit: i, unitDisplay: o = "short" } = t;
    if (!i) throw new Error('unit option must be provided with style: "unit"');
    if (!(!((n = fb[i]) === null || n === void 0) && n[o])) throw new Error(`Unsupported unit ${i} with unitDisplay = ${o}`);
    t = {
      ...t,
      style: "decimal"
    };
  }
  let r = e + (t ? Object.entries(t).sort((i, o) => i[0] < o[0] ? -1 : 1).join() : "");
  if (wu.has(r)) return wu.get(r);
  let s = new Intl.NumberFormat(e, t);
  return wu.set(r, s), s;
}
function BE(e, t, a) {
  if (t === "auto") return e.format(a);
  if (t === "never") return e.format(Math.abs(a));
  {
    let n = !1;
    if (t === "always" ? n = a > 0 || Object.is(a, 0) : t === "exceptZero" && (Object.is(a, -0) || Object.is(a, 0) ? a = Math.abs(a) : n = a > 0), n) {
      let r = e.format(-a), s = e.format(a), i = r.replace(s, "").replace(/\u200e|\u061C/, "");
      return [
        ...i
      ].length !== 1 && console.warn("@react-aria/i18n polyfill for NumberFormat signDisplay: Unsupported case"), r.replace(s, "!!!").replace(i, "+").replace("!!!", s);
    } else return e.format(a);
  }
}
const PE = new RegExp("^.*\\(.*\\).*$"), DE = [
  "latn",
  "arab",
  "hanidec",
  "deva",
  "beng",
  "fullwide"
];
class gb {
  /**
  * Parses the given string to a number. Returns NaN if a valid number could not be parsed.
  */
  parse(t) {
    return Cu(this.locale, this.options, t).parse(t);
  }
  /**
  * Returns whether the given string could potentially be a valid number. This should be used to
  * validate user input as the user types. If a `minValue` or `maxValue` is provided, the validity
  * of the minus/plus sign characters can be checked.
  */
  isValidPartialNumber(t, a, n) {
    return Cu(this.locale, this.options, t).isValidPartialNumber(t, a, n);
  }
  /**
  * Returns a numbering system for which the given string is valid in the current locale.
  * If no numbering system could be detected, the default numbering system for the current
  * locale is returned.
  */
  getNumberingSystem(t) {
    return Cu(this.locale, this.options, t).options.numberingSystem;
  }
  constructor(t, a = {}) {
    this.locale = t, this.options = a;
  }
}
const kg = /* @__PURE__ */ new Map();
function Cu(e, t, a) {
  let n = Ag(e, t);
  if (!e.includes("-nu-") && !n.isValidPartialNumber(a)) {
    for (let r of DE) if (r !== n.options.numberingSystem) {
      let s = Ag(e + (e.includes("-u-") ? "-nu-" : "-u-nu-") + r, t);
      if (s.isValidPartialNumber(a)) return s;
    }
  }
  return n;
}
function Ag(e, t) {
  let a = e + (t ? Object.entries(t).sort((r, s) => r[0] < s[0] ? -1 : 1).join() : ""), n = kg.get(a);
  return n || (n = new ME(e, t), kg.set(a, n)), n;
}
class ME {
  parse(t) {
    let a = this.sanitize(t);
    if (this.symbols.group && (a = Wr(a, this.symbols.group, "")), this.symbols.decimal && (a = a.replace(this.symbols.decimal, ".")), this.symbols.minusSign && (a = a.replace(this.symbols.minusSign, "-")), a = a.replace(this.symbols.numeral, this.symbols.index), this.options.style === "percent") {
      let i = a.indexOf("-");
      a = a.replace("-", ""), a = a.replace("+", "");
      let o = a.indexOf(".");
      o === -1 && (o = a.length), a = a.replace(".", ""), o - 2 === 0 ? a = `0.${a}` : o - 2 === -1 ? a = `0.0${a}` : o - 2 === -2 ? a = "0.00" : a = `${a.slice(0, o - 2)}.${a.slice(o - 2)}`, i > -1 && (a = `-${a}`);
    }
    let n = a ? +a : NaN;
    if (isNaN(n)) return NaN;
    if (this.options.style === "percent") {
      var r, s;
      let i = {
        ...this.options,
        style: "decimal",
        minimumFractionDigits: Math.min(((r = this.options.minimumFractionDigits) !== null && r !== void 0 ? r : 0) + 2, 20),
        maximumFractionDigits: Math.min(((s = this.options.maximumFractionDigits) !== null && s !== void 0 ? s : 0) + 2, 20)
      };
      return new gb(this.locale, i).parse(new pb(this.locale, i).format(n));
    }
    return this.options.currencySign === "accounting" && PE.test(t) && (n = -1 * n), n;
  }
  sanitize(t) {
    return t = t.replace(this.symbols.literals, ""), this.symbols.minusSign && (t = t.replace("-", this.symbols.minusSign)), this.options.numberingSystem === "arab" && (this.symbols.decimal && (t = t.replace(",", this.symbols.decimal), t = t.replace("،", this.symbols.decimal)), this.symbols.group && (t = Wr(t, ".", this.symbols.group))), this.symbols.group === "'" && t.includes("'") && (t = Wr(t, "'", this.symbols.group)), this.options.locale === "fr-FR" && this.symbols.group && (t = Wr(t, " ", this.symbols.group), t = Wr(t, /\u00A0/g, this.symbols.group)), t;
  }
  isValidPartialNumber(t, a = -1 / 0, n = 1 / 0) {
    return t = this.sanitize(t), this.symbols.minusSign && t.startsWith(this.symbols.minusSign) && a < 0 ? t = t.slice(this.symbols.minusSign.length) : this.symbols.plusSign && t.startsWith(this.symbols.plusSign) && n > 0 && (t = t.slice(this.symbols.plusSign.length)), this.symbols.group && t.startsWith(this.symbols.group) || this.symbols.decimal && t.indexOf(this.symbols.decimal) > -1 && this.options.maximumFractionDigits === 0 ? !1 : (this.symbols.group && (t = Wr(t, this.symbols.group, "")), t = t.replace(this.symbols.numeral, ""), this.symbols.decimal && (t = t.replace(this.symbols.decimal, "")), t.length === 0);
  }
  constructor(t, a = {}) {
    this.locale = t, a.roundingIncrement !== 1 && a.roundingIncrement != null && (a.maximumFractionDigits == null && a.minimumFractionDigits == null ? (a.maximumFractionDigits = 0, a.minimumFractionDigits = 0) : a.maximumFractionDigits == null ? a.maximumFractionDigits = a.minimumFractionDigits : a.minimumFractionDigits == null && (a.minimumFractionDigits = a.maximumFractionDigits)), this.formatter = new Intl.NumberFormat(t, a), this.options = this.formatter.resolvedOptions(), this.symbols = LE(t, this.formatter, this.options, a);
    var n, r;
    this.options.style === "percent" && (((n = this.options.minimumFractionDigits) !== null && n !== void 0 ? n : 0) > 18 || ((r = this.options.maximumFractionDigits) !== null && r !== void 0 ? r : 0) > 18) && console.warn("NumberParser cannot handle percentages with greater than 18 decimal places, please reduce the number in your options.");
  }
}
const $g = /* @__PURE__ */ new Set([
  "decimal",
  "fraction",
  "integer",
  "minusSign",
  "plusSign",
  "group"
]), RE = [
  0,
  4,
  2,
  1,
  11,
  20,
  3,
  7,
  100,
  21,
  0.1,
  1.1
];
function LE(e, t, a, n) {
  var r, s, i, o;
  let l = new Intl.NumberFormat(e, {
    ...a,
    // Resets so we get the full range of symbols
    minimumSignificantDigits: 1,
    maximumSignificantDigits: 21,
    roundingIncrement: 1,
    roundingPriority: "auto",
    roundingMode: "halfExpand"
  }), d = l.formatToParts(-10000.111), c = l.formatToParts(10000.111), f = RE.map((R) => l.formatToParts(R));
  var p;
  let g = (p = (r = d.find((R) => R.type === "minusSign")) === null || r === void 0 ? void 0 : r.value) !== null && p !== void 0 ? p : "-", v = (s = c.find((R) => R.type === "plusSign")) === null || s === void 0 ? void 0 : s.value;
  !v && (n?.signDisplay === "exceptZero" || n?.signDisplay === "always") && (v = "+");
  let y = (i = new Intl.NumberFormat(e, {
    ...a,
    minimumFractionDigits: 2,
    maximumFractionDigits: 2
  }).formatToParts(1e-3).find((R) => R.type === "decimal")) === null || i === void 0 ? void 0 : i.value, x = (o = d.find((R) => R.type === "group")) === null || o === void 0 ? void 0 : o.value, b = d.filter((R) => !$g.has(R.type)).map((R) => Ig(R.value)), C = f.flatMap((R) => R.filter((F) => !$g.has(F.type)).map((F) => Ig(F.value))), w = [
    .../* @__PURE__ */ new Set([
      ...b,
      ...C
    ])
  ].sort((R, F) => F.length - R.length), $ = w.length === 0 ? new RegExp("[\\p{White_Space}]", "gu") : new RegExp(`${w.join("|")}|[\\p{White_Space}]`, "gu"), B = [
    ...new Intl.NumberFormat(a.locale, {
      useGrouping: !1
    }).format(9876543210)
  ].reverse(), I = new Map(B.map((R, F) => [
    R,
    F
  ])), E = new RegExp(`[${B.join("")}]`, "g");
  return {
    minusSign: g,
    plusSign: v,
    decimal: y,
    group: x,
    literals: $,
    numeral: E,
    index: (R) => String(I.get(R))
  };
}
function Wr(e, t, a) {
  return e.replaceAll ? e.replaceAll(t, a) : e.split(t).join(a);
}
function Ig(e) {
  return e.replace(/[.*+?^${}()|[\]\\]/g, "\\$&");
}
function vb(e) {
  const { disabled: t } = e, a = N(), n = xr(), r = () => window.clearTimeout(a.value), s = (p) => {
    r(), !t.value && (n.trigger(), a.value = window.setTimeout(() => {
      s(60);
    }, p));
  }, i = () => {
    s(400);
  }, o = () => {
    r();
  }, l = N(!1), d = T(() => sa(e.target)), c = (p) => {
    p.button !== 0 || l.value || (p.preventDefault(), l.value = !0, i());
  }, f = () => {
    l.value = !1, o();
  };
  return Aa && (ra(d || window, "pointerdown", c), ra(window, "pointerup", f), ra(window, "pointercancel", f)), {
    isPressed: l,
    onTrigger: n.on
  };
}
function Eg(e, t = N({})) {
  return Vc(() => new pb(e.value, t.value));
}
function OE(e, t = N({})) {
  return Vc(() => new gb(e.value, t.value));
}
function Tg(e, t, a) {
  let n = e === "+" ? t + a : t - a;
  if (t % 1 !== 0 || a % 1 !== 0) {
    const r = t.toString().split("."), s = a.toString().split("."), i = r[1] && r[1].length || 0, o = s[1] && s[1].length || 0, l = 10 ** Math.max(i, o);
    t = Math.round(t * l), a = Math.round(a * l), n = e === "+" ? t + a : t - a, n /= l;
  }
  return n;
}
const [Tf, FE] = Me("NumberFieldRoot");
var zE = /* @__PURE__ */ L({
  inheritAttrs: !1,
  __name: "NumberFieldRoot",
  props: {
    defaultValue: {
      type: Number,
      required: !1,
      default: void 0
    },
    modelValue: {
      type: [Number, null],
      required: !1
    },
    min: {
      type: Number,
      required: !1
    },
    max: {
      type: Number,
      required: !1
    },
    step: {
      type: Number,
      required: !1,
      default: 1
    },
    stepSnapping: {
      type: Boolean,
      required: !1,
      default: !0
    },
    formatOptions: {
      type: null,
      required: !1
    },
    locale: {
      type: String,
      required: !1
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    disableWheelChange: {
      type: Boolean,
      required: !1
    },
    invertWheelChange: {
      type: Boolean,
      required: !1
    },
    id: {
      type: String,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "div"
    },
    name: {
      type: String,
      required: !1
    },
    required: {
      type: Boolean,
      required: !1
    }
  },
  emits: ["update:modelValue"],
  setup(e, { emit: t }) {
    const a = e, n = t, { disabled: r, readonly: s, disableWheelChange: i, invertWheelChange: o, min: l, max: d, step: c, stepSnapping: f, formatOptions: p, id: g, locale: v } = We(a), m = Ze(a, "modelValue", n, {
      defaultValue: a.defaultValue,
      passive: a.modelValue === void 0
    }), { primitiveElement: y, currentElement: x } = ea(), b = rf(v), C = hn(x), w = N(), $ = T(() => !un(m.value) && (q(m.value) === l.value || l.value && !isNaN(m.value) ? Tg("-", m.value, c.value) < l.value : !1)), B = T(() => !un(m.value) && (q(m.value) === d.value || d.value && !isNaN(m.value) ? Tg("+", m.value, c.value) > d.value : !1));
    function I(se, ce = 1) {
      if (w.value?.focus(), a.disabled || a.readonly) return;
      const oe = H.parse(w.value?.value ?? "");
      isNaN(oe) ? m.value = l.value ?? 0 : se === "increase" ? m.value = q(oe + (c.value ?? 1) * ce) : m.value = q(oe - (c.value ?? 1) * ce);
    }
    function E(se = 1) {
      I("increase", se);
    }
    function P(se = 1) {
      I("decrease", se);
    }
    function R(se) {
      se === "min" && l.value !== void 0 ? m.value = q(l.value) : se === "max" && d.value !== void 0 && (m.value = q(d.value));
    }
    const F = Eg(b, p), H = OE(b, p), j = T(() => F.resolvedOptions().maximumFractionDigits > 0 ? "decimal" : "numeric"), K = Eg(b, p), z = T(() => un(m.value) || isNaN(m.value) ? "" : K.format(m.value));
    function G(se) {
      return H.isValidPartialNumber(se, l.value, d.value);
    }
    function Y(se) {
      w.value && (w.value.value = se);
    }
    function q(se) {
      let ce;
      return c.value === void 0 || isNaN(c.value) || !f.value ? ce = hi(se, l.value, d.value) : ce = gC(se, l.value, d.value, c.value), ce = H.parse(F.format(ce)), ce;
    }
    function Q(se) {
      const ce = H.parse(se);
      return m.value = isNaN(ce) ? void 0 : q(ce), se.length ? (isNaN(ce), Y(z.value)) : Y(se);
    }
    return FE({
      modelValue: m,
      handleDecrease: P,
      handleIncrease: E,
      handleMinMaxValue: R,
      inputMode: j,
      inputEl: w,
      onInputElement: (se) => w.value = se,
      textValue: z,
      validate: G,
      applyInputValue: Q,
      disabled: r,
      readonly: s,
      disableWheelChange: i,
      invertWheelChange: o,
      max: d,
      min: l,
      isDecreaseDisabled: $,
      isIncreaseDisabled: B,
      id: g
    }), (se, ce) => (h(), k(u(U), O(se.$attrs, {
      ref_key: "primitiveElement",
      ref: y,
      role: "group",
      as: se.as,
      "as-child": se.asChild,
      "data-disabled": u(r) ? "" : void 0,
      "data-readonly": u(s) ? "" : void 0
    }), {
      default: _(() => [S(se.$slots, "default", {
        modelValue: u(m),
        textValue: z.value
      }), u(C) && se.name ? (h(), k(u(yn), {
        key: 0,
        type: "text",
        value: u(m),
        name: se.name,
        disabled: u(r),
        readonly: u(s),
        required: se.required
      }, null, 8, [
        "value",
        "name",
        "disabled",
        "readonly",
        "required"
      ])) : D("v-if", !0)]),
      _: 3
    }, 16, [
      "as",
      "as-child",
      "data-disabled",
      "data-readonly"
    ]));
  }
}), qE = zE, VE = /* @__PURE__ */ L({
  __name: "NumberFieldDecrement",
  props: {
    disabled: {
      type: Boolean,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "button"
    }
  },
  setup(e) {
    const t = e, a = Tf(), n = T(() => a.disabled?.value || a.readonly.value || t.disabled || a.isDecreaseDisabled.value), { primitiveElement: r, currentElement: s } = ea(), { isPressed: i, onTrigger: o } = vb({
      target: s,
      disabled: n
    });
    return o(() => {
      a.handleDecrease();
    }), (l, d) => (h(), k(u(U), O(t, {
      ref_key: "primitiveElement",
      ref: r,
      tabindex: "-1",
      "aria-label": "Decrease",
      type: l.as === "button" ? "button" : void 0,
      style: { userSelect: u(i) ? "none" : void 0 },
      disabled: n.value ? "" : void 0,
      "data-disabled": n.value ? "" : void 0,
      "data-pressed": u(i) ? "true" : void 0,
      onContextmenu: d[0] || (d[0] = ze(() => {
      }, ["prevent"]))
    }), {
      default: _(() => [S(l.$slots, "default")]),
      _: 3
    }, 16, [
      "type",
      "style",
      "disabled",
      "data-disabled",
      "data-pressed"
    ]));
  }
}), NE = VE, HE = /* @__PURE__ */ L({
  __name: "NumberFieldIncrement",
  props: {
    disabled: {
      type: Boolean,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "button"
    }
  },
  setup(e) {
    const t = e, a = Tf(), n = T(() => a.disabled?.value || a.readonly.value || t.disabled || a.isIncreaseDisabled.value), { primitiveElement: r, currentElement: s } = ea(), { isPressed: i, onTrigger: o } = vb({
      target: s,
      disabled: n
    });
    return o(() => {
      a.handleIncrease();
    }), (l, d) => (h(), k(u(U), O(t, {
      ref_key: "primitiveElement",
      ref: r,
      tabindex: "-1",
      "aria-label": "Increase",
      type: l.as === "button" ? "button" : void 0,
      style: { userSelect: u(i) ? "none" : void 0 },
      disabled: n.value ? "" : void 0,
      "data-disabled": n.value ? "" : void 0,
      "data-pressed": u(i) ? "true" : void 0,
      onContextmenu: d[0] || (d[0] = ze(() => {
      }, ["prevent"]))
    }), {
      default: _(() => [S(l.$slots, "default")]),
      _: 3
    }, 16, [
      "type",
      "style",
      "disabled",
      "data-disabled",
      "data-pressed"
    ]));
  }
}), jE = HE, KE = /* @__PURE__ */ L({
  __name: "NumberFieldInput",
  props: {
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "input"
    }
  },
  setup(e) {
    const t = e, { primitiveElement: a, currentElement: n } = ea(), r = Tf();
    function s(l) {
      r.disableWheelChange.value || l.target === dt() && (Math.abs(l.deltaY) <= Math.abs(l.deltaX) || (l.preventDefault(), l.deltaY > 0 ? r.invertWheelChange.value ? r.handleDecrease() : r.handleIncrease() : l.deltaY < 0 && (r.invertWheelChange.value ? r.handleIncrease() : r.handleDecrease())));
    }
    Pe(() => {
      r.onInputElement(n.value);
    });
    const i = N(r.textValue.value);
    ye(() => r.textValue.value, () => {
      i.value = r.textValue.value;
    }, {
      immediate: !0,
      deep: !0
    });
    function o() {
      requestAnimationFrame(() => {
        i.value = r.textValue.value;
      });
    }
    return (l, d) => (h(), k(u(U), O(t, {
      id: u(r).id.value,
      ref_key: "primitiveElement",
      ref: a,
      value: i.value,
      role: "spinbutton",
      type: "text",
      tabindex: "0",
      inputmode: u(r).inputMode.value,
      disabled: u(r).disabled.value ? "" : void 0,
      "data-disabled": u(r).disabled.value ? "" : void 0,
      readonly: u(r).readonly.value ? "" : void 0,
      "data-readonly": u(r).readonly.value ? "" : void 0,
      autocomplete: "off",
      autocorrect: "off",
      spellcheck: "false",
      "aria-roledescription": "Number field",
      "aria-valuenow": u(r).modelValue.value,
      "aria-valuemin": u(r).min.value,
      "aria-valuemax": u(r).max.value,
      onKeydown: [
        d[0] || (d[0] = nt(ze((c) => u(r).handleIncrease(), ["prevent"]), ["up"])),
        d[1] || (d[1] = nt(ze((c) => u(r).handleDecrease(), ["prevent"]), ["down"])),
        d[2] || (d[2] = nt(ze((c) => u(r).handleIncrease(10), ["prevent"]), ["page-up"])),
        d[3] || (d[3] = nt(ze((c) => u(r).handleDecrease(10), ["prevent"]), ["page-down"])),
        d[4] || (d[4] = nt(ze((c) => u(r).handleMinMaxValue("min"), ["prevent"]), ["home"])),
        d[5] || (d[5] = nt(ze((c) => u(r).handleMinMaxValue("max"), ["prevent"]), ["end"])),
        d[8] || (d[8] = nt((c) => u(r).applyInputValue(c.target?.value), ["enter"]))
      ],
      onWheel: s,
      onBeforeinput: d[6] || (d[6] = (c) => {
        const f = c.target;
        let p = f.value.slice(0, f.selectionStart ?? void 0) + (c.data ?? "") + f.value.slice(f.selectionEnd ?? void 0);
        u(r).validate(p) || c.preventDefault();
      }),
      onInput: d[7] || (d[7] = (c) => {
        const f = c.target;
        i.value = f.value;
      }),
      onChange: o,
      onBlur: d[9] || (d[9] = (c) => u(r).applyInputValue(c.target?.value))
    }), {
      default: _(() => [S(l.$slots, "default")]),
      _: 3
    }, 16, [
      "id",
      "value",
      "inputmode",
      "disabled",
      "data-disabled",
      "readonly",
      "data-readonly",
      "aria-valuenow",
      "aria-valuemin",
      "aria-valuemax"
    ]));
  }
}), GE = KE, UE = /* @__PURE__ */ L({
  __name: "PaginationEllipsis",
  props: {
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  setup(e) {
    const t = e;
    return Z(), (a, n) => (h(), k(u(U), O(t, { "data-type": "ellipsis" }), {
      default: _(() => [S(a.$slots, "default", {}, () => [n[0] || (n[0] = ee("…"))])]),
      _: 3
    }, 16));
  }
}), WE = UE;
const [Es, YE] = Me("PaginationRoot");
var XE = /* @__PURE__ */ L({
  __name: "PaginationRoot",
  props: {
    page: {
      type: Number,
      required: !1
    },
    defaultPage: {
      type: Number,
      required: !1,
      default: 1
    },
    itemsPerPage: {
      type: Number,
      required: !0
    },
    total: {
      type: Number,
      required: !1,
      default: 0
    },
    siblingCount: {
      type: Number,
      required: !1,
      default: 2
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    showEdges: {
      type: Boolean,
      required: !1,
      default: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "nav"
    }
  },
  emits: ["update:page"],
  setup(e, { emit: t }) {
    const a = e, n = t, { siblingCount: r, disabled: s, showEdges: i } = We(a);
    Z();
    const o = Ze(a, "page", n, {
      defaultValue: a.defaultPage,
      passive: a.page === void 0
    }), l = T(() => Math.max(1, Math.ceil(a.total / (a.itemsPerPage || 1))));
    return YE({
      page: o,
      onPageChange(d) {
        o.value = d;
      },
      pageCount: l,
      siblingCount: r,
      disabled: s,
      showEdges: i
    }), (d, c) => (h(), k(u(U), {
      as: d.as,
      "as-child": d.asChild
    }, {
      default: _(() => [S(d.$slots, "default", {
        page: u(o),
        pageCount: l.value
      })]),
      _: 3
    }, 8, ["as", "as-child"]));
  }
}), JE = XE, QE = /* @__PURE__ */ L({
  __name: "PaginationFirst",
  props: {
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "button"
    }
  },
  setup(e) {
    const t = e, a = Es();
    Z();
    const n = T(() => a.page.value === 1 || a.disabled.value);
    return (r, s) => (h(), k(u(U), O(t, {
      "aria-label": "First Page",
      type: r.as === "button" ? "button" : void 0,
      disabled: n.value,
      onClick: s[0] || (s[0] = (i) => !n.value && u(a).onPageChange(1))
    }), {
      default: _(() => [S(r.$slots, "default", {}, () => [s[1] || (s[1] = ee("First page"))])]),
      _: 3
    }, 16, ["type", "disabled"]));
  }
}), ZE = QE, eT = /* @__PURE__ */ L({
  __name: "PaginationLast",
  props: {
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "button"
    }
  },
  setup(e) {
    const t = e, a = Es();
    Z();
    const n = T(() => a.page.value === a.pageCount.value || a.disabled.value);
    return (r, s) => (h(), k(u(U), O(t, {
      "aria-label": "Last Page",
      type: r.as === "button" ? "button" : void 0,
      disabled: n.value,
      onClick: s[0] || (s[0] = (i) => !n.value && u(a).onPageChange(u(a).pageCount.value))
    }), {
      default: _(() => [S(r.$slots, "default", {}, () => [s[1] || (s[1] = ee("Last page"))])]),
      _: 3
    }, 16, ["type", "disabled"]));
  }
}), tT = eT;
function Vn(e, t) {
  const a = t - e + 1;
  return Array.from({ length: a }, (n, r) => r + e);
}
function aT(e) {
  return e.map((t) => typeof t == "number" ? {
    type: "page",
    value: t
  } : { type: "ellipsis" });
}
const co = "ellipsis";
function nT(e, t, a, n) {
  const s = t, i = Math.max(e - a, 1), o = Math.min(e + a, s);
  if (n) {
    const d = Math.min(2 * a + 5, t) - 2, c = i > 3 && Math.abs(s - d - 1 + 1) > 2 && Math.abs(i - 1) > 2, f = o < s - 2 && Math.abs(s - d) > 2 && Math.abs(s - o) > 2;
    if (!c && f)
      return [
        ...Vn(1, d),
        co,
        s
      ];
    if (c && !f) {
      const g = Vn(s - d + 1, s);
      return [
        1,
        co,
        ...g
      ];
    }
    if (c && f) {
      const g = Vn(i, o);
      return [
        1,
        co,
        ...g,
        co,
        s
      ];
    }
    return Vn(1, s);
  } else {
    const l = a * 2 + 1;
    return t < l ? Vn(1, s) : e <= a + 1 ? Vn(1, l) : t - e <= a ? Vn(t - l + 1, s) : Vn(i, o);
  }
}
var rT = /* @__PURE__ */ L({
  __name: "PaginationList",
  props: {
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  setup(e) {
    const t = e;
    Z();
    const a = Es(), n = T(() => aT(nT(a.page.value, a.pageCount.value, a.siblingCount.value, a.showEdges.value)));
    return (r, s) => (h(), k(u(U), pe(me(t)), {
      default: _(() => [S(r.$slots, "default", { items: n.value })]),
      _: 3
    }, 16));
  }
}), sT = rT, iT = /* @__PURE__ */ L({
  __name: "PaginationListItem",
  props: {
    value: {
      type: Number,
      required: !0
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "button"
    }
  },
  setup(e) {
    const t = e;
    Z();
    const a = Es(), n = T(() => a.page.value === t.value), r = T(() => a.disabled.value);
    return (s, i) => (h(), k(u(U), O(t, {
      "data-type": "page",
      "aria-label": `Page ${s.value}`,
      "aria-current": n.value ? "page" : void 0,
      "data-selected": n.value ? "true" : void 0,
      disabled: r.value,
      type: s.as === "button" ? "button" : void 0,
      onClick: i[0] || (i[0] = (o) => !r.value && u(a).onPageChange(s.value))
    }), {
      default: _(() => [S(s.$slots, "default", {}, () => [ee(X(s.value), 1)])]),
      _: 3
    }, 16, [
      "aria-label",
      "aria-current",
      "data-selected",
      "disabled",
      "type"
    ]));
  }
}), oT = iT, lT = /* @__PURE__ */ L({
  __name: "PaginationNext",
  props: {
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "button"
    }
  },
  setup(e) {
    const t = e;
    Z();
    const a = Es(), n = T(() => a.page.value === a.pageCount.value || a.disabled.value);
    return (r, s) => (h(), k(u(U), O(t, {
      "aria-label": "Next Page",
      type: r.as === "button" ? "button" : void 0,
      disabled: n.value,
      onClick: s[0] || (s[0] = (i) => !n.value && u(a).onPageChange(u(a).page.value + 1))
    }), {
      default: _(() => [S(r.$slots, "default", {}, () => [s[1] || (s[1] = ee("Next page"))])]),
      _: 3
    }, 16, ["type", "disabled"]));
  }
}), uT = lT, dT = /* @__PURE__ */ L({
  __name: "PaginationPrev",
  props: {
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "button"
    }
  },
  setup(e) {
    const t = e;
    Z();
    const a = Es(), n = T(() => a.page.value === 1 || a.disabled.value);
    return (r, s) => (h(), k(u(U), O(t, {
      "aria-label": "Previous Page",
      type: r.as === "button" ? "button" : void 0,
      disabled: n.value,
      onClick: s[0] || (s[0] = (i) => !n.value && u(a).onPageChange(u(a).page.value - 1))
    }), {
      default: _(() => [S(r.$slots, "default", {}, () => [s[1] || (s[1] = ee("Prev page"))])]),
      _: 3
    }, 16, ["type", "disabled"]));
  }
}), cT = dT;
const [fT, pT] = Me("PinInputRoot");
var gT = /* @__PURE__ */ L({
  inheritAttrs: !1,
  __name: "PinInputRoot",
  props: {
    modelValue: {
      type: null,
      required: !1
    },
    defaultValue: {
      type: Array,
      required: !1
    },
    placeholder: {
      type: String,
      required: !1,
      default: ""
    },
    mask: {
      type: Boolean,
      required: !1
    },
    otp: {
      type: Boolean,
      required: !1
    },
    type: {
      type: null,
      required: !1,
      default: "text"
    },
    dir: {
      type: String,
      required: !1
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    id: {
      type: String,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    },
    name: {
      type: String,
      required: !1
    },
    required: {
      type: Boolean,
      required: !1
    }
  },
  emits: ["update:modelValue", "complete"],
  setup(e, { emit: t }) {
    const a = e, n = t, { mask: r, otp: s, placeholder: i, type: o, disabled: l, dir: d } = We(a), { forwardRef: c } = Z(), f = Yt(d), p = Ze(a, "modelValue", n, {
      defaultValue: a.defaultValue ?? [],
      passive: a.modelValue === void 0
    }), g = T(() => Array.isArray(p.value) ? [...p.value] : []), v = N(/* @__PURE__ */ new Set());
    function m(b) {
      v.value.add(b);
    }
    const y = T(() => a.type === "number"), x = T(() => g.value.filter((C) => !!C || y.value && C === 0).length === v.value.size);
    return ye(p, () => {
      x.value && n("complete", p.value);
    }, { deep: !0 }), pT({
      modelValue: p,
      currentModelValue: g,
      mask: r,
      otp: s,
      placeholder: i,
      type: o,
      dir: f,
      disabled: l,
      isCompleted: x,
      inputElements: v,
      onInputElementChange: m,
      isNumericMode: y
    }), (b, C) => (h(), k(u(U), O(b.$attrs, {
      ref: u(c),
      dir: u(f),
      "data-complete": x.value ? "" : void 0,
      "data-disabled": u(l) ? "" : void 0
    }), {
      default: _(() => [S(b.$slots, "default", { modelValue: u(p) }), V(yn, {
        id: b.id,
        as: "input",
        feature: "focusable",
        tabindex: "-1",
        value: g.value.join(""),
        name: b.name ?? "",
        disabled: u(l),
        required: b.required,
        onFocus: C[0] || (C[0] = (w) => Array.from(v.value)?.[0]?.focus())
      }, null, 8, [
        "id",
        "value",
        "name",
        "disabled",
        "required"
      ])]),
      _: 3
    }, 16, [
      "dir",
      "data-complete",
      "data-disabled"
    ]));
  }
}), vT = gT, hT = /* @__PURE__ */ L({
  __name: "PinInputInput",
  props: {
    index: {
      type: Number,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "input"
    }
  },
  setup(e) {
    const t = e, a = fT(), n = T(() => Array.from(a.inputElements.value)), r = T(() => a.currentModelValue.value[t.index]), s = T(() => t.disabled || a.disabled.value), i = T(() => a.otp.value), o = T(() => a.mask.value), { primitiveElement: l, currentElement: d } = ea();
    function c($) {
      const B = $.target;
      if (($.data?.length ?? 0) > 1) {
        b(B.value);
        return;
      }
      if (a.isNumericMode.value && !/^\d*$/.test(B.value)) {
        B.value = B.value.replace(/\D/g, "");
        return;
      }
      B.value = $.data ?? "", w(t.index, B.value);
      const I = n.value[t.index + 1];
      I && I.focus();
    }
    function f() {
      const $ = d.value;
      Be(() => {
        $ && !$.value && ($.placeholder = a.placeholder.value);
      });
    }
    function p($) {
      Mr($, dt(), void 0, {
        itemsArray: n.value,
        focus: !0,
        loop: !1,
        arrowKeyOptions: "horizontal",
        dir: a.dir.value
      });
    }
    function g($) {
      if ($.preventDefault(), $.target.value) w(t.index, "");
      else {
        const E = n.value[t.index - 1];
        E && (E.focus(), w(t.index - 1, ""));
      }
    }
    function v($) {
      $.key === "Delete" && ($.preventDefault(), w(t.index, ""));
    }
    function m($) {
      const B = $.target;
      B.setSelectionRange(1, 1), B.value || (B.placeholder = "");
    }
    function y($) {
      f();
    }
    function x($) {
      $.preventDefault();
      const B = $.clipboardData;
      if (!B) return;
      const I = B.getData("text");
      b(I);
    }
    function b($) {
      const B = [...a.currentModelValue.value], I = $.length >= n.value.length ? 0 : t.index, E = Math.min(I + $.length, n.value.length);
      for (let P = I; P < E; P++) {
        const R = n.value[P], F = $[P - I];
        a.isNumericMode.value && !/^\d*$/.test(F) || (B[P] = F, R.focus());
      }
      a.modelValue.value = B, n.value[E]?.focus();
    }
    function C($) {
      let B = $.length - 1;
      for (; B >= 0 && $[B] === ""; )
        $.pop(), B--;
      return $;
    }
    function w($, B) {
      const I = [...a.currentModelValue.value];
      if (a.isNumericMode.value) {
        const E = +B;
        B === "" || isNaN(E) ? delete I[$] : I[$] = E;
      } else I[$] = B;
      a.modelValue.value = C(I);
    }
    return ye(r, () => {
      r.value || f();
    }), Pe(() => {
      a.onInputElementChange(d.value);
    }), Bt(() => {
      a.inputElements?.value.delete(d.value);
    }), ($, B) => (h(), k(u(U), {
      ref_key: "primitiveElement",
      ref: l,
      autocapitalize: "none",
      as: $.as,
      "as-child": $.asChild,
      autocomplete: i.value ? "one-time-code" : "false",
      type: o.value ? "password" : "text",
      inputmode: u(a).isNumericMode.value ? "numeric" : "text",
      pattern: u(a).isNumericMode.value ? "[0-9]*" : void 0,
      placeholder: u(a).placeholder.value,
      value: r.value,
      disabled: s.value,
      "data-disabled": s.value ? "" : void 0,
      "data-complete": u(a).isCompleted.value ? "" : void 0,
      "aria-label": `pin input ${$.index + 1} of ${n.value.length}`,
      onInput: B[0] || (B[0] = (I) => c(I)),
      onKeydown: [
        nt(p, [
          "left",
          "right",
          "up",
          "down",
          "home",
          "end"
        ]),
        nt(g, ["backspace"]),
        nt(v, ["delete"])
      ],
      onFocus: m,
      onBlur: y,
      onPaste: x
    }, {
      default: _(() => [S($.$slots, "default")]),
      _: 3
    }, 8, [
      "as",
      "as-child",
      "autocomplete",
      "type",
      "inputmode",
      "pattern",
      "placeholder",
      "value",
      "disabled",
      "data-disabled",
      "data-complete",
      "aria-label"
    ]));
  }
}), mT = hT;
const Ci = 100, [yT, bT] = Me("ProgressRoot"), ll = (e) => typeof e == "number";
function wT(e, t) {
  return un(e) || ll(e) && !Number.isNaN(e) && e <= t && e >= 0 ? e : (console.error(`Invalid prop \`value\` of value \`${e}\` supplied to \`ProgressRoot\`. The \`value\` prop must be:
  - a positive number
  - less than the value passed to \`max\` (or ${Ci} if no \`max\` prop is set)
  - \`null\`  or \`undefined\` if the progress is indeterminate.

Defaulting to \`null\`.`), null);
}
function CT(e) {
  return ll(e) && !Number.isNaN(e) && e > 0 ? e : (console.error(`Invalid prop \`max\` of value \`${e}\` supplied to \`ProgressRoot\`. Only numbers greater than 0 are valid max values. Defaulting to \`${Ci}\`.`), Ci);
}
var xT = /* @__PURE__ */ L({
  __name: "ProgressRoot",
  props: {
    modelValue: {
      type: [Number, null],
      required: !1
    },
    max: {
      type: Number,
      required: !1,
      default: Ci
    },
    getValueLabel: {
      type: Function,
      required: !1,
      default: (e, t) => ll(e) ? `${Math.round(e / t * Ci)}%` : void 0
    },
    getValueText: {
      type: Function,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  emits: ["update:modelValue", "update:max"],
  setup(e, { emit: t }) {
    const a = e, n = t;
    Z();
    const r = Ze(a, "modelValue", n, { passive: a.modelValue === void 0 }), s = Ze(a, "max", n, { passive: a.max === void 0 });
    ye(() => r.value, async (o) => {
      const l = wT(o, a.max);
      l !== o && (await Be(), r.value = l);
    }, { immediate: !0 }), ye(() => a.max, (o) => {
      const l = CT(a.max);
      l !== o && (s.value = l);
    }, { immediate: !0 });
    const i = T(() => un(r.value) ? "indeterminate" : r.value === s.value ? "complete" : "loading");
    return bT({
      modelValue: r,
      max: s,
      progressState: i
    }), (o, l) => (h(), k(u(U), {
      "as-child": o.asChild,
      as: o.as,
      "aria-valuemax": u(s),
      "aria-valuemin": 0,
      "aria-valuenow": ll(u(r)) ? u(r) : void 0,
      "aria-valuetext": o.getValueText?.(u(r), u(s)),
      "aria-label": o.getValueLabel(u(r), u(s)),
      role: "progressbar",
      "data-state": i.value,
      "data-value": u(r) ?? void 0,
      "data-max": u(s)
    }, {
      default: _(() => [S(o.$slots, "default", { modelValue: u(r) })]),
      _: 3
    }, 8, [
      "as-child",
      "as",
      "aria-valuemax",
      "aria-valuenow",
      "aria-valuetext",
      "aria-label",
      "data-state",
      "data-value",
      "data-max"
    ]));
  }
}), ST = xT, _T = /* @__PURE__ */ L({
  __name: "ProgressIndicator",
  props: {
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  setup(e) {
    const t = e, a = yT();
    return Z(), (n, r) => (h(), k(u(U), O(t, {
      "data-state": u(a).progressState.value,
      "data-value": u(a).modelValue?.value ?? void 0,
      "data-max": u(a).max.value
    }), {
      default: _(() => [S(n.$slots, "default")]),
      _: 3
    }, 16, [
      "data-state",
      "data-value",
      "data-max"
    ]));
  }
}), kT = _T;
const AT = "radio.select";
function $T(e, t, a) {
  Ar(AT, a, {
    originalEvent: e,
    value: t
  });
}
var IT = /* @__PURE__ */ L({
  __name: "Radio",
  props: {
    id: {
      type: String,
      required: !1
    },
    value: {
      type: null,
      required: !1
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    checked: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "button"
    },
    name: {
      type: String,
      required: !1
    },
    required: {
      type: Boolean,
      required: !1
    }
  },
  emits: ["update:checked", "select"],
  setup(e, { emit: t }) {
    const a = e, n = t, r = Ze(a, "checked", n, { passive: a.checked === void 0 }), { value: s } = We(a), { forwardRef: i, currentElement: o } = Z(), l = hn(o), d = T(() => a.id && o.value ? document.querySelector(`[for="${a.id}"]`)?.innerText ?? a.value : void 0);
    function c(f) {
      a.disabled || $T(f, a.value, (p) => {
        n("select", p), !p?.defaultPrevented && (r.value = !0, l.value && p.stopPropagation());
      });
    }
    return (f, p) => (h(), k(u(U), O(f.$attrs, {
      id: f.id,
      ref: u(i),
      role: "radio",
      type: f.as === "button" ? "button" : void 0,
      as: f.as,
      "aria-checked": u(r),
      "aria-label": d.value,
      "as-child": f.asChild,
      disabled: f.disabled ? "" : void 0,
      "data-state": u(r) ? "checked" : "unchecked",
      "data-disabled": f.disabled ? "" : void 0,
      value: u(s),
      required: f.required,
      name: f.name,
      onClick: ze(c, ["stop"])
    }), {
      default: _(() => [S(f.$slots, "default", { checked: u(r) }), u(l) && f.name ? (h(), k(u(yn), {
        key: 0,
        type: "radio",
        tabindex: "-1",
        value: u(s),
        checked: !!u(r),
        name: f.name,
        disabled: f.disabled,
        required: f.required
      }, null, 8, [
        "value",
        "checked",
        "name",
        "disabled",
        "required"
      ])) : D("v-if", !0)]),
      _: 3
    }, 16, [
      "id",
      "type",
      "as",
      "aria-checked",
      "aria-label",
      "as-child",
      "disabled",
      "data-state",
      "data-disabled",
      "value",
      "required",
      "name"
    ]));
  }
}), ET = IT;
const [TT, BT] = Me("RadioGroupRoot");
var PT = /* @__PURE__ */ L({
  __name: "RadioGroupRoot",
  props: {
    modelValue: {
      type: null,
      required: !1
    },
    defaultValue: {
      type: null,
      required: !1
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    orientation: {
      type: String,
      required: !1,
      default: void 0
    },
    dir: {
      type: String,
      required: !1
    },
    loop: {
      type: Boolean,
      required: !1,
      default: !0
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    },
    name: {
      type: String,
      required: !1
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    }
  },
  emits: ["update:modelValue"],
  setup(e, { emit: t }) {
    const a = e, n = t, { forwardRef: r, currentElement: s } = Z(), i = Ze(a, "modelValue", n, {
      defaultValue: a.defaultValue,
      passive: a.modelValue === void 0
    }), { disabled: o, loop: l, orientation: d, name: c, required: f, dir: p } = We(a), g = Yt(p), v = hn(s);
    return BT({
      modelValue: i,
      changeModelValue: (m) => {
        i.value = m;
      },
      disabled: o,
      loop: l,
      orientation: d,
      name: c?.value,
      required: f
    }), (m, y) => (h(), k(u(Hi), {
      "as-child": "",
      orientation: u(d),
      dir: u(g),
      loop: u(l)
    }, {
      default: _(() => [V(u(U), {
        ref: u(r),
        role: "radiogroup",
        "data-disabled": u(o) ? "" : void 0,
        "as-child": m.asChild,
        as: m.as,
        "aria-orientation": u(d),
        "aria-required": u(f),
        dir: u(g)
      }, {
        default: _(() => [S(m.$slots, "default", { modelValue: u(i) }), u(v) && u(c) ? (h(), k(u(yn), {
          key: 0,
          required: u(f),
          disabled: u(o),
          value: u(i),
          name: u(c)
        }, null, 8, [
          "required",
          "disabled",
          "value",
          "name"
        ])) : D("v-if", !0)]),
        _: 3
      }, 8, [
        "data-disabled",
        "as-child",
        "as",
        "aria-orientation",
        "aria-required",
        "dir"
      ])]),
      _: 3
    }, 8, [
      "orientation",
      "dir",
      "loop"
    ]));
  }
}), DT = PT;
const [MT, RT] = Me("RadioGroupItem");
var LT = /* @__PURE__ */ L({
  inheritAttrs: !1,
  __name: "RadioGroupItem",
  props: {
    id: {
      type: String,
      required: !1
    },
    value: {
      type: null,
      required: !1
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "button"
    },
    name: {
      type: String,
      required: !1
    },
    required: {
      type: Boolean,
      required: !1
    }
  },
  emits: ["select"],
  setup(e, { emit: t }) {
    const a = e, n = t, { forwardRef: r, currentElement: s } = Z(), i = TT(), o = T(() => i.disabled.value || a.disabled), l = T(() => i.required.value || a.required), d = T(() => ca(i.modelValue?.value, a.value));
    RT({
      disabled: o,
      checked: d
    });
    const c = N(!1), f = [
      "ArrowUp",
      "ArrowDown",
      "ArrowLeft",
      "ArrowRight"
    ];
    ra("keydown", (g) => {
      f.includes(g.key) && (c.value = !0);
    }), ra("keyup", () => {
      c.value = !1;
    });
    function p() {
      setTimeout(() => {
        c.value && s.value?.click();
      }, 0);
    }
    return (g, v) => (h(), k(u(Ll), {
      checked: d.value,
      disabled: o.value,
      "as-child": "",
      focusable: !o.value,
      active: d.value
    }, {
      default: _(() => [V(ET, O({
        ...g.$attrs,
        ...a
      }, {
        ref: u(r),
        checked: d.value,
        required: l.value,
        disabled: o.value,
        "onUpdate:checked": v[0] || (v[0] = (m) => u(i).changeModelValue(g.value)),
        onSelect: v[1] || (v[1] = (m) => n("select", m)),
        onKeydown: v[2] || (v[2] = nt(ze(() => {
        }, ["prevent"]), ["enter"])),
        onFocus: p
      }), {
        default: _(() => [S(g.$slots, "default", {
          checked: d.value,
          required: l.value,
          disabled: o.value
        })]),
        _: 3
      }, 16, [
        "checked",
        "required",
        "disabled"
      ])]),
      _: 3
    }, 8, [
      "checked",
      "disabled",
      "focusable",
      "active"
    ]));
  }
}), OT = LT, FT = /* @__PURE__ */ L({
  __name: "RadioGroupIndicator",
  props: {
    forceMount: {
      type: Boolean,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "span"
    }
  },
  setup(e) {
    const { forwardRef: t } = Z(), a = MT();
    return (n, r) => (h(), k(u(Xt), { present: n.forceMount || u(a).checked.value }, {
      default: _(() => [V(u(U), O({
        ref: u(t),
        "data-state": u(a).checked.value ? "checked" : "unchecked",
        "data-disabled": u(a).disabled.value ? "" : void 0,
        "as-child": n.asChild,
        as: n.as
      }, n.$attrs), {
        default: _(() => [S(n.$slots, "default")]),
        _: 3
      }, 16, [
        "data-state",
        "data-disabled",
        "as-child",
        "as"
      ])]),
      _: 3
    }, 8, ["present"]));
  }
}), zT = FT, qT = /* @__PURE__ */ L({
  __name: "BubbleSelect",
  props: {
    autocomplete: {
      type: String,
      required: !1
    },
    autofocus: {
      type: Boolean,
      required: !1
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    form: {
      type: String,
      required: !1
    },
    multiple: {
      type: Boolean,
      required: !1
    },
    name: {
      type: String,
      required: !1
    },
    required: {
      type: Boolean,
      required: !1
    },
    size: {
      type: Number,
      required: !1
    },
    value: {
      type: null,
      required: !1
    }
  },
  setup(e) {
    const t = e, a = N();
    return ye(() => t.value, (n, r) => {
      const s = window.HTMLSelectElement.prototype, o = Object.getOwnPropertyDescriptor(s, "value").set;
      if (n !== r && o && a.value) {
        const l = new Event("change", { bubbles: !0 });
        o.call(a.value, n), a.value.dispatchEvent(l);
      }
    }), (n, r) => (h(), k(u(Fn), { "as-child": "" }, {
      default: _(() => [J("select", O({
        ref_key: "selectElement",
        ref: a
      }, t), [S(n.$slots, "default")], 16)]),
      _: 3
    }));
  }
}), VT = qT;
const NT = [
  " ",
  "Enter",
  "ArrowUp",
  "ArrowDown"
], HT = [" ", "Enter"], rn = 10;
function ul(e, t, a) {
  return e === void 0 ? !1 : Array.isArray(e) ? e.some((n) => Id(n, t, a)) : Id(e, t, a);
}
function Id(e, t, a) {
  return e === void 0 || t === void 0 ? !1 : typeof e == "string" ? e === t : typeof a == "function" ? a(e, t) : typeof a == "string" ? e?.[a] === t?.[a] : ca(e, t);
}
function jT(e) {
  return e == null || e === "" || Array.isArray(e) && e.length === 0;
}
const KT = {
  key: 0,
  value: ""
}, [Vr, hb] = Me("SelectRoot");
var GT = /* @__PURE__ */ L({
  inheritAttrs: !1,
  __name: "SelectRoot",
  props: {
    open: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    defaultOpen: {
      type: Boolean,
      required: !1
    },
    defaultValue: {
      type: null,
      required: !1
    },
    modelValue: {
      type: null,
      required: !1,
      default: void 0
    },
    by: {
      type: [String, Function],
      required: !1
    },
    dir: {
      type: String,
      required: !1
    },
    multiple: {
      type: Boolean,
      required: !1
    },
    autocomplete: {
      type: String,
      required: !1
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    name: {
      type: String,
      required: !1
    },
    required: {
      type: Boolean,
      required: !1
    }
  },
  emits: ["update:modelValue", "update:open"],
  setup(e, { emit: t }) {
    const a = e, n = t, { required: r, disabled: s, multiple: i, dir: o } = We(a), l = Ze(a, "modelValue", n, {
      defaultValue: a.defaultValue ?? (i.value ? [] : void 0),
      passive: a.modelValue === void 0,
      deep: !0
    }), d = Ze(a, "open", n, {
      defaultValue: a.defaultOpen,
      passive: a.open === void 0
    }), c = N(), f = N(), p = N({
      x: 0,
      y: 0
    }), g = T(() => i.value && Array.isArray(l.value) ? l.value?.length === 0 : un(l.value));
    yt({ isProvider: !0 });
    const v = Yt(o), m = hn(c), y = N(/* @__PURE__ */ new Set()), x = T(() => Array.from(y.value).map((w) => w.value).join(";"));
    function b(w) {
      if (i.value) {
        const $ = Array.isArray(l.value) ? [...l.value] : [], B = $.findIndex((I) => Id(I, w, a.by));
        B === -1 ? $.push(w) : $.splice(B, 1), l.value = [...$];
      } else l.value = w;
    }
    function C(w) {
      return Array.from(y.value).find(($) => ul(w, $.value, a.by));
    }
    return hb({
      triggerElement: c,
      onTriggerChange: (w) => {
        c.value = w;
      },
      valueElement: f,
      onValueElementChange: (w) => {
        f.value = w;
      },
      contentId: "",
      modelValue: l,
      onValueChange: b,
      by: a.by,
      open: d,
      multiple: i,
      required: r,
      onOpenChange: (w) => {
        d.value = w;
      },
      dir: v,
      triggerPointerDownPosRef: p,
      disabled: s,
      isEmptyModelValue: g,
      optionsSet: y,
      onOptionAdd: (w) => {
        const $ = C(w.value);
        $ && y.value.delete($), y.value.add(w);
      },
      onOptionRemove: (w) => {
        const $ = C(w.value);
        $ && y.value.delete($);
      }
    }), (w, $) => (h(), k(u(Rr), null, {
      default: _(() => [S(w.$slots, "default", {
        modelValue: u(l),
        open: u(d)
      }), u(m) ? (h(), k(VT, {
        key: x.value,
        "aria-hidden": "true",
        tabindex: "-1",
        multiple: u(i),
        required: u(r),
        name: w.name,
        autocomplete: w.autocomplete,
        disabled: u(s),
        value: u(l)
      }, {
        default: _(() => [u(un)(u(l)) ? (h(), M("option", KT)) : D("v-if", !0), (h(!0), M(te, null, le(Array.from(y.value), (B) => (h(), M("option", O({ key: B.value ?? "" }, { ref_for: !0 }, B), null, 16))), 128))]),
        _: 1
      }, 8, [
        "multiple",
        "required",
        "name",
        "autocomplete",
        "disabled",
        "value"
      ])) : D("v-if", !0)]),
      _: 3
    }));
  }
}), UT = GT, WT = /* @__PURE__ */ L({
  __name: "SelectPopperPosition",
  props: {
    side: {
      type: null,
      required: !1
    },
    sideOffset: {
      type: Number,
      required: !1
    },
    sideFlip: {
      type: Boolean,
      required: !1
    },
    align: {
      type: null,
      required: !1,
      default: "start"
    },
    alignOffset: {
      type: Number,
      required: !1
    },
    alignFlip: {
      type: Boolean,
      required: !1
    },
    avoidCollisions: {
      type: Boolean,
      required: !1
    },
    collisionBoundary: {
      type: null,
      required: !1
    },
    collisionPadding: {
      type: [Number, Object],
      required: !1,
      default: rn
    },
    arrowPadding: {
      type: Number,
      required: !1
    },
    sticky: {
      type: String,
      required: !1
    },
    hideWhenDetached: {
      type: Boolean,
      required: !1
    },
    positionStrategy: {
      type: String,
      required: !1
    },
    updatePositionStrategy: {
      type: String,
      required: !1
    },
    disableUpdateOnLayoutShift: {
      type: Boolean,
      required: !1
    },
    prioritizePosition: {
      type: Boolean,
      required: !1
    },
    reference: {
      type: null,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  setup(e) {
    const a = xt(e);
    return (n, r) => (h(), k(u(As), O(u(a), { style: {
      boxSizing: "border-box",
      "--reka-select-content-transform-origin": "var(--reka-popper-transform-origin)",
      "--reka-select-content-available-width": "var(--reka-popper-available-width)",
      "--reka-select-content-available-height": "var(--reka-popper-available-height)",
      "--reka-select-trigger-width": "var(--reka-popper-anchor-width)",
      "--reka-select-trigger-height": "var(--reka-popper-anchor-height)"
    } }), {
      default: _(() => [S(n.$slots, "default")]),
      _: 3
    }, 16));
  }
}), YT = WT;
const mb = {
  onViewportChange: () => {
  },
  itemTextRefCallback: () => {
  },
  itemRefCallback: () => {
  }
}, [Hl, yb] = Me("SelectContent");
var XT = /* @__PURE__ */ L({
  __name: "SelectContentImpl",
  props: {
    position: {
      type: String,
      required: !1,
      default: "item-aligned"
    },
    bodyLock: {
      type: Boolean,
      required: !1,
      default: !0
    },
    side: {
      type: null,
      required: !1
    },
    sideOffset: {
      type: Number,
      required: !1
    },
    sideFlip: {
      type: Boolean,
      required: !1
    },
    align: {
      type: null,
      required: !1,
      default: "start"
    },
    alignOffset: {
      type: Number,
      required: !1
    },
    alignFlip: {
      type: Boolean,
      required: !1
    },
    avoidCollisions: {
      type: Boolean,
      required: !1
    },
    collisionBoundary: {
      type: null,
      required: !1
    },
    collisionPadding: {
      type: [Number, Object],
      required: !1
    },
    arrowPadding: {
      type: Number,
      required: !1
    },
    sticky: {
      type: String,
      required: !1
    },
    hideWhenDetached: {
      type: Boolean,
      required: !1
    },
    positionStrategy: {
      type: String,
      required: !1
    },
    updatePositionStrategy: {
      type: String,
      required: !1
    },
    disableUpdateOnLayoutShift: {
      type: Boolean,
      required: !1
    },
    prioritizePosition: {
      type: Boolean,
      required: !1
    },
    reference: {
      type: null,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  emits: [
    "closeAutoFocus",
    "escapeKeyDown",
    "pointerDownOutside"
  ],
  setup(e, { emit: t }) {
    const a = e, n = t, r = Vr();
    nf(), Oi(a.bodyLock);
    const { CollectionSlot: s, getItems: i } = yt(), o = N();
    zi(o);
    const { search: l, handleTypeaheadSearch: d } = Vi(), c = N(), f = N(), p = N(), g = N(!1), v = N(!1), m = N(!1);
    function y() {
      f.value && o.value && yd([f.value, o.value]);
    }
    ye(g, () => {
      y();
    });
    const { onOpenChange: x, triggerPointerDownPosRef: b } = r;
    ot((B) => {
      if (!o.value) return;
      let I = {
        x: 0,
        y: 0
      };
      const E = (R) => {
        I = {
          x: Math.abs(Math.round(R.pageX) - (b.value?.x ?? 0)),
          y: Math.abs(Math.round(R.pageY) - (b.value?.y ?? 0))
        };
      }, P = (R) => {
        R.pointerType !== "touch" && (I.x <= 10 && I.y <= 10 ? R.preventDefault() : o.value?.contains(R.target) || x(!1), document.removeEventListener("pointermove", E), b.value = null);
      };
      b.value !== null && (document.addEventListener("pointermove", E), document.addEventListener("pointerup", P, {
        capture: !0,
        once: !0
      })), B(() => {
        document.removeEventListener("pointermove", E), document.removeEventListener("pointerup", P, { capture: !0 });
      });
    });
    function C(B) {
      const I = B.ctrlKey || B.altKey || B.metaKey;
      if (B.key === "Tab" && B.preventDefault(), !I && B.key.length === 1 && d(B.key, i()), [
        "ArrowUp",
        "ArrowDown",
        "Home",
        "End"
      ].includes(B.key)) {
        let P = [...i().map((R) => R.ref)];
        if (["ArrowUp", "End"].includes(B.key) && (P = P.slice().reverse()), ["ArrowUp", "ArrowDown"].includes(B.key)) {
          const R = B.target, F = P.indexOf(R);
          P = P.slice(F + 1);
        }
        setTimeout(() => yd(P)), B.preventDefault();
      }
    }
    const w = T(() => a.position === "popper" ? a : {}), $ = xt(w.value);
    return yb({
      content: o,
      viewport: c,
      onViewportChange: (B) => {
        c.value = B;
      },
      itemRefCallback: (B, I, E) => {
        const P = !v.value && !E, R = ul(r.modelValue.value, I, r.by);
        if (r.multiple.value) {
          if (m.value) return;
          (R || P) && (f.value = B, R && (m.value = !0));
        } else (R || P) && (f.value = B);
        P && (v.value = !0);
      },
      selectedItem: f,
      selectedItemText: p,
      onItemLeave: () => {
        o.value?.focus();
      },
      itemTextRefCallback: (B, I, E) => {
        const P = !v.value && !E;
        (ul(r.modelValue.value, I, r.by) || P) && (p.value = B);
      },
      focusSelectedItem: y,
      position: a.position,
      isPositioned: g,
      searchRef: l
    }), (B, I) => (h(), k(u(s), null, {
      default: _(() => [V(u(Ni), {
        "as-child": "",
        onMountAutoFocus: I[6] || (I[6] = ze(() => {
        }, ["prevent"])),
        onUnmountAutoFocus: I[7] || (I[7] = (E) => {
          n("closeAutoFocus", E), !E.defaultPrevented && (u(r).triggerElement.value?.focus({ preventScroll: !0 }), E.preventDefault());
        })
      }, {
        default: _(() => [V(u(sr), {
          "as-child": "",
          "disable-outside-pointer-events": "",
          onFocusOutside: I[2] || (I[2] = ze(() => {
          }, ["prevent"])),
          onDismiss: I[3] || (I[3] = (E) => u(r).onOpenChange(!1)),
          onEscapeKeyDown: I[4] || (I[4] = (E) => n("escapeKeyDown", E)),
          onPointerDownOutside: I[5] || (I[5] = (E) => n("pointerDownOutside", E))
        }, {
          default: _(() => [(h(), k(ut(B.position === "popper" ? YT : eB), O({
            ...B.$attrs,
            ...u($)
          }, {
            id: u(r).contentId,
            ref: (E) => {
              const P = u(sa)(E);
              P?.hasAttribute("data-reka-popper-content-wrapper") ? o.value = P.firstElementChild : o.value = P;
            },
            role: "listbox",
            "data-state": u(r).open.value ? "open" : "closed",
            dir: u(r).dir.value,
            style: {
              display: "flex",
              flexDirection: "column",
              outline: "none"
            },
            onContextmenu: I[0] || (I[0] = ze(() => {
            }, ["prevent"])),
            onPlaced: I[1] || (I[1] = (E) => g.value = !0),
            onKeydown: C
          }), {
            default: _(() => [S(B.$slots, "default")]),
            _: 3
          }, 16, [
            "id",
            "data-state",
            "dir",
            "onKeydown"
          ]))]),
          _: 3
        })]),
        _: 3
      })]),
      _: 3
    }));
  }
}), JT = XT;
const [a4, QT] = Me("SelectItemAlignedPosition");
var ZT = /* @__PURE__ */ L({
  inheritAttrs: !1,
  __name: "SelectItemAlignedPosition",
  props: {
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  emits: ["placed"],
  setup(e, { emit: t }) {
    const a = e, n = t, { getItems: r } = yt(), s = Vr(), i = Hl(), o = N(!1), l = N(!0), d = N(), { forwardRef: c, currentElement: f } = Z(), { viewport: p, selectedItem: g, selectedItemText: v, focusSelectedItem: m } = i;
    function y() {
      if (s.triggerElement.value && s.valueElement.value && d.value && f.value && p?.value && g?.value && v?.value) {
        const C = s.triggerElement.value.getBoundingClientRect(), w = f.value.getBoundingClientRect(), $ = s.valueElement.value.getBoundingClientRect(), B = v.value.getBoundingClientRect();
        if (s.dir.value !== "rtl") {
          const ne = B.left - w.left, ae = $.left - ne, be = C.left - ae, De = C.width + be, Ke = Math.max(De, w.width), re = window.innerWidth - rn, de = hi(ae, rn, Math.max(rn, re - Ke));
          d.value.style.minWidth = `${De}px`, d.value.style.left = `${de}px`;
        } else {
          const ne = w.right - B.right, ae = window.innerWidth - $.right - ne, be = window.innerWidth - C.right - ae, De = C.width + be, Ke = Math.max(De, w.width), re = window.innerWidth - rn, de = hi(ae, rn, Math.max(rn, re - Ke));
          d.value.style.minWidth = `${De}px`, d.value.style.right = `${de}px`;
        }
        const I = r().map((ne) => ne.ref), E = window.innerHeight - rn * 2, P = p.value.scrollHeight, R = window.getComputedStyle(f.value), F = Number.parseInt(R.borderTopWidth, 10), H = Number.parseInt(R.paddingTop, 10), j = Number.parseInt(R.borderBottomWidth, 10), K = Number.parseInt(R.paddingBottom, 10), z = F + H + P + K + j, G = Math.min(g.value.offsetHeight * 5, z), Y = window.getComputedStyle(p.value), q = Number.parseInt(Y.paddingTop, 10), Q = Number.parseInt(Y.paddingBottom, 10), se = C.top + C.height / 2 - rn, ce = E - se, oe = g.value.offsetHeight / 2, xe = g.value.offsetTop + oe, $e = F + H + xe, Le = z - $e;
        if ($e <= se) {
          const ne = g.value === I[I.length - 1];
          d.value.style.bottom = "0px";
          const ae = f.value.clientHeight - p.value.offsetTop - p.value.offsetHeight, be = Math.max(ce, oe + (ne ? Q : 0) + ae + j), De = $e + be;
          d.value.style.height = `${De}px`;
        } else {
          const ne = g.value === I[0];
          d.value.style.top = "0px";
          const be = Math.max(se, F + p.value.offsetTop + (ne ? q : 0) + oe) + Le;
          d.value.style.height = `${be}px`, p.value.scrollTop = $e - se + p.value.offsetTop;
        }
        d.value.style.margin = `${rn}px 0`, d.value.style.minHeight = `${G}px`, d.value.style.maxHeight = `${E}px`, n("placed"), requestAnimationFrame(() => o.value = !0);
      }
    }
    const x = N("");
    Pe(async () => {
      await Be(), y(), f.value && (x.value = window.getComputedStyle(f.value).zIndex);
    });
    function b(C) {
      C && l.value === !0 && (y(), m?.(), l.value = !1);
    }
    return ps(s.triggerElement, () => {
      y();
    }), QT({
      contentWrapper: d,
      shouldExpandOnScrollRef: o,
      onScrollButtonChange: b
    }), (C, w) => (h(), M("div", {
      ref_key: "contentWrapperElement",
      ref: d,
      style: It({
        display: "flex",
        flexDirection: "column",
        position: "fixed",
        zIndex: x.value
      })
    }, [V(u(U), O({
      ref: u(c),
      style: {
        boxSizing: "border-box",
        maxHeight: "100%"
      }
    }, {
      ...C.$attrs,
      ...a
    }), {
      default: _(() => [S(C.$slots, "default")]),
      _: 3
    }, 16)], 4));
  }
}), eB = ZT, tB = /* @__PURE__ */ L({
  __name: "SelectArrow",
  props: {
    width: {
      type: Number,
      required: !1,
      default: 10
    },
    height: {
      type: Number,
      required: !1,
      default: 5
    },
    rounded: {
      type: Boolean,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "svg"
    }
  },
  setup(e) {
    const t = e, a = Vr(), n = Hl(mb);
    return (r, s) => u(a).open.value && u(n).position === "popper" ? (h(), k(u($s), pe(O({ key: 0 }, t)), {
      default: _(() => [S(r.$slots, "default")]),
      _: 3
    }, 16)) : D("v-if", !0);
  }
}), aB = tB, nB = /* @__PURE__ */ L({
  inheritAttrs: !1,
  __name: "SelectProvider",
  props: { context: {
    type: Object,
    required: !0
  } },
  setup(e) {
    return hb(e.context), yb(mb), (a, n) => S(a.$slots, "default");
  }
}), rB = nB;
const sB = { key: 1 };
var iB = /* @__PURE__ */ L({
  inheritAttrs: !1,
  __name: "SelectContent",
  props: {
    forceMount: {
      type: Boolean,
      required: !1
    },
    position: {
      type: String,
      required: !1
    },
    bodyLock: {
      type: Boolean,
      required: !1
    },
    side: {
      type: null,
      required: !1
    },
    sideOffset: {
      type: Number,
      required: !1
    },
    sideFlip: {
      type: Boolean,
      required: !1
    },
    align: {
      type: null,
      required: !1
    },
    alignOffset: {
      type: Number,
      required: !1
    },
    alignFlip: {
      type: Boolean,
      required: !1
    },
    avoidCollisions: {
      type: Boolean,
      required: !1
    },
    collisionBoundary: {
      type: null,
      required: !1
    },
    collisionPadding: {
      type: [Number, Object],
      required: !1
    },
    arrowPadding: {
      type: Number,
      required: !1
    },
    sticky: {
      type: String,
      required: !1
    },
    hideWhenDetached: {
      type: Boolean,
      required: !1
    },
    positionStrategy: {
      type: String,
      required: !1
    },
    updatePositionStrategy: {
      type: String,
      required: !1
    },
    disableUpdateOnLayoutShift: {
      type: Boolean,
      required: !1
    },
    prioritizePosition: {
      type: Boolean,
      required: !1
    },
    reference: {
      type: null,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  emits: [
    "closeAutoFocus",
    "escapeKeyDown",
    "pointerDownOutside"
  ],
  setup(e, { emit: t }) {
    const a = e, r = Xe(a, t), s = Vr(), i = N();
    Pe(() => {
      i.value = new DocumentFragment();
    });
    const o = N(), l = T(() => a.forceMount || s.open.value), d = N(l.value);
    return ye(l, () => {
      setTimeout(() => d.value = l.value);
    }), (c, f) => l.value || d.value || o.value?.present ? (h(), k(u(Xt), {
      key: 0,
      ref_key: "presenceRef",
      ref: o,
      present: l.value
    }, {
      default: _(() => [V(JT, pe(me({
        ...u(r),
        ...c.$attrs
      })), {
        default: _(() => [S(c.$slots, "default")]),
        _: 3
      }, 16)]),
      _: 3
    }, 8, ["present"])) : i.value ? (h(), M("div", sB, [(h(), k(Mi, { to: i.value }, [V(rB, { context: u(s) }, {
      default: _(() => [S(c.$slots, "default")]),
      _: 3
    }, 8, ["context"])], 8, ["to"]))])) : D("v-if", !0);
  }
}), oB = iB;
const [lB, uB] = Me("SelectGroup");
var dB = /* @__PURE__ */ L({
  __name: "SelectGroup",
  props: {
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  setup(e) {
    const t = e, a = pt(void 0, "reka-select-group");
    return uB({ id: a }), (n, r) => (h(), k(u(U), O({ role: "group" }, t, { "aria-labelledby": u(a) }), {
      default: _(() => [S(n.$slots, "default")]),
      _: 3
    }, 16, ["aria-labelledby"]));
  }
}), cB = dB;
const [bb, fB] = Me("SelectItem");
var pB = /* @__PURE__ */ L({
  __name: "SelectItem",
  props: {
    value: {
      type: null,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    textValue: {
      type: String,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  emits: ["select"],
  setup(e, { emit: t }) {
    const a = e, n = t, { disabled: r } = We(a), s = Vr(), i = Hl(), { forwardRef: o, currentElement: l } = Z(), { CollectionItem: d } = yt(), c = T(() => ul(s.modelValue?.value, a.value, s.by)), f = N(!1), p = N(a.textValue ?? ""), g = pt(void 0, "reka-select-item-text"), v = "select.select";
    async function m(w) {
      if (w.defaultPrevented) return;
      const $ = {
        originalEvent: w,
        value: a.value
      };
      Ar(v, y, $);
    }
    async function y(w) {
      await Be(), n("select", w), !w.defaultPrevented && (r.value || (s.onValueChange(a.value), s.multiple.value || s.onOpenChange(!1)));
    }
    async function x(w) {
      await Be(), !w.defaultPrevented && (r.value ? i.onItemLeave?.() : w.currentTarget?.focus({ preventScroll: !0 }));
    }
    async function b(w) {
      await Be(), !w.defaultPrevented && w.currentTarget === dt() && i.onItemLeave?.();
    }
    async function C(w) {
      await Be(), !(w.defaultPrevented || i.searchRef?.value !== "" && w.key === " ") && (HT.includes(w.key) && m(w), w.key === " " && w.preventDefault());
    }
    if (a.value === "") throw new Error("A <SelectItem /> must have a value prop that is not an empty string. This is because the Select value can be set to an empty string to clear the selection and show the placeholder.");
    return Pe(() => {
      l.value && i.itemRefCallback(l.value, a.value, a.disabled);
    }), fB({
      value: a.value,
      disabled: r,
      textId: g,
      isSelected: c,
      onItemTextChange: (w) => {
        p.value = ((p.value || w?.textContent) ?? "").trim();
      }
    }), (w, $) => (h(), k(u(d), { value: { textValue: p.value } }, {
      default: _(() => [V(u(U), {
        ref: u(o),
        role: "option",
        "aria-labelledby": u(g),
        "data-highlighted": f.value ? "" : void 0,
        "aria-selected": c.value,
        "data-state": c.value ? "checked" : "unchecked",
        "aria-disabled": u(r) || void 0,
        "data-disabled": u(r) ? "" : void 0,
        tabindex: u(r) ? void 0 : -1,
        as: w.as,
        "as-child": w.asChild,
        onFocus: $[0] || ($[0] = (B) => f.value = !0),
        onBlur: $[1] || ($[1] = (B) => f.value = !1),
        onPointerup: m,
        onPointerdown: $[2] || ($[2] = (B) => {
          B.currentTarget.focus({ preventScroll: !0 });
        }),
        onTouchend: $[3] || ($[3] = ze(() => {
        }, ["prevent", "stop"])),
        onPointermove: x,
        onPointerleave: b,
        onKeydown: C
      }, {
        default: _(() => [S(w.$slots, "default")]),
        _: 3
      }, 8, [
        "aria-labelledby",
        "data-highlighted",
        "aria-selected",
        "data-state",
        "aria-disabled",
        "data-disabled",
        "tabindex",
        "as",
        "as-child"
      ])]),
      _: 3
    }, 8, ["value"]));
  }
}), gB = pB, vB = /* @__PURE__ */ L({
  __name: "SelectItemIndicator",
  props: {
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "span"
    }
  },
  setup(e) {
    const t = e, a = bb();
    return (n, r) => u(a).isSelected.value ? (h(), k(u(U), O({
      key: 0,
      "aria-hidden": "true"
    }, t), {
      default: _(() => [S(n.$slots, "default")]),
      _: 3
    }, 16)) : D("v-if", !0);
  }
}), hB = vB, mB = /* @__PURE__ */ L({
  inheritAttrs: !1,
  __name: "SelectItemText",
  props: {
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "span"
    }
  },
  setup(e) {
    const t = e, a = Vr(), n = Hl(), r = bb(), { forwardRef: s, currentElement: i } = Z(), o = T(() => ({
      value: r.value,
      disabled: r.disabled.value,
      textContent: i.value?.textContent ?? r.value?.toString() ?? ""
    }));
    return Pe(() => {
      i.value && (r.onItemTextChange(i.value), n.itemTextRefCallback(i.value, r.value, r.disabled.value), a.onOptionAdd(o.value));
    }), Bt(() => {
      a.onOptionRemove(o.value);
    }), (l, d) => (h(), k(u(U), O({
      id: u(r).textId,
      ref: u(s)
    }, {
      ...t,
      ...l.$attrs
    }), {
      default: _(() => [S(l.$slots, "default")]),
      _: 3
    }, 16, ["id"]));
  }
}), yB = mB, bB = /* @__PURE__ */ L({
  __name: "SelectLabel",
  props: {
    for: {
      type: String,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "div"
    }
  },
  setup(e) {
    const t = e, a = lB({ id: "" });
    return (n, r) => (h(), k(u(U), O(t, { id: u(a).id }), {
      default: _(() => [S(n.$slots, "default")]),
      _: 3
    }, 16, ["id"]));
  }
}), wB = bB, CB = /* @__PURE__ */ L({
  __name: "SelectPortal",
  props: {
    to: {
      type: null,
      required: !1
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    defer: {
      type: Boolean,
      required: !1
    },
    forceMount: {
      type: Boolean,
      required: !1
    }
  },
  setup(e) {
    const t = e;
    return (a, n) => (h(), k(u(ir), pe(me(t)), {
      default: _(() => [S(a.$slots, "default")]),
      _: 3
    }, 16));
  }
}), xB = CB, SB = /* @__PURE__ */ L({
  __name: "SelectSeparator",
  props: {
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  setup(e) {
    const t = e;
    return (a, n) => (h(), k(u(U), O({ "aria-hidden": "true" }, t), {
      default: _(() => [S(a.$slots, "default")]),
      _: 3
    }, 16));
  }
}), _B = SB, kB = /* @__PURE__ */ L({
  __name: "SelectTrigger",
  props: {
    disabled: {
      type: Boolean,
      required: !1
    },
    reference: {
      type: null,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "button"
    }
  },
  setup(e) {
    const t = e, a = Vr(), { forwardRef: n, currentElement: r } = Z(), s = T(() => a.disabled?.value || t.disabled);
    a.contentId ||= pt(void 0, "reka-select-content"), Pe(() => {
      a.onTriggerChange(r.value);
    });
    const { getItems: i } = yt(), { search: o, handleTypeaheadSearch: l, resetTypeahead: d } = Vi();
    function c() {
      s.value || (a.onOpenChange(!0), d());
    }
    function f(p) {
      c(), a.triggerPointerDownPosRef.value = {
        x: Math.round(p.pageX),
        y: Math.round(p.pageY)
      };
    }
    return (p, g) => (h(), k(u(Lr), {
      "as-child": "",
      reference: p.reference
    }, {
      default: _(() => [V(u(U), {
        ref: u(n),
        role: "combobox",
        type: p.as === "button" ? "button" : void 0,
        "aria-controls": u(a).contentId,
        "aria-expanded": u(a).open.value || !1,
        "aria-required": u(a).required?.value,
        "aria-autocomplete": "none",
        disabled: s.value,
        dir: u(a)?.dir.value,
        "data-state": u(a)?.open.value ? "open" : "closed",
        "data-disabled": s.value ? "" : void 0,
        "data-placeholder": u(jT)(u(a).modelValue?.value) ? "" : void 0,
        "as-child": p.asChild,
        as: p.as,
        onClick: g[0] || (g[0] = (v) => {
          v?.currentTarget?.focus();
        }),
        onPointerdown: g[1] || (g[1] = (v) => {
          if (v.pointerType === "touch") return v.preventDefault();
          const m = v.target;
          m.hasPointerCapture(v.pointerId) && m.releasePointerCapture(v.pointerId), v.button === 0 && v.ctrlKey === !1 && (f(v), v.preventDefault());
        }),
        onPointerup: g[2] || (g[2] = ze((v) => {
          v.pointerType === "touch" && f(v);
        }, ["prevent"])),
        onKeydown: g[3] || (g[3] = (v) => {
          const m = u(o) !== "";
          !(v.ctrlKey || v.altKey || v.metaKey) && v.key.length === 1 && m && v.key === " " || (u(l)(v.key, u(i)()), u(NT).includes(v.key) && (c(), v.preventDefault()));
        })
      }, {
        default: _(() => [S(p.$slots, "default")]),
        _: 3
      }, 8, [
        "type",
        "aria-controls",
        "aria-expanded",
        "aria-required",
        "disabled",
        "dir",
        "data-state",
        "data-disabled",
        "data-placeholder",
        "as-child",
        "as"
      ])]),
      _: 3
    }, 8, ["reference"]));
  }
}), AB = kB, $B = /* @__PURE__ */ L({
  __name: "BaseSeparator",
  props: {
    orientation: {
      type: String,
      required: !1,
      default: "horizontal"
    },
    decorative: {
      type: Boolean,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  setup(e) {
    const t = e, a = ["horizontal", "vertical"];
    function n(o) {
      return a.includes(o);
    }
    const r = T(() => n(t.orientation) ? t.orientation : "horizontal"), s = T(() => r.value === "vertical" ? t.orientation : void 0), i = T(() => t.decorative ? { role: "none" } : {
      "aria-orientation": s.value,
      role: "separator"
    });
    return (o, l) => (h(), k(u(U), O({
      as: o.as,
      "as-child": o.asChild,
      "data-orientation": r.value
    }, i.value), {
      default: _(() => [S(o.$slots, "default")]),
      _: 3
    }, 16, [
      "as",
      "as-child",
      "data-orientation"
    ]));
  }
}), IB = $B, EB = /* @__PURE__ */ L({
  __name: "Separator",
  props: {
    orientation: {
      type: String,
      required: !1,
      default: "horizontal"
    },
    decorative: {
      type: Boolean,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  setup(e) {
    const t = e;
    return (a, n) => (h(), k(IB, pe(me(t)), {
      default: _(() => [S(a.$slots, "default")]),
      _: 3
    }, 16));
  }
}), Bf = EB;
function TB(e = [], t, a) {
  const n = [...e];
  return n[a] = t, n.sort((r, s) => r - s);
}
function wb(e, t, a) {
  const s = 100 / (a - t) * (e - t);
  return hi(s, 0, 100);
}
function BB(e, t) {
  return t > 2 ? `Value ${e + 1} of ${t}` : t === 2 ? ["Minimum", "Maximum"][e] : void 0;
}
function PB(e, t) {
  if (e.length === 1) return 0;
  const a = e.map((r) => Math.abs(r - t)), n = Math.min(...a);
  return a.indexOf(n);
}
function DB(e, t, a) {
  const n = e / 2, s = Pf([0, 50], [0, n]);
  return (n - s(t) * a) * a;
}
function MB(e) {
  return e.slice(0, -1).map((t, a) => e[a + 1] - t);
}
function RB(e, t) {
  if (t > 0) {
    const a = MB(e);
    return Math.min(...a) >= t;
  }
  return !0;
}
function Pf(e, t) {
  return (a) => {
    if (e[0] === e[1] || t[0] === t[1]) return t[0];
    const n = (t[1] - t[0]) / (e[1] - e[0]);
    return t[0] + n * (a - e[0]);
  };
}
function LB(e) {
  return (String(e).split(".")[1] || "").length;
}
function OB(e, t) {
  const a = 10 ** t;
  return Math.round(e * a) / a;
}
const Cb = ["PageUp", "PageDown"], xb = [
  "ArrowUp",
  "ArrowDown",
  "ArrowLeft",
  "ArrowRight"
], Sb = {
  "from-left": [
    "Home",
    "PageDown",
    "ArrowDown",
    "ArrowLeft"
  ],
  "from-right": [
    "Home",
    "PageDown",
    "ArrowDown",
    "ArrowRight"
  ],
  "from-bottom": [
    "Home",
    "PageDown",
    "ArrowDown",
    "ArrowLeft"
  ],
  "from-top": [
    "Home",
    "PageUp",
    "ArrowUp",
    "ArrowLeft"
  ]
}, [_b, kb] = Me(["SliderVertical", "SliderHorizontal"]);
var FB = /* @__PURE__ */ L({
  __name: "SliderHorizontal",
  props: {
    dir: {
      type: String,
      required: !1
    },
    min: {
      type: Number,
      required: !0
    },
    max: {
      type: Number,
      required: !0
    },
    inverted: {
      type: Boolean,
      required: !0
    }
  },
  emits: [
    "slideEnd",
    "slideStart",
    "slideMove",
    "homeKeyDown",
    "endKeyDown",
    "stepKeyDown"
  ],
  setup(e, { emit: t }) {
    const a = e, n = t, { max: r, min: s, dir: i, inverted: o } = We(a), { forwardRef: l, currentElement: d } = Z(), c = Ts(), f = N(), p = N(), g = T(() => i?.value !== "rtl" && !o.value || i?.value !== "ltr" && o.value);
    function v(b, C) {
      const w = p.value || d.value.getBoundingClientRect(), $ = [...c.thumbElements.value][c.valueIndexToChangeRef.value], B = c.thumbAlignment.value === "contain" ? $.clientWidth : 0;
      !f.value && !C && c.thumbAlignment.value === "contain" && (f.value = b.clientX - $.getBoundingClientRect().left);
      const I = [0, w.width - B], E = g.value ? [s.value, r.value] : [r.value, s.value], P = Pf(I, E);
      p.value = w;
      const R = C ? b.clientX - w.left - B / 2 : b.clientX - w.left - (f.value ?? 0);
      return P(R);
    }
    const m = T(() => g.value ? "left" : "right"), y = T(() => g.value ? "right" : "left"), x = T(() => g.value ? 1 : -1);
    return kb({
      startEdge: m,
      endEdge: y,
      direction: x,
      size: "width"
    }), (b, C) => (h(), k(Ab, {
      ref: u(l),
      dir: u(i),
      "data-orientation": "horizontal",
      style: It({ "--reka-slider-thumb-transform": !g.value && u(c).thumbAlignment.value === "overflow" ? "translateX(50%)" : "translateX(-50%)" }),
      onSlideStart: C[0] || (C[0] = (w) => {
        const $ = v(w, !0);
        n("slideStart", $);
      }),
      onSlideMove: C[1] || (C[1] = (w) => {
        const $ = v(w);
        n("slideMove", $);
      }),
      onSlideEnd: C[2] || (C[2] = () => {
        p.value = void 0, f.value = void 0, n("slideEnd");
      }),
      onStepKeyDown: C[3] || (C[3] = (w) => {
        const $ = g.value ? "from-left" : "from-right", B = u(Sb)[$].includes(w.key);
        n("stepKeyDown", w, B ? -1 : 1);
      }),
      onEndKeyDown: C[4] || (C[4] = (w) => n("endKeyDown", w)),
      onHomeKeyDown: C[5] || (C[5] = (w) => n("homeKeyDown", w))
    }, {
      default: _(() => [S(b.$slots, "default")]),
      _: 3
    }, 8, ["dir", "style"]));
  }
}), zB = FB, qB = /* @__PURE__ */ L({
  __name: "SliderVertical",
  props: {
    min: {
      type: Number,
      required: !0
    },
    max: {
      type: Number,
      required: !0
    },
    inverted: {
      type: Boolean,
      required: !0
    }
  },
  emits: [
    "slideEnd",
    "slideStart",
    "slideMove",
    "homeKeyDown",
    "endKeyDown",
    "stepKeyDown"
  ],
  setup(e, { emit: t }) {
    const a = e, n = t, { max: r, min: s, inverted: i } = We(a), o = Ts(), { forwardRef: l, currentElement: d } = Z(), c = N(), f = N(), p = T(() => !i.value);
    function g(x, b) {
      const C = f.value || d.value.getBoundingClientRect(), w = [...o.thumbElements.value][o.valueIndexToChangeRef.value], $ = o.thumbAlignment.value === "contain" ? w.clientHeight : 0;
      !c.value && !b && o.thumbAlignment.value === "contain" && (c.value = x.clientY - w.getBoundingClientRect().top);
      const B = [0, C.height - $], I = p.value ? [r.value, s.value] : [s.value, r.value], E = Pf(B, I), P = b ? x.clientY - C.top - $ / 2 : x.clientY - C.top - (c.value ?? 0);
      return f.value = C, E(P);
    }
    const v = T(() => p.value ? "bottom" : "top"), m = T(() => p.value ? "top" : "bottom"), y = T(() => p.value ? 1 : -1);
    return kb({
      startEdge: v,
      endEdge: m,
      direction: y,
      size: "height"
    }), (x, b) => (h(), k(Ab, {
      ref: u(l),
      "data-orientation": "vertical",
      style: It({ "--reka-slider-thumb-transform": !p.value && u(o).thumbAlignment.value === "overflow" ? "translateY(-50%)" : "translateY(50%)" }),
      onSlideStart: b[0] || (b[0] = (C) => {
        const w = g(C, !0);
        n("slideStart", w);
      }),
      onSlideMove: b[1] || (b[1] = (C) => {
        const w = g(C);
        n("slideMove", w);
      }),
      onSlideEnd: b[2] || (b[2] = () => {
        f.value = void 0, c.value = void 0, n("slideEnd");
      }),
      onStepKeyDown: b[3] || (b[3] = (C) => {
        const w = p.value ? "from-bottom" : "from-top", $ = u(Sb)[w].includes(C.key);
        n("stepKeyDown", C, $ ? -1 : 1);
      }),
      onEndKeyDown: b[4] || (b[4] = (C) => n("endKeyDown", C)),
      onHomeKeyDown: b[5] || (b[5] = (C) => n("homeKeyDown", C))
    }, {
      default: _(() => [S(x.$slots, "default")]),
      _: 3
    }, 8, ["style"]));
  }
}), VB = qB;
const [Ts, NB] = Me("SliderRoot");
var HB = /* @__PURE__ */ L({
  inheritAttrs: !1,
  __name: "SliderRoot",
  props: {
    defaultValue: {
      type: Array,
      required: !1,
      default: () => [0]
    },
    modelValue: {
      type: [Array, null],
      required: !1
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    orientation: {
      type: String,
      required: !1,
      default: "horizontal"
    },
    dir: {
      type: String,
      required: !1
    },
    inverted: {
      type: Boolean,
      required: !1,
      default: !1
    },
    min: {
      type: Number,
      required: !1,
      default: 0
    },
    max: {
      type: Number,
      required: !1,
      default: 100
    },
    step: {
      type: Number,
      required: !1,
      default: 1
    },
    minStepsBetweenThumbs: {
      type: Number,
      required: !1,
      default: 0
    },
    thumbAlignment: {
      type: String,
      required: !1,
      default: "contain"
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "span"
    },
    name: {
      type: String,
      required: !1
    },
    required: {
      type: Boolean,
      required: !1
    }
  },
  emits: ["update:modelValue", "valueCommit"],
  setup(e, { emit: t }) {
    const a = e, n = t, { min: r, max: s, step: i, minStepsBetweenThumbs: o, orientation: l, disabled: d, thumbAlignment: c, dir: f } = We(a), p = Yt(f), { forwardRef: g, currentElement: v } = Z(), m = hn(v), { CollectionSlot: y } = yt({ isProvider: !0 }), x = Ze(a, "modelValue", n, {
      defaultValue: a.defaultValue,
      passive: a.modelValue === void 0
    }), b = T(() => Array.isArray(x.value) ? [...x.value] : []), C = N(0), w = N(b.value);
    function $(R) {
      const F = PB(b.value, R);
      E(R, F);
    }
    function B(R) {
      E(R, C.value);
    }
    function I() {
      const R = w.value[C.value];
      b.value[C.value] !== R && n("valueCommit", Tl(b.value));
    }
    function E(R, F, { commit: H } = { commit: !1 }) {
      const j = LB(i.value), K = OB(Math.round((R - r.value) / i.value) * i.value + r.value, j), z = hi(K, r.value, s.value), G = TB(b.value, z, F);
      if (RB(G, o.value * i.value)) {
        C.value = G.indexOf(z);
        const Y = String(G) !== String(x.value);
        Y && H && n("valueCommit", G), Y && (P.value[C.value]?.focus(), x.value = G);
      }
    }
    const P = N([]);
    return NB({
      modelValue: x,
      currentModelValue: b,
      valueIndexToChangeRef: C,
      thumbElements: P,
      orientation: l,
      min: r,
      max: s,
      disabled: d,
      thumbAlignment: c
    }), (R, F) => (h(), k(u(y), null, {
      default: _(() => [(h(), k(ut(u(l) === "horizontal" ? zB : VB), O(R.$attrs, {
        ref: u(g),
        "as-child": R.asChild,
        as: R.as,
        min: u(r),
        max: u(s),
        dir: u(p),
        inverted: R.inverted,
        "aria-disabled": u(d),
        "data-disabled": u(d) ? "" : void 0,
        onPointerdown: F[0] || (F[0] = () => {
          u(d) || (w.value = b.value);
        }),
        onSlideStart: F[1] || (F[1] = (H) => !u(d) && $(H)),
        onSlideMove: F[2] || (F[2] = (H) => !u(d) && B(H)),
        onSlideEnd: F[3] || (F[3] = (H) => !u(d) && I()),
        onHomeKeyDown: F[4] || (F[4] = (H) => !u(d) && E(u(r), 0, { commit: !0 })),
        onEndKeyDown: F[5] || (F[5] = (H) => !u(d) && E(u(s), b.value.length - 1, { commit: !0 })),
        onStepKeyDown: F[6] || (F[6] = (H, j) => {
          if (!u(d)) {
            const G = u(Cb).includes(H.key) || H.shiftKey && u(xb).includes(H.key) ? 10 : 1, Y = C.value, q = b.value[Y], Q = u(i) * G * j;
            E(q + Q, Y, { commit: !0 });
          }
        })
      }), {
        default: _(() => [S(R.$slots, "default", { modelValue: u(x) }), u(m) && R.name ? (h(), k(u(yn), {
          key: 0,
          type: "number",
          value: u(x),
          name: R.name,
          required: R.required,
          disabled: u(d),
          step: u(i)
        }, null, 8, [
          "value",
          "name",
          "required",
          "disabled",
          "step"
        ])) : D("v-if", !0)]),
        _: 3
      }, 16, [
        "as-child",
        "as",
        "min",
        "max",
        "dir",
        "inverted",
        "aria-disabled",
        "data-disabled"
      ]))]),
      _: 3
    }));
  }
}), jB = HB, KB = /* @__PURE__ */ L({
  __name: "SliderImpl",
  props: {
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "span"
    }
  },
  emits: [
    "slideStart",
    "slideMove",
    "slideEnd",
    "homeKeyDown",
    "endKeyDown",
    "stepKeyDown"
  ],
  setup(e, { emit: t }) {
    const a = e, n = t, r = Ts();
    return (s, i) => (h(), k(u(U), O({ "data-slider-impl": "" }, a, {
      onKeydown: i[0] || (i[0] = (o) => {
        o.key === "Home" ? (n("homeKeyDown", o), o.preventDefault()) : o.key === "End" ? (n("endKeyDown", o), o.preventDefault()) : u(Cb).concat(u(xb)).includes(o.key) && (n("stepKeyDown", o), o.preventDefault());
      }),
      onPointerdown: i[1] || (i[1] = (o) => {
        const l = o.target;
        l.setPointerCapture(o.pointerId), o.preventDefault(), u(r).thumbElements.value.includes(l) ? l.focus() : n("slideStart", o);
      }),
      onPointermove: i[2] || (i[2] = (o) => {
        o.target.hasPointerCapture(o.pointerId) && n("slideMove", o);
      }),
      onPointerup: i[3] || (i[3] = (o) => {
        const l = o.target;
        l.hasPointerCapture(o.pointerId) && (l.releasePointerCapture(o.pointerId), n("slideEnd", o));
      })
    }), {
      default: _(() => [S(s.$slots, "default")]),
      _: 3
    }, 16));
  }
}), Ab = KB, GB = /* @__PURE__ */ L({
  __name: "SliderRange",
  props: {
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "span"
    }
  },
  setup(e) {
    const t = Ts(), a = _b();
    Z();
    const n = T(() => t.currentModelValue.value.map((i) => wb(i, t.min.value, t.max.value))), r = T(() => t.currentModelValue.value.length > 1 ? Math.min(...n.value) : 0), s = T(() => 100 - Math.max(...n.value, 0));
    return (i, o) => (h(), k(u(U), {
      "data-disabled": u(t).disabled.value ? "" : void 0,
      "data-orientation": u(t).orientation.value,
      "as-child": i.asChild,
      as: i.as,
      style: It({
        [u(a).startEdge.value]: `${r.value}%`,
        [u(a).endEdge.value]: `${s.value}%`
      })
    }, {
      default: _(() => [S(i.$slots, "default")]),
      _: 3
    }, 8, [
      "data-disabled",
      "data-orientation",
      "as-child",
      "as",
      "style"
    ]));
  }
}), UB = GB, WB = /* @__PURE__ */ L({
  inheritAttrs: !1,
  __name: "SliderThumbImpl",
  props: {
    index: {
      type: Number,
      required: !0
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  setup(e) {
    const t = e, a = Ts(), n = _b(), { forwardRef: r, currentElement: s } = Z(), { CollectionItem: i } = yt(), o = T(() => a.modelValue?.value?.[t.index]), l = T(() => o.value === void 0 ? 0 : wb(o.value, a.min.value ?? 0, a.max.value ?? 100)), d = T(() => BB(t.index, a.modelValue?.value?.length ?? 0)), c = Um(s), f = T(() => c[n.size].value), p = T(() => a.thumbAlignment.value === "overflow" || !f.value ? 0 : DB(f.value, l.value, n.direction.value)), g = Hc();
    return Pe(() => {
      a.thumbElements.value.push(s.value);
    }), Bt(() => {
      const v = a.thumbElements.value.findIndex((m) => m === s.value) ?? -1;
      a.thumbElements.value.splice(v, 1);
    }), (v, m) => (h(), k(u(i), null, {
      default: _(() => [V(u(U), O(v.$attrs, {
        ref: u(r),
        role: "slider",
        tabindex: u(a).disabled.value ? void 0 : 0,
        "aria-label": v.$attrs["aria-label"] || d.value,
        "data-disabled": u(a).disabled.value ? "" : void 0,
        "data-orientation": u(a).orientation.value,
        "aria-valuenow": o.value,
        "aria-valuemin": u(a).min.value,
        "aria-valuemax": u(a).max.value,
        "aria-orientation": u(a).orientation.value,
        "as-child": v.asChild,
        as: v.as,
        style: {
          transform: "var(--reka-slider-thumb-transform)",
          position: "absolute",
          [u(n).startEdge.value]: `calc(${l.value}% + ${p.value}px)`,
          display: !u(g) && o.value === void 0 ? "none" : void 0
        },
        onFocus: m[0] || (m[0] = () => {
          u(a).valueIndexToChangeRef.value = v.index;
        })
      }), {
        default: _(() => [S(v.$slots, "default")]),
        _: 3
      }, 16, [
        "tabindex",
        "aria-label",
        "data-disabled",
        "data-orientation",
        "aria-valuenow",
        "aria-valuemin",
        "aria-valuemax",
        "aria-orientation",
        "as-child",
        "as",
        "style"
      ])]),
      _: 3
    }));
  }
}), YB = WB, XB = /* @__PURE__ */ L({
  __name: "SliderThumb",
  props: {
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "span"
    }
  },
  setup(e) {
    const t = e, { getItems: a } = yt(), { forwardRef: n, currentElement: r } = Z(), s = T(() => r.value ? a(!0).findIndex((i) => i.ref === r.value) : -1);
    return (i, o) => (h(), k(YB, O({ ref: u(n) }, t, { index: s.value }), {
      default: _(() => [S(i.$slots, "default")]),
      _: 3
    }, 16, ["index"]));
  }
}), Bg = XB, JB = /* @__PURE__ */ L({
  __name: "SliderTrack",
  props: {
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "span"
    }
  },
  setup(e) {
    const t = Ts();
    return Z(), (a, n) => (h(), k(u(U), {
      "as-child": a.asChild,
      as: a.as,
      "data-disabled": u(t).disabled.value ? "" : void 0,
      "data-orientation": u(t).orientation.value
    }, {
      default: _(() => [S(a.$slots, "default")]),
      _: 3
    }, 8, [
      "as-child",
      "as",
      "data-disabled",
      "data-orientation"
    ]));
  }
}), QB = JB;
const ZB = {
  "aria-live": "polite",
  "aria-atomic": "true",
  role: "status",
  style: {
    transform: "translateX(-100%)",
    position: "absolute",
    pointerEvents: "none",
    opacity: 0,
    margin: 0
  }
}, [Df, eP] = Me("StepperRoot");
var tP = /* @__PURE__ */ L({
  __name: "StepperRoot",
  props: {
    defaultValue: {
      type: Number,
      required: !1,
      default: 1
    },
    orientation: {
      type: String,
      required: !1,
      default: "horizontal"
    },
    dir: {
      type: String,
      required: !1
    },
    modelValue: {
      type: Number,
      required: !1
    },
    linear: {
      type: Boolean,
      required: !1,
      default: !0
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  emits: ["update:modelValue"],
  setup(e, { expose: t, emit: a }) {
    const n = e, r = a, { dir: s, orientation: i, linear: o } = We(n), l = Yt(s), d = N(/* @__PURE__ */ new Set()), c = Ze(n, "modelValue", r, {
      defaultValue: n.defaultValue,
      passive: n.modelValue === void 0
    }), f = T(() => Array.from(d.value)), p = T(() => c.value === 1), g = T(() => c.value === f.value.length), v = T(() => d.value.size);
    function m(E) {
      E > v.value || E < 1 || d.value.size && f.value[E] && f.value[E].getAttribute("disabled") || o.value && E > (c.value ?? 1) + 1 || (c.value = E);
    }
    function y() {
      m((c.value ?? 1) + 1);
    }
    function x() {
      m((c.value ?? 1) - 1);
    }
    function b() {
      return (c.value ?? 1) < v.value;
    }
    function C() {
      return (c.value ?? 1) > 1;
    }
    const w = N(null), $ = N(null), B = T(() => w.value ? w.value.getAttribute("disabled") === "" : !0), I = T(() => $.value ? $.value.getAttribute("disabled") === "" : !0);
    return ye(c, async () => {
      await Be(() => {
        w.value = f.value.length && c.value < f.value.length ? f.value[c.value] : null, $.value = f.value.length && c.value > 1 ? f.value[c.value - 2] : null;
      });
    }), ye(f, async () => {
      await Be(() => {
        w.value = f.value.length && c.value < f.value.length ? f.value[c.value] : null, $.value = f.value.length && c.value > 1 ? f.value[c.value - 2] : null;
      });
    }), eP({
      modelValue: c,
      changeModelValue: (E) => {
        c.value = E;
      },
      orientation: i,
      dir: l,
      linear: o,
      totalStepperItems: d
    }), t({
      goToStep: m,
      nextStep: y,
      prevStep: x,
      modelValue: c,
      totalSteps: v,
      isNextDisabled: B,
      isPrevDisabled: I,
      isFirstStep: p,
      isLastStep: g,
      hasNext: b,
      hasPrev: C
    }), Z(), (E, P) => (h(), k(u(U), {
      role: "group",
      "aria-label": "progress",
      as: E.as,
      "as-child": E.asChild,
      "data-linear": u(o) ? "" : void 0,
      "data-orientation": E.orientation
    }, {
      default: _(() => [S(E.$slots, "default", {
        modelValue: u(c),
        totalSteps: d.value.size,
        isNextDisabled: B.value,
        isPrevDisabled: I.value,
        isFirstStep: p.value,
        isLastStep: g.value,
        goToStep: m,
        nextStep: y,
        prevStep: x,
        hasNext: b,
        hasPrev: C
      }), J("div", ZB, " Step " + X(u(c)) + " of " + X(d.value.size), 1)]),
      _: 3
    }, 8, [
      "as",
      "as-child",
      "data-linear",
      "data-orientation"
    ]));
  }
}), aP = tP;
const [Gi, nP] = Me("StepperItem");
var rP = /* @__PURE__ */ L({
  __name: "StepperItem",
  props: {
    step: {
      type: Number,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    completed: {
      type: Boolean,
      required: !1,
      default: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  setup(e) {
    const t = e, { disabled: a, step: n, completed: r } = We(t), { forwardRef: s } = Z(), i = Df(), o = pt(void 0, "reka-stepper-item-title"), l = pt(void 0, "reka-stepper-item-description"), d = T(() => r.value ? "completed" : i.modelValue.value === n.value ? "active" : i.modelValue.value > n.value ? "completed" : "inactive"), c = T(() => a.value ? !1 : i.linear.value ? n.value <= i.modelValue.value || n.value === i.modelValue.value + 1 : !0);
    return nP({
      titleId: o,
      descriptionId: l,
      state: d,
      disabled: a,
      step: n,
      isFocusable: c
    }), (f, p) => (h(), k(u(U), {
      ref: u(s),
      as: f.as,
      "as-child": f.asChild,
      "aria-current": d.value === "active" ? "true" : void 0,
      "data-state": d.value,
      disabled: u(a) || !c.value ? "" : void 0,
      "data-disabled": u(a) || !c.value ? "" : void 0,
      "data-orientation": u(i).orientation.value
    }, {
      default: _(() => [S(f.$slots, "default", { state: d.value })]),
      _: 3
    }, 8, [
      "as",
      "as-child",
      "aria-current",
      "data-state",
      "disabled",
      "data-disabled",
      "data-orientation"
    ]));
  }
}), sP = rP, iP = /* @__PURE__ */ L({
  __name: "StepperDescription",
  props: {
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "p"
    }
  },
  setup(e) {
    const t = e;
    Z();
    const a = Gi();
    return (n, r) => (h(), k(u(U), O(t, { id: u(a).descriptionId }), {
      default: _(() => [S(n.$slots, "default")]),
      _: 3
    }, 16, ["id"]));
  }
}), oP = iP, lP = /* @__PURE__ */ L({
  __name: "StepperIndicator",
  props: {
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  setup(e) {
    const t = e, a = Gi();
    return Z(), (n, r) => (h(), k(u(U), pe(me(t)), {
      default: _(() => [S(n.$slots, "default", { step: u(a).step.value }, () => [ee(" Step " + X(u(a).step.value), 1)])]),
      _: 3
    }, 16));
  }
}), uP = lP, dP = /* @__PURE__ */ L({
  __name: "StepperSeparator",
  props: {
    orientation: {
      type: String,
      required: !1
    },
    decorative: {
      type: Boolean,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  setup(e) {
    const t = e, a = Df(), n = Gi();
    return Z(), (r, s) => (h(), k(u(Bf), O(t, {
      decorative: "",
      orientation: u(a).orientation.value,
      "data-state": u(n).state.value
    }), {
      default: _(() => [S(r.$slots, "default")]),
      _: 3
    }, 16, ["orientation", "data-state"]));
  }
}), cP = dP, fP = /* @__PURE__ */ L({
  __name: "StepperTitle",
  props: {
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "h4"
    }
  },
  setup(e) {
    const t = e, a = Gi();
    return Z(), (n, r) => (h(), k(u(U), O(t, { id: u(a).titleId }), {
      default: _(() => [S(n.$slots, "default")]),
      _: 3
    }, 16, ["id"]));
  }
}), pP = fP, gP = /* @__PURE__ */ L({
  __name: "StepperTrigger",
  props: {
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "button"
    }
  },
  setup(e) {
    const t = Df(), a = Gi(), n = qi(), r = T(() => Array.from(t.totalStepperItems.value));
    function s(d) {
      if (!a.disabled.value) {
        if (t.linear.value) {
          if ((a.step.value <= t.modelValue.value || a.step.value === t.modelValue.value + 1) && d.ctrlKey === !1) {
            t.changeModelValue(a.step.value);
            return;
          }
        } else if (d.ctrlKey === !1) {
          t.changeModelValue(a.step.value);
          return;
        }
        d.preventDefault();
      }
    }
    function i(d) {
      d.preventDefault(), !a.disabled.value && ((d.key === n.ENTER || d.key === n.SPACE) && !d.ctrlKey && !d.shiftKey && t.changeModelValue(a.step.value), [
        n.ARROW_LEFT,
        n.ARROW_RIGHT,
        n.ARROW_UP,
        n.ARROW_DOWN
      ].includes(d.key) && Mr(d, dt(), void 0, {
        itemsArray: r.value,
        focus: !0,
        loop: !1,
        arrowKeyOptions: t.orientation.value,
        dir: t.dir.value
      }));
    }
    const { forwardRef: o, currentElement: l } = Z();
    return Pe(() => {
      t.totalStepperItems.value.add(l.value);
    }), Bt(() => {
      t.totalStepperItems.value.delete(l.value);
    }), (d, c) => (h(), k(u(U), {
      ref: u(o),
      type: d.as === "button" ? "button" : void 0,
      as: d.as,
      "as-child": d.asChild,
      "data-state": u(a).state.value,
      disabled: u(a).disabled.value || !u(a).isFocusable.value ? "" : void 0,
      "data-disabled": u(a).disabled.value || !u(a).isFocusable.value ? "" : void 0,
      "data-orientation": u(t).orientation.value,
      tabindex: u(a).isFocusable.value ? 0 : -1,
      "aria-describedby": u(a).descriptionId,
      "aria-labelledby": u(a).titleId,
      onMousedown: ze(s, ["left"]),
      onKeydown: nt(i, [
        "enter",
        "space",
        "left",
        "right",
        "up",
        "down"
      ])
    }, {
      default: _(() => [S(d.$slots, "default")]),
      _: 3
    }, 8, [
      "type",
      "as",
      "as-child",
      "data-state",
      "disabled",
      "data-disabled",
      "data-orientation",
      "tabindex",
      "aria-describedby",
      "aria-labelledby"
    ]));
  }
}), vP = gP;
const [hP, mP] = Me("SwitchRoot");
var yP = /* @__PURE__ */ L({
  __name: "SwitchRoot",
  props: {
    defaultValue: {
      type: Boolean,
      required: !1
    },
    modelValue: {
      type: [Boolean, null],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    id: {
      type: String,
      required: !1
    },
    value: {
      type: String,
      required: !1,
      default: "on"
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "button"
    },
    name: {
      type: String,
      required: !1
    },
    required: {
      type: Boolean,
      required: !1
    }
  },
  emits: ["update:modelValue"],
  setup(e, { emit: t }) {
    const a = e, n = t, { disabled: r } = We(a), s = Ze(a, "modelValue", n, {
      defaultValue: a.defaultValue,
      passive: a.modelValue === void 0
    });
    function i() {
      r.value || (s.value = !s.value);
    }
    const { forwardRef: o, currentElement: l } = Z(), d = hn(l), c = T(() => a.id && l.value ? document.querySelector(`[for="${a.id}"]`)?.innerText : void 0);
    return mP({
      modelValue: s,
      toggleCheck: i,
      disabled: r
    }), (f, p) => (h(), k(u(U), O(f.$attrs, {
      id: f.id,
      ref: u(o),
      role: "switch",
      type: f.as === "button" ? "button" : void 0,
      value: f.value,
      "aria-label": f.$attrs["aria-label"] || c.value,
      "aria-checked": u(s),
      "aria-required": f.required,
      "data-state": u(s) ? "checked" : "unchecked",
      "data-disabled": u(r) ? "" : void 0,
      "as-child": f.asChild,
      as: f.as,
      disabled: u(r),
      onClick: i,
      onKeydown: nt(ze(i, ["prevent"]), ["enter"])
    }), {
      default: _(() => [S(f.$slots, "default", { modelValue: u(s) }), u(d) && f.name ? (h(), k(u(yn), {
        key: 0,
        type: "checkbox",
        name: f.name,
        disabled: u(r),
        required: f.required,
        value: f.value,
        checked: !!u(s)
      }, null, 8, [
        "name",
        "disabled",
        "required",
        "value",
        "checked"
      ])) : D("v-if", !0)]),
      _: 3
    }, 16, [
      "id",
      "type",
      "value",
      "aria-label",
      "aria-checked",
      "aria-required",
      "data-state",
      "data-disabled",
      "as-child",
      "as",
      "disabled",
      "onKeydown"
    ]));
  }
}), bP = yP, wP = /* @__PURE__ */ L({
  __name: "SwitchThumb",
  props: {
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "span"
    }
  },
  setup(e) {
    const t = hP();
    return Z(), (a, n) => (h(), k(u(U), {
      "data-state": u(t).modelValue?.value ? "checked" : "unchecked",
      "data-disabled": u(t).disabled.value ? "" : void 0,
      "as-child": a.asChild,
      as: a.as
    }, {
      default: _(() => [S(a.$slots, "default")]),
      _: 3
    }, 8, [
      "data-state",
      "data-disabled",
      "as-child",
      "as"
    ]));
  }
}), CP = wP;
const [jl, xP] = Me("TabsRoot");
var SP = /* @__PURE__ */ L({
  __name: "TabsRoot",
  props: {
    defaultValue: {
      type: null,
      required: !1
    },
    orientation: {
      type: String,
      required: !1,
      default: "horizontal"
    },
    dir: {
      type: String,
      required: !1
    },
    activationMode: {
      type: String,
      required: !1,
      default: "automatic"
    },
    modelValue: {
      type: null,
      required: !1
    },
    unmountOnHide: {
      type: Boolean,
      required: !1,
      default: !0
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  emits: ["update:modelValue"],
  setup(e, { emit: t }) {
    const a = e, n = t, { orientation: r, unmountOnHide: s, dir: i } = We(a), o = Yt(i);
    Z();
    const l = Ze(a, "modelValue", n, {
      defaultValue: a.defaultValue,
      passive: a.modelValue === void 0
    }), d = N();
    return xP({
      modelValue: l,
      changeModelValue: (c) => {
        l.value = c;
      },
      orientation: r,
      dir: o,
      unmountOnHide: s,
      activationMode: a.activationMode,
      baseId: pt(void 0, "reka-tabs"),
      tabsList: d
    }), (c, f) => (h(), k(u(U), {
      dir: u(o),
      "data-orientation": u(r),
      "as-child": c.asChild,
      as: c.as
    }, {
      default: _(() => [S(c.$slots, "default", { modelValue: u(l) })]),
      _: 3
    }, 8, [
      "dir",
      "data-orientation",
      "as-child",
      "as"
    ]));
  }
}), _P = SP;
function $b(e, t) {
  return `${e}-trigger-${t}`;
}
function Ib(e, t) {
  return `${e}-content-${t}`;
}
var kP = /* @__PURE__ */ L({
  __name: "TabsContent",
  props: {
    value: {
      type: [String, Number],
      required: !0
    },
    forceMount: {
      type: Boolean,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  setup(e) {
    const t = e, { forwardRef: a } = Z(), n = jl(), r = T(() => $b(n.baseId, t.value)), s = T(() => Ib(n.baseId, t.value)), i = T(() => t.value === n.modelValue.value), o = N(i.value);
    return Pe(() => {
      requestAnimationFrame(() => {
        o.value = !1;
      });
    }), (l, d) => (h(), k(u(Xt), {
      present: l.forceMount || i.value,
      "force-mount": ""
    }, {
      default: _(({ present: c }) => [V(u(U), {
        id: s.value,
        ref: u(a),
        "as-child": l.asChild,
        as: l.as,
        role: "tabpanel",
        "data-state": i.value ? "active" : "inactive",
        "data-orientation": u(n).orientation.value,
        "aria-labelledby": r.value,
        hidden: !c,
        tabindex: "0",
        style: It({ animationDuration: o.value ? "0s" : void 0 })
      }, {
        default: _(() => [!u(n).unmountOnHide.value || c ? S(l.$slots, "default", { key: 0 }) : D("v-if", !0)]),
        _: 2
      }, 1032, [
        "id",
        "as-child",
        "as",
        "data-state",
        "data-orientation",
        "aria-labelledby",
        "hidden",
        "style"
      ])]),
      _: 3
    }, 8, ["present"]));
  }
}), AP = kP, $P = /* @__PURE__ */ L({
  __name: "TabsIndicator",
  props: {
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  setup(e) {
    const t = e, a = jl();
    Z();
    const n = N(), r = N({
      size: null,
      position: null
    });
    ye(() => [a.modelValue.value, a?.dir.value], async () => {
      await Be(), s();
    }, { immediate: !0 }), ps([a.tabsList, n], s);
    function s() {
      n.value = a.tabsList.value?.querySelector('[role="tab"][data-state="active"]'), n.value && (a.orientation.value === "horizontal" ? r.value = {
        size: n.value.offsetWidth,
        position: n.value.offsetLeft
      } : r.value = {
        size: n.value.offsetHeight,
        position: n.value.offsetTop
      });
    }
    return (i, o) => typeof r.value.size == "number" ? (h(), k(u(U), O({ key: 0 }, t, { style: {
      "--reka-tabs-indicator-size": `${r.value.size}px`,
      "--reka-tabs-indicator-position": `${r.value.position}px`
    } }), {
      default: _(() => [S(i.$slots, "default")]),
      _: 3
    }, 16, ["style"])) : D("v-if", !0);
  }
}), IP = $P, EP = /* @__PURE__ */ L({
  __name: "TabsList",
  props: {
    loop: {
      type: Boolean,
      required: !1,
      default: !0
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  setup(e) {
    const t = e, { loop: a } = We(t), { forwardRef: n, currentElement: r } = Z(), s = jl();
    return s.tabsList = r, (i, o) => (h(), k(u(Hi), {
      "as-child": "",
      orientation: u(s).orientation.value,
      dir: u(s).dir.value,
      loop: u(a)
    }, {
      default: _(() => [V(u(U), {
        ref: u(n),
        role: "tablist",
        "as-child": i.asChild,
        as: i.as,
        "aria-orientation": u(s).orientation.value
      }, {
        default: _(() => [S(i.$slots, "default")]),
        _: 3
      }, 8, [
        "as-child",
        "as",
        "aria-orientation"
      ])]),
      _: 3
    }, 8, [
      "orientation",
      "dir",
      "loop"
    ]));
  }
}), TP = EP, BP = /* @__PURE__ */ L({
  __name: "TabsTrigger",
  props: {
    value: {
      type: [String, Number],
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "button"
    }
  },
  setup(e) {
    const t = e, { forwardRef: a } = Z(), n = jl(), r = T(() => $b(n.baseId, t.value)), s = T(() => Ib(n.baseId, t.value)), i = T(() => t.value === n.modelValue.value);
    return (o, l) => (h(), k(u(Ll), {
      "as-child": "",
      focusable: !o.disabled,
      active: i.value
    }, {
      default: _(() => [V(u(U), {
        id: r.value,
        ref: u(a),
        role: "tab",
        type: o.as === "button" ? "button" : void 0,
        as: o.as,
        "as-child": o.asChild,
        "aria-selected": i.value ? "true" : "false",
        "aria-controls": s.value,
        "data-state": i.value ? "active" : "inactive",
        disabled: o.disabled,
        "data-disabled": o.disabled ? "" : void 0,
        "data-orientation": u(n).orientation.value,
        onMousedown: l[0] || (l[0] = ze((d) => {
          !o.disabled && d.ctrlKey === !1 ? u(n).changeModelValue(o.value) : d.preventDefault();
        }, ["left"])),
        onKeydown: l[1] || (l[1] = nt((d) => u(n).changeModelValue(o.value), ["enter", "space"])),
        onFocus: l[2] || (l[2] = () => {
          const d = u(n).activationMode !== "manual";
          !i.value && !o.disabled && d && u(n).changeModelValue(o.value);
        })
      }, {
        default: _(() => [S(o.$slots, "default")]),
        _: 3
      }, 8, [
        "id",
        "type",
        "as",
        "as-child",
        "aria-selected",
        "aria-controls",
        "data-state",
        "disabled",
        "data-disabled",
        "data-orientation"
      ])]),
      _: 3
    }, 8, ["focusable", "active"]));
  }
}), PP = BP;
const [Mf, DP] = Me("TagsInputRoot");
var MP = /* @__PURE__ */ L({
  __name: "TagsInputRoot",
  props: {
    modelValue: {
      type: [Array, null],
      required: !1
    },
    defaultValue: {
      type: Array,
      required: !1,
      default: () => []
    },
    addOnPaste: {
      type: Boolean,
      required: !1
    },
    addOnTab: {
      type: Boolean,
      required: !1
    },
    addOnBlur: {
      type: Boolean,
      required: !1
    },
    duplicate: {
      type: Boolean,
      required: !1
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    delimiter: {
      type: null,
      required: !1,
      default: ","
    },
    dir: {
      type: String,
      required: !1
    },
    max: {
      type: Number,
      required: !1,
      default: 0
    },
    id: {
      type: String,
      required: !1
    },
    convertValue: {
      type: Function,
      required: !1
    },
    displayValue: {
      type: Function,
      required: !1,
      default: (e) => e.toString()
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    },
    name: {
      type: String,
      required: !1
    },
    required: {
      type: Boolean,
      required: !1
    }
  },
  emits: [
    "update:modelValue",
    "invalid",
    "addTag",
    "removeTag"
  ],
  setup(e, { emit: t }) {
    const a = e, n = t, { addOnPaste: r, disabled: s, delimiter: i, max: o, id: l, dir: d, addOnBlur: c, addOnTab: f } = We(a), p = Yt(d), g = Ze(a, "modelValue", n, {
      defaultValue: a.defaultValue,
      passive: !0,
      deep: !0
    }), { forwardRef: v, currentElement: m } = Z(), { focused: y } = GC(m), x = hn(m), { getItems: b, CollectionSlot: C } = yt({ isProvider: !0 }), w = N(), $ = N(!1), B = T(() => Array.isArray(g.value) ? [...g.value] : []);
    function I(E) {
      if (E !== -1) {
        const P = b().filter((R) => R.ref.dataset.disabled !== "");
        g.value = g.value.filter((R, F) => F !== E), n("removeTag", P[E].value);
      }
    }
    return DP({
      modelValue: g,
      onAddValue: (E) => {
        const P = [...B.value], R = P.length > 0 && typeof P[0] == "object", F = P.length > 0 && typeof a.defaultValue[0] == "object";
        if ((R || F) && typeof a.convertValue != "function") throw new Error("You must provide a `convertValue` function when using objects as values.");
        const H = a.convertValue ? a.convertValue(E) : E;
        if (P.length >= o.value && o.value)
          return n("invalid", H), !1;
        if (a.duplicate)
          return g.value = [...P, H], n("addTag", H), !0;
        if (P.includes(H))
          $.value = !0;
        else return g.value = [...P, H], n("addTag", H), !0;
        return n("invalid", H), !1;
      },
      onRemoveValue: I,
      onInputKeydown: (E) => {
        const P = E.target, R = b().map((H) => H.ref).filter((H) => H.dataset.disabled !== "");
        if (!R.length) return;
        const F = R.at(-1);
        switch (E.key) {
          case "Delete":
          case "Backspace": {
            if (P.selectionStart !== 0 || P.selectionEnd !== 0) break;
            if (w.value) {
              const H = R.findIndex((j) => j === w.value);
              I(H), w.value = w.value === F ? R.at(H - 1) : R.at(H + 1), E.preventDefault();
            } else E.key === "Backspace" && (w.value = F, E.preventDefault());
            break;
          }
          case "Home":
          case "End":
          case "ArrowRight":
          case "ArrowLeft": {
            const H = E.key === "ArrowRight" && p.value === "ltr" || E.key === "ArrowLeft" && p.value === "rtl", j = !H;
            if (P.selectionStart !== 0 || P.selectionEnd !== 0) break;
            if (j && !w.value)
              w.value = F, E.preventDefault();
            else if (H && F && w.value === F)
              w.value = void 0, E.preventDefault();
            else if (w.value) {
              const K = Mr(E, w.value, void 0, {
                itemsArray: R,
                loop: !1,
                dir: p.value
              });
              K && (w.value = K), E.preventDefault();
            }
            break;
          }
          case "ArrowUp":
          case "ArrowDown": {
            w.value && E.preventDefault();
            break;
          }
          default:
            w.value = void 0;
        }
      },
      selectedElement: w,
      isInvalidInput: $,
      addOnPaste: r,
      addOnBlur: c,
      addOnTab: f,
      dir: p,
      disabled: s,
      delimiter: i,
      max: o,
      id: l,
      displayValue: a.displayValue
    }), (E, P) => (h(), k(u(C), null, {
      default: _(() => [V(u(U), {
        ref: u(v),
        dir: u(p),
        as: E.as,
        "as-child": E.asChild,
        "data-invalid": $.value ? "" : void 0,
        "data-disabled": u(s) ? "" : void 0,
        "data-focused": u(y) ? "" : void 0
      }, {
        default: _(() => [S(E.$slots, "default", { modelValue: u(g) }), u(x) && E.name ? (h(), k(u(yn), {
          key: 0,
          name: E.name,
          value: u(g),
          required: E.required,
          disabled: u(s)
        }, null, 8, [
          "name",
          "value",
          "required",
          "disabled"
        ])) : D("v-if", !0)]),
        _: 3
      }, 8, [
        "dir",
        "as",
        "as-child",
        "data-invalid",
        "data-disabled",
        "data-focused"
      ])]),
      _: 3
    }));
  }
}), Eb = MP, RP = /* @__PURE__ */ L({
  __name: "TagsInputInput",
  props: {
    placeholder: {
      type: String,
      required: !1
    },
    autoFocus: {
      type: Boolean,
      required: !1
    },
    maxLength: {
      type: Number,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "input"
    }
  },
  setup(e) {
    const t = e, a = Mf(), { forwardRef: n, currentElement: r } = Z();
    function s(g) {
      if (a.selectedElement.value = void 0, !a.addOnBlur.value) return;
      const v = g.target;
      if (!v.value) return;
      a.onAddValue(v.value) && (v.value = "");
    }
    function i(g) {
      a.addOnTab.value && c(g);
    }
    const o = N(!1);
    function l() {
      o.value = !0;
    }
    function d() {
      Be(() => {
        o.value = !1;
      });
    }
    async function c(g) {
      if (o.value || (await Be(), g.defaultPrevented)) return;
      const v = g.target;
      if (!v.value) return;
      a.onAddValue(v.value) && (v.value = ""), g.preventDefault();
    }
    function f(g) {
      if (a.isInvalidInput.value = !1, g.data === null) return;
      const v = a.delimiter.value;
      if (v === g.data || v instanceof RegExp && v.test(g.data)) {
        const y = g.target;
        y.value = y.value.replace(v, ""), a.onAddValue(y.value) && (y.value = "");
      }
    }
    function p(g) {
      if (a.addOnPaste.value) {
        g.preventDefault();
        const v = g.clipboardData;
        if (!v) return;
        const m = v.getData("text");
        a.delimiter.value ? m.split(a.delimiter.value).forEach((x) => {
          a.onAddValue(x);
        }) : a.onAddValue(m);
      }
    }
    return Pe(() => {
      const g = r.value.nodeName === "INPUT" ? r.value : r.value.querySelector("input");
      g && setTimeout(() => {
        t.autoFocus && g?.focus();
      }, 1);
    }), (g, v) => (h(), k(u(U), {
      id: u(a).id?.value,
      ref: u(n),
      type: "text",
      autocomplete: "off",
      autocorrect: "off",
      autocapitalize: "off",
      as: g.as,
      "as-child": g.asChild,
      maxlength: g.maxLength,
      placeholder: g.placeholder,
      disabled: u(a).disabled.value,
      "data-invalid": u(a).isInvalidInput.value ? "" : void 0,
      onInput: f,
      onKeydown: [
        nt(c, ["enter"]),
        nt(i, ["tab"]),
        u(a).onInputKeydown
      ],
      onBlur: s,
      onCompositionstart: l,
      onCompositionend: d,
      onPaste: p
    }, {
      default: _(() => [S(g.$slots, "default")]),
      _: 3
    }, 8, [
      "id",
      "as",
      "as-child",
      "maxlength",
      "placeholder",
      "disabled",
      "data-invalid",
      "onKeydown"
    ]));
  }
}), Tb = RP;
const [Bb, LP] = Me("TagsInputItem");
var OP = /* @__PURE__ */ L({
  __name: "TagsInputItem",
  props: {
    value: {
      type: [String, Object],
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  setup(e) {
    const t = e, { value: a } = We(t), n = Mf(), { forwardRef: r, currentElement: s } = Z(), { CollectionItem: i } = yt(), o = T(() => n.selectedElement.value === s.value), l = T(() => t.disabled || n.disabled.value), d = LP({
      value: a,
      isSelected: o,
      disabled: l,
      textId: "",
      displayValue: T(() => n.displayValue(a.value))
    });
    return (c, f) => (h(), k(u(i), { value: u(a) }, {
      default: _(() => [V(u(U), {
        ref: u(r),
        as: c.as,
        "as-child": c.asChild,
        "aria-labelledby": u(d).textId,
        "aria-current": o.value,
        "data-disabled": l.value ? "" : void 0,
        "data-state": o.value ? "active" : "inactive"
      }, {
        default: _(() => [S(c.$slots, "default")]),
        _: 3
      }, 8, [
        "as",
        "as-child",
        "aria-labelledby",
        "aria-current",
        "data-disabled",
        "data-state"
      ])]),
      _: 3
    }, 8, ["value"]));
  }
}), Pb = OP, FP = /* @__PURE__ */ L({
  __name: "TagsInputItemDelete",
  props: {
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "button"
    }
  },
  setup(e) {
    const t = e;
    Z();
    const a = Mf(), n = Bb(), r = T(() => n.disabled?.value || a.disabled.value);
    function s() {
      if (r.value) return;
      const i = a.modelValue.value.findIndex((o) => ca(o, n.value.value));
      a.onRemoveValue(i);
    }
    return (i, o) => (h(), k(u(U), O({ tabindex: "-1" }, t, {
      "aria-labelledby": u(n).textId,
      "aria-current": u(n).isSelected.value,
      "data-state": u(n).isSelected.value ? "active" : "inactive",
      "data-disabled": r.value ? "" : void 0,
      type: i.as === "button" ? "button" : void 0,
      onClick: s
    }), {
      default: _(() => [S(i.$slots, "default")]),
      _: 3
    }, 16, [
      "aria-labelledby",
      "aria-current",
      "data-state",
      "data-disabled",
      "type"
    ]));
  }
}), Db = FP, zP = /* @__PURE__ */ L({
  __name: "TagsInputItemText",
  props: {
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "span"
    }
  },
  setup(e) {
    const t = e, a = Bb();
    return Z(), a.textId ||= pt(void 0, "reka-tags-input-item-text"), (n, r) => (h(), k(u(U), O(t, { id: u(a).textId }), {
      default: _(() => [S(n.$slots, "default", {}, () => [ee(X(u(a).displayValue.value), 1)])]),
      _: 3
    }, 16, ["id"]));
  }
}), Mb = zP, qP = /* @__PURE__ */ L({
  __name: "ToastAnnounceExclude",
  props: {
    altText: {
      type: String,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  setup(e) {
    return (t, a) => (h(), k(u(U), {
      as: t.as,
      "as-child": t.asChild,
      "data-reka-toast-announce-exclude": "",
      "data-reka-toast-announce-alt": t.altText || void 0
    }, {
      default: _(() => [S(t.$slots, "default")]),
      _: 3
    }, 8, [
      "as",
      "as-child",
      "data-reka-toast-announce-alt"
    ]));
  }
}), Rb = qP;
const [Kl, VP] = Me("ToastProvider");
var NP = /* @__PURE__ */ L({
  inheritAttrs: !1,
  __name: "ToastProvider",
  props: {
    label: {
      type: String,
      required: !1,
      default: "Notification"
    },
    duration: {
      type: Number,
      required: !1,
      default: 5e3
    },
    swipeDirection: {
      type: String,
      required: !1,
      default: "right"
    },
    swipeThreshold: {
      type: Number,
      required: !1,
      default: 50
    }
  },
  setup(e) {
    const t = e, { label: a, duration: n, swipeDirection: r, swipeThreshold: s } = We(t);
    yt({ isProvider: !0 });
    const i = N(), o = N(0), l = N(!1), d = N(!1);
    if (t.label && typeof t.label == "string" && !t.label.trim()) {
      const c = "Invalid prop `label` supplied to `ToastProvider`. Expected non-empty `string`.";
      throw new Error(c);
    }
    return VP({
      label: a,
      duration: n,
      swipeDirection: r,
      swipeThreshold: s,
      toastCount: o,
      viewport: i,
      onViewportChange(c) {
        i.value = c;
      },
      onToastAdd() {
        o.value++;
      },
      onToastRemove() {
        o.value--;
      },
      isFocusedToastEscapeKeyDownRef: l,
      isClosePausedRef: d
    }), (c, f) => S(c.$slots, "default");
  }
}), HP = NP, jP = /* @__PURE__ */ L({
  __name: "ToastAnnounce",
  setup(e) {
    const t = Kl(), a = LC(1e3), n = N(!1);
    return mm(() => {
      n.value = !0;
    }), (r, s) => u(a) || n.value ? (h(), k(u(Fn), { key: 0 }, {
      default: _(() => [ee(X(u(t).label.value) + " ", 1), S(r.$slots, "default")]),
      _: 3
    })) : D("v-if", !0);
  }
}), KP = jP;
const GP = "toast.swipeStart", UP = "toast.swipeMove", WP = "toast.swipeCancel", YP = "toast.swipeEnd", Ed = "toast.viewportPause", Td = "toast.viewportResume";
function fo(e, t, a) {
  const n = a.originalEvent.currentTarget, r = new CustomEvent(e, {
    bubbles: !1,
    cancelable: !0,
    detail: a
  });
  t && n.addEventListener(e, t, { once: !0 }), n.dispatchEvent(r);
}
function Pg(e, t, a = 0) {
  const n = Math.abs(e.x), r = Math.abs(e.y), s = n > r;
  return t === "left" || t === "right" ? s && n > a : !s && r > a;
}
function XP(e) {
  return e.nodeType === e.ELEMENT_NODE;
}
function Lb(e) {
  const t = [];
  return Array.from(e.childNodes).forEach((n) => {
    if (n.nodeType === n.TEXT_NODE && n.textContent && t.push(n.textContent), XP(n)) {
      const r = n.ariaHidden || n.hidden || n.style.display === "none", s = n.dataset.rekaToastAnnounceExclude === "";
      if (!r) if (s) {
        const i = n.dataset.rekaToastAnnounceAlt;
        i && t.push(i);
      } else t.push(...Lb(n));
    }
  }), t;
}
const [JP, QP] = Me("ToastRoot");
var ZP = /* @__PURE__ */ L({
  inheritAttrs: !1,
  __name: "ToastRootImpl",
  props: {
    type: {
      type: String,
      required: !1
    },
    open: {
      type: Boolean,
      required: !1,
      default: !1
    },
    duration: {
      type: Number,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "li"
    }
  },
  emits: [
    "close",
    "escapeKeyDown",
    "pause",
    "resume",
    "swipeStart",
    "swipeMove",
    "swipeCancel",
    "swipeEnd"
  ],
  setup(e, { emit: t }) {
    const a = e, n = t, { forwardRef: r, currentElement: s } = Z(), { CollectionItem: i } = yt(), o = Kl(), l = N(null), d = N(null), c = T(() => typeof a.duration == "number" ? a.duration : o.duration.value), f = N(0), p = N(c.value), g = N(0), v = N(c.value), m = mm(() => {
      const C = (/* @__PURE__ */ new Date()).getTime() - f.value;
      v.value = Math.max(p.value - C, 0);
    }, { fpsLimit: 60 });
    function y(C) {
      C <= 0 || C === Number.POSITIVE_INFINITY || Aa && (window.clearTimeout(g.value), f.value = (/* @__PURE__ */ new Date()).getTime(), g.value = window.setTimeout(x, C));
    }
    function x(C) {
      const w = C?.pointerType === "";
      s.value?.contains(dt()) && w && o.viewport.value?.focus(), w && (o.isClosePausedRef.value = !1), n("close");
    }
    const b = T(() => s.value ? Lb(s.value) : null);
    if (a.type && !["foreground", "background"].includes(a.type)) {
      const C = "Invalid prop `type` supplied to `Toast`. Expected `foreground | background`.";
      throw new Error(C);
    }
    return ot((C) => {
      const w = o.viewport.value;
      if (w) {
        const $ = () => {
          y(p.value), m.resume(), n("resume");
        }, B = () => {
          const I = (/* @__PURE__ */ new Date()).getTime() - f.value;
          p.value = p.value - I, window.clearTimeout(g.value), m.pause(), n("pause");
        };
        return w.addEventListener(Ed, B), w.addEventListener(Td, $), () => {
          w.removeEventListener(Ed, B), w.removeEventListener(Td, $);
        };
      }
    }), ye(() => [a.open, c.value], () => {
      p.value = c.value, a.open && !o.isClosePausedRef.value && y(c.value);
    }, { immediate: !0 }), jc("Escape", (C) => {
      n("escapeKeyDown", C), C.defaultPrevented || (o.isFocusedToastEscapeKeyDownRef.value = !0, x());
    }), Pe(() => {
      o.onToastAdd();
    }), Bt(() => {
      o.onToastRemove();
    }), QP({ onClose: x }), (C, w) => (h(), M(te, null, [b.value ? (h(), k(KP, {
      key: 0,
      role: "alert",
      "aria-live": C.type === "foreground" ? "assertive" : "polite",
      "aria-atomic": "true"
    }, {
      default: _(() => [ee(X(b.value), 1)]),
      _: 1
    }, 8, ["aria-live"])) : D("v-if", !0), u(o).viewport.value ? (h(), k(Mi, {
      key: 1,
      to: u(o).viewport.value
    }, [V(u(i), null, {
      default: _(() => [V(u(U), O({
        ref: u(r),
        role: "alert",
        "aria-live": "off",
        "aria-atomic": "true",
        tabindex: "0"
      }, C.$attrs, {
        as: C.as,
        "as-child": C.asChild,
        "data-state": C.open ? "open" : "closed",
        "data-swipe-direction": u(o).swipeDirection.value,
        style: {
          userSelect: "none",
          touchAction: "none"
        },
        onPointerdown: w[0] || (w[0] = ze(($) => {
          l.value = {
            x: $.clientX,
            y: $.clientY
          };
        }, ["left"])),
        onPointermove: w[1] || (w[1] = ($) => {
          if (!l.value) return;
          const B = $.clientX - l.value.x, I = $.clientY - l.value.y, E = !!d.value, P = ["left", "right"].includes(u(o).swipeDirection.value), R = ["left", "up"].includes(u(o).swipeDirection.value) ? Math.min : Math.max, F = P ? R(0, B) : 0, H = P ? 0 : R(0, I), j = $.pointerType === "touch" ? 10 : 2, K = {
            x: F,
            y: H
          }, z = {
            originalEvent: $,
            delta: K
          };
          E ? (d.value = K, u(fo)(u(UP), (G) => n("swipeMove", G), z)) : u(Pg)(K, u(o).swipeDirection.value, j) ? (d.value = K, u(fo)(u(GP), (G) => n("swipeStart", G), z), $.target.setPointerCapture($.pointerId)) : (Math.abs(B) > j || Math.abs(I) > j) && (l.value = null);
        }),
        onPointerup: w[2] || (w[2] = ($) => {
          const B = d.value, I = $.target;
          if (I.hasPointerCapture($.pointerId) && I.releasePointerCapture($.pointerId), d.value = null, l.value = null, B) {
            const E = $.currentTarget, P = {
              originalEvent: $,
              delta: B
            };
            u(Pg)(B, u(o).swipeDirection.value, u(o).swipeThreshold.value) ? u(fo)(u(YP), (R) => n("swipeEnd", R), P) : u(fo)(u(WP), (R) => n("swipeCancel", R), P), E?.addEventListener("click", (R) => R.preventDefault(), { once: !0 });
          }
        })
      }), {
        default: _(() => [S(C.$slots, "default", {
          remaining: v.value,
          duration: c.value
        })]),
        _: 3
      }, 16, [
        "as",
        "as-child",
        "data-state",
        "data-swipe-direction"
      ])]),
      _: 3
    })], 8, ["to"])) : D("v-if", !0)], 64));
  }
}), eD = ZP, tD = /* @__PURE__ */ L({
  __name: "ToastClose",
  props: {
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "button"
    }
  },
  setup(e) {
    const t = e, a = JP(), { forwardRef: n } = Z();
    return (r, s) => (h(), k(Rb, { "as-child": "" }, {
      default: _(() => [V(u(U), O(t, {
        ref: u(n),
        type: r.as === "button" ? "button" : void 0,
        onClick: u(a).onClose
      }), {
        default: _(() => [S(r.$slots, "default")]),
        _: 3
      }, 16, ["type", "onClick"])]),
      _: 3
    }));
  }
}), Ob = tD, aD = /* @__PURE__ */ L({
  __name: "ToastAction",
  props: {
    altText: {
      type: String,
      required: !0
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  setup(e) {
    if (!e.altText) throw new Error("Missing prop `altText` expected on `ToastAction`");
    const { forwardRef: a } = Z();
    return (n, r) => n.altText ? (h(), k(Rb, {
      key: 0,
      "alt-text": n.altText,
      "as-child": ""
    }, {
      default: _(() => [V(Ob, {
        ref: u(a),
        as: n.as,
        "as-child": n.asChild
      }, {
        default: _(() => [S(n.$slots, "default")]),
        _: 3
      }, 8, ["as", "as-child"])]),
      _: 3
    }, 8, ["alt-text"])) : D("v-if", !0);
  }
}), Dg = aD, nD = /* @__PURE__ */ L({
  __name: "ToastDescription",
  props: {
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  setup(e) {
    const t = e;
    return Z(), (a, n) => (h(), k(u(U), pe(me(t)), {
      default: _(() => [S(a.$slots, "default")]),
      _: 3
    }, 16));
  }
}), rD = nD, sD = /* @__PURE__ */ L({
  __name: "ToastPortal",
  props: {
    to: {
      type: null,
      required: !1
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    defer: {
      type: Boolean,
      required: !1
    },
    forceMount: {
      type: Boolean,
      required: !1
    }
  },
  setup(e) {
    const t = e;
    return (a, n) => (h(), k(u(ir), pe(me(t)), {
      default: _(() => [S(a.$slots, "default")]),
      _: 3
    }, 16));
  }
}), iD = sD, oD = /* @__PURE__ */ L({
  __name: "ToastRoot",
  props: {
    defaultOpen: {
      type: Boolean,
      required: !1,
      default: !0
    },
    forceMount: {
      type: Boolean,
      required: !1
    },
    type: {
      type: String,
      required: !1,
      default: "foreground"
    },
    open: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    duration: {
      type: Number,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "li"
    }
  },
  emits: [
    "escapeKeyDown",
    "pause",
    "resume",
    "swipeStart",
    "swipeMove",
    "swipeCancel",
    "swipeEnd",
    "update:open"
  ],
  setup(e, { emit: t }) {
    const a = e, n = t, { forwardRef: r } = Z(), s = Ze(a, "open", n, {
      defaultValue: a.defaultOpen,
      passive: a.open === void 0
    });
    return (i, o) => (h(), k(u(Xt), { present: i.forceMount || u(s) }, {
      default: _(() => [V(eD, O({
        ref: u(r),
        open: u(s),
        type: i.type,
        as: i.as,
        "as-child": i.asChild,
        duration: i.duration
      }, i.$attrs, {
        onClose: o[0] || (o[0] = (l) => s.value = !1),
        onPause: o[1] || (o[1] = (l) => n("pause")),
        onResume: o[2] || (o[2] = (l) => n("resume")),
        onEscapeKeyDown: o[3] || (o[3] = (l) => n("escapeKeyDown", l)),
        onSwipeStart: o[4] || (o[4] = (l) => {
          n("swipeStart", l), l.defaultPrevented || l.currentTarget.setAttribute("data-swipe", "start");
        }),
        onSwipeMove: o[5] || (o[5] = (l) => {
          if (n("swipeMove", l), !l.defaultPrevented) {
            const { x: d, y: c } = l.detail.delta, f = l.currentTarget;
            f.setAttribute("data-swipe", "move"), f.style.setProperty("--reka-toast-swipe-move-x", `${d}px`), f.style.setProperty("--reka-toast-swipe-move-y", `${c}px`);
          }
        }),
        onSwipeCancel: o[6] || (o[6] = (l) => {
          if (n("swipeCancel", l), !l.defaultPrevented) {
            const d = l.currentTarget;
            d.setAttribute("data-swipe", "cancel"), d.style.removeProperty("--reka-toast-swipe-move-x"), d.style.removeProperty("--reka-toast-swipe-move-y"), d.style.removeProperty("--reka-toast-swipe-end-x"), d.style.removeProperty("--reka-toast-swipe-end-y");
          }
        }),
        onSwipeEnd: o[7] || (o[7] = (l) => {
          if (n("swipeEnd", l), !l.defaultPrevented) {
            const { x: d, y: c } = l.detail.delta, f = l.currentTarget;
            f.setAttribute("data-swipe", "end"), f.style.removeProperty("--reka-toast-swipe-move-x"), f.style.removeProperty("--reka-toast-swipe-move-y"), f.style.setProperty("--reka-toast-swipe-end-x", `${d}px`), f.style.setProperty("--reka-toast-swipe-end-y", `${c}px`), s.value = !1;
          }
        })
      }), {
        default: _(({ remaining: l, duration: d }) => [S(i.$slots, "default", {
          remaining: l,
          duration: d,
          open: u(s)
        })]),
        _: 3
      }, 16, [
        "open",
        "type",
        "as",
        "as-child",
        "duration"
      ])]),
      _: 3
    }, 8, ["present"]));
  }
}), lD = oD, uD = /* @__PURE__ */ L({
  __name: "ToastTitle",
  props: {
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    }
  },
  setup(e) {
    const t = e;
    return Z(), (a, n) => (h(), k(u(U), pe(me(t)), {
      default: _(() => [S(a.$slots, "default")]),
      _: 3
    }, 16));
  }
}), dD = uD, cD = /* @__PURE__ */ L({
  __name: "FocusProxy",
  emits: ["focusFromOutsideViewport"],
  setup(e, { emit: t }) {
    const a = t, n = Kl();
    return (r, s) => (h(), k(u(Fn), {
      "aria-hidden": "true",
      tabindex: "0",
      style: { position: "fixed" },
      onFocus: s[0] || (s[0] = (i) => {
        const o = i.relatedTarget;
        !u(n).viewport.value?.contains(o) && a("focusFromOutsideViewport");
      })
    }, {
      default: _(() => [S(r.$slots, "default")]),
      _: 3
    }));
  }
}), Mg = cD, fD = /* @__PURE__ */ L({
  inheritAttrs: !1,
  __name: "ToastViewport",
  props: {
    hotkey: {
      type: Array,
      required: !1,
      default: () => ["F8"]
    },
    label: {
      type: [String, Function],
      required: !1,
      default: "Notifications ({hotkey})"
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "ol"
    }
  },
  setup(e) {
    const t = e, { hotkey: a, label: n } = We(t), { forwardRef: r, currentElement: s } = Z(), { CollectionSlot: i, getItems: o } = yt(), l = Kl(), d = T(() => l.toastCount.value > 0), c = N(), f = N(), p = T(() => a.value.join("+").replace(/Key/g, "").replace(/Digit/g, ""));
    jc(a.value, () => {
      s.value.focus();
    }), Pe(() => {
      l.onViewportChange(s.value);
    }), ot((v) => {
      const m = s.value;
      if (d.value && m) {
        const y = () => {
          if (!l.isClosePausedRef.value) {
            const $ = new CustomEvent(Ed);
            m.dispatchEvent($), l.isClosePausedRef.value = !0;
          }
        }, x = () => {
          if (l.isClosePausedRef.value) {
            const $ = new CustomEvent(Td);
            m.dispatchEvent($), l.isClosePausedRef.value = !1;
          }
        }, b = ($) => {
          !m.contains($.relatedTarget) && x();
        }, C = () => {
          m.contains(dt()) || x();
        }, w = ($) => {
          const B = $.altKey || $.ctrlKey || $.metaKey;
          if ($.key === "Tab" && !B) {
            const E = dt(), P = $.shiftKey;
            if ($.target === m && P) {
              c.value?.focus();
              return;
            }
            const H = g({ tabbingDirection: P ? "backwards" : "forwards" }), j = H.findIndex((K) => K === E);
            qo(H.slice(j + 1)) ? $.preventDefault() : P ? c.value?.focus() : f.value?.focus();
          }
        };
        m.addEventListener("focusin", y), m.addEventListener("focusout", b), m.addEventListener("pointermove", y), m.addEventListener("pointerleave", C), m.addEventListener("keydown", w), window.addEventListener("blur", y), window.addEventListener("focus", x), v(() => {
          m.removeEventListener("focusin", y), m.removeEventListener("focusout", b), m.removeEventListener("pointermove", y), m.removeEventListener("pointerleave", C), m.removeEventListener("keydown", w), window.removeEventListener("blur", y), window.removeEventListener("focus", x);
        });
      }
    });
    function g({ tabbingDirection: v }) {
      const y = o().map((x) => x.ref).map((x) => {
        const b = [x, ...lf(x)];
        return v === "forwards" ? b : b.reverse();
      });
      return (v === "forwards" ? y.reverse() : y).flat();
    }
    return (v, m) => (h(), k(u(NS), {
      role: "region",
      "aria-label": typeof u(n) == "string" ? u(n).replace("{hotkey}", p.value) : u(n)(p.value),
      tabindex: "-1",
      style: It({ pointerEvents: d.value ? void 0 : "none" })
    }, {
      default: _(() => [
        d.value ? (h(), k(Mg, {
          key: 0,
          ref: (y) => {
            c.value = u(sa)(y);
          },
          onFocusFromOutsideViewport: m[0] || (m[0] = () => {
            const y = g({ tabbingDirection: "forwards" });
            u(qo)(y);
          })
        }, null, 512)) : D("v-if", !0),
        V(u(i), null, {
          default: _(() => [V(u(U), O({
            ref: u(r),
            tabindex: "-1",
            as: v.as,
            "as-child": v.asChild
          }, v.$attrs), {
            default: _(() => [S(v.$slots, "default")]),
            _: 3
          }, 16, ["as", "as-child"])]),
          _: 3
        }),
        d.value ? (h(), k(Mg, {
          key: 1,
          ref: (y) => {
            f.value = u(sa)(y);
          },
          onFocusFromOutsideViewport: m[1] || (m[1] = () => {
            const y = g({ tabbingDirection: "backwards" });
            u(qo)(y);
          })
        }, null, 512)) : D("v-if", !0)
      ]),
      _: 3
    }, 8, ["aria-label", "style"]));
  }
}), pD = fD, gD = /* @__PURE__ */ L({
  __name: "TooltipArrow",
  props: {
    width: {
      type: Number,
      required: !1,
      default: 10
    },
    height: {
      type: Number,
      required: !1,
      default: 5
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "svg"
    }
  },
  setup(e) {
    const t = e;
    return Z(), (a, n) => (h(), k(u($s), pe(me(t)), {
      default: _(() => [S(a.$slots, "default")]),
      _: 3
    }, 16));
  }
}), vD = gD;
const [Rf, hD] = Me("TooltipProvider");
var mD = /* @__PURE__ */ L({
  inheritAttrs: !1,
  __name: "TooltipProvider",
  props: {
    delayDuration: {
      type: Number,
      required: !1,
      default: 700
    },
    skipDelayDuration: {
      type: Number,
      required: !1,
      default: 300
    },
    disableHoverableContent: {
      type: Boolean,
      required: !1,
      default: !1
    },
    disableClosingTrigger: {
      type: Boolean,
      required: !1
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    ignoreNonKeyboardFocus: {
      type: Boolean,
      required: !1,
      default: !1
    }
  },
  setup(e) {
    const t = e, { delayDuration: a, skipDelayDuration: n, disableHoverableContent: r, disableClosingTrigger: s, ignoreNonKeyboardFocus: i, disabled: o } = We(t);
    Z();
    const l = N(!0), d = N(!1), { start: c, stop: f } = Nc(() => {
      l.value = !0;
    }, n, { immediate: !1 });
    return hD({
      isOpenDelayed: l,
      delayDuration: a,
      onOpen() {
        f(), l.value = !1;
      },
      onClose() {
        c();
      },
      isPointerInTransitRef: d,
      disableHoverableContent: r,
      disableClosingTrigger: s,
      disabled: o,
      ignoreNonKeyboardFocus: i
    }), (p, g) => S(p.$slots, "default");
  }
}), yD = mD;
const Fb = "tooltip.open", [Gl, bD] = Me("TooltipRoot");
var wD = /* @__PURE__ */ L({
  __name: "TooltipRoot",
  props: {
    defaultOpen: {
      type: Boolean,
      required: !1,
      default: !1
    },
    open: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    delayDuration: {
      type: Number,
      required: !1,
      default: void 0
    },
    disableHoverableContent: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    disableClosingTrigger: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    ignoreNonKeyboardFocus: {
      type: Boolean,
      required: !1,
      default: void 0
    }
  },
  emits: ["update:open"],
  setup(e, { emit: t }) {
    const a = e, n = t;
    Z();
    const r = Rf(), s = T(() => a.disableHoverableContent ?? r.disableHoverableContent.value), i = T(() => a.disableClosingTrigger ?? r.disableClosingTrigger.value), o = T(() => a.disabled ?? r.disabled.value), l = T(() => a.delayDuration ?? r.delayDuration.value), d = T(() => a.ignoreNonKeyboardFocus ?? r.ignoreNonKeyboardFocus.value), c = Ze(a, "open", n, {
      defaultValue: a.defaultOpen,
      passive: a.open === void 0
    });
    ye(c, (C) => {
      r.onClose && (C ? (r.onOpen(), document.dispatchEvent(new CustomEvent(Fb))) : r.onClose());
    });
    const f = N(!1), p = N(), g = T(() => c.value ? f.value ? "delayed-open" : "instant-open" : "closed"), { start: v, stop: m } = Nc(() => {
      f.value = !0, c.value = !0;
    }, l, { immediate: !1 });
    function y() {
      m(), f.value = !1, c.value = !0;
    }
    function x() {
      m(), c.value = !1;
    }
    function b() {
      v();
    }
    return bD({
      contentId: "",
      open: c,
      stateAttribute: g,
      trigger: p,
      onTriggerChange(C) {
        p.value = C;
      },
      onTriggerEnter() {
        r.isOpenDelayed.value ? b() : y();
      },
      onTriggerLeave() {
        s.value ? x() : m();
      },
      onOpen: y,
      onClose: x,
      disableHoverableContent: s,
      disableClosingTrigger: i,
      disabled: o,
      ignoreNonKeyboardFocus: d
    }), (C, w) => (h(), k(u(Rr), null, {
      default: _(() => [S(C.$slots, "default", { open: u(c) })]),
      _: 3
    }));
  }
}), CD = wD, xD = /* @__PURE__ */ L({
  __name: "TooltipContentImpl",
  props: {
    ariaLabel: {
      type: String,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    },
    side: {
      type: null,
      required: !1,
      default: "top"
    },
    sideOffset: {
      type: Number,
      required: !1,
      default: 0
    },
    align: {
      type: null,
      required: !1,
      default: "center"
    },
    alignOffset: {
      type: Number,
      required: !1
    },
    avoidCollisions: {
      type: Boolean,
      required: !1,
      default: !0
    },
    collisionBoundary: {
      type: null,
      required: !1,
      default: () => []
    },
    collisionPadding: {
      type: [Number, Object],
      required: !1,
      default: 0
    },
    arrowPadding: {
      type: Number,
      required: !1,
      default: 0
    },
    sticky: {
      type: String,
      required: !1,
      default: "partial"
    },
    hideWhenDetached: {
      type: Boolean,
      required: !1,
      default: !1
    },
    positionStrategy: {
      type: String,
      required: !1
    },
    updatePositionStrategy: {
      type: String,
      required: !1
    }
  },
  emits: ["escapeKeyDown", "pointerDownOutside"],
  setup(e, { emit: t }) {
    const a = e, n = t, r = Gl(), { forwardRef: s } = Z(), i = Se(), o = T(() => i.default?.({})), l = T(() => {
      if (a.ariaLabel) return a.ariaLabel;
      let c = "";
      function f(p) {
        typeof p.children == "string" && p.type !== Fc ? c += p.children : Array.isArray(p.children) && p.children.forEach((g) => f(g));
      }
      return o.value?.forEach((p) => f(p)), c;
    }), d = T(() => {
      const { ariaLabel: c, ...f } = a;
      return f;
    });
    return Pe(() => {
      ra(window, "scroll", (c) => {
        c.target?.contains(r.trigger.value) && r.onClose();
      }), ra(window, Fb, r.onClose);
    }), (c, f) => (h(), k(u(sr), {
      "as-child": "",
      "disable-outside-pointer-events": !1,
      onEscapeKeyDown: f[0] || (f[0] = (p) => n("escapeKeyDown", p)),
      onPointerDownOutside: f[1] || (f[1] = (p) => {
        u(r).disableClosingTrigger.value && u(r).trigger.value?.contains(p.target) && p.preventDefault(), n("pointerDownOutside", p);
      }),
      onFocusOutside: f[2] || (f[2] = ze(() => {
      }, ["prevent"])),
      onDismiss: f[3] || (f[3] = (p) => u(r).onClose())
    }, {
      default: _(() => [V(u(As), O({
        ref: u(s),
        "data-state": u(r).stateAttribute.value
      }, {
        ...c.$attrs,
        ...d.value
      }, { style: {
        "--reka-tooltip-content-transform-origin": "var(--reka-popper-transform-origin)",
        "--reka-tooltip-content-available-width": "var(--reka-popper-available-width)",
        "--reka-tooltip-content-available-height": "var(--reka-popper-available-height)",
        "--reka-tooltip-trigger-width": "var(--reka-popper-anchor-width)",
        "--reka-tooltip-trigger-height": "var(--reka-popper-anchor-height)"
      } }), {
        default: _(() => [S(c.$slots, "default"), V(u(Fn), {
          id: u(r).contentId,
          role: "tooltip"
        }, {
          default: _(() => [ee(X(l.value), 1)]),
          _: 1
        }, 8, ["id"])]),
        _: 3
      }, 16, ["data-state"])]),
      _: 3
    }));
  }
}), zb = xD, SD = /* @__PURE__ */ L({
  __name: "TooltipContentHoverable",
  props: {
    ariaLabel: {
      type: String,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    },
    side: {
      type: null,
      required: !1
    },
    sideOffset: {
      type: Number,
      required: !1
    },
    align: {
      type: null,
      required: !1
    },
    alignOffset: {
      type: Number,
      required: !1
    },
    avoidCollisions: {
      type: Boolean,
      required: !1
    },
    collisionBoundary: {
      type: null,
      required: !1
    },
    collisionPadding: {
      type: [Number, Object],
      required: !1
    },
    arrowPadding: {
      type: Number,
      required: !1
    },
    sticky: {
      type: String,
      required: !1
    },
    hideWhenDetached: {
      type: Boolean,
      required: !1
    },
    positionStrategy: {
      type: String,
      required: !1
    },
    updatePositionStrategy: {
      type: String,
      required: !1
    }
  },
  setup(e) {
    const a = xt(e), { forwardRef: n, currentElement: r } = Z(), { trigger: s, onClose: i } = Gl(), o = Rf(), { isPointerInTransit: l, onPointerExit: d } = Km(s, r);
    return o.isPointerInTransitRef = l, d(() => {
      i();
    }), (c, f) => (h(), k(zb, O({ ref: u(n) }, u(a)), {
      default: _(() => [S(c.$slots, "default")]),
      _: 3
    }, 16));
  }
}), _D = SD, kD = /* @__PURE__ */ L({
  __name: "TooltipContent",
  props: {
    forceMount: {
      type: Boolean,
      required: !1
    },
    ariaLabel: {
      type: String,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1
    },
    side: {
      type: null,
      required: !1,
      default: "top"
    },
    sideOffset: {
      type: Number,
      required: !1
    },
    align: {
      type: null,
      required: !1
    },
    alignOffset: {
      type: Number,
      required: !1
    },
    avoidCollisions: {
      type: Boolean,
      required: !1
    },
    collisionBoundary: {
      type: null,
      required: !1
    },
    collisionPadding: {
      type: [Number, Object],
      required: !1
    },
    arrowPadding: {
      type: Number,
      required: !1
    },
    sticky: {
      type: String,
      required: !1
    },
    hideWhenDetached: {
      type: Boolean,
      required: !1
    },
    positionStrategy: {
      type: String,
      required: !1
    },
    updatePositionStrategy: {
      type: String,
      required: !1
    }
  },
  emits: ["escapeKeyDown", "pointerDownOutside"],
  setup(e, { emit: t }) {
    const a = e, n = t, r = Gl(), s = Xe(a, n), { forwardRef: i } = Z();
    return (o, l) => (h(), k(u(Xt), { present: o.forceMount || u(r).open.value }, {
      default: _(() => [(h(), k(ut(u(r).disableHoverableContent.value ? zb : _D), O({ ref: u(i) }, u(s)), {
        default: _(() => [S(o.$slots, "default")]),
        _: 3
      }, 16))]),
      _: 3
    }, 8, ["present"]));
  }
}), AD = kD, $D = /* @__PURE__ */ L({
  __name: "TooltipPortal",
  props: {
    to: {
      type: null,
      required: !1
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    defer: {
      type: Boolean,
      required: !1
    },
    forceMount: {
      type: Boolean,
      required: !1
    }
  },
  setup(e) {
    const t = e;
    return (a, n) => (h(), k(u(ir), pe(me(t)), {
      default: _(() => [S(a.$slots, "default")]),
      _: 3
    }, 16));
  }
}), ID = $D, ED = /* @__PURE__ */ L({
  __name: "TooltipTrigger",
  props: {
    reference: {
      type: null,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "button"
    }
  },
  setup(e) {
    const t = e, a = Gl(), n = Rf();
    a.contentId ||= pt(void 0, "reka-tooltip-content");
    const { forwardRef: r, currentElement: s } = Z(), i = N(!1), o = N(!1), l = T(() => a.disabled.value ? {} : {
      click: m,
      focus: g,
      pointermove: f,
      pointerleave: p,
      pointerdown: c,
      blur: v
    });
    Pe(() => {
      a.onTriggerChange(s.value);
    });
    function d() {
      setTimeout(() => {
        i.value = !1;
      }, 1);
    }
    function c() {
      a.open && !a.disableClosingTrigger.value && a.onClose(), i.value = !0, document.addEventListener("pointerup", d, { once: !0 });
    }
    function f(y) {
      y.pointerType !== "touch" && !o.value && !n.isPointerInTransitRef.value && (a.onTriggerEnter(), o.value = !0);
    }
    function p() {
      a.onTriggerLeave(), o.value = !1;
    }
    function g(y) {
      i.value || a.ignoreNonKeyboardFocus.value && !y.target.matches?.(":focus-visible") || a.onOpen();
    }
    function v() {
      a.onClose();
    }
    function m() {
      a.disableClosingTrigger.value || a.onClose();
    }
    return (y, x) => (h(), k(u(Lr), {
      "as-child": "",
      reference: y.reference
    }, {
      default: _(() => [V(u(U), O({
        ref: u(r),
        "aria-describedby": u(a).open.value ? u(a).contentId : void 0,
        "data-state": u(a).stateAttribute.value,
        as: y.as,
        "as-child": t.asChild,
        "data-grace-area-trigger": ""
      }, Ri(l.value)), {
        default: _(() => [S(y.$slots, "default")]),
        _: 3
      }, 16, [
        "aria-describedby",
        "data-state",
        "as",
        "as-child"
      ])]),
      _: 3
    }, 8, ["reference"]));
  }
}), TD = ED;
function dl(e) {
  return e.reduce((t, a) => (t.push(a), a.children && t.push(...dl(a.children)), t), []);
}
const [BD, PD] = Me("TreeRoot");
var DD = /* @__PURE__ */ L({
  __name: "TreeRoot",
  props: {
    modelValue: {
      type: null,
      required: !1
    },
    defaultValue: {
      type: null,
      required: !1
    },
    items: {
      type: Array,
      required: !1
    },
    expanded: {
      type: Array,
      required: !1
    },
    defaultExpanded: {
      type: Array,
      required: !1
    },
    getKey: {
      type: Function,
      required: !0
    },
    getChildren: {
      type: Function,
      required: !1,
      default: (e) => e.children
    },
    selectionBehavior: {
      type: String,
      required: !1,
      default: "toggle"
    },
    multiple: {
      type: Boolean,
      required: !1,
      skipCheck: !0
    },
    dir: {
      type: String,
      required: !1
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    propagateSelect: {
      type: Boolean,
      required: !1
    },
    bubbleSelect: {
      type: Boolean,
      required: !1
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "ul"
    }
  },
  emits: ["update:modelValue", "update:expanded"],
  setup(e, { emit: t }) {
    const a = e, n = t, { items: r, multiple: s, disabled: i, propagateSelect: o, dir: l, bubbleSelect: d } = We(a), { handleTypeaheadSearch: c } = Vi(), f = Yt(l), p = N(), g = N(!1), v = xr(), m = Ze(a, "modelValue", n, {
      defaultValue: a.defaultValue ?? (s.value ? [] : void 0),
      passive: !0,
      deep: !0
    }), y = Ze(a, "expanded", n, {
      defaultValue: a.defaultExpanded ?? [],
      passive: a.expanded === void 0,
      deep: !0
    }), { onSelectItem: x, handleMultipleReplace: b } = cS(m, a), C = T(() => s.value && Array.isArray(m.value) ? m.value.map((P) => a.getKey(P)) : [a.getKey(m.value ?? {})]);
    function w(P, R = 1, F) {
      return P.reduce((H, j, K) => {
        const z = a.getKey(j), G = a.getChildren(j), Y = y.value.includes(z), q = {
          _id: z,
          value: j,
          index: K,
          level: R,
          parentItem: F,
          hasChildren: !!G,
          bind: {
            value: j,
            level: R,
            "aria-setsize": P.length,
            "aria-posinset": K + 1
          }
        };
        return H.push(q), G && Y && H.push(...w(G, R + 1, j)), H;
      }, []);
    }
    const $ = T(() => {
      const P = a.items;
      return y.value.map((R) => R), w(P ?? []);
    });
    function B(P) {
      if (g.value) v.trigger(P);
      else {
        const R = p.value?.getItems() ?? [];
        c(P.key, R);
      }
    }
    function I(P) {
      if (g.value) return;
      const R = sy[P.key];
      Be(() => {
        b(R, dt(), p.value?.getItems, $.value.map((F) => F.value));
      });
    }
    function E(P) {
      if (P.parentItem != null && Array.isArray(m.value) && a.multiple) {
        const R = $.value.find((F) => P.parentItem != null && a.getKey(F.value) === a.getKey(P.parentItem));
        R != null && (a.getChildren(R.value)?.every((H) => m.value.find((j) => a.getKey(j) === a.getKey(H))) ? m.value = [...m.value, R.value] : m.value = m.value.filter((H) => a.getKey(H) !== a.getKey(R.value)), E(R));
      }
    }
    return PD({
      modelValue: m,
      selectedKeys: C,
      onSelect: (P) => {
        const R = (H) => a.getKey(H ?? {}) === a.getKey(P), F = a.multiple && Array.isArray(m.value) ? m.value?.findIndex(R) !== -1 : void 0;
        if (x(P, R), a.bubbleSelect && a.multiple && Array.isArray(m.value)) {
          const H = $.value.find((j) => a.getKey(j.value) === a.getKey(P));
          H != null && E(H);
        }
        if (a.propagateSelect && a.multiple && Array.isArray(m.value)) {
          const H = dl(a.getChildren(P) ?? []);
          F ? m.value = [...m.value].filter((j) => !H.some((K) => a.getKey(j ?? {}) === a.getKey(K))) : m.value = [...m.value, ...H];
        }
      },
      expanded: y,
      onToggle(P) {
        if (!(P ? a.getChildren(P) : void 0)) return;
        const F = a.getKey(P) ?? P;
        y.value.includes(F) ? y.value = y.value.filter((H) => H !== F) : y.value.push(F);
      },
      getKey: a.getKey,
      getChildren: a.getChildren,
      items: r,
      expandedItems: $,
      disabled: i,
      multiple: s,
      dir: f,
      propagateSelect: o,
      bubbleSelect: d,
      isVirtual: g,
      virtualKeydownHook: v,
      handleMultipleReplace: b
    }), (P, R) => (h(), k(u(Hi), {
      ref_key: "rovingFocusGroupRef",
      ref: p,
      "as-child": "",
      orientation: "vertical",
      dir: u(f)
    }, {
      default: _(() => [V(u(U), {
        role: "tree",
        as: P.as,
        "as-child": P.asChild,
        "aria-multiselectable": u(s) ? !0 : void 0,
        onKeydown: [B, nt(ze(I, ["shift"]), ["up", "down"])]
      }, {
        default: _(() => [S(P.$slots, "default", {
          flattenItems: $.value,
          modelValue: u(m),
          expanded: u(y)
        })]),
        _: 3
      }, 8, [
        "as",
        "as-child",
        "aria-multiselectable",
        "onKeydown"
      ])]),
      _: 3
    }, 8, ["dir"]));
  }
}), MD = DD;
const RD = "tree.select", LD = "tree.toggle";
var OD = /* @__PURE__ */ L({
  inheritAttrs: !1,
  __name: "TreeItem",
  props: {
    value: {
      type: null,
      required: !0
    },
    level: {
      type: Number,
      required: !0
    },
    asChild: {
      type: Boolean,
      required: !1
    },
    as: {
      type: null,
      required: !1,
      default: "li"
    }
  },
  emits: ["select", "toggle"],
  setup(e, { expose: t, emit: a }) {
    const n = e, r = a, s = BD(), { getItems: i } = yt(), o = T(() => !!s.getChildren(n.value)), l = T(() => {
      const x = s.getKey(n.value);
      return s.expanded.value.includes(x);
    }), d = T(() => {
      const x = s.getKey(n.value);
      return s.selectedKeys.value.includes(x);
    }), c = T(() => {
      if (s.bubbleSelect.value && o.value && Array.isArray(s.modelValue.value)) {
        const x = dl(s.getChildren(n.value) || []);
        return x.some((b) => s.modelValue.value.find((C) => s.getKey(C) === s.getKey(b))) && !x.every((b) => s.modelValue.value.find((C) => s.getKey(C) === s.getKey(b)));
      } else return s.propagateSelect.value && d.value && o.value && Array.isArray(s.modelValue.value) ? !dl(s.getChildren(n.value) || []).every((b) => s.modelValue.value.find((C) => s.getKey(C) === s.getKey(b))) : void 0;
    });
    function f(x) {
      if (o.value)
        if (l.value) {
          const b = i().map((I) => I.ref), C = dt(), w = b.indexOf(C), B = [...b].slice(w).find((I) => Number(I.getAttribute("data-indent")) === n.level + 1);
          B && B.focus();
        } else y(x);
    }
    function p(x) {
      if (l.value) y(x);
      else {
        const b = i().map((I) => I.ref), C = dt(), w = b.indexOf(C), B = [...b].slice(0, w).reverse().find((I) => Number(I.getAttribute("data-indent")) === n.level - 1);
        B && B.focus();
      }
    }
    async function g(x) {
      r("select", x), !x?.defaultPrevented && s.onSelect(n.value);
    }
    async function v(x) {
      r("toggle", x), !x?.defaultPrevented && s.onToggle(n.value);
    }
    async function m(x) {
      if (!x) return;
      const b = {
        originalEvent: x,
        value: n.value,
        isExpanded: l.value,
        isSelected: d.value
      };
      Ar(RD, g, b);
    }
    async function y(x) {
      if (!x) return;
      const b = {
        originalEvent: x,
        value: n.value,
        isExpanded: l.value,
        isSelected: d.value
      };
      Ar(LD, v, b);
    }
    return t({
      isExpanded: l,
      isSelected: d,
      isIndeterminate: c,
      handleToggle: () => s.onToggle(n.value),
      handleSelect: () => s.onSelect(n.value)
    }), (x, b) => (h(), k(u(Ll), {
      "as-child": "",
      value: x.value,
      "allow-shift-key": ""
    }, {
      default: _(() => [V(u(U), O(x.$attrs, {
        role: "treeitem",
        as: x.as,
        "as-child": x.asChild,
        "aria-selected": d.value,
        "aria-expanded": o.value ? l.value : void 0,
        "aria-level": x.level,
        "data-indent": x.level,
        "data-selected": d.value ? "" : void 0,
        "data-expanded": l.value ? "" : void 0,
        onKeydown: [
          nt(ze(m, ["self", "prevent"]), ["enter", "space"]),
          b[0] || (b[0] = nt(ze((C) => u(s).dir.value === "ltr" ? f(C) : p(C), ["prevent"]), ["right"])),
          b[1] || (b[1] = nt(ze((C) => u(s).dir.value === "ltr" ? p(C) : f(C), ["prevent"]), ["left"]))
        ],
        onClick: b[2] || (b[2] = ze((C) => {
          m(C), y(C);
        }, ["stop"]))
      }), {
        default: _(() => [S(x.$slots, "default", {
          isExpanded: l.value,
          isSelected: d.value,
          isIndeterminate: c.value,
          handleSelect: () => u(s).onSelect(x.value),
          handleToggle: () => u(s).onToggle(x.value)
        })]),
        _: 3
      }, 16, [
        "as",
        "as-child",
        "aria-selected",
        "aria-expanded",
        "aria-level",
        "data-indent",
        "data-selected",
        "data-expanded",
        "onKeydown"
      ])]),
      _: 3
    }, 8, ["value"]));
  }
}), FD = OD;
function Bs(e) {
  return Il() ? (El(e), !0) : !1;
}
// @__NO_SIDE_EFFECTS__
function Rg() {
  const e = /* @__PURE__ */ new Set(), t = (s) => {
    e.delete(s);
  };
  return {
    on: (s) => {
      e.add(s);
      const i = () => t(s);
      return Bs(i), {
        off: i
      };
    },
    off: t,
    trigger: (...s) => Promise.all(Array.from(e).map((i) => i(...s))),
    clear: () => {
      e.clear();
    }
  };
}
const xu = /* @__PURE__ */ new WeakMap(), zD = /* @__NO_SIDE_EFFECTS__ */ (...e) => {
  var t;
  const a = e[0], n = (t = fa()) == null ? void 0 : t.proxy;
  if (n == null && !zc())
    throw new Error("injectLocal must be called in setup");
  return n && xu.has(n) && a in xu.get(n) ? xu.get(n)[a] : Zt(...e);
};
// @__NO_SIDE_EFFECTS__
function Lf(e) {
  let t = 0, a, n;
  const r = () => {
    t -= 1, n && t <= 0 && (n.stop(), a = void 0, n = void 0);
  };
  return (...s) => (t += 1, n || (n = Oc(!0), a = n.run(() => e(...s))), Bs(r), a);
}
// @__NO_SIDE_EFFECTS__
function qD(e, t) {
  if (typeof Symbol < "u") {
    const a = { ...e };
    return Object.defineProperty(a, Symbol.iterator, {
      enumerable: !1,
      value() {
        let n = 0;
        return {
          next: () => ({
            value: t[n++],
            done: n > t.length
          })
        };
      }
    }), a;
  } else
    return Object.assign([...t], e);
}
function VD(e) {
  if (!ht(e))
    return ba(e);
  const t = new Proxy({}, {
    get(a, n, r) {
      return u(Reflect.get(e.value, n, r));
    },
    set(a, n, r) {
      return ht(e.value[n]) && !ht(r) ? e.value[n].value = r : e.value[n] = r, !0;
    },
    deleteProperty(a, n) {
      return Reflect.deleteProperty(e.value, n);
    },
    has(a, n) {
      return Reflect.has(e.value, n);
    },
    ownKeys() {
      return Object.keys(e.value);
    },
    getOwnPropertyDescriptor() {
      return {
        enumerable: !0,
        configurable: !0
      };
    }
  });
  return ba(t);
}
function qb(e) {
  return VD(T(e));
}
function Ui(e, ...t) {
  const a = t.flat(), n = a[0];
  return qb(() => Object.fromEntries(typeof n == "function" ? Object.entries(We(e)).filter(([r, s]) => !n(Re(s), r)) : Object.entries(We(e)).filter((r) => !a.includes(r[0]))));
}
const Ul = typeof window < "u" && typeof document < "u";
typeof WorkerGlobalScope < "u" && globalThis instanceof WorkerGlobalScope;
const Bd = (e) => typeof e < "u", ND = (e) => e != null, HD = Object.prototype.toString, jD = (e) => HD.call(e) === "[object Object]", xs = () => {
}, KD = (e, t) => Object.prototype.hasOwnProperty.call(e, t);
function Of(...e) {
  if (e.length !== 1)
    return Ge(...e);
  const t = e[0];
  return typeof t == "function" ? Da(Lc(() => ({ get: t, set: xs }))) : N(t);
}
function tt(e, ...t) {
  const a = t.flat(), n = a[0];
  return qb(() => Object.fromEntries(typeof n == "function" ? Object.entries(We(e)).filter(([r, s]) => n(Re(s), r)) : a.map((r) => [r, Of(e, r)])));
}
function Vb(e, t) {
  function a(...n) {
    return new Promise((r, s) => {
      Promise.resolve(e(() => t.apply(this, n), { fn: t, thisArg: this, args: n })).then(r).catch(s);
    });
  }
  return a;
}
const Nb = (e) => e();
function GD(e, t = {}) {
  let a, n, r = xs;
  const s = (l) => {
    clearTimeout(l), r(), r = xs;
  };
  let i;
  return (l) => {
    const d = Re(e), c = Re(t.maxWait);
    return a && s(a), d <= 0 || c !== void 0 && c <= 0 ? (n && (s(n), n = void 0), Promise.resolve(l())) : new Promise((f, p) => {
      r = t.rejectOnCancel ? p : f, i = l, c && !n && (n = setTimeout(() => {
        a && s(a), n = void 0, f(i());
      }, c)), a = setTimeout(() => {
        n && s(n), n = void 0, f(l());
      }, d);
    });
  };
}
function UD(...e) {
  let t = 0, a, n = !0, r = xs, s, i, o, l, d;
  !ht(e[0]) && typeof e[0] == "object" ? { delay: i, trailing: o = !0, leading: l = !0, rejectOnCancel: d = !1 } = e[0] : [i, o = !0, l = !0, d = !1] = e;
  const c = () => {
    a && (clearTimeout(a), a = void 0, r(), r = xs);
  };
  return (p) => {
    const g = Re(i), v = Date.now() - t, m = () => s = p();
    return c(), g <= 0 ? (t = Date.now(), m()) : (v > g && (l || !n) ? (t = Date.now(), m()) : o && (s = new Promise((y, x) => {
      r = d ? x : y, a = setTimeout(() => {
        t = Date.now(), n = !0, y(m()), c();
      }, Math.max(0, g - v));
    })), !l && !a && (a = setTimeout(() => n = !0, g)), n = !1, s);
  };
}
function Hb(e = Nb, t = {}) {
  const {
    initialState: a = "active"
  } = t, n = Of(a === "active");
  function r() {
    n.value = !1;
  }
  function s() {
    n.value = !0;
  }
  const i = (...o) => {
    n.value && e(...o);
  };
  return { isActive: Da(n), pause: r, resume: s, eventFilter: i };
}
function Lg(e) {
  return e.endsWith("rem") ? Number.parseFloat(e) * 16 : Number.parseFloat(e);
}
function No(e) {
  return Array.isArray(e) ? e : [e];
}
function WD(e) {
  const t = /* @__PURE__ */ Object.create(null);
  return (a) => t[a] || (t[a] = e(a));
}
const YD = /-(\w)/g, XD = WD((e) => e.replace(YD, (t, a) => a ? a.toUpperCase() : ""));
function JD(e) {
  return fa();
}
// @__NO_SIDE_EFFECTS__
function jb(e, t = 200, a = {}) {
  return Vb(
    GD(t, a),
    e
  );
}
function Kb(e, t, a = {}) {
  const {
    eventFilter: n = Nb,
    ...r
  } = a;
  return ye(
    e,
    Vb(
      n,
      t
    ),
    r
  );
}
function Gb(e, t, a = {}) {
  const {
    eventFilter: n,
    initialState: r = "active",
    ...s
  } = a, { eventFilter: i, pause: o, resume: l, isActive: d } = Hb(n, { initialState: r });
  return { stop: Kb(
    e,
    t,
    {
      ...s,
      eventFilter: i
    }
  ), pause: o, resume: l, isActive: d };
}
function Wl(e, t = !0, a) {
  JD() ? Pe(e, a) : t ? e() : Be(e);
}
function QD(e, t, a) {
  return ye(
    e,
    t,
    {
      ...a,
      immediate: !0
    }
  );
}
function Ub(e, t, a = {}) {
  const {
    throttle: n = 0,
    trailing: r = !0,
    leading: s = !0,
    ...i
  } = a;
  return Kb(
    e,
    t,
    {
      ...i,
      eventFilter: UD(n, r, s)
    }
  );
}
// @__NO_SIDE_EFFECTS__
function Lt(e = {}) {
  const {
    inheritAttrs: t = !0
  } = e, a = rt(), n = /* @__PURE__ */ L({
    setup(s, { slots: i }) {
      return () => {
        a.value = i.default;
      };
    }
  }), r = /* @__PURE__ */ L({
    inheritAttrs: t,
    props: e.props,
    setup(s, { attrs: i, slots: o }) {
      return () => {
        var l;
        if (!a.value && process.env.NODE_ENV !== "production")
          throw new Error("[VueUse] Failed to find the definition of reusable template");
        const d = (l = a.value) == null ? void 0 : l.call(a, {
          ...e.props == null ? ZD(i) : s,
          $slots: o
        });
        return t && d?.length === 1 ? d[0] : d;
      };
    }
  });
  return /* @__PURE__ */ qD(
    { define: n, reuse: r },
    [n, r]
  );
}
function ZD(e) {
  const t = {};
  for (const a in e)
    t[XD(a)] = e[a];
  return t;
}
const Qa = Ul ? window : void 0, eM = Ul ? window.document : void 0;
function Za(e) {
  var t;
  const a = Re(e);
  return (t = a?.$el) != null ? t : a;
}
function wt(...e) {
  const t = [], a = () => {
    t.forEach((o) => o()), t.length = 0;
  }, n = (o, l, d, c) => (o.addEventListener(l, d, c), () => o.removeEventListener(l, d, c)), r = T(() => {
    const o = No(Re(e[0])).filter((l) => l != null);
    return o.every((l) => typeof l != "string") ? o : void 0;
  }), s = QD(
    () => {
      var o, l;
      return [
        (l = (o = r.value) == null ? void 0 : o.map((d) => Za(d))) != null ? l : [Qa].filter((d) => d != null),
        No(Re(r.value ? e[1] : e[0])),
        No(u(r.value ? e[2] : e[1])),
        // @ts-expect-error - TypeScript gets the correct types, but somehow still complains
        Re(r.value ? e[3] : e[2])
      ];
    },
    ([o, l, d, c]) => {
      if (a(), !o?.length || !l?.length || !d?.length)
        return;
      const f = jD(c) ? { ...c } : c;
      t.push(
        ...o.flatMap(
          (p) => l.flatMap(
            (g) => d.map((v) => n(p, g, v, f))
          )
        )
      );
    },
    { flush: "post" }
  ), i = () => {
    s(), a();
  };
  return Bs(a), i;
}
// @__NO_SIDE_EFFECTS__
function tM() {
  const e = rt(!1), t = fa();
  return t && Pe(() => {
    e.value = !0;
  }, t), e;
}
// @__NO_SIDE_EFFECTS__
function Ff(e) {
  const t = /* @__PURE__ */ tM();
  return T(() => (t.value, !!e()));
}
function zf(e, t, a = {}) {
  const { window: n = Qa, ...r } = a;
  let s;
  const i = /* @__PURE__ */ Ff(() => n && "MutationObserver" in n), o = () => {
    s && (s.disconnect(), s = void 0);
  }, l = T(() => {
    const p = Re(e), g = No(p).map(Za).filter(ND);
    return new Set(g);
  }), d = ye(
    l,
    (p) => {
      o(), i.value && p.size && (s = new MutationObserver(t), p.forEach((g) => s.observe(g, r)));
    },
    { immediate: !0, flush: "post" }
  ), c = () => s?.takeRecords(), f = () => {
    d(), o();
  };
  return Bs(f), {
    isSupported: i,
    stop: f,
    takeRecords: c
  };
}
function aM(e, t, a = {}) {
  const {
    window: n = Qa,
    document: r = n?.document,
    flush: s = "sync"
  } = a;
  if (!n || !r)
    return xs;
  let i;
  const o = (c) => {
    i?.(), i = c;
  }, l = ot(() => {
    const c = Za(e);
    if (c) {
      const { stop: f } = zf(
        r,
        (p) => {
          p.map((v) => [...v.removedNodes]).flat().some((v) => v === c || v.contains(c)) && t(p);
        },
        {
          window: n,
          childList: !0,
          subtree: !0
        }
      );
      o(f);
    }
  }, { flush: s }), d = () => {
    l(), o();
  };
  return Bs(d), d;
}
// @__NO_SIDE_EFFECTS__
function nM(e = {}) {
  var t;
  const {
    window: a = Qa,
    deep: n = !0,
    triggerOnRemoval: r = !1
  } = e, s = (t = e.document) != null ? t : a?.document, i = () => {
    var d;
    let c = s?.activeElement;
    if (n)
      for (; c?.shadowRoot; )
        c = (d = c?.shadowRoot) == null ? void 0 : d.activeElement;
    return c;
  }, o = rt(), l = () => {
    o.value = i();
  };
  if (a) {
    const d = {
      capture: !0,
      passive: !0
    };
    wt(
      a,
      "blur",
      (c) => {
        c.relatedTarget === null && l();
      },
      d
    ), wt(
      a,
      "focus",
      l,
      d
    );
  }
  return r && aM(o, l, { document: s }), l(), o;
}
const rM = Symbol("vueuse-ssr-width");
// @__NO_SIDE_EFFECTS__
function sM() {
  const e = zc() ? /* @__PURE__ */ zD(rM, null) : null;
  return typeof e == "number" ? e : void 0;
}
function iM(e, t = {}) {
  const { window: a = Qa, ssrWidth: n = /* @__PURE__ */ sM() } = t, r = /* @__PURE__ */ Ff(() => a && "matchMedia" in a && typeof a.matchMedia == "function"), s = rt(typeof n == "number"), i = rt(), o = rt(!1), l = (d) => {
    o.value = d.matches;
  };
  return ot(() => {
    if (s.value) {
      s.value = !r.value;
      const d = Re(e).split(",");
      o.value = d.some((c) => {
        const f = c.includes("not all"), p = c.match(/\(\s*min-width:\s*(-?\d+(?:\.\d*)?[a-z]+\s*)\)/), g = c.match(/\(\s*max-width:\s*(-?\d+(?:\.\d*)?[a-z]+\s*)\)/);
        let v = !!(p || g);
        return p && v && (v = n >= Lg(p[1])), g && v && (v = n <= Lg(g[1])), f ? !v : v;
      });
      return;
    }
    r.value && (i.value = a.matchMedia(Re(e)), o.value = i.value.matches);
  }), wt(i, "change", l, { passive: !0 }), T(() => o.value);
}
function oM(e) {
  return JSON.parse(JSON.stringify(e));
}
const po = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {}, go = "__vueuse_ssr_handlers__", lM = /* @__PURE__ */ uM();
function uM() {
  return go in po || (po[go] = po[go] || {}), po[go];
}
function Wb(e, t) {
  return lM[e] || t;
}
// @__NO_SIDE_EFFECTS__
function dM(e) {
  return iM("(prefers-color-scheme: dark)", e);
}
function cM(e) {
  return e == null ? "any" : e instanceof Set ? "set" : e instanceof Map ? "map" : e instanceof Date ? "date" : typeof e == "boolean" ? "boolean" : typeof e == "string" ? "string" : typeof e == "object" ? "object" : Number.isNaN(e) ? "any" : "number";
}
const fM = {
  boolean: {
    read: (e) => e === "true",
    write: (e) => String(e)
  },
  object: {
    read: (e) => JSON.parse(e),
    write: (e) => JSON.stringify(e)
  },
  number: {
    read: (e) => Number.parseFloat(e),
    write: (e) => String(e)
  },
  any: {
    read: (e) => e,
    write: (e) => String(e)
  },
  string: {
    read: (e) => e,
    write: (e) => String(e)
  },
  map: {
    read: (e) => new Map(JSON.parse(e)),
    write: (e) => JSON.stringify(Array.from(e.entries()))
  },
  set: {
    read: (e) => new Set(JSON.parse(e)),
    write: (e) => JSON.stringify(Array.from(e))
  },
  date: {
    read: (e) => new Date(e),
    write: (e) => e.toISOString()
  }
}, Og = "vueuse-storage";
function Yb(e, t, a, n = {}) {
  var r;
  const {
    flush: s = "pre",
    deep: i = !0,
    listenToStorageChanges: o = !0,
    writeDefaults: l = !0,
    mergeDefaults: d = !1,
    shallow: c,
    window: f = Qa,
    eventFilter: p,
    onError: g = (K) => {
      console.error(K);
    },
    initOnMounted: v
  } = n, m = (c ? rt : N)(typeof t == "function" ? t() : t), y = T(() => Re(e));
  if (!a)
    try {
      a = Wb("getDefaultStorage", () => {
        var K;
        return (K = Qa) == null ? void 0 : K.localStorage;
      })();
    } catch (K) {
      g(K);
    }
  if (!a)
    return m;
  const x = Re(t), b = cM(x), C = (r = n.serializer) != null ? r : fM[b], { pause: w, resume: $ } = Gb(
    m,
    (K) => R(K),
    { flush: s, deep: i, eventFilter: p }
  );
  ye(y, () => H(), { flush: s });
  let B = !1;
  const I = (K) => {
    v && !B || H(K);
  }, E = (K) => {
    v && !B || j(K);
  };
  f && o && (a instanceof Storage ? wt(f, "storage", I, { passive: !0 }) : wt(f, Og, E)), v ? Wl(() => {
    B = !0, H();
  }) : H();
  function P(K, z) {
    if (f) {
      const G = {
        key: y.value,
        oldValue: K,
        newValue: z,
        storageArea: a
      };
      f.dispatchEvent(a instanceof Storage ? new StorageEvent("storage", G) : new CustomEvent(Og, {
        detail: G
      }));
    }
  }
  function R(K) {
    try {
      const z = a.getItem(y.value);
      if (K == null)
        P(z, null), a.removeItem(y.value);
      else {
        const G = C.write(K);
        z !== G && (a.setItem(y.value, G), P(z, G));
      }
    } catch (z) {
      g(z);
    }
  }
  function F(K) {
    const z = K ? K.newValue : a.getItem(y.value);
    if (z == null)
      return l && x != null && a.setItem(y.value, C.write(x)), x;
    if (!K && d) {
      const G = C.read(z);
      return typeof d == "function" ? d(G, x) : b === "object" && !Array.isArray(G) ? { ...x, ...G } : G;
    } else return typeof z != "string" ? z : C.read(z);
  }
  function H(K) {
    if (!(K && K.storageArea !== a)) {
      if (K && K.key == null) {
        m.value = x;
        return;
      }
      if (!(K && K.key !== y.value)) {
        w();
        try {
          const z = C.write(m.value);
          (K === void 0 || K?.newValue !== z) && (m.value = F(K));
        } catch (z) {
          g(z);
        } finally {
          K ? Be($) : $();
        }
      }
    }
  }
  function j(K) {
    H(K.detail);
  }
  return m;
}
const pM = "*,*::before,*::after{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}";
function gM(e = {}) {
  const {
    selector: t = "html",
    attribute: a = "class",
    initialValue: n = "auto",
    window: r = Qa,
    storage: s,
    storageKey: i = "vueuse-color-scheme",
    listenToStorageChanges: o = !0,
    storageRef: l,
    emitAuto: d,
    disableTransition: c = !0
  } = e, f = {
    auto: "",
    light: "light",
    dark: "dark",
    ...e.modes || {}
  }, p = /* @__PURE__ */ dM({ window: r }), g = T(() => p.value ? "dark" : "light"), v = l || (i == null ? Of(n) : Yb(i, n, s, { window: r, listenToStorageChanges: o })), m = T(() => v.value === "auto" ? g.value : v.value), y = Wb(
    "updateHTMLAttrs",
    (w, $, B) => {
      const I = typeof w == "string" ? r?.document.querySelector(w) : Za(w);
      if (!I)
        return;
      const E = /* @__PURE__ */ new Set(), P = /* @__PURE__ */ new Set();
      let R = null;
      if ($ === "class") {
        const H = B.split(/\s/g);
        Object.values(f).flatMap((j) => (j || "").split(/\s/g)).filter(Boolean).forEach((j) => {
          H.includes(j) ? E.add(j) : P.add(j);
        });
      } else
        R = { key: $, value: B };
      if (E.size === 0 && P.size === 0 && R === null)
        return;
      let F;
      c && (F = r.document.createElement("style"), F.appendChild(document.createTextNode(pM)), r.document.head.appendChild(F));
      for (const H of E)
        I.classList.add(H);
      for (const H of P)
        I.classList.remove(H);
      R && I.setAttribute(R.key, R.value), c && (r.getComputedStyle(F).opacity, document.head.removeChild(F));
    }
  );
  function x(w) {
    var $;
    y(t, a, ($ = f[w]) != null ? $ : w);
  }
  function b(w) {
    e.onChanged ? e.onChanged(w, x) : x(w);
  }
  ye(m, b, { flush: "post", immediate: !0 }), Wl(() => b(m.value));
  const C = T({
    get() {
      return d ? v.value : m.value;
    },
    set(w) {
      v.value = w;
    }
  });
  return Object.assign(C, { store: v, system: g, state: m });
}
function vM(e, t = {}) {
  var a, n;
  const r = rt(!1), s = rt(null);
  let i = 0, o = !0;
  if (Ul) {
    const l = typeof t == "function" ? { onDrop: t } : t, d = (a = l.multiple) != null ? a : !0, c = (n = l.preventDefaultForUnhandled) != null ? n : !1, f = (y) => {
      var x, b;
      const C = Array.from((b = (x = y.dataTransfer) == null ? void 0 : x.files) != null ? b : []);
      return C.length === 0 ? null : d ? C : [C[0]];
    }, p = (y) => {
      const x = u(l.dataTypes);
      return typeof x == "function" ? x(y) : x?.length ? y.length === 0 ? !1 : y.every(
        (b) => x.some((C) => b.includes(C))
      ) : !0;
    }, g = (y) => {
      const x = Array.from(y ?? []).map((w) => w.type), b = p(x), C = d || y.length <= 1;
      return b && C;
    }, v = () => /^(?:(?!chrome|android).)*safari/i.test(navigator.userAgent) && !("chrome" in window), m = (y, x) => {
      var b, C, w, $, B, I;
      const E = (b = y.dataTransfer) == null ? void 0 : b.items;
      if (o = (C = E && g(E)) != null ? C : !1, c && y.preventDefault(), !v() && !o) {
        y.dataTransfer && (y.dataTransfer.dropEffect = "none");
        return;
      }
      y.preventDefault(), y.dataTransfer && (y.dataTransfer.dropEffect = "copy");
      const P = f(y);
      switch (x) {
        case "enter":
          i += 1, r.value = !0, (w = l.onEnter) == null || w.call(l, null, y);
          break;
        case "over":
          ($ = l.onOver) == null || $.call(l, null, y);
          break;
        case "leave":
          i -= 1, i === 0 && (r.value = !1), (B = l.onLeave) == null || B.call(l, null, y);
          break;
        case "drop":
          i = 0, r.value = !1, o && (s.value = P, (I = l.onDrop) == null || I.call(l, P, y));
          break;
      }
    };
    wt(e, "dragenter", (y) => m(y, "enter")), wt(e, "dragover", (y) => m(y, "over")), wt(e, "dragleave", (y) => m(y, "leave")), wt(e, "drop", (y) => m(y, "drop"));
  }
  return {
    files: s,
    isOverDropZone: r
  };
}
function Xb(e, t, a = {}) {
  const { window: n = Qa, ...r } = a;
  let s;
  const i = /* @__PURE__ */ Ff(() => n && "ResizeObserver" in n), o = () => {
    s && (s.disconnect(), s = void 0);
  }, l = T(() => {
    const f = Re(e);
    return Array.isArray(f) ? f.map((p) => Za(p)) : [Za(f)];
  }), d = ye(
    l,
    (f) => {
      if (o(), i.value && n) {
        s = new ResizeObserver(t);
        for (const p of f)
          p && s.observe(p, r);
      }
    },
    { immediate: !0, flush: "post" }
  ), c = () => {
    o(), d();
  };
  return Bs(c), {
    isSupported: i,
    stop: c
  };
}
function Pd(e, t = {}) {
  const {
    reset: a = !0,
    windowResize: n = !0,
    windowScroll: r = !0,
    immediate: s = !0,
    updateTiming: i = "sync"
  } = t, o = rt(0), l = rt(0), d = rt(0), c = rt(0), f = rt(0), p = rt(0), g = rt(0), v = rt(0);
  function m() {
    const x = Za(e);
    if (!x) {
      a && (o.value = 0, l.value = 0, d.value = 0, c.value = 0, f.value = 0, p.value = 0, g.value = 0, v.value = 0);
      return;
    }
    const b = x.getBoundingClientRect();
    o.value = b.height, l.value = b.bottom, d.value = b.left, c.value = b.right, f.value = b.top, p.value = b.width, g.value = b.x, v.value = b.y;
  }
  function y() {
    i === "sync" ? m() : i === "next-frame" && requestAnimationFrame(() => m());
  }
  return Xb(e, y), ye(() => Za(e), (x) => !x && y()), zf(e, y, {
    attributeFilter: ["style", "class"]
  }), r && wt("scroll", y, { capture: !0, passive: !0 }), n && wt("resize", y, { passive: !0 }), Wl(() => {
    s && y();
  }), {
    height: o,
    bottom: l,
    left: d,
    right: c,
    top: f,
    width: p,
    x: g,
    y: v,
    update: y
  };
}
const Gs = /* @__PURE__ */ new Map();
// @__NO_SIDE_EFFECTS__
function hM(e) {
  const t = Il();
  function a(o) {
    var l;
    const d = Gs.get(e) || /* @__PURE__ */ new Set();
    d.add(o), Gs.set(e, d);
    const c = () => r(o);
    return (l = t?.cleanups) == null || l.push(c), c;
  }
  function n(o) {
    function l(...d) {
      r(l), o(...d);
    }
    return a(l);
  }
  function r(o) {
    const l = Gs.get(e);
    l && (l.delete(o), l.size || s());
  }
  function s() {
    Gs.delete(e);
  }
  function i(o, l) {
    var d;
    (d = Gs.get(e)) == null || d.forEach((c) => c(o, l));
  }
  return { on: a, once: n, off: r, emit: i, reset: s };
}
const mM = {
  multiple: !0,
  accept: "*",
  reset: !1,
  directory: !1
};
function yM(e) {
  if (!e)
    return null;
  if (e instanceof FileList)
    return e;
  const t = new DataTransfer();
  for (const a of e)
    t.items.add(a);
  return t.files;
}
function bM(e = {}) {
  const {
    document: t = eM
  } = e, a = N(yM(e.initialFiles)), { on: n, trigger: r } = /* @__PURE__ */ Rg(), { on: s, trigger: i } = /* @__PURE__ */ Rg(), o = T(() => {
    var f;
    const p = (f = Za(e.input)) != null ? f : t ? t.createElement("input") : void 0;
    return p && (p.type = "file", p.onchange = (g) => {
      const v = g.target;
      a.value = v.files, r(a.value);
    }, p.oncancel = () => {
      i();
    }), p;
  }), l = () => {
    a.value = null, o.value && o.value.value && (o.value.value = "", r(null));
  }, d = (f) => {
    const p = o.value;
    p && (p.multiple = Re(f.multiple), p.accept = Re(f.accept), p.webkitdirectory = Re(f.directory), KD(f, "capture") && (p.capture = Re(f.capture)));
  }, c = (f) => {
    const p = o.value;
    if (!p)
      return;
    const g = {
      ...mM,
      ...e,
      ...f
    };
    d(g), Re(g.reset) && l(), p.click();
  };
  return ot(() => {
    d(e);
  }), {
    files: Da(a),
    open: c,
    reset: l,
    onCancel: s,
    onChange: n
  };
}
const wM = {
  page: (e) => [e.pageX, e.pageY],
  client: (e) => [e.clientX, e.clientY],
  screen: (e) => [e.screenX, e.screenY],
  movement: (e) => e instanceof MouseEvent ? [e.movementX, e.movementY] : null
};
function CM(e = {}) {
  const {
    type: t = "page",
    touch: a = !0,
    resetOnTouchEnds: n = !1,
    initialValue: r = { x: 0, y: 0 },
    window: s = Qa,
    target: i = s,
    scroll: o = !0,
    eventFilter: l
  } = e;
  let d = null, c = 0, f = 0;
  const p = rt(r.x), g = rt(r.y), v = rt(null), m = typeof t == "function" ? t : wM[t], y = (I) => {
    const E = m(I);
    d = I, E && ([p.value, g.value] = E, v.value = "mouse"), s && (c = s.scrollX, f = s.scrollY);
  }, x = (I) => {
    if (I.touches.length > 0) {
      const E = m(I.touches[0]);
      E && ([p.value, g.value] = E, v.value = "touch");
    }
  }, b = () => {
    if (!d || !s)
      return;
    const I = m(d);
    d instanceof MouseEvent && I && (p.value = I[0] + s.scrollX - c, g.value = I[1] + s.scrollY - f);
  }, C = () => {
    p.value = r.x, g.value = r.y;
  }, w = l ? (I) => l(() => y(I), {}) : (I) => y(I), $ = l ? (I) => l(() => x(I), {}) : (I) => x(I), B = l ? () => l(() => b(), {}) : () => b();
  if (i) {
    const I = { passive: !0 };
    wt(i, ["mousemove", "dragover"], w, I), a && t !== "movement" && (wt(i, ["touchstart", "touchmove"], $, I), n && wt(i, "touchend", C, I)), o && t === "page" && wt(s, "scroll", B, I);
  }
  return {
    x: p,
    y: g,
    sourceType: v
  };
}
function xM(e, t = {}) {
  const {
    windowResize: a = !0,
    windowScroll: n = !0,
    handleOutside: r = !0,
    window: s = Qa
  } = t, i = t.type || "page", { x: o, y: l, sourceType: d } = CM(t), c = rt(e ?? s?.document.body), f = rt(0), p = rt(0), g = rt(0), v = rt(0), m = rt(0), y = rt(0), x = rt(!0);
  function b() {
    if (!s)
      return;
    const $ = Za(c);
    if (!$ || !($ instanceof Element))
      return;
    const {
      left: B,
      top: I,
      width: E,
      height: P
    } = $.getBoundingClientRect();
    g.value = B + (i === "page" ? s.pageXOffset : 0), v.value = I + (i === "page" ? s.pageYOffset : 0), m.value = P, y.value = E;
    const R = o.value - g.value, F = l.value - v.value;
    x.value = E === 0 || P === 0 || R < 0 || F < 0 || R > E || F > P, (r || !x.value) && (f.value = R, p.value = F);
  }
  const C = [];
  function w() {
    C.forEach(($) => $()), C.length = 0;
  }
  if (Wl(() => {
    b();
  }), s) {
    const {
      stop: $
    } = Xb(c, b), {
      stop: B
    } = zf(c, b, {
      attributeFilter: ["style", "class"]
    }), I = ye(
      [c, o, l],
      b
    );
    C.push(
      $,
      B,
      I
    ), wt(
      document,
      "mouseleave",
      () => x.value = !0,
      { passive: !0 }
    ), n && C.push(
      wt("scroll", b, { capture: !0, passive: !0 })
    ), a && C.push(
      wt("resize", b, { passive: !0 })
    );
  }
  return {
    x: o,
    y: l,
    sourceType: d,
    elementX: f,
    elementY: p,
    elementPositionX: g,
    elementPositionY: v,
    elementHeight: m,
    elementWidth: y,
    isOutside: x,
    stop: w
  };
}
// @__NO_SIDE_EFFECTS__
function qf(e, t, a, n = {}) {
  var r, s, i;
  const {
    clone: o = !1,
    passive: l = !1,
    eventName: d,
    deep: c = !1,
    defaultValue: f,
    shouldEmit: p
  } = n, g = fa(), v = a || g?.emit || ((r = g?.$emit) == null ? void 0 : r.bind(g)) || ((i = (s = g?.proxy) == null ? void 0 : s.$emit) == null ? void 0 : i.bind(g?.proxy));
  let m = d;
  m = m || `update:${t.toString()}`;
  const y = (C) => o ? typeof o == "function" ? o(C) : oM(C) : C, x = () => Bd(e[t]) ? y(e[t]) : f, b = (C) => {
    p ? p(C) && v(m, C) : v(m, C);
  };
  if (l) {
    const C = x(), w = N(C);
    let $ = !1;
    return ye(
      () => e[t],
      (B) => {
        $ || ($ = !0, w.value = y(B), Be(() => $ = !1));
      }
    ), ye(
      w,
      (B) => {
        !$ && (B !== e[t] || c) && b(B);
      },
      { deep: c }
    ), w;
  } else
    return T({
      get() {
        return x();
      },
      set(C) {
        b(C);
      }
    });
}
function Dd(e, t = {}, a) {
  for (const n in e) {
    const r = e[n], s = a ? `${a}:${n}` : n;
    typeof r == "object" && r !== null ? Dd(r, t, s) : typeof r == "function" && (t[s] = r);
  }
  return t;
}
const SM = { run: (e) => e() }, _M = () => SM, Jb = typeof console.createTask < "u" ? console.createTask : _M;
function kM(e, t) {
  const a = t.shift(), n = Jb(a);
  return e.reduce(
    (r, s) => r.then(() => n.run(() => s(...t))),
    Promise.resolve()
  );
}
function AM(e, t) {
  const a = t.shift(), n = Jb(a);
  return Promise.all(e.map((r) => n.run(() => r(...t))));
}
function Su(e, t) {
  for (const a of [...e])
    a(t);
}
class $M {
  constructor() {
    this._hooks = {}, this._before = void 0, this._after = void 0, this._deprecatedMessages = void 0, this._deprecatedHooks = {}, this.hook = this.hook.bind(this), this.callHook = this.callHook.bind(this), this.callHookWith = this.callHookWith.bind(this);
  }
  hook(t, a, n = {}) {
    if (!t || typeof a != "function")
      return () => {
      };
    const r = t;
    let s;
    for (; this._deprecatedHooks[t]; )
      s = this._deprecatedHooks[t], t = s.to;
    if (s && !n.allowDeprecated) {
      let i = s.message;
      i || (i = `${r} hook has been deprecated` + (s.to ? `, please use ${s.to}` : "")), this._deprecatedMessages || (this._deprecatedMessages = /* @__PURE__ */ new Set()), this._deprecatedMessages.has(i) || (console.warn(i), this._deprecatedMessages.add(i));
    }
    if (!a.name)
      try {
        Object.defineProperty(a, "name", {
          get: () => "_" + t.replace(/\W+/g, "_") + "_hook_cb",
          configurable: !0
        });
      } catch {
      }
    return this._hooks[t] = this._hooks[t] || [], this._hooks[t].push(a), () => {
      a && (this.removeHook(t, a), a = void 0);
    };
  }
  hookOnce(t, a) {
    let n, r = (...s) => (typeof n == "function" && n(), n = void 0, r = void 0, a(...s));
    return n = this.hook(t, r), n;
  }
  removeHook(t, a) {
    if (this._hooks[t]) {
      const n = this._hooks[t].indexOf(a);
      n !== -1 && this._hooks[t].splice(n, 1), this._hooks[t].length === 0 && delete this._hooks[t];
    }
  }
  deprecateHook(t, a) {
    this._deprecatedHooks[t] = typeof a == "string" ? { to: a } : a;
    const n = this._hooks[t] || [];
    delete this._hooks[t];
    for (const r of n)
      this.hook(t, r);
  }
  deprecateHooks(t) {
    Object.assign(this._deprecatedHooks, t);
    for (const a in t)
      this.deprecateHook(a, t[a]);
  }
  addHooks(t) {
    const a = Dd(t), n = Object.keys(a).map(
      (r) => this.hook(r, a[r])
    );
    return () => {
      for (const r of n.splice(0, n.length))
        r();
    };
  }
  removeHooks(t) {
    const a = Dd(t);
    for (const n in a)
      this.removeHook(n, a[n]);
  }
  removeAllHooks() {
    for (const t in this._hooks)
      delete this._hooks[t];
  }
  callHook(t, ...a) {
    return a.unshift(t), this.callHookWith(kM, t, ...a);
  }
  callHookParallel(t, ...a) {
    return a.unshift(t), this.callHookWith(AM, t, ...a);
  }
  callHookWith(t, a, ...n) {
    const r = this._before || this._after ? { name: a, args: n, context: {} } : void 0;
    this._before && Su(this._before, r);
    const s = t(
      a in this._hooks ? [...this._hooks[a]] : [],
      n
    );
    return s instanceof Promise ? s.finally(() => {
      this._after && r && Su(this._after, r);
    }) : (this._after && r && Su(this._after, r), s);
  }
  beforeEach(t) {
    return this._before = this._before || [], this._before.push(t), () => {
      if (this._before !== void 0) {
        const a = this._before.indexOf(t);
        a !== -1 && this._before.splice(a, 1);
      }
    };
  }
  afterEach(t) {
    return this._after = this._after || [], this._after.push(t), () => {
      if (this._after !== void 0) {
        const a = this._after.indexOf(t);
        a !== -1 && this._after.splice(a, 1);
      }
    };
  }
}
function IM() {
  return new $M();
}
const Vf = {
  ui: {
    icons: {
      dark: "i-lucide-moon",
      light: "i-lucide-sun"
    }
  },
  colorMode: {
    preference: "system"
  }
};
function Md(e, t, a) {
  typeof e === "function" && (!a || a !== "titleTemplate" && !(a[0] === "o" && a[1] === "n")) && (e = e());
  let r;
  if (t && (r = t(a, e)), Array.isArray(r))
    return r.map((s) => Md(s, t));
  if (r?.constructor === Object) {
    const s = {};
    for (const i of Object.keys(r))
      s[i] = Md(r[i], t, i);
    return s;
  }
  return r;
}
const EM = (e, t) => ht(t) ? Re(t) : t, TM = "usehead";
function BM() {
  if (zc()) {
    const e = Zt(TM);
    if (!e)
      throw new Error("useHead() was called without provide context, ensure you call it through the setup() function.");
    return e;
  }
  throw new Error("useHead() was called without provide context, ensure you call it through the setup() function.");
}
function PM(e, t = {}) {
  const a = t.head || BM();
  return a.ssr ? a.push(e || {}, t) : DM(a, e, t);
}
function DM(e, t, a = {}) {
  const n = N(!1);
  let r;
  return ot(() => {
    const i = n.value ? {} : Md(t, EM);
    r ? r.patch(i) : r = e.push(i, a);
  }), fa() && (Di(() => {
    r.dispose();
  }), oC(() => {
    n.value = !0;
  }), lC(() => {
    n.value = !1;
  })), r;
}
/*!
  * vue-router v4.5.1
  * (c) 2025 Eduardo San Martin Morote
  * @license MIT
  */
var Fg;
(function(e) {
  e.pop = "pop", e.push = "push";
})(Fg || (Fg = {}));
var zg;
(function(e) {
  e.back = "back", e.forward = "forward", e.unknown = "";
})(zg || (zg = {}));
Symbol(process.env.NODE_ENV !== "production" ? "navigation failure" : "");
var qg;
(function(e) {
  e[e.aborted = 4] = "aborted", e[e.cancelled = 8] = "cancelled", e[e.duplicated = 16] = "duplicated";
})(qg || (qg = {}));
Symbol(process.env.NODE_ENV !== "production" ? "router view location matched" : "");
Symbol(process.env.NODE_ENV !== "production" ? "router view depth" : "");
Symbol(process.env.NODE_ENV !== "production" ? "router" : "");
const MM = Symbol(process.env.NODE_ENV !== "production" ? "route location" : "");
Symbol(process.env.NODE_ENV !== "production" ? "router view location" : "");
function Nf(e) {
  return Zt(MM);
}
const RM = ba(Vf), ue = () => RM, vo = {
  meta: "",
  ctrl: "",
  alt: "",
  win: "⊞",
  command: "⌘",
  shift: "⇧",
  control: "⌃",
  option: "⌥",
  enter: "↵",
  delete: "⌦",
  backspace: "⌫",
  escape: "⎋",
  tab: "⇥",
  capslock: "⇪",
  arrowup: "↑",
  arrowright: "→",
  arrowdown: "↓",
  arrowleft: "←",
  pageup: "⇞",
  pagedown: "⇟",
  home: "↖",
  end: "↘"
}, LM = () => {
  const e = T(() => import.meta.client && navigator && navigator.userAgent && navigator.userAgent.match(/Macintosh;/)), t = ba({
    meta: " ",
    alt: " ",
    ctrl: " "
  });
  Pe(() => {
    t.meta = e.value ? vo.command : "Ctrl", t.ctrl = e.value ? vo.control : "Ctrl", t.alt = e.value ? vo.option : "Alt";
  });
  function a(n) {
    if (n)
      return ["meta", "alt", "ctrl"].includes(n) ? t[n] : vo[n] || n.toUpperCase();
  }
  return {
    macOS: e,
    getKbdKey: a
  };
}, Qb = /* @__PURE__ */ Lf(LM), OM = /^[^-]+.*-.*[^-]+$/, FM = /^[^_]+.*_.*[^_]+$/, zM = ["arrowleft", "arrowright", "arrowup", "arrowright", "tab", "escape", "enter", "backspace"];
function qM(e, t = {}) {
  const a = N([]), n = () => {
    a.value.splice(0, a.value.length);
  }, r = /* @__PURE__ */ jb(n, t.chainDelay ?? 800), { macOS: s } = Qb(), i = /* @__PURE__ */ nM(), o = (c) => {
    if (!c.key)
      return;
    const f = /^[a-z]{1}$/i.test(c.key), p = zM.includes(c.key.toLowerCase());
    let g;
    if (a.value.push(c.key), a.value.length >= 2) {
      g = a.value.slice(-2).join("-");
      for (const v of d.value.filter((m) => m.chained))
        if (v.key === g) {
          v.enabled && (c.preventDefault(), v.handler(c)), n();
          return;
        }
    }
    for (const v of d.value.filter((m) => !m.chained))
      if (c.key.toLowerCase() === v.key && c.metaKey === v.metaKey && c.ctrlKey === v.ctrlKey && !((f || p) && c.shiftKey !== v.shiftKey)) {
        v.enabled && (c.preventDefault(), v.handler(c)), n();
        return;
      }
    r();
  }, l = T(() => {
    const c = i.value?.tagName, f = i.value?.contentEditable;
    return c === "INPUT" || c === "TEXTAREA" || f === "true" || f === "plaintext-only" ? i.value?.name || !0 : !1;
  }), d = T(() => Object.entries(Re(e)).map(([c, f]) => {
    if (!f)
      return null;
    let p;
    c.includes("-") && c !== "-" && !c.includes("_") && !c.match(OM)?.length && console.trace(`[Shortcut] Invalid key: "${c}"`), c.includes("_") && c !== "_" && !c.match(FM)?.length && console.trace(`[Shortcut] Invalid key: "${c}"`);
    const g = c.includes("-") && c !== "-" && !c.includes("_");
    if (g)
      p = {
        key: c.toLowerCase(),
        metaKey: !1,
        ctrlKey: !1,
        shiftKey: !1,
        altKey: !1
      };
    else {
      const m = c.toLowerCase().split("_").map((y) => y);
      p = {
        key: m.filter((y) => !["meta", "command", "ctrl", "shift", "alt", "option"].includes(y)).join("_"),
        metaKey: m.includes("meta") || m.includes("command"),
        ctrlKey: m.includes("ctrl"),
        shiftKey: m.includes("shift"),
        altKey: m.includes("alt") || m.includes("option")
      };
    }
    if (p.chained = g, !s.value && p.metaKey && !p.ctrlKey && (p.metaKey = !1, p.ctrlKey = !0), typeof f == "function" ? p.handler = f : typeof f == "object" && (p = { ...p, handler: f.handler }), !p.handler)
      return console.trace("[Shortcut] Invalid value"), null;
    let v = !0;
    return f.usingInput ? typeof f.usingInput == "string" && (v = l.value === f.usingInput) : v = !l.value, p.enabled = v, p;
  }).filter(Boolean));
  return wt("keydown", o);
}
// @__NO_SIDE_EFFECTS__
function VM(e) {
  return Ct(e, { dir: "ltr" });
}
function NM(e, t) {
  const a = Rd(e), n = Rd(t);
  return Zb(a, n);
}
function Zb(e, t) {
  const a = [], n = /* @__PURE__ */ new Set([
    ...Object.keys(e.props || {}),
    ...Object.keys(t.props || {})
  ]);
  if (e.props && t.props)
    for (const r of n) {
      const s = e.props[r], i = t.props[r];
      s && i ? a.push(...Zb(e.props?.[r], t.props?.[r])) : (s || i) && a.push(
        new Vg((i || s).key, s ? "removed" : "added", i, s)
      );
    }
  return n.size === 0 && e.hash !== t.hash && a.push(new Vg((t || e).key, "changed", t, e)), a;
}
function Rd(e, t = "") {
  if (e && typeof e != "object")
    return new Ng(t, e, nd(e));
  const a = {}, n = [];
  for (const r in e)
    a[r] = Rd(e[r], t ? `${t}.${r}` : r), n.push(a[r].hash);
  return new Ng(t, e, `{${n.join(":")}}`, a);
}
class Vg {
  constructor(t, a, n, r) {
    this.key = t, this.type = a, this.newValue = n, this.oldValue = r;
  }
  toString() {
    return this.toJSON();
  }
  toJSON() {
    switch (this.type) {
      case "added":
        return `Added   \`${this.key}\``;
      case "removed":
        return `Removed \`${this.key}\``;
      case "changed":
        return `Changed \`${this.key}\` from \`${this.oldValue?.toString() || "-"}\` to \`${this.newValue.toString()}\``;
    }
  }
}
class Ng {
  constructor(t, a, n, r) {
    this.key = t, this.value = a, this.hash = n, this.props = r;
  }
  toString() {
    return this.props ? `{${Object.keys(this.props).join(",")}}` : JSON.stringify(this.value);
  }
  toJSON() {
    const t = this.key || ".";
    return this.props ? `${t}({${Object.keys(this.props).join(",")}})` : `${t}(${this.value})`;
  }
}
function Mt(e, t) {
  const a = { ...e };
  for (const n of t)
    delete a[n];
  return a;
}
function qe(e, t, a) {
  typeof t == "string" && (t = t.split(".").map((r) => {
    const s = Number(r);
    return Number.isNaN(s) ? r : s;
  }));
  let n = e;
  for (const r of t) {
    if (n == null)
      return a;
    n = n[r];
  }
  return n !== void 0 ? n : a;
}
function Hf(e) {
  const t = Number.parseFloat(e);
  return Number.isNaN(t) ? e : t;
}
function jf(e, t, a) {
  return e === void 0 || t === void 0 ? !1 : typeof e == "string" ? e === t : typeof a == "function" ? a(e, t) : typeof a == "string" ? qe(e, a) === qe(t, a) : ca(e, t);
}
function Hg(e) {
  if (e == null)
    return !0;
  if (typeof e == "boolean" || typeof e == "number")
    return !1;
  if (typeof e == "string")
    return e.trim().length === 0;
  if (Array.isArray(e))
    return e.length === 0;
  if (e instanceof Map || e instanceof Set)
    return e.size === 0;
  if (e instanceof Date || e instanceof RegExp || typeof e == "function")
    return !1;
  if (typeof e == "object") {
    for (const t in e)
      if (Object.prototype.hasOwnProperty.call(e, t))
        return !1;
    return !0;
  }
  return !1;
}
function xi(e, t, a = {}) {
  const { valueKey: n, labelKey: r } = a, s = e.find((o) => {
    const l = typeof o == "object" && o !== null && n ? qe(o, n) : o;
    return jf(l, t);
  });
  if (Hg(t) && s)
    return r ? qe(s, r) : void 0;
  if (Hg(t))
    return;
  const i = s ?? t;
  if (i != null)
    return typeof i == "object" ? r ? qe(i, r) : void 0 : String(i);
}
function Ps(e) {
  return Array.isArray(e[0]);
}
function cl(e, t) {
  return !e && !t ? "" : [
    ...Array.isArray(e) ? e : [e],
    t
  ].filter(Boolean);
}
function Er(e) {
  return e.map((t) => {
    if (!t.children || typeof t.children == "string") return t.children || "";
    if (Array.isArray(t.children)) return Er(t.children);
    if (t.children.default) return Er(t.children.default());
  }).join("");
}
function Yl(e, t) {
  return Object.entries(e).reduce((a, [n, r]) => (a[n] = typeof r == "function" ? r({ class: t?.[n] }) : r, a), t || {});
}
function HM(e) {
  return (t, a) => jM(t, a, u(e));
}
function jM(e, t, a) {
  return qe(a, `messages.${e}`, e).replace(
    /\{(\w+)\}/g,
    (r, s) => `${t?.[s] ?? `{${s}}`}`
  );
}
function KM(e) {
  const t = T(() => u(e).name), a = T(() => u(e).code), n = T(() => u(e).dir), r = ht(e) ? e : N(e);
  return {
    lang: t,
    code: a,
    dir: n,
    locale: r,
    t: HM(e)
  };
}
const jg = /* @__PURE__ */ VM({
  name: "English",
  code: "en",
  messages: {
    alert: {
      close: "Close"
    },
    authForm: {
      hidePassword: "Hide password",
      showPassword: "Show password",
      submit: "Continue"
    },
    banner: {
      close: "Close"
    },
    calendar: {
      nextMonth: "Next month",
      nextYear: "Next year",
      prevMonth: "Previous month",
      prevYear: "Previous year"
    },
    carousel: {
      dots: "Choose slide to display",
      goto: "Go to slide {slide}",
      next: "Next",
      prev: "Prev"
    },
    chatPrompt: {
      placeholder: "Type your message here..."
    },
    chatPromptSubmit: {
      label: "Send prompt"
    },
    colorMode: {
      dark: "Dark",
      light: "Light",
      switchToDark: "Switch to dark mode",
      switchToLight: "Switch to light mode",
      system: "System"
    },
    commandPalette: {
      back: "Back",
      close: "Close",
      noData: "No data",
      noMatch: "No matching data",
      placeholder: "Type a command or search..."
    },
    contentSearch: {
      links: "Links",
      theme: "Theme"
    },
    contentSearchButton: {
      label: "Search..."
    },
    contentToc: {
      title: "On this page"
    },
    dashboardSearch: {
      theme: "Theme"
    },
    dashboardSearchButton: {
      label: "Search..."
    },
    dashboardSidebarCollapse: {
      collapse: "Collapse sidebar",
      expand: "Expand sidebar"
    },
    dashboardSidebarToggle: {
      close: "Close sidebar",
      open: "Open sidebar"
    },
    error: {
      clear: "Back to home"
    },
    fileUpload: {
      removeFile: "Remove {filename}"
    },
    header: {
      close: "Close menu",
      open: "Open menu"
    },
    inputMenu: {
      create: 'Create "{label}"',
      noData: "No data",
      noMatch: "No matching data"
    },
    inputNumber: {
      decrement: "Decrement",
      increment: "Increment"
    },
    modal: {
      close: "Close"
    },
    pricingTable: {
      caption: "Pricing plan comparison"
    },
    prose: {
      codeCollapse: {
        closeText: "Collapse",
        name: "code",
        openText: "Expand"
      },
      collapsible: {
        closeText: "Hide",
        name: "properties",
        openText: "Show"
      },
      pre: {
        copy: "Copy code to clipboard"
      }
    },
    selectMenu: {
      create: 'Create "{label}"',
      noData: "No data",
      noMatch: "No matching data",
      search: "Search..."
    },
    slideover: {
      close: "Close"
    },
    table: {
      noData: "No data"
    },
    toast: {
      close: "Close"
    }
  }
}), e0 = Symbol.for("nuxt-ui.locale-context"), Kg = (e) => {
  const t = e || Ge(Zt(e0, jg));
  return KM(T(() => t.value || jg));
}, it = import.meta.client ? /* @__PURE__ */ Lf(Kg) : Kg, GM = () => {
}, UM = () => {
  if (!Vf.colorMode)
    return {
      forced: !0
    };
  const { store: e, system: t } = gM();
  return {
    get preference() {
      return e.value === "auto" ? "system" : e.value;
    },
    set preference(a) {
      e.value = a === "system" ? "auto" : a;
    },
    get value() {
      return e.value === "auto" ? t.value : e.value;
    },
    forced: !1
  };
}, WM = (e, t = {}) => {
  const a = N(null);
  return {
    value: a,
    get: () => a.value,
    set: () => {
    },
    update: () => {
    },
    refresh: () => Promise.resolve(a.value),
    remove: () => {
    }
  };
}, _u = {}, YM = (e, t) => {
  if (_u[e])
    return _u[e];
  const a = N(t());
  return _u[e] = a, a;
}, Gg = IM();
function t0() {
  return {
    isHydrating: !0,
    payload: { serverRendered: !1 },
    hooks: Gg,
    hook: Gg.hook
  };
}
function Ld(e, t) {
  const n = t0().hook(e, t);
  El(n);
}
var XM = /\s+/g, Od = (e) => typeof e != "string" || !e ? e : e.replace(XM, " ").trim(), fl = (...e) => {
  let t = [], a = (n) => {
    if (!n && n !== 0 && n !== 0n) return;
    if (Array.isArray(n)) {
      for (let s = 0, i = n.length; s < i; s++) a(n[s]);
      return;
    }
    let r = typeof n;
    if (r === "string" || r === "number" || r === "bigint") {
      if (r === "number" && n !== n) return;
      t.push(String(n));
    } else if (r === "object") {
      let s = Object.keys(n);
      for (let i = 0, o = s.length; i < o; i++) {
        let l = s[i];
        n[l] && t.push(l);
      }
    }
  };
  for (let n = 0, r = e.length; n < r; n++) {
    let s = e[n];
    s != null && a(s);
  }
  return t.length > 0 ? Od(t.join(" ")) : void 0;
}, Ug = (e) => e === !1 ? "false" : e === !0 ? "true" : e === 0 ? "0" : e, ga = (e) => {
  if (!e || typeof e != "object") return !0;
  for (let t in e) return !1;
  return !0;
}, JM = (e, t) => {
  if (e === t) return !0;
  if (!e || !t) return !1;
  let a = Object.keys(e), n = Object.keys(t);
  if (a.length !== n.length) return !1;
  for (let r = 0; r < a.length; r++) {
    let s = a[r];
    if (!n.includes(s) || e[s] !== t[s]) return !1;
  }
  return !0;
}, Wg = (e, t) => {
  for (let a in t) if (Object.prototype.hasOwnProperty.call(t, a)) {
    let n = t[a];
    a in e ? e[a] = fl(e[a], n) : e[a] = n;
  }
  return e;
}, a0 = (e, t) => {
  for (let a = 0; a < e.length; a++) {
    let n = e[a];
    Array.isArray(n) ? a0(n, t) : n && t.push(n);
  }
}, n0 = (...e) => {
  let t = [];
  a0(e, t);
  let a = [];
  for (let n = 0; n < t.length; n++) t[n] && a.push(t[n]);
  return a;
}, Fd = (e, t) => {
  let a = {};
  for (let n in e) {
    let r = e[n];
    if (n in t) {
      let s = t[n];
      Array.isArray(r) || Array.isArray(s) ? a[n] = n0(s, r) : typeof r == "object" && typeof s == "object" && r && s ? a[n] = Fd(r, s) : a[n] = s + " " + r;
    } else a[n] = r;
  }
  for (let n in t) n in e || (a[n] = t[n]);
  return a;
}, QM = { twMerge: !0, twMergeConfig: {}, responsiveVariants: !1 };
function ZM() {
  let e = null, t = {}, a = !1;
  return { get cachedTwMerge() {
    return e;
  }, set cachedTwMerge(n) {
    e = n;
  }, get cachedTwMergeConfig() {
    return t;
  }, set cachedTwMergeConfig(n) {
    t = n;
  }, get didTwMergeConfigChange() {
    return a;
  }, set didTwMergeConfigChange(n) {
    a = n;
  }, reset() {
    e = null, t = {}, a = !1;
  } };
}
var kn = ZM(), eR = (e) => {
  let t = (a, n) => {
    let { extend: r = null, slots: s = {}, variants: i = {}, compoundVariants: o = [], compoundSlots: l = [], defaultVariants: d = {} } = a, c = { ...QM, ...n }, f = r?.base ? fl(r.base, a?.base) : a?.base, p = r?.variants && !ga(r.variants) ? Fd(i, r.variants) : i, g = r?.defaultVariants && !ga(r.defaultVariants) ? { ...r.defaultVariants, ...d } : d;
    !ga(c.twMergeConfig) && !JM(c.twMergeConfig, kn.cachedTwMergeConfig) && (kn.didTwMergeConfigChange = !0, kn.cachedTwMergeConfig = c.twMergeConfig);
    let v = ga(r?.slots), m = ga(s) ? {} : { base: fl(a?.base, v && r?.base), ...s }, y = v ? m : Wg({ ...r?.slots }, ga(m) ? { base: a?.base } : m), x = ga(r?.compoundVariants) ? o : n0(r?.compoundVariants, o), b = (w) => {
      if (ga(p) && ga(s) && v) return e(f, w?.class, w?.className)(c);
      if (x && !Array.isArray(x)) throw new TypeError(`The "compoundVariants" prop must be an array. Received: ${typeof x}`);
      if (l && !Array.isArray(l)) throw new TypeError(`The "compoundSlots" prop must be an array. Received: ${typeof l}`);
      let $ = (K, z, G = [], Y) => {
        let q = G;
        if (typeof z == "string") {
          let Q = Od(z).split(" ");
          for (let se = 0; se < Q.length; se++) q.push(`${K}:${Q[se]}`);
        } else if (Array.isArray(z)) for (let Q = 0; Q < z.length; Q++) q.push(`${K}:${z[Q]}`);
        else if (typeof z == "object" && typeof Y == "string" && Y in z) {
          let Q = z[Y];
          if (Q && typeof Q == "string") {
            let se = Od(Q).split(" "), ce = [];
            for (let oe = 0; oe < se.length; oe++) ce.push(`${K}:${se[oe]}`);
            q[Y] = q[Y] ? q[Y].concat(ce) : ce;
          } else if (Array.isArray(Q) && Q.length > 0) {
            let se = [];
            for (let ce = 0; ce < Q.length; ce++) se.push(`${K}:${Q[ce]}`);
            q[Y] = se;
          }
        }
        return q;
      }, B = (K, z = p, G = null, Y = null) => {
        let q = z[K];
        if (!q || ga(q)) return null;
        let Q = Y?.[K] ?? w?.[K];
        if (Q === null) return null;
        let se = Ug(Q), ce = Array.isArray(c.responsiveVariants) && c.responsiveVariants.length > 0 || c.responsiveVariants === !0, oe = g?.[K], xe = [];
        if (typeof se == "object" && ce) for (let [Ye, ne] of Object.entries(se)) {
          let ae = q[ne];
          if (Ye === "initial") {
            oe = ne;
            continue;
          }
          Array.isArray(c.responsiveVariants) && !c.responsiveVariants.includes(Ye) || (xe = $(Ye, ae, xe, G));
        }
        let $e = se != null && typeof se != "object" ? se : Ug(oe), Le = q[$e || "false"];
        return typeof xe == "object" && typeof G == "string" && xe[G] ? Wg(xe, Le) : xe.length > 0 ? (xe.push(Le), G === "base" ? xe.join(" ") : xe) : Le;
      }, I = () => {
        if (!p) return null;
        let K = Object.keys(p), z = [];
        for (let G = 0; G < K.length; G++) {
          let Y = B(K[G], p);
          Y && z.push(Y);
        }
        return z;
      }, E = (K, z) => {
        if (!p || typeof p != "object") return null;
        let G = [];
        for (let Y in p) {
          let q = B(Y, p, K, z), Q = K === "base" && typeof q == "string" ? q : q && q[K];
          Q && G.push(Q);
        }
        return G;
      }, P = {};
      for (let K in w) {
        let z = w[K];
        z !== void 0 && (P[K] = z);
      }
      let R = (K, z) => {
        let G = typeof w?.[K] == "object" ? { [K]: w[K]?.initial } : {};
        return { ...g, ...P, ...G, ...z };
      }, F = (K = [], z) => {
        let G = [], Y = K.length;
        for (let q = 0; q < Y; q++) {
          let { class: Q, className: se, ...ce } = K[q], oe = !0, xe = R(null, z);
          for (let $e in ce) {
            let Le = ce[$e], Ye = xe[$e];
            if (Array.isArray(Le)) {
              if (!Le.includes(Ye)) {
                oe = !1;
                break;
              }
            } else {
              if ((Le == null || Le === !1) && (Ye == null || Ye === !1)) continue;
              if (Ye !== Le) {
                oe = !1;
                break;
              }
            }
          }
          oe && (Q && G.push(Q), se && G.push(se));
        }
        return G;
      }, H = (K) => {
        let z = F(x, K);
        if (!Array.isArray(z)) return z;
        let G = {}, Y = e;
        for (let q = 0; q < z.length; q++) {
          let Q = z[q];
          if (typeof Q == "string") G.base = Y(G.base, Q)(c);
          else if (typeof Q == "object") for (let se in Q) G[se] = Y(G[se], Q[se])(c);
        }
        return G;
      }, j = (K) => {
        if (l.length < 1) return null;
        let z = {}, G = R(null, K);
        for (let Y = 0; Y < l.length; Y++) {
          let { slots: q = [], class: Q, className: se, ...ce } = l[Y];
          if (!ga(ce)) {
            let oe = !0;
            for (let xe in ce) {
              let $e = G[xe], Le = ce[xe];
              if ($e === void 0 || (Array.isArray(Le) ? !Le.includes($e) : Le !== $e)) {
                oe = !1;
                break;
              }
            }
            if (!oe) continue;
          }
          for (let oe = 0; oe < q.length; oe++) {
            let xe = q[oe];
            z[xe] || (z[xe] = []), z[xe].push([Q, se]);
          }
        }
        return z;
      };
      if (!ga(s) || !v) {
        let K = {};
        if (typeof y == "object" && !ga(y)) {
          let z = e;
          for (let G in y) K[G] = (Y) => {
            let q = H(Y), Q = j(Y);
            return z(y[G], E(G, Y), q ? q[G] : void 0, Q ? Q[G] : void 0, Y?.class, Y?.className)(c);
          };
        }
        return K;
      }
      return e(f, I(), F(x), w?.class, w?.className)(c);
    }, C = () => {
      if (!(!p || typeof p != "object")) return Object.keys(p);
    };
    return b.variantKeys = C(), b.extend = r, b.base = f, b.slots = y, b.variants = p, b.defaultVariants = g, b.compoundSlots = l, b.compoundVariants = x, b;
  };
  return { tv: t, createTV: (a) => (n, r) => t(n, r ? Fd(a, r) : a) };
};
const Kf = "-", tR = (e) => {
  const t = nR(e), {
    conflictingClassGroups: a,
    conflictingClassGroupModifiers: n
  } = e;
  return {
    getClassGroupId: (i) => {
      const o = i.split(Kf);
      return o[0] === "" && o.length !== 1 && o.shift(), r0(o, t) || aR(i);
    },
    getConflictingClassGroupIds: (i, o) => {
      const l = a[i] || [];
      return o && n[i] ? [...l, ...n[i]] : l;
    }
  };
}, r0 = (e, t) => {
  if (e.length === 0)
    return t.classGroupId;
  const a = e[0], n = t.nextPart.get(a), r = n ? r0(e.slice(1), n) : void 0;
  if (r)
    return r;
  if (t.validators.length === 0)
    return;
  const s = e.join(Kf);
  return t.validators.find(({
    validator: i
  }) => i(s))?.classGroupId;
}, Yg = /^\[(.+)\]$/, aR = (e) => {
  if (Yg.test(e)) {
    const t = Yg.exec(e)[1], a = t?.substring(0, t.indexOf(":"));
    if (a)
      return "arbitrary.." + a;
  }
}, nR = (e) => {
  const {
    theme: t,
    classGroups: a
  } = e, n = {
    nextPart: /* @__PURE__ */ new Map(),
    validators: []
  };
  for (const r in a)
    zd(a[r], n, r, t);
  return n;
}, zd = (e, t, a, n) => {
  e.forEach((r) => {
    if (typeof r == "string") {
      const s = r === "" ? t : Xg(t, r);
      s.classGroupId = a;
      return;
    }
    if (typeof r == "function") {
      if (rR(r)) {
        zd(r(n), t, a, n);
        return;
      }
      t.validators.push({
        validator: r,
        classGroupId: a
      });
      return;
    }
    Object.entries(r).forEach(([s, i]) => {
      zd(i, Xg(t, s), a, n);
    });
  });
}, Xg = (e, t) => {
  let a = e;
  return t.split(Kf).forEach((n) => {
    a.nextPart.has(n) || a.nextPart.set(n, {
      nextPart: /* @__PURE__ */ new Map(),
      validators: []
    }), a = a.nextPart.get(n);
  }), a;
}, rR = (e) => e.isThemeGetter, sR = (e) => {
  if (e < 1)
    return {
      get: () => {
      },
      set: () => {
      }
    };
  let t = 0, a = /* @__PURE__ */ new Map(), n = /* @__PURE__ */ new Map();
  const r = (s, i) => {
    a.set(s, i), t++, t > e && (t = 0, n = a, a = /* @__PURE__ */ new Map());
  };
  return {
    get(s) {
      let i = a.get(s);
      if (i !== void 0)
        return i;
      if ((i = n.get(s)) !== void 0)
        return r(s, i), i;
    },
    set(s, i) {
      a.has(s) ? a.set(s, i) : r(s, i);
    }
  };
}, qd = "!", Vd = ":", iR = Vd.length, oR = (e) => {
  const {
    prefix: t,
    experimentalParseClassName: a
  } = e;
  let n = (r) => {
    const s = [];
    let i = 0, o = 0, l = 0, d;
    for (let v = 0; v < r.length; v++) {
      let m = r[v];
      if (i === 0 && o === 0) {
        if (m === Vd) {
          s.push(r.slice(l, v)), l = v + iR;
          continue;
        }
        if (m === "/") {
          d = v;
          continue;
        }
      }
      m === "[" ? i++ : m === "]" ? i-- : m === "(" ? o++ : m === ")" && o--;
    }
    const c = s.length === 0 ? r : r.substring(l), f = lR(c), p = f !== c, g = d && d > l ? d - l : void 0;
    return {
      modifiers: s,
      hasImportantModifier: p,
      baseClassName: f,
      maybePostfixModifierPosition: g
    };
  };
  if (t) {
    const r = t + Vd, s = n;
    n = (i) => i.startsWith(r) ? s(i.substring(r.length)) : {
      isExternal: !0,
      modifiers: [],
      hasImportantModifier: !1,
      baseClassName: i,
      maybePostfixModifierPosition: void 0
    };
  }
  if (a) {
    const r = n;
    n = (s) => a({
      className: s,
      parseClassName: r
    });
  }
  return n;
}, lR = (e) => e.endsWith(qd) ? e.substring(0, e.length - 1) : e.startsWith(qd) ? e.substring(1) : e, uR = (e) => {
  const t = Object.fromEntries(e.orderSensitiveModifiers.map((n) => [n, !0]));
  return (n) => {
    if (n.length <= 1)
      return n;
    const r = [];
    let s = [];
    return n.forEach((i) => {
      i[0] === "[" || t[i] ? (r.push(...s.sort(), i), s = []) : s.push(i);
    }), r.push(...s.sort()), r;
  };
}, dR = (e) => ({
  cache: sR(e.cacheSize),
  parseClassName: oR(e),
  sortModifiers: uR(e),
  ...tR(e)
}), cR = /\s+/, fR = (e, t) => {
  const {
    parseClassName: a,
    getClassGroupId: n,
    getConflictingClassGroupIds: r,
    sortModifiers: s
  } = t, i = [], o = e.trim().split(cR);
  let l = "";
  for (let d = o.length - 1; d >= 0; d -= 1) {
    const c = o[d], {
      isExternal: f,
      modifiers: p,
      hasImportantModifier: g,
      baseClassName: v,
      maybePostfixModifierPosition: m
    } = a(c);
    if (f) {
      l = c + (l.length > 0 ? " " + l : l);
      continue;
    }
    let y = !!m, x = n(y ? v.substring(0, m) : v);
    if (!x) {
      if (!y) {
        l = c + (l.length > 0 ? " " + l : l);
        continue;
      }
      if (x = n(v), !x) {
        l = c + (l.length > 0 ? " " + l : l);
        continue;
      }
      y = !1;
    }
    const b = s(p).join(":"), C = g ? b + qd : b, w = C + x;
    if (i.includes(w))
      continue;
    i.push(w);
    const $ = r(x, y);
    for (let B = 0; B < $.length; ++B) {
      const I = $[B];
      i.push(C + I);
    }
    l = c + (l.length > 0 ? " " + l : l);
  }
  return l;
};
function pR() {
  let e = 0, t, a, n = "";
  for (; e < arguments.length; )
    (t = arguments[e++]) && (a = s0(t)) && (n && (n += " "), n += a);
  return n;
}
const s0 = (e) => {
  if (typeof e == "string")
    return e;
  let t, a = "";
  for (let n = 0; n < e.length; n++)
    e[n] && (t = s0(e[n])) && (a && (a += " "), a += t);
  return a;
};
function Nd(e, ...t) {
  let a, n, r, s = i;
  function i(l) {
    const d = t.reduce((c, f) => f(c), e());
    return a = dR(d), n = a.cache.get, r = a.cache.set, s = o, o(l);
  }
  function o(l) {
    const d = n(l);
    if (d)
      return d;
    const c = fR(l, a);
    return r(l, c), c;
  }
  return function() {
    return s(pR.apply(null, arguments));
  };
}
const Kt = (e) => {
  const t = (a) => a[e] || [];
  return t.isThemeGetter = !0, t;
}, i0 = /^\[(?:(\w[\w-]*):)?(.+)\]$/i, o0 = /^\((?:(\w[\w-]*):)?(.+)\)$/i, gR = /^\d+\/\d+$/, vR = /^(\d+(\.\d+)?)?(xs|sm|md|lg|xl)$/, hR = /\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))|\b(calc|min|max|clamp)\(.+\)|^0$/, mR = /^(rgba?|hsla?|hwb|(ok)?(lab|lch)|color-mix)\(.+\)$/, yR = /^(inset_)?-?((\d+)?\.?(\d+)[a-z]+|0)_-?((\d+)?\.?(\d+)[a-z]+|0)/, bR = /^(url|image|image-set|cross-fade|element|(repeating-)?(linear|radial|conic)-gradient)\(.+\)$/, Yr = (e) => gR.test(e), at = (e) => !!e && !Number.isNaN(Number(e)), Nn = (e) => !!e && Number.isInteger(Number(e)), ku = (e) => e.endsWith("%") && at(e.slice(0, -1)), xn = (e) => vR.test(e), wR = () => !0, CR = (e) => (
  // `colorFunctionRegex` check is necessary because color functions can have percentages in them which which would be incorrectly classified as lengths.
  // For example, `hsl(0 0% 0%)` would be classified as a length without this check.
  // I could also use lookbehind assertion in `lengthUnitRegex` but that isn't supported widely enough.
  hR.test(e) && !mR.test(e)
), l0 = () => !1, xR = (e) => yR.test(e), SR = (e) => bR.test(e), _R = (e) => !Ie(e) && !Ee(e), kR = (e) => Ds(e, c0, l0), Ie = (e) => i0.test(e), fr = (e) => Ds(e, f0, CR), Au = (e) => Ds(e, TR, at), Jg = (e) => Ds(e, u0, l0), AR = (e) => Ds(e, d0, SR), ho = (e) => Ds(e, p0, xR), Ee = (e) => o0.test(e), Us = (e) => Ms(e, f0), $R = (e) => Ms(e, BR), Qg = (e) => Ms(e, u0), IR = (e) => Ms(e, c0), ER = (e) => Ms(e, d0), mo = (e) => Ms(e, p0, !0), Ds = (e, t, a) => {
  const n = i0.exec(e);
  return n ? n[1] ? t(n[1]) : a(n[2]) : !1;
}, Ms = (e, t, a = !1) => {
  const n = o0.exec(e);
  return n ? n[1] ? t(n[1]) : a : !1;
}, u0 = (e) => e === "position" || e === "percentage", d0 = (e) => e === "image" || e === "url", c0 = (e) => e === "length" || e === "size" || e === "bg-size", f0 = (e) => e === "length", TR = (e) => e === "number", BR = (e) => e === "family-name", p0 = (e) => e === "shadow", Hd = () => {
  const e = Kt("color"), t = Kt("font"), a = Kt("text"), n = Kt("font-weight"), r = Kt("tracking"), s = Kt("leading"), i = Kt("breakpoint"), o = Kt("container"), l = Kt("spacing"), d = Kt("radius"), c = Kt("shadow"), f = Kt("inset-shadow"), p = Kt("text-shadow"), g = Kt("drop-shadow"), v = Kt("blur"), m = Kt("perspective"), y = Kt("aspect"), x = Kt("ease"), b = Kt("animate"), C = () => ["auto", "avoid", "all", "avoid-page", "page", "left", "right", "column"], w = () => [
    "center",
    "top",
    "bottom",
    "left",
    "right",
    "top-left",
    // Deprecated since Tailwind CSS v4.1.0, see https://github.com/tailwindlabs/tailwindcss/pull/17378
    "left-top",
    "top-right",
    // Deprecated since Tailwind CSS v4.1.0, see https://github.com/tailwindlabs/tailwindcss/pull/17378
    "right-top",
    "bottom-right",
    // Deprecated since Tailwind CSS v4.1.0, see https://github.com/tailwindlabs/tailwindcss/pull/17378
    "right-bottom",
    "bottom-left",
    // Deprecated since Tailwind CSS v4.1.0, see https://github.com/tailwindlabs/tailwindcss/pull/17378
    "left-bottom"
  ], $ = () => [...w(), Ee, Ie], B = () => ["auto", "hidden", "clip", "visible", "scroll"], I = () => ["auto", "contain", "none"], E = () => [Ee, Ie, l], P = () => [Yr, "full", "auto", ...E()], R = () => [Nn, "none", "subgrid", Ee, Ie], F = () => ["auto", {
    span: ["full", Nn, Ee, Ie]
  }, Nn, Ee, Ie], H = () => [Nn, "auto", Ee, Ie], j = () => ["auto", "min", "max", "fr", Ee, Ie], K = () => ["start", "end", "center", "between", "around", "evenly", "stretch", "baseline", "center-safe", "end-safe"], z = () => ["start", "end", "center", "stretch", "center-safe", "end-safe"], G = () => ["auto", ...E()], Y = () => [Yr, "auto", "full", "dvw", "dvh", "lvw", "lvh", "svw", "svh", "min", "max", "fit", ...E()], q = () => [e, Ee, Ie], Q = () => [...w(), Qg, Jg, {
    position: [Ee, Ie]
  }], se = () => ["no-repeat", {
    repeat: ["", "x", "y", "space", "round"]
  }], ce = () => ["auto", "cover", "contain", IR, kR, {
    size: [Ee, Ie]
  }], oe = () => [ku, Us, fr], xe = () => [
    // Deprecated since Tailwind CSS v4.0.0
    "",
    "none",
    "full",
    d,
    Ee,
    Ie
  ], $e = () => ["", at, Us, fr], Le = () => ["solid", "dashed", "dotted", "double"], Ye = () => ["normal", "multiply", "screen", "overlay", "darken", "lighten", "color-dodge", "color-burn", "hard-light", "soft-light", "difference", "exclusion", "hue", "saturation", "color", "luminosity"], ne = () => [at, ku, Qg, Jg], ae = () => [
    // Deprecated since Tailwind CSS v4.0.0
    "",
    "none",
    v,
    Ee,
    Ie
  ], be = () => ["none", at, Ee, Ie], De = () => ["none", at, Ee, Ie], Ke = () => [at, Ee, Ie], re = () => [Yr, "full", ...E()];
  return {
    cacheSize: 500,
    theme: {
      animate: ["spin", "ping", "pulse", "bounce"],
      aspect: ["video"],
      blur: [xn],
      breakpoint: [xn],
      color: [wR],
      container: [xn],
      "drop-shadow": [xn],
      ease: ["in", "out", "in-out"],
      font: [_R],
      "font-weight": ["thin", "extralight", "light", "normal", "medium", "semibold", "bold", "extrabold", "black"],
      "inset-shadow": [xn],
      leading: ["none", "tight", "snug", "normal", "relaxed", "loose"],
      perspective: ["dramatic", "near", "normal", "midrange", "distant", "none"],
      radius: [xn],
      shadow: [xn],
      spacing: ["px", at],
      text: [xn],
      "text-shadow": [xn],
      tracking: ["tighter", "tight", "normal", "wide", "wider", "widest"]
    },
    classGroups: {
      // --------------
      // --- Layout ---
      // --------------
      /**
       * Aspect Ratio
       * @see https://tailwindcss.com/docs/aspect-ratio
       */
      aspect: [{
        aspect: ["auto", "square", Yr, Ie, Ee, y]
      }],
      /**
       * Container
       * @see https://tailwindcss.com/docs/container
       * @deprecated since Tailwind CSS v4.0.0
       */
      container: ["container"],
      /**
       * Columns
       * @see https://tailwindcss.com/docs/columns
       */
      columns: [{
        columns: [at, Ie, Ee, o]
      }],
      /**
       * Break After
       * @see https://tailwindcss.com/docs/break-after
       */
      "break-after": [{
        "break-after": C()
      }],
      /**
       * Break Before
       * @see https://tailwindcss.com/docs/break-before
       */
      "break-before": [{
        "break-before": C()
      }],
      /**
       * Break Inside
       * @see https://tailwindcss.com/docs/break-inside
       */
      "break-inside": [{
        "break-inside": ["auto", "avoid", "avoid-page", "avoid-column"]
      }],
      /**
       * Box Decoration Break
       * @see https://tailwindcss.com/docs/box-decoration-break
       */
      "box-decoration": [{
        "box-decoration": ["slice", "clone"]
      }],
      /**
       * Box Sizing
       * @see https://tailwindcss.com/docs/box-sizing
       */
      box: [{
        box: ["border", "content"]
      }],
      /**
       * Display
       * @see https://tailwindcss.com/docs/display
       */
      display: ["block", "inline-block", "inline", "flex", "inline-flex", "table", "inline-table", "table-caption", "table-cell", "table-column", "table-column-group", "table-footer-group", "table-header-group", "table-row-group", "table-row", "flow-root", "grid", "inline-grid", "contents", "list-item", "hidden"],
      /**
       * Screen Reader Only
       * @see https://tailwindcss.com/docs/display#screen-reader-only
       */
      sr: ["sr-only", "not-sr-only"],
      /**
       * Floats
       * @see https://tailwindcss.com/docs/float
       */
      float: [{
        float: ["right", "left", "none", "start", "end"]
      }],
      /**
       * Clear
       * @see https://tailwindcss.com/docs/clear
       */
      clear: [{
        clear: ["left", "right", "both", "none", "start", "end"]
      }],
      /**
       * Isolation
       * @see https://tailwindcss.com/docs/isolation
       */
      isolation: ["isolate", "isolation-auto"],
      /**
       * Object Fit
       * @see https://tailwindcss.com/docs/object-fit
       */
      "object-fit": [{
        object: ["contain", "cover", "fill", "none", "scale-down"]
      }],
      /**
       * Object Position
       * @see https://tailwindcss.com/docs/object-position
       */
      "object-position": [{
        object: $()
      }],
      /**
       * Overflow
       * @see https://tailwindcss.com/docs/overflow
       */
      overflow: [{
        overflow: B()
      }],
      /**
       * Overflow X
       * @see https://tailwindcss.com/docs/overflow
       */
      "overflow-x": [{
        "overflow-x": B()
      }],
      /**
       * Overflow Y
       * @see https://tailwindcss.com/docs/overflow
       */
      "overflow-y": [{
        "overflow-y": B()
      }],
      /**
       * Overscroll Behavior
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      overscroll: [{
        overscroll: I()
      }],
      /**
       * Overscroll Behavior X
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      "overscroll-x": [{
        "overscroll-x": I()
      }],
      /**
       * Overscroll Behavior Y
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      "overscroll-y": [{
        "overscroll-y": I()
      }],
      /**
       * Position
       * @see https://tailwindcss.com/docs/position
       */
      position: ["static", "fixed", "absolute", "relative", "sticky"],
      /**
       * Top / Right / Bottom / Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      inset: [{
        inset: P()
      }],
      /**
       * Right / Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      "inset-x": [{
        "inset-x": P()
      }],
      /**
       * Top / Bottom
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      "inset-y": [{
        "inset-y": P()
      }],
      /**
       * Start
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      start: [{
        start: P()
      }],
      /**
       * End
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      end: [{
        end: P()
      }],
      /**
       * Top
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      top: [{
        top: P()
      }],
      /**
       * Right
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      right: [{
        right: P()
      }],
      /**
       * Bottom
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      bottom: [{
        bottom: P()
      }],
      /**
       * Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      left: [{
        left: P()
      }],
      /**
       * Visibility
       * @see https://tailwindcss.com/docs/visibility
       */
      visibility: ["visible", "invisible", "collapse"],
      /**
       * Z-Index
       * @see https://tailwindcss.com/docs/z-index
       */
      z: [{
        z: [Nn, "auto", Ee, Ie]
      }],
      // ------------------------
      // --- Flexbox and Grid ---
      // ------------------------
      /**
       * Flex Basis
       * @see https://tailwindcss.com/docs/flex-basis
       */
      basis: [{
        basis: [Yr, "full", "auto", o, ...E()]
      }],
      /**
       * Flex Direction
       * @see https://tailwindcss.com/docs/flex-direction
       */
      "flex-direction": [{
        flex: ["row", "row-reverse", "col", "col-reverse"]
      }],
      /**
       * Flex Wrap
       * @see https://tailwindcss.com/docs/flex-wrap
       */
      "flex-wrap": [{
        flex: ["nowrap", "wrap", "wrap-reverse"]
      }],
      /**
       * Flex
       * @see https://tailwindcss.com/docs/flex
       */
      flex: [{
        flex: [at, Yr, "auto", "initial", "none", Ie]
      }],
      /**
       * Flex Grow
       * @see https://tailwindcss.com/docs/flex-grow
       */
      grow: [{
        grow: ["", at, Ee, Ie]
      }],
      /**
       * Flex Shrink
       * @see https://tailwindcss.com/docs/flex-shrink
       */
      shrink: [{
        shrink: ["", at, Ee, Ie]
      }],
      /**
       * Order
       * @see https://tailwindcss.com/docs/order
       */
      order: [{
        order: [Nn, "first", "last", "none", Ee, Ie]
      }],
      /**
       * Grid Template Columns
       * @see https://tailwindcss.com/docs/grid-template-columns
       */
      "grid-cols": [{
        "grid-cols": R()
      }],
      /**
       * Grid Column Start / End
       * @see https://tailwindcss.com/docs/grid-column
       */
      "col-start-end": [{
        col: F()
      }],
      /**
       * Grid Column Start
       * @see https://tailwindcss.com/docs/grid-column
       */
      "col-start": [{
        "col-start": H()
      }],
      /**
       * Grid Column End
       * @see https://tailwindcss.com/docs/grid-column
       */
      "col-end": [{
        "col-end": H()
      }],
      /**
       * Grid Template Rows
       * @see https://tailwindcss.com/docs/grid-template-rows
       */
      "grid-rows": [{
        "grid-rows": R()
      }],
      /**
       * Grid Row Start / End
       * @see https://tailwindcss.com/docs/grid-row
       */
      "row-start-end": [{
        row: F()
      }],
      /**
       * Grid Row Start
       * @see https://tailwindcss.com/docs/grid-row
       */
      "row-start": [{
        "row-start": H()
      }],
      /**
       * Grid Row End
       * @see https://tailwindcss.com/docs/grid-row
       */
      "row-end": [{
        "row-end": H()
      }],
      /**
       * Grid Auto Flow
       * @see https://tailwindcss.com/docs/grid-auto-flow
       */
      "grid-flow": [{
        "grid-flow": ["row", "col", "dense", "row-dense", "col-dense"]
      }],
      /**
       * Grid Auto Columns
       * @see https://tailwindcss.com/docs/grid-auto-columns
       */
      "auto-cols": [{
        "auto-cols": j()
      }],
      /**
       * Grid Auto Rows
       * @see https://tailwindcss.com/docs/grid-auto-rows
       */
      "auto-rows": [{
        "auto-rows": j()
      }],
      /**
       * Gap
       * @see https://tailwindcss.com/docs/gap
       */
      gap: [{
        gap: E()
      }],
      /**
       * Gap X
       * @see https://tailwindcss.com/docs/gap
       */
      "gap-x": [{
        "gap-x": E()
      }],
      /**
       * Gap Y
       * @see https://tailwindcss.com/docs/gap
       */
      "gap-y": [{
        "gap-y": E()
      }],
      /**
       * Justify Content
       * @see https://tailwindcss.com/docs/justify-content
       */
      "justify-content": [{
        justify: [...K(), "normal"]
      }],
      /**
       * Justify Items
       * @see https://tailwindcss.com/docs/justify-items
       */
      "justify-items": [{
        "justify-items": [...z(), "normal"]
      }],
      /**
       * Justify Self
       * @see https://tailwindcss.com/docs/justify-self
       */
      "justify-self": [{
        "justify-self": ["auto", ...z()]
      }],
      /**
       * Align Content
       * @see https://tailwindcss.com/docs/align-content
       */
      "align-content": [{
        content: ["normal", ...K()]
      }],
      /**
       * Align Items
       * @see https://tailwindcss.com/docs/align-items
       */
      "align-items": [{
        items: [...z(), {
          baseline: ["", "last"]
        }]
      }],
      /**
       * Align Self
       * @see https://tailwindcss.com/docs/align-self
       */
      "align-self": [{
        self: ["auto", ...z(), {
          baseline: ["", "last"]
        }]
      }],
      /**
       * Place Content
       * @see https://tailwindcss.com/docs/place-content
       */
      "place-content": [{
        "place-content": K()
      }],
      /**
       * Place Items
       * @see https://tailwindcss.com/docs/place-items
       */
      "place-items": [{
        "place-items": [...z(), "baseline"]
      }],
      /**
       * Place Self
       * @see https://tailwindcss.com/docs/place-self
       */
      "place-self": [{
        "place-self": ["auto", ...z()]
      }],
      // Spacing
      /**
       * Padding
       * @see https://tailwindcss.com/docs/padding
       */
      p: [{
        p: E()
      }],
      /**
       * Padding X
       * @see https://tailwindcss.com/docs/padding
       */
      px: [{
        px: E()
      }],
      /**
       * Padding Y
       * @see https://tailwindcss.com/docs/padding
       */
      py: [{
        py: E()
      }],
      /**
       * Padding Start
       * @see https://tailwindcss.com/docs/padding
       */
      ps: [{
        ps: E()
      }],
      /**
       * Padding End
       * @see https://tailwindcss.com/docs/padding
       */
      pe: [{
        pe: E()
      }],
      /**
       * Padding Top
       * @see https://tailwindcss.com/docs/padding
       */
      pt: [{
        pt: E()
      }],
      /**
       * Padding Right
       * @see https://tailwindcss.com/docs/padding
       */
      pr: [{
        pr: E()
      }],
      /**
       * Padding Bottom
       * @see https://tailwindcss.com/docs/padding
       */
      pb: [{
        pb: E()
      }],
      /**
       * Padding Left
       * @see https://tailwindcss.com/docs/padding
       */
      pl: [{
        pl: E()
      }],
      /**
       * Margin
       * @see https://tailwindcss.com/docs/margin
       */
      m: [{
        m: G()
      }],
      /**
       * Margin X
       * @see https://tailwindcss.com/docs/margin
       */
      mx: [{
        mx: G()
      }],
      /**
       * Margin Y
       * @see https://tailwindcss.com/docs/margin
       */
      my: [{
        my: G()
      }],
      /**
       * Margin Start
       * @see https://tailwindcss.com/docs/margin
       */
      ms: [{
        ms: G()
      }],
      /**
       * Margin End
       * @see https://tailwindcss.com/docs/margin
       */
      me: [{
        me: G()
      }],
      /**
       * Margin Top
       * @see https://tailwindcss.com/docs/margin
       */
      mt: [{
        mt: G()
      }],
      /**
       * Margin Right
       * @see https://tailwindcss.com/docs/margin
       */
      mr: [{
        mr: G()
      }],
      /**
       * Margin Bottom
       * @see https://tailwindcss.com/docs/margin
       */
      mb: [{
        mb: G()
      }],
      /**
       * Margin Left
       * @see https://tailwindcss.com/docs/margin
       */
      ml: [{
        ml: G()
      }],
      /**
       * Space Between X
       * @see https://tailwindcss.com/docs/margin#adding-space-between-children
       */
      "space-x": [{
        "space-x": E()
      }],
      /**
       * Space Between X Reverse
       * @see https://tailwindcss.com/docs/margin#adding-space-between-children
       */
      "space-x-reverse": ["space-x-reverse"],
      /**
       * Space Between Y
       * @see https://tailwindcss.com/docs/margin#adding-space-between-children
       */
      "space-y": [{
        "space-y": E()
      }],
      /**
       * Space Between Y Reverse
       * @see https://tailwindcss.com/docs/margin#adding-space-between-children
       */
      "space-y-reverse": ["space-y-reverse"],
      // --------------
      // --- Sizing ---
      // --------------
      /**
       * Size
       * @see https://tailwindcss.com/docs/width#setting-both-width-and-height
       */
      size: [{
        size: Y()
      }],
      /**
       * Width
       * @see https://tailwindcss.com/docs/width
       */
      w: [{
        w: [o, "screen", ...Y()]
      }],
      /**
       * Min-Width
       * @see https://tailwindcss.com/docs/min-width
       */
      "min-w": [{
        "min-w": [
          o,
          "screen",
          /** Deprecated. @see https://github.com/tailwindlabs/tailwindcss.com/issues/2027#issuecomment-2620152757 */
          "none",
          ...Y()
        ]
      }],
      /**
       * Max-Width
       * @see https://tailwindcss.com/docs/max-width
       */
      "max-w": [{
        "max-w": [
          o,
          "screen",
          "none",
          /** Deprecated since Tailwind CSS v4.0.0. @see https://github.com/tailwindlabs/tailwindcss.com/issues/2027#issuecomment-2620152757 */
          "prose",
          /** Deprecated since Tailwind CSS v4.0.0. @see https://github.com/tailwindlabs/tailwindcss.com/issues/2027#issuecomment-2620152757 */
          {
            screen: [i]
          },
          ...Y()
        ]
      }],
      /**
       * Height
       * @see https://tailwindcss.com/docs/height
       */
      h: [{
        h: ["screen", "lh", ...Y()]
      }],
      /**
       * Min-Height
       * @see https://tailwindcss.com/docs/min-height
       */
      "min-h": [{
        "min-h": ["screen", "lh", "none", ...Y()]
      }],
      /**
       * Max-Height
       * @see https://tailwindcss.com/docs/max-height
       */
      "max-h": [{
        "max-h": ["screen", "lh", ...Y()]
      }],
      // ------------------
      // --- Typography ---
      // ------------------
      /**
       * Font Size
       * @see https://tailwindcss.com/docs/font-size
       */
      "font-size": [{
        text: ["base", a, Us, fr]
      }],
      /**
       * Font Smoothing
       * @see https://tailwindcss.com/docs/font-smoothing
       */
      "font-smoothing": ["antialiased", "subpixel-antialiased"],
      /**
       * Font Style
       * @see https://tailwindcss.com/docs/font-style
       */
      "font-style": ["italic", "not-italic"],
      /**
       * Font Weight
       * @see https://tailwindcss.com/docs/font-weight
       */
      "font-weight": [{
        font: [n, Ee, Au]
      }],
      /**
       * Font Stretch
       * @see https://tailwindcss.com/docs/font-stretch
       */
      "font-stretch": [{
        "font-stretch": ["ultra-condensed", "extra-condensed", "condensed", "semi-condensed", "normal", "semi-expanded", "expanded", "extra-expanded", "ultra-expanded", ku, Ie]
      }],
      /**
       * Font Family
       * @see https://tailwindcss.com/docs/font-family
       */
      "font-family": [{
        font: [$R, Ie, t]
      }],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-normal": ["normal-nums"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-ordinal": ["ordinal"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-slashed-zero": ["slashed-zero"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-figure": ["lining-nums", "oldstyle-nums"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-spacing": ["proportional-nums", "tabular-nums"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-fraction": ["diagonal-fractions", "stacked-fractions"],
      /**
       * Letter Spacing
       * @see https://tailwindcss.com/docs/letter-spacing
       */
      tracking: [{
        tracking: [r, Ee, Ie]
      }],
      /**
       * Line Clamp
       * @see https://tailwindcss.com/docs/line-clamp
       */
      "line-clamp": [{
        "line-clamp": [at, "none", Ee, Au]
      }],
      /**
       * Line Height
       * @see https://tailwindcss.com/docs/line-height
       */
      leading: [{
        leading: [
          /** Deprecated since Tailwind CSS v4.0.0. @see https://github.com/tailwindlabs/tailwindcss.com/issues/2027#issuecomment-2620152757 */
          s,
          ...E()
        ]
      }],
      /**
       * List Style Image
       * @see https://tailwindcss.com/docs/list-style-image
       */
      "list-image": [{
        "list-image": ["none", Ee, Ie]
      }],
      /**
       * List Style Position
       * @see https://tailwindcss.com/docs/list-style-position
       */
      "list-style-position": [{
        list: ["inside", "outside"]
      }],
      /**
       * List Style Type
       * @see https://tailwindcss.com/docs/list-style-type
       */
      "list-style-type": [{
        list: ["disc", "decimal", "none", Ee, Ie]
      }],
      /**
       * Text Alignment
       * @see https://tailwindcss.com/docs/text-align
       */
      "text-alignment": [{
        text: ["left", "center", "right", "justify", "start", "end"]
      }],
      /**
       * Placeholder Color
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://v3.tailwindcss.com/docs/placeholder-color
       */
      "placeholder-color": [{
        placeholder: q()
      }],
      /**
       * Text Color
       * @see https://tailwindcss.com/docs/text-color
       */
      "text-color": [{
        text: q()
      }],
      /**
       * Text Decoration
       * @see https://tailwindcss.com/docs/text-decoration
       */
      "text-decoration": ["underline", "overline", "line-through", "no-underline"],
      /**
       * Text Decoration Style
       * @see https://tailwindcss.com/docs/text-decoration-style
       */
      "text-decoration-style": [{
        decoration: [...Le(), "wavy"]
      }],
      /**
       * Text Decoration Thickness
       * @see https://tailwindcss.com/docs/text-decoration-thickness
       */
      "text-decoration-thickness": [{
        decoration: [at, "from-font", "auto", Ee, fr]
      }],
      /**
       * Text Decoration Color
       * @see https://tailwindcss.com/docs/text-decoration-color
       */
      "text-decoration-color": [{
        decoration: q()
      }],
      /**
       * Text Underline Offset
       * @see https://tailwindcss.com/docs/text-underline-offset
       */
      "underline-offset": [{
        "underline-offset": [at, "auto", Ee, Ie]
      }],
      /**
       * Text Transform
       * @see https://tailwindcss.com/docs/text-transform
       */
      "text-transform": ["uppercase", "lowercase", "capitalize", "normal-case"],
      /**
       * Text Overflow
       * @see https://tailwindcss.com/docs/text-overflow
       */
      "text-overflow": ["truncate", "text-ellipsis", "text-clip"],
      /**
       * Text Wrap
       * @see https://tailwindcss.com/docs/text-wrap
       */
      "text-wrap": [{
        text: ["wrap", "nowrap", "balance", "pretty"]
      }],
      /**
       * Text Indent
       * @see https://tailwindcss.com/docs/text-indent
       */
      indent: [{
        indent: E()
      }],
      /**
       * Vertical Alignment
       * @see https://tailwindcss.com/docs/vertical-align
       */
      "vertical-align": [{
        align: ["baseline", "top", "middle", "bottom", "text-top", "text-bottom", "sub", "super", Ee, Ie]
      }],
      /**
       * Whitespace
       * @see https://tailwindcss.com/docs/whitespace
       */
      whitespace: [{
        whitespace: ["normal", "nowrap", "pre", "pre-line", "pre-wrap", "break-spaces"]
      }],
      /**
       * Word Break
       * @see https://tailwindcss.com/docs/word-break
       */
      break: [{
        break: ["normal", "words", "all", "keep"]
      }],
      /**
       * Overflow Wrap
       * @see https://tailwindcss.com/docs/overflow-wrap
       */
      wrap: [{
        wrap: ["break-word", "anywhere", "normal"]
      }],
      /**
       * Hyphens
       * @see https://tailwindcss.com/docs/hyphens
       */
      hyphens: [{
        hyphens: ["none", "manual", "auto"]
      }],
      /**
       * Content
       * @see https://tailwindcss.com/docs/content
       */
      content: [{
        content: ["none", Ee, Ie]
      }],
      // -------------------
      // --- Backgrounds ---
      // -------------------
      /**
       * Background Attachment
       * @see https://tailwindcss.com/docs/background-attachment
       */
      "bg-attachment": [{
        bg: ["fixed", "local", "scroll"]
      }],
      /**
       * Background Clip
       * @see https://tailwindcss.com/docs/background-clip
       */
      "bg-clip": [{
        "bg-clip": ["border", "padding", "content", "text"]
      }],
      /**
       * Background Origin
       * @see https://tailwindcss.com/docs/background-origin
       */
      "bg-origin": [{
        "bg-origin": ["border", "padding", "content"]
      }],
      /**
       * Background Position
       * @see https://tailwindcss.com/docs/background-position
       */
      "bg-position": [{
        bg: Q()
      }],
      /**
       * Background Repeat
       * @see https://tailwindcss.com/docs/background-repeat
       */
      "bg-repeat": [{
        bg: se()
      }],
      /**
       * Background Size
       * @see https://tailwindcss.com/docs/background-size
       */
      "bg-size": [{
        bg: ce()
      }],
      /**
       * Background Image
       * @see https://tailwindcss.com/docs/background-image
       */
      "bg-image": [{
        bg: ["none", {
          linear: [{
            to: ["t", "tr", "r", "br", "b", "bl", "l", "tl"]
          }, Nn, Ee, Ie],
          radial: ["", Ee, Ie],
          conic: [Nn, Ee, Ie]
        }, ER, AR]
      }],
      /**
       * Background Color
       * @see https://tailwindcss.com/docs/background-color
       */
      "bg-color": [{
        bg: q()
      }],
      /**
       * Gradient Color Stops From Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-from-pos": [{
        from: oe()
      }],
      /**
       * Gradient Color Stops Via Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-via-pos": [{
        via: oe()
      }],
      /**
       * Gradient Color Stops To Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-to-pos": [{
        to: oe()
      }],
      /**
       * Gradient Color Stops From
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-from": [{
        from: q()
      }],
      /**
       * Gradient Color Stops Via
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-via": [{
        via: q()
      }],
      /**
       * Gradient Color Stops To
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-to": [{
        to: q()
      }],
      // ---------------
      // --- Borders ---
      // ---------------
      /**
       * Border Radius
       * @see https://tailwindcss.com/docs/border-radius
       */
      rounded: [{
        rounded: xe()
      }],
      /**
       * Border Radius Start
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-s": [{
        "rounded-s": xe()
      }],
      /**
       * Border Radius End
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-e": [{
        "rounded-e": xe()
      }],
      /**
       * Border Radius Top
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-t": [{
        "rounded-t": xe()
      }],
      /**
       * Border Radius Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-r": [{
        "rounded-r": xe()
      }],
      /**
       * Border Radius Bottom
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-b": [{
        "rounded-b": xe()
      }],
      /**
       * Border Radius Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-l": [{
        "rounded-l": xe()
      }],
      /**
       * Border Radius Start Start
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-ss": [{
        "rounded-ss": xe()
      }],
      /**
       * Border Radius Start End
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-se": [{
        "rounded-se": xe()
      }],
      /**
       * Border Radius End End
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-ee": [{
        "rounded-ee": xe()
      }],
      /**
       * Border Radius End Start
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-es": [{
        "rounded-es": xe()
      }],
      /**
       * Border Radius Top Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-tl": [{
        "rounded-tl": xe()
      }],
      /**
       * Border Radius Top Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-tr": [{
        "rounded-tr": xe()
      }],
      /**
       * Border Radius Bottom Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-br": [{
        "rounded-br": xe()
      }],
      /**
       * Border Radius Bottom Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-bl": [{
        "rounded-bl": xe()
      }],
      /**
       * Border Width
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w": [{
        border: $e()
      }],
      /**
       * Border Width X
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-x": [{
        "border-x": $e()
      }],
      /**
       * Border Width Y
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-y": [{
        "border-y": $e()
      }],
      /**
       * Border Width Start
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-s": [{
        "border-s": $e()
      }],
      /**
       * Border Width End
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-e": [{
        "border-e": $e()
      }],
      /**
       * Border Width Top
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-t": [{
        "border-t": $e()
      }],
      /**
       * Border Width Right
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-r": [{
        "border-r": $e()
      }],
      /**
       * Border Width Bottom
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-b": [{
        "border-b": $e()
      }],
      /**
       * Border Width Left
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-l": [{
        "border-l": $e()
      }],
      /**
       * Divide Width X
       * @see https://tailwindcss.com/docs/border-width#between-children
       */
      "divide-x": [{
        "divide-x": $e()
      }],
      /**
       * Divide Width X Reverse
       * @see https://tailwindcss.com/docs/border-width#between-children
       */
      "divide-x-reverse": ["divide-x-reverse"],
      /**
       * Divide Width Y
       * @see https://tailwindcss.com/docs/border-width#between-children
       */
      "divide-y": [{
        "divide-y": $e()
      }],
      /**
       * Divide Width Y Reverse
       * @see https://tailwindcss.com/docs/border-width#between-children
       */
      "divide-y-reverse": ["divide-y-reverse"],
      /**
       * Border Style
       * @see https://tailwindcss.com/docs/border-style
       */
      "border-style": [{
        border: [...Le(), "hidden", "none"]
      }],
      /**
       * Divide Style
       * @see https://tailwindcss.com/docs/border-style#setting-the-divider-style
       */
      "divide-style": [{
        divide: [...Le(), "hidden", "none"]
      }],
      /**
       * Border Color
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color": [{
        border: q()
      }],
      /**
       * Border Color X
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-x": [{
        "border-x": q()
      }],
      /**
       * Border Color Y
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-y": [{
        "border-y": q()
      }],
      /**
       * Border Color S
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-s": [{
        "border-s": q()
      }],
      /**
       * Border Color E
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-e": [{
        "border-e": q()
      }],
      /**
       * Border Color Top
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-t": [{
        "border-t": q()
      }],
      /**
       * Border Color Right
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-r": [{
        "border-r": q()
      }],
      /**
       * Border Color Bottom
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-b": [{
        "border-b": q()
      }],
      /**
       * Border Color Left
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-l": [{
        "border-l": q()
      }],
      /**
       * Divide Color
       * @see https://tailwindcss.com/docs/divide-color
       */
      "divide-color": [{
        divide: q()
      }],
      /**
       * Outline Style
       * @see https://tailwindcss.com/docs/outline-style
       */
      "outline-style": [{
        outline: [...Le(), "none", "hidden"]
      }],
      /**
       * Outline Offset
       * @see https://tailwindcss.com/docs/outline-offset
       */
      "outline-offset": [{
        "outline-offset": [at, Ee, Ie]
      }],
      /**
       * Outline Width
       * @see https://tailwindcss.com/docs/outline-width
       */
      "outline-w": [{
        outline: ["", at, Us, fr]
      }],
      /**
       * Outline Color
       * @see https://tailwindcss.com/docs/outline-color
       */
      "outline-color": [{
        outline: q()
      }],
      // ---------------
      // --- Effects ---
      // ---------------
      /**
       * Box Shadow
       * @see https://tailwindcss.com/docs/box-shadow
       */
      shadow: [{
        shadow: [
          // Deprecated since Tailwind CSS v4.0.0
          "",
          "none",
          c,
          mo,
          ho
        ]
      }],
      /**
       * Box Shadow Color
       * @see https://tailwindcss.com/docs/box-shadow#setting-the-shadow-color
       */
      "shadow-color": [{
        shadow: q()
      }],
      /**
       * Inset Box Shadow
       * @see https://tailwindcss.com/docs/box-shadow#adding-an-inset-shadow
       */
      "inset-shadow": [{
        "inset-shadow": ["none", f, mo, ho]
      }],
      /**
       * Inset Box Shadow Color
       * @see https://tailwindcss.com/docs/box-shadow#setting-the-inset-shadow-color
       */
      "inset-shadow-color": [{
        "inset-shadow": q()
      }],
      /**
       * Ring Width
       * @see https://tailwindcss.com/docs/box-shadow#adding-a-ring
       */
      "ring-w": [{
        ring: $e()
      }],
      /**
       * Ring Width Inset
       * @see https://v3.tailwindcss.com/docs/ring-width#inset-rings
       * @deprecated since Tailwind CSS v4.0.0
       * @see https://github.com/tailwindlabs/tailwindcss/blob/v4.0.0/packages/tailwindcss/src/utilities.ts#L4158
       */
      "ring-w-inset": ["ring-inset"],
      /**
       * Ring Color
       * @see https://tailwindcss.com/docs/box-shadow#setting-the-ring-color
       */
      "ring-color": [{
        ring: q()
      }],
      /**
       * Ring Offset Width
       * @see https://v3.tailwindcss.com/docs/ring-offset-width
       * @deprecated since Tailwind CSS v4.0.0
       * @see https://github.com/tailwindlabs/tailwindcss/blob/v4.0.0/packages/tailwindcss/src/utilities.ts#L4158
       */
      "ring-offset-w": [{
        "ring-offset": [at, fr]
      }],
      /**
       * Ring Offset Color
       * @see https://v3.tailwindcss.com/docs/ring-offset-color
       * @deprecated since Tailwind CSS v4.0.0
       * @see https://github.com/tailwindlabs/tailwindcss/blob/v4.0.0/packages/tailwindcss/src/utilities.ts#L4158
       */
      "ring-offset-color": [{
        "ring-offset": q()
      }],
      /**
       * Inset Ring Width
       * @see https://tailwindcss.com/docs/box-shadow#adding-an-inset-ring
       */
      "inset-ring-w": [{
        "inset-ring": $e()
      }],
      /**
       * Inset Ring Color
       * @see https://tailwindcss.com/docs/box-shadow#setting-the-inset-ring-color
       */
      "inset-ring-color": [{
        "inset-ring": q()
      }],
      /**
       * Text Shadow
       * @see https://tailwindcss.com/docs/text-shadow
       */
      "text-shadow": [{
        "text-shadow": ["none", p, mo, ho]
      }],
      /**
       * Text Shadow Color
       * @see https://tailwindcss.com/docs/text-shadow#setting-the-shadow-color
       */
      "text-shadow-color": [{
        "text-shadow": q()
      }],
      /**
       * Opacity
       * @see https://tailwindcss.com/docs/opacity
       */
      opacity: [{
        opacity: [at, Ee, Ie]
      }],
      /**
       * Mix Blend Mode
       * @see https://tailwindcss.com/docs/mix-blend-mode
       */
      "mix-blend": [{
        "mix-blend": [...Ye(), "plus-darker", "plus-lighter"]
      }],
      /**
       * Background Blend Mode
       * @see https://tailwindcss.com/docs/background-blend-mode
       */
      "bg-blend": [{
        "bg-blend": Ye()
      }],
      /**
       * Mask Clip
       * @see https://tailwindcss.com/docs/mask-clip
       */
      "mask-clip": [{
        "mask-clip": ["border", "padding", "content", "fill", "stroke", "view"]
      }, "mask-no-clip"],
      /**
       * Mask Composite
       * @see https://tailwindcss.com/docs/mask-composite
       */
      "mask-composite": [{
        mask: ["add", "subtract", "intersect", "exclude"]
      }],
      /**
       * Mask Image
       * @see https://tailwindcss.com/docs/mask-image
       */
      "mask-image-linear-pos": [{
        "mask-linear": [at]
      }],
      "mask-image-linear-from-pos": [{
        "mask-linear-from": ne()
      }],
      "mask-image-linear-to-pos": [{
        "mask-linear-to": ne()
      }],
      "mask-image-linear-from-color": [{
        "mask-linear-from": q()
      }],
      "mask-image-linear-to-color": [{
        "mask-linear-to": q()
      }],
      "mask-image-t-from-pos": [{
        "mask-t-from": ne()
      }],
      "mask-image-t-to-pos": [{
        "mask-t-to": ne()
      }],
      "mask-image-t-from-color": [{
        "mask-t-from": q()
      }],
      "mask-image-t-to-color": [{
        "mask-t-to": q()
      }],
      "mask-image-r-from-pos": [{
        "mask-r-from": ne()
      }],
      "mask-image-r-to-pos": [{
        "mask-r-to": ne()
      }],
      "mask-image-r-from-color": [{
        "mask-r-from": q()
      }],
      "mask-image-r-to-color": [{
        "mask-r-to": q()
      }],
      "mask-image-b-from-pos": [{
        "mask-b-from": ne()
      }],
      "mask-image-b-to-pos": [{
        "mask-b-to": ne()
      }],
      "mask-image-b-from-color": [{
        "mask-b-from": q()
      }],
      "mask-image-b-to-color": [{
        "mask-b-to": q()
      }],
      "mask-image-l-from-pos": [{
        "mask-l-from": ne()
      }],
      "mask-image-l-to-pos": [{
        "mask-l-to": ne()
      }],
      "mask-image-l-from-color": [{
        "mask-l-from": q()
      }],
      "mask-image-l-to-color": [{
        "mask-l-to": q()
      }],
      "mask-image-x-from-pos": [{
        "mask-x-from": ne()
      }],
      "mask-image-x-to-pos": [{
        "mask-x-to": ne()
      }],
      "mask-image-x-from-color": [{
        "mask-x-from": q()
      }],
      "mask-image-x-to-color": [{
        "mask-x-to": q()
      }],
      "mask-image-y-from-pos": [{
        "mask-y-from": ne()
      }],
      "mask-image-y-to-pos": [{
        "mask-y-to": ne()
      }],
      "mask-image-y-from-color": [{
        "mask-y-from": q()
      }],
      "mask-image-y-to-color": [{
        "mask-y-to": q()
      }],
      "mask-image-radial": [{
        "mask-radial": [Ee, Ie]
      }],
      "mask-image-radial-from-pos": [{
        "mask-radial-from": ne()
      }],
      "mask-image-radial-to-pos": [{
        "mask-radial-to": ne()
      }],
      "mask-image-radial-from-color": [{
        "mask-radial-from": q()
      }],
      "mask-image-radial-to-color": [{
        "mask-radial-to": q()
      }],
      "mask-image-radial-shape": [{
        "mask-radial": ["circle", "ellipse"]
      }],
      "mask-image-radial-size": [{
        "mask-radial": [{
          closest: ["side", "corner"],
          farthest: ["side", "corner"]
        }]
      }],
      "mask-image-radial-pos": [{
        "mask-radial-at": w()
      }],
      "mask-image-conic-pos": [{
        "mask-conic": [at]
      }],
      "mask-image-conic-from-pos": [{
        "mask-conic-from": ne()
      }],
      "mask-image-conic-to-pos": [{
        "mask-conic-to": ne()
      }],
      "mask-image-conic-from-color": [{
        "mask-conic-from": q()
      }],
      "mask-image-conic-to-color": [{
        "mask-conic-to": q()
      }],
      /**
       * Mask Mode
       * @see https://tailwindcss.com/docs/mask-mode
       */
      "mask-mode": [{
        mask: ["alpha", "luminance", "match"]
      }],
      /**
       * Mask Origin
       * @see https://tailwindcss.com/docs/mask-origin
       */
      "mask-origin": [{
        "mask-origin": ["border", "padding", "content", "fill", "stroke", "view"]
      }],
      /**
       * Mask Position
       * @see https://tailwindcss.com/docs/mask-position
       */
      "mask-position": [{
        mask: Q()
      }],
      /**
       * Mask Repeat
       * @see https://tailwindcss.com/docs/mask-repeat
       */
      "mask-repeat": [{
        mask: se()
      }],
      /**
       * Mask Size
       * @see https://tailwindcss.com/docs/mask-size
       */
      "mask-size": [{
        mask: ce()
      }],
      /**
       * Mask Type
       * @see https://tailwindcss.com/docs/mask-type
       */
      "mask-type": [{
        "mask-type": ["alpha", "luminance"]
      }],
      /**
       * Mask Image
       * @see https://tailwindcss.com/docs/mask-image
       */
      "mask-image": [{
        mask: ["none", Ee, Ie]
      }],
      // ---------------
      // --- Filters ---
      // ---------------
      /**
       * Filter
       * @see https://tailwindcss.com/docs/filter
       */
      filter: [{
        filter: [
          // Deprecated since Tailwind CSS v3.0.0
          "",
          "none",
          Ee,
          Ie
        ]
      }],
      /**
       * Blur
       * @see https://tailwindcss.com/docs/blur
       */
      blur: [{
        blur: ae()
      }],
      /**
       * Brightness
       * @see https://tailwindcss.com/docs/brightness
       */
      brightness: [{
        brightness: [at, Ee, Ie]
      }],
      /**
       * Contrast
       * @see https://tailwindcss.com/docs/contrast
       */
      contrast: [{
        contrast: [at, Ee, Ie]
      }],
      /**
       * Drop Shadow
       * @see https://tailwindcss.com/docs/drop-shadow
       */
      "drop-shadow": [{
        "drop-shadow": [
          // Deprecated since Tailwind CSS v4.0.0
          "",
          "none",
          g,
          mo,
          ho
        ]
      }],
      /**
       * Drop Shadow Color
       * @see https://tailwindcss.com/docs/filter-drop-shadow#setting-the-shadow-color
       */
      "drop-shadow-color": [{
        "drop-shadow": q()
      }],
      /**
       * Grayscale
       * @see https://tailwindcss.com/docs/grayscale
       */
      grayscale: [{
        grayscale: ["", at, Ee, Ie]
      }],
      /**
       * Hue Rotate
       * @see https://tailwindcss.com/docs/hue-rotate
       */
      "hue-rotate": [{
        "hue-rotate": [at, Ee, Ie]
      }],
      /**
       * Invert
       * @see https://tailwindcss.com/docs/invert
       */
      invert: [{
        invert: ["", at, Ee, Ie]
      }],
      /**
       * Saturate
       * @see https://tailwindcss.com/docs/saturate
       */
      saturate: [{
        saturate: [at, Ee, Ie]
      }],
      /**
       * Sepia
       * @see https://tailwindcss.com/docs/sepia
       */
      sepia: [{
        sepia: ["", at, Ee, Ie]
      }],
      /**
       * Backdrop Filter
       * @see https://tailwindcss.com/docs/backdrop-filter
       */
      "backdrop-filter": [{
        "backdrop-filter": [
          // Deprecated since Tailwind CSS v3.0.0
          "",
          "none",
          Ee,
          Ie
        ]
      }],
      /**
       * Backdrop Blur
       * @see https://tailwindcss.com/docs/backdrop-blur
       */
      "backdrop-blur": [{
        "backdrop-blur": ae()
      }],
      /**
       * Backdrop Brightness
       * @see https://tailwindcss.com/docs/backdrop-brightness
       */
      "backdrop-brightness": [{
        "backdrop-brightness": [at, Ee, Ie]
      }],
      /**
       * Backdrop Contrast
       * @see https://tailwindcss.com/docs/backdrop-contrast
       */
      "backdrop-contrast": [{
        "backdrop-contrast": [at, Ee, Ie]
      }],
      /**
       * Backdrop Grayscale
       * @see https://tailwindcss.com/docs/backdrop-grayscale
       */
      "backdrop-grayscale": [{
        "backdrop-grayscale": ["", at, Ee, Ie]
      }],
      /**
       * Backdrop Hue Rotate
       * @see https://tailwindcss.com/docs/backdrop-hue-rotate
       */
      "backdrop-hue-rotate": [{
        "backdrop-hue-rotate": [at, Ee, Ie]
      }],
      /**
       * Backdrop Invert
       * @see https://tailwindcss.com/docs/backdrop-invert
       */
      "backdrop-invert": [{
        "backdrop-invert": ["", at, Ee, Ie]
      }],
      /**
       * Backdrop Opacity
       * @see https://tailwindcss.com/docs/backdrop-opacity
       */
      "backdrop-opacity": [{
        "backdrop-opacity": [at, Ee, Ie]
      }],
      /**
       * Backdrop Saturate
       * @see https://tailwindcss.com/docs/backdrop-saturate
       */
      "backdrop-saturate": [{
        "backdrop-saturate": [at, Ee, Ie]
      }],
      /**
       * Backdrop Sepia
       * @see https://tailwindcss.com/docs/backdrop-sepia
       */
      "backdrop-sepia": [{
        "backdrop-sepia": ["", at, Ee, Ie]
      }],
      // --------------
      // --- Tables ---
      // --------------
      /**
       * Border Collapse
       * @see https://tailwindcss.com/docs/border-collapse
       */
      "border-collapse": [{
        border: ["collapse", "separate"]
      }],
      /**
       * Border Spacing
       * @see https://tailwindcss.com/docs/border-spacing
       */
      "border-spacing": [{
        "border-spacing": E()
      }],
      /**
       * Border Spacing X
       * @see https://tailwindcss.com/docs/border-spacing
       */
      "border-spacing-x": [{
        "border-spacing-x": E()
      }],
      /**
       * Border Spacing Y
       * @see https://tailwindcss.com/docs/border-spacing
       */
      "border-spacing-y": [{
        "border-spacing-y": E()
      }],
      /**
       * Table Layout
       * @see https://tailwindcss.com/docs/table-layout
       */
      "table-layout": [{
        table: ["auto", "fixed"]
      }],
      /**
       * Caption Side
       * @see https://tailwindcss.com/docs/caption-side
       */
      caption: [{
        caption: ["top", "bottom"]
      }],
      // ---------------------------------
      // --- Transitions and Animation ---
      // ---------------------------------
      /**
       * Transition Property
       * @see https://tailwindcss.com/docs/transition-property
       */
      transition: [{
        transition: ["", "all", "colors", "opacity", "shadow", "transform", "none", Ee, Ie]
      }],
      /**
       * Transition Behavior
       * @see https://tailwindcss.com/docs/transition-behavior
       */
      "transition-behavior": [{
        transition: ["normal", "discrete"]
      }],
      /**
       * Transition Duration
       * @see https://tailwindcss.com/docs/transition-duration
       */
      duration: [{
        duration: [at, "initial", Ee, Ie]
      }],
      /**
       * Transition Timing Function
       * @see https://tailwindcss.com/docs/transition-timing-function
       */
      ease: [{
        ease: ["linear", "initial", x, Ee, Ie]
      }],
      /**
       * Transition Delay
       * @see https://tailwindcss.com/docs/transition-delay
       */
      delay: [{
        delay: [at, Ee, Ie]
      }],
      /**
       * Animation
       * @see https://tailwindcss.com/docs/animation
       */
      animate: [{
        animate: ["none", b, Ee, Ie]
      }],
      // ------------------
      // --- Transforms ---
      // ------------------
      /**
       * Backface Visibility
       * @see https://tailwindcss.com/docs/backface-visibility
       */
      backface: [{
        backface: ["hidden", "visible"]
      }],
      /**
       * Perspective
       * @see https://tailwindcss.com/docs/perspective
       */
      perspective: [{
        perspective: [m, Ee, Ie]
      }],
      /**
       * Perspective Origin
       * @see https://tailwindcss.com/docs/perspective-origin
       */
      "perspective-origin": [{
        "perspective-origin": $()
      }],
      /**
       * Rotate
       * @see https://tailwindcss.com/docs/rotate
       */
      rotate: [{
        rotate: be()
      }],
      /**
       * Rotate X
       * @see https://tailwindcss.com/docs/rotate
       */
      "rotate-x": [{
        "rotate-x": be()
      }],
      /**
       * Rotate Y
       * @see https://tailwindcss.com/docs/rotate
       */
      "rotate-y": [{
        "rotate-y": be()
      }],
      /**
       * Rotate Z
       * @see https://tailwindcss.com/docs/rotate
       */
      "rotate-z": [{
        "rotate-z": be()
      }],
      /**
       * Scale
       * @see https://tailwindcss.com/docs/scale
       */
      scale: [{
        scale: De()
      }],
      /**
       * Scale X
       * @see https://tailwindcss.com/docs/scale
       */
      "scale-x": [{
        "scale-x": De()
      }],
      /**
       * Scale Y
       * @see https://tailwindcss.com/docs/scale
       */
      "scale-y": [{
        "scale-y": De()
      }],
      /**
       * Scale Z
       * @see https://tailwindcss.com/docs/scale
       */
      "scale-z": [{
        "scale-z": De()
      }],
      /**
       * Scale 3D
       * @see https://tailwindcss.com/docs/scale
       */
      "scale-3d": ["scale-3d"],
      /**
       * Skew
       * @see https://tailwindcss.com/docs/skew
       */
      skew: [{
        skew: Ke()
      }],
      /**
       * Skew X
       * @see https://tailwindcss.com/docs/skew
       */
      "skew-x": [{
        "skew-x": Ke()
      }],
      /**
       * Skew Y
       * @see https://tailwindcss.com/docs/skew
       */
      "skew-y": [{
        "skew-y": Ke()
      }],
      /**
       * Transform
       * @see https://tailwindcss.com/docs/transform
       */
      transform: [{
        transform: [Ee, Ie, "", "none", "gpu", "cpu"]
      }],
      /**
       * Transform Origin
       * @see https://tailwindcss.com/docs/transform-origin
       */
      "transform-origin": [{
        origin: $()
      }],
      /**
       * Transform Style
       * @see https://tailwindcss.com/docs/transform-style
       */
      "transform-style": [{
        transform: ["3d", "flat"]
      }],
      /**
       * Translate
       * @see https://tailwindcss.com/docs/translate
       */
      translate: [{
        translate: re()
      }],
      /**
       * Translate X
       * @see https://tailwindcss.com/docs/translate
       */
      "translate-x": [{
        "translate-x": re()
      }],
      /**
       * Translate Y
       * @see https://tailwindcss.com/docs/translate
       */
      "translate-y": [{
        "translate-y": re()
      }],
      /**
       * Translate Z
       * @see https://tailwindcss.com/docs/translate
       */
      "translate-z": [{
        "translate-z": re()
      }],
      /**
       * Translate None
       * @see https://tailwindcss.com/docs/translate
       */
      "translate-none": ["translate-none"],
      // ---------------------
      // --- Interactivity ---
      // ---------------------
      /**
       * Accent Color
       * @see https://tailwindcss.com/docs/accent-color
       */
      accent: [{
        accent: q()
      }],
      /**
       * Appearance
       * @see https://tailwindcss.com/docs/appearance
       */
      appearance: [{
        appearance: ["none", "auto"]
      }],
      /**
       * Caret Color
       * @see https://tailwindcss.com/docs/just-in-time-mode#caret-color-utilities
       */
      "caret-color": [{
        caret: q()
      }],
      /**
       * Color Scheme
       * @see https://tailwindcss.com/docs/color-scheme
       */
      "color-scheme": [{
        scheme: ["normal", "dark", "light", "light-dark", "only-dark", "only-light"]
      }],
      /**
       * Cursor
       * @see https://tailwindcss.com/docs/cursor
       */
      cursor: [{
        cursor: ["auto", "default", "pointer", "wait", "text", "move", "help", "not-allowed", "none", "context-menu", "progress", "cell", "crosshair", "vertical-text", "alias", "copy", "no-drop", "grab", "grabbing", "all-scroll", "col-resize", "row-resize", "n-resize", "e-resize", "s-resize", "w-resize", "ne-resize", "nw-resize", "se-resize", "sw-resize", "ew-resize", "ns-resize", "nesw-resize", "nwse-resize", "zoom-in", "zoom-out", Ee, Ie]
      }],
      /**
       * Field Sizing
       * @see https://tailwindcss.com/docs/field-sizing
       */
      "field-sizing": [{
        "field-sizing": ["fixed", "content"]
      }],
      /**
       * Pointer Events
       * @see https://tailwindcss.com/docs/pointer-events
       */
      "pointer-events": [{
        "pointer-events": ["auto", "none"]
      }],
      /**
       * Resize
       * @see https://tailwindcss.com/docs/resize
       */
      resize: [{
        resize: ["none", "", "y", "x"]
      }],
      /**
       * Scroll Behavior
       * @see https://tailwindcss.com/docs/scroll-behavior
       */
      "scroll-behavior": [{
        scroll: ["auto", "smooth"]
      }],
      /**
       * Scroll Margin
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-m": [{
        "scroll-m": E()
      }],
      /**
       * Scroll Margin X
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mx": [{
        "scroll-mx": E()
      }],
      /**
       * Scroll Margin Y
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-my": [{
        "scroll-my": E()
      }],
      /**
       * Scroll Margin Start
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-ms": [{
        "scroll-ms": E()
      }],
      /**
       * Scroll Margin End
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-me": [{
        "scroll-me": E()
      }],
      /**
       * Scroll Margin Top
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mt": [{
        "scroll-mt": E()
      }],
      /**
       * Scroll Margin Right
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mr": [{
        "scroll-mr": E()
      }],
      /**
       * Scroll Margin Bottom
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mb": [{
        "scroll-mb": E()
      }],
      /**
       * Scroll Margin Left
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-ml": [{
        "scroll-ml": E()
      }],
      /**
       * Scroll Padding
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-p": [{
        "scroll-p": E()
      }],
      /**
       * Scroll Padding X
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-px": [{
        "scroll-px": E()
      }],
      /**
       * Scroll Padding Y
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-py": [{
        "scroll-py": E()
      }],
      /**
       * Scroll Padding Start
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-ps": [{
        "scroll-ps": E()
      }],
      /**
       * Scroll Padding End
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pe": [{
        "scroll-pe": E()
      }],
      /**
       * Scroll Padding Top
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pt": [{
        "scroll-pt": E()
      }],
      /**
       * Scroll Padding Right
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pr": [{
        "scroll-pr": E()
      }],
      /**
       * Scroll Padding Bottom
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pb": [{
        "scroll-pb": E()
      }],
      /**
       * Scroll Padding Left
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pl": [{
        "scroll-pl": E()
      }],
      /**
       * Scroll Snap Align
       * @see https://tailwindcss.com/docs/scroll-snap-align
       */
      "snap-align": [{
        snap: ["start", "end", "center", "align-none"]
      }],
      /**
       * Scroll Snap Stop
       * @see https://tailwindcss.com/docs/scroll-snap-stop
       */
      "snap-stop": [{
        snap: ["normal", "always"]
      }],
      /**
       * Scroll Snap Type
       * @see https://tailwindcss.com/docs/scroll-snap-type
       */
      "snap-type": [{
        snap: ["none", "x", "y", "both"]
      }],
      /**
       * Scroll Snap Type Strictness
       * @see https://tailwindcss.com/docs/scroll-snap-type
       */
      "snap-strictness": [{
        snap: ["mandatory", "proximity"]
      }],
      /**
       * Touch Action
       * @see https://tailwindcss.com/docs/touch-action
       */
      touch: [{
        touch: ["auto", "none", "manipulation"]
      }],
      /**
       * Touch Action X
       * @see https://tailwindcss.com/docs/touch-action
       */
      "touch-x": [{
        "touch-pan": ["x", "left", "right"]
      }],
      /**
       * Touch Action Y
       * @see https://tailwindcss.com/docs/touch-action
       */
      "touch-y": [{
        "touch-pan": ["y", "up", "down"]
      }],
      /**
       * Touch Action Pinch Zoom
       * @see https://tailwindcss.com/docs/touch-action
       */
      "touch-pz": ["touch-pinch-zoom"],
      /**
       * User Select
       * @see https://tailwindcss.com/docs/user-select
       */
      select: [{
        select: ["none", "text", "all", "auto"]
      }],
      /**
       * Will Change
       * @see https://tailwindcss.com/docs/will-change
       */
      "will-change": [{
        "will-change": ["auto", "scroll", "contents", "transform", Ee, Ie]
      }],
      // -----------
      // --- SVG ---
      // -----------
      /**
       * Fill
       * @see https://tailwindcss.com/docs/fill
       */
      fill: [{
        fill: ["none", ...q()]
      }],
      /**
       * Stroke Width
       * @see https://tailwindcss.com/docs/stroke-width
       */
      "stroke-w": [{
        stroke: [at, Us, fr, Au]
      }],
      /**
       * Stroke
       * @see https://tailwindcss.com/docs/stroke
       */
      stroke: [{
        stroke: ["none", ...q()]
      }],
      // ---------------------
      // --- Accessibility ---
      // ---------------------
      /**
       * Forced Color Adjust
       * @see https://tailwindcss.com/docs/forced-color-adjust
       */
      "forced-color-adjust": [{
        "forced-color-adjust": ["auto", "none"]
      }]
    },
    conflictingClassGroups: {
      overflow: ["overflow-x", "overflow-y"],
      overscroll: ["overscroll-x", "overscroll-y"],
      inset: ["inset-x", "inset-y", "start", "end", "top", "right", "bottom", "left"],
      "inset-x": ["right", "left"],
      "inset-y": ["top", "bottom"],
      flex: ["basis", "grow", "shrink"],
      gap: ["gap-x", "gap-y"],
      p: ["px", "py", "ps", "pe", "pt", "pr", "pb", "pl"],
      px: ["pr", "pl"],
      py: ["pt", "pb"],
      m: ["mx", "my", "ms", "me", "mt", "mr", "mb", "ml"],
      mx: ["mr", "ml"],
      my: ["mt", "mb"],
      size: ["w", "h"],
      "font-size": ["leading"],
      "fvn-normal": ["fvn-ordinal", "fvn-slashed-zero", "fvn-figure", "fvn-spacing", "fvn-fraction"],
      "fvn-ordinal": ["fvn-normal"],
      "fvn-slashed-zero": ["fvn-normal"],
      "fvn-figure": ["fvn-normal"],
      "fvn-spacing": ["fvn-normal"],
      "fvn-fraction": ["fvn-normal"],
      "line-clamp": ["display", "overflow"],
      rounded: ["rounded-s", "rounded-e", "rounded-t", "rounded-r", "rounded-b", "rounded-l", "rounded-ss", "rounded-se", "rounded-ee", "rounded-es", "rounded-tl", "rounded-tr", "rounded-br", "rounded-bl"],
      "rounded-s": ["rounded-ss", "rounded-es"],
      "rounded-e": ["rounded-se", "rounded-ee"],
      "rounded-t": ["rounded-tl", "rounded-tr"],
      "rounded-r": ["rounded-tr", "rounded-br"],
      "rounded-b": ["rounded-br", "rounded-bl"],
      "rounded-l": ["rounded-tl", "rounded-bl"],
      "border-spacing": ["border-spacing-x", "border-spacing-y"],
      "border-w": ["border-w-x", "border-w-y", "border-w-s", "border-w-e", "border-w-t", "border-w-r", "border-w-b", "border-w-l"],
      "border-w-x": ["border-w-r", "border-w-l"],
      "border-w-y": ["border-w-t", "border-w-b"],
      "border-color": ["border-color-x", "border-color-y", "border-color-s", "border-color-e", "border-color-t", "border-color-r", "border-color-b", "border-color-l"],
      "border-color-x": ["border-color-r", "border-color-l"],
      "border-color-y": ["border-color-t", "border-color-b"],
      translate: ["translate-x", "translate-y", "translate-none"],
      "translate-none": ["translate", "translate-x", "translate-y", "translate-z"],
      "scroll-m": ["scroll-mx", "scroll-my", "scroll-ms", "scroll-me", "scroll-mt", "scroll-mr", "scroll-mb", "scroll-ml"],
      "scroll-mx": ["scroll-mr", "scroll-ml"],
      "scroll-my": ["scroll-mt", "scroll-mb"],
      "scroll-p": ["scroll-px", "scroll-py", "scroll-ps", "scroll-pe", "scroll-pt", "scroll-pr", "scroll-pb", "scroll-pl"],
      "scroll-px": ["scroll-pr", "scroll-pl"],
      "scroll-py": ["scroll-pt", "scroll-pb"],
      touch: ["touch-x", "touch-y", "touch-pz"],
      "touch-x": ["touch"],
      "touch-y": ["touch"],
      "touch-pz": ["touch"]
    },
    conflictingClassGroupModifiers: {
      "font-size": ["leading"]
    },
    orderSensitiveModifiers: ["*", "**", "after", "backdrop", "before", "details-content", "file", "first-letter", "first-line", "marker", "placeholder", "selection"]
  };
}, PR = (e, {
  cacheSize: t,
  prefix: a,
  experimentalParseClassName: n,
  extend: r = {},
  override: s = {}
}) => (Zs(e, "cacheSize", t), Zs(e, "prefix", a), Zs(e, "experimentalParseClassName", n), yo(e.theme, s.theme), yo(e.classGroups, s.classGroups), yo(e.conflictingClassGroups, s.conflictingClassGroups), yo(e.conflictingClassGroupModifiers, s.conflictingClassGroupModifiers), Zs(e, "orderSensitiveModifiers", s.orderSensitiveModifiers), bo(e.theme, r.theme), bo(e.classGroups, r.classGroups), bo(e.conflictingClassGroups, r.conflictingClassGroups), bo(e.conflictingClassGroupModifiers, r.conflictingClassGroupModifiers), g0(e, r, "orderSensitiveModifiers"), e), Zs = (e, t, a) => {
  a !== void 0 && (e[t] = a);
}, yo = (e, t) => {
  if (t)
    for (const a in t)
      Zs(e, a, t[a]);
}, bo = (e, t) => {
  if (t)
    for (const a in t)
      g0(e, t, a);
}, g0 = (e, t, a) => {
  const n = t[a];
  n !== void 0 && (e[a] = e[a] ? e[a].concat(n) : n);
}, DR = (e, ...t) => typeof e == "function" ? Nd(Hd, e, ...t) : Nd(() => PR(Hd(), e), ...t), MR = /* @__PURE__ */ Nd(Hd);
var RR = (e) => ga(e) ? MR : DR({ ...e, extend: { theme: e.theme, classGroups: e.classGroups, conflictingClassGroupModifiers: e.conflictingClassGroupModifiers, conflictingClassGroups: e.conflictingClassGroups, ...e.extend } }), LR = (...e) => (t) => {
  let a = fl(e);
  return !a || !t.twMerge ? a : ((!kn.cachedTwMerge || kn.didTwMergeConfigChange) && (kn.didTwMergeConfigChange = !1, kn.cachedTwMerge = RR(kn.cachedTwMergeConfig)), kn.cachedTwMerge(a) || void 0);
}, { createTV: OR } = eR(LR);
const FR = Vf, W = /* @__PURE__ */ OR(FR.ui?.tv), he = /* @__PURE__ */ L({
  __name: "Icon",
  props: {
    name: {},
    mode: {},
    size: {},
    customize: { type: Function }
  },
  setup(e) {
    const a = xt(tt(e, "name", "mode", "size", "customize"));
    return (n, r) => {
      const s = dm("Icon", !0);
      return typeof n.name == "string" ? (h(), k(s, pe(O({ key: 0 }, u(a))), null, 16)) : (h(), k(ut(n.name), { key: 1 }));
    };
  }
}), zR = {
  slots: {
    root: "w-full",
    item: "border-b border-default last:border-b-0",
    header: "flex",
    trigger: "group flex-1 flex items-center gap-1.5 font-medium text-sm py-3.5 focus-visible:outline-primary min-w-0",
    content: "data-[state=open]:animate-[accordion-down_200ms_ease-out] data-[state=closed]:animate-[accordion-up_200ms_ease-out] overflow-hidden focus:outline-none",
    body: "text-sm pb-3.5",
    leadingIcon: "shrink-0 size-5",
    trailingIcon: "shrink-0 size-5 ms-auto group-data-[state=open]:rotate-180 transition-transform duration-200",
    label: "text-start break-words"
  },
  variants: {
    disabled: {
      true: {
        trigger: "cursor-not-allowed opacity-75"
      }
    }
  }
}, n4 = /* @__PURE__ */ L({
  __name: "Accordion",
  props: {
    as: {},
    items: {},
    trailingIcon: {},
    labelKey: { default: "label" },
    class: {},
    ui: {},
    collapsible: { type: Boolean, default: !0 },
    defaultValue: {},
    modelValue: {},
    type: { default: "single" },
    disabled: { type: Boolean },
    unmountOnHide: { type: Boolean, default: !0 }
  },
  emits: ["update:modelValue"],
  setup(e, { emit: t }) {
    const a = e, n = t, r = Se(), s = ue(), i = Xe(tt(a, "as", "collapsible", "defaultValue", "disabled", "modelValue", "type", "unmountOnHide"), n), o = T(() => W({ extend: W(zR), ...s.ui?.accordion || {} })({
      disabled: a.disabled
    }));
    return (l, d) => (h(), k(u(gd), O(u(i), {
      class: o.value.root({ class: [a.ui?.root, a.class] })
    }), {
      default: _(() => [
        (h(!0), M(te, null, le(a.items, (c, f) => (h(), k(u(Qm), {
          key: f,
          value: c.value || String(f),
          disabled: c.disabled,
          class: A(o.value.item({ class: [a.ui?.item, c.ui?.item, c.class] }))
        }, {
          default: _(({ open: p }) => [
            V(u(BS), {
              as: "div",
              class: A(o.value.header({ class: [a.ui?.header, c.ui?.header] }))
            }, {
              default: _(() => [
                V(u(hd), {
                  class: A(o.value.trigger({ class: [a.ui?.trigger, c.ui?.trigger], disabled: c.disabled }))
                }, {
                  default: _(() => [
                    S(l.$slots, "leading", {
                      item: c,
                      index: f,
                      open: p
                    }, () => [
                      c.icon ? (h(), k(he, {
                        key: 0,
                        name: c.icon,
                        class: A(o.value.leadingIcon({ class: [a.ui?.leadingIcon, c?.ui?.leadingIcon] }))
                      }, null, 8, ["name", "class"])) : D("", !0)
                    ]),
                    u(qe)(c, a.labelKey) || r.default ? (h(), M("span", {
                      key: 0,
                      class: A(o.value.label({ class: [a.ui?.label, c.ui?.label] }))
                    }, [
                      S(l.$slots, "default", {
                        item: c,
                        index: f,
                        open: p
                      }, () => [
                        ee(X(u(qe)(c, a.labelKey)), 1)
                      ])
                    ], 2)) : D("", !0),
                    S(l.$slots, "trailing", {
                      item: c,
                      index: f,
                      open: p
                    }, () => [
                      V(he, {
                        name: c.trailingIcon || l.trailingIcon || u(s).ui.icons.chevronDown,
                        class: A(o.value.trailingIcon({ class: [a.ui?.trailingIcon, c.ui?.trailingIcon] }))
                      }, null, 8, ["name", "class"])
                    ])
                  ]),
                  _: 2
                }, 1032, ["class"])
              ]),
              _: 2
            }, 1032, ["class"]),
            c.content || r.content || c.slot && r[c.slot] || r.body || c.slot && r[`${c.slot}-body`] ? (h(), k(u(Zm), {
              key: 0,
              class: A(o.value.content({ class: [a.ui?.content, c.ui?.content] }))
            }, {
              default: _(() => [
                S(l.$slots, c.slot || "content", {
                  item: c,
                  index: f,
                  open: p
                }, () => [
                  J("div", {
                    class: A(o.value.body({ class: [a.ui?.body, c.ui?.body] }))
                  }, [
                    S(l.$slots, c.slot ? `${c.slot}-body` : "body", {
                      item: c,
                      index: f,
                      open: p
                    }, () => [
                      ee(X(c.content), 1)
                    ])
                  ], 2)
                ])
              ]),
              _: 2
            }, 1032, ["class"])) : D("", !0)
          ]),
          _: 2
        }, 1032, ["value", "disabled", "class"]))), 128))
      ]),
      _: 3
    }, 16, ["class"]));
  }
}), Gf = L({
  name: "UiImageStub",
  props: {
    src: { type: String, default: "" },
    alt: { type: String, default: "" }
  },
  setup(e, { attrs: t }) {
    return () => ln("img", { ...t, src: e.src, alt: e.alt });
  }
}), jd = Symbol("nuxt-ui.avatar-group");
function v0(e) {
  const t = Zt(jd, void 0), a = T(() => e.size ?? t?.value.size);
  return ta(jd, T(() => ({ size: a.value }))), {
    size: a
  };
}
const qR = {
  slots: {
    root: "relative inline-flex items-center justify-center shrink-0",
    base: "rounded-full ring ring-bg flex items-center justify-center text-inverted font-medium whitespace-nowrap"
  },
  variants: {
    color: {
      primary: "bg-primary",
      secondary: "bg-secondary",
      success: "bg-success",
      info: "bg-info",
      warning: "bg-warning",
      error: "bg-error",
      neutral: "bg-inverted"
    },
    size: {
      "3xs": "h-[4px] min-w-[4px] text-[4px]",
      "2xs": "h-[5px] min-w-[5px] text-[5px]",
      xs: "h-[6px] min-w-[6px] text-[6px]",
      sm: "h-[7px] min-w-[7px] text-[7px]",
      md: "h-[8px] min-w-[8px] text-[8px]",
      lg: "h-[9px] min-w-[9px] text-[9px]",
      xl: "h-[10px] min-w-[10px] text-[10px]",
      "2xl": "h-[11px] min-w-[11px] text-[11px]",
      "3xl": "h-[12px] min-w-[12px] text-[12px]"
    },
    position: {
      "top-right": "top-0 right-0",
      "bottom-right": "bottom-0 right-0",
      "top-left": "top-0 left-0",
      "bottom-left": "bottom-0 left-0"
    },
    inset: {
      false: ""
    },
    standalone: {
      false: "absolute"
    }
  },
  compoundVariants: [
    {
      position: "top-right",
      inset: !1,
      class: "-translate-y-1/2 translate-x-1/2 transform"
    },
    {
      position: "bottom-right",
      inset: !1,
      class: "translate-y-1/2 translate-x-1/2 transform"
    },
    {
      position: "top-left",
      inset: !1,
      class: "-translate-y-1/2 -translate-x-1/2 transform"
    },
    {
      position: "bottom-left",
      inset: !1,
      class: "translate-y-1/2 -translate-x-1/2 transform"
    }
  ],
  defaultVariants: {
    size: "md",
    color: "primary",
    position: "top-right"
  }
}, Rs = /* @__PURE__ */ L({
  inheritAttrs: !1,
  __name: "Chip",
  props: /* @__PURE__ */ mt({
    as: {},
    text: {},
    color: {},
    size: {},
    position: {},
    inset: { type: Boolean, default: !1 },
    standalone: { type: Boolean, default: !1 },
    class: {},
    ui: {}
  }, {
    show: { type: Boolean, default: !0 },
    showModifiers: {}
  }),
  emits: ["update:show"],
  setup(e) {
    const t = e, a = lt(e, "show"), { size: n } = v0(t), r = ue(), s = T(() => W({ extend: W(qR), ...r.ui?.chip || {} })({
      color: t.color,
      size: n.value,
      position: t.position,
      inset: t.inset,
      standalone: t.standalone
    }));
    return (i, o) => (h(), k(u(U), {
      as: i.as,
      class: A(s.value.root({ class: [t.ui?.root, t.class] }))
    }, {
      default: _(() => [
        V(u(Tn), pe(me(i.$attrs)), {
          default: _(() => [
            S(i.$slots, "default")
          ]),
          _: 3
        }, 16),
        a.value ? (h(), M("span", {
          key: 0,
          class: A(s.value.base({ class: t.ui?.base }))
        }, [
          S(i.$slots, "content", {}, () => [
            ee(X(i.text), 1)
          ])
        ], 2)) : D("", !0)
      ]),
      _: 3
    }, 8, ["as", "class"]));
  }
}), VR = {
  slots: {
    root: "inline-flex items-center justify-center shrink-0 select-none rounded-full align-middle bg-elevated",
    image: "h-full w-full rounded-[inherit] object-cover",
    fallback: "font-medium leading-none text-muted truncate",
    icon: "text-muted shrink-0"
  },
  variants: {
    size: {
      "3xs": {
        root: "size-4 text-[8px]"
      },
      "2xs": {
        root: "size-5 text-[10px]"
      },
      xs: {
        root: "size-6 text-xs"
      },
      sm: {
        root: "size-7 text-sm"
      },
      md: {
        root: "size-8 text-base"
      },
      lg: {
        root: "size-9 text-lg"
      },
      xl: {
        root: "size-10 text-xl"
      },
      "2xl": {
        root: "size-11 text-[22px]"
      },
      "3xl": {
        root: "size-12 text-2xl"
      }
    }
  },
  defaultVariants: {
    size: "md"
  }
}, ft = /* @__PURE__ */ L({
  inheritAttrs: !1,
  __name: "Avatar",
  props: {
    as: { default: "span" },
    src: {},
    alt: {},
    icon: {},
    text: {},
    size: {},
    chip: { type: [Boolean, Object] },
    class: {},
    style: {},
    ui: {}
  },
  setup(e) {
    const t = e, a = T(() => t.text || (t.alt || "").split(" ").map((d) => d.charAt(0)).join("").substring(0, 2)), n = ue(), { size: r } = v0(t), s = T(() => W({ extend: W(VR), ...n.ui?.avatar || {} })({
      size: r.value
    })), i = T(() => ({
      "3xs": 16,
      "2xs": 20,
      xs: 24,
      sm: 28,
      md: 32,
      lg: 36,
      xl: 40,
      "2xl": 44,
      "3xl": 48
    })[t.size || "md"]), o = N(!1);
    ye(() => t.src, () => {
      o.value && (o.value = !1);
    });
    function l() {
      o.value = !0;
    }
    return (d, c) => (h(), k(ut(t.chip ? Rs : u(U)), O({ as: d.as }, t.chip ? typeof t.chip == "object" ? { inset: !0, ...t.chip } : { inset: !0 } : {}, {
      class: s.value.root({ class: [t.ui?.root, t.class] }),
      style: t.style
    }), {
      default: _(() => [
        d.src && !o.value ? (h(), k(ut(u(Gf)), O({
          key: 0,
          role: "img",
          src: d.src,
          alt: d.alt,
          width: i.value,
          height: i.value
        }, d.$attrs, {
          class: s.value.image({ class: t.ui?.image }),
          onError: l
        }), null, 16, ["src", "alt", "width", "height", "class"])) : (h(), k(u(Tn), pe(O({ key: 1 }, d.$attrs)), {
          default: _(() => [
            S(d.$slots, "default", {}, () => [
              d.icon ? (h(), k(he, {
                key: 0,
                name: d.icon,
                class: A(s.value.icon({ class: t.ui?.icon }))
              }, null, 8, ["name", "class"])) : (h(), M("span", {
                key: 1,
                class: A(s.value.fallback({ class: t.ui?.fallback }))
              }, X(a.value || " "), 3))
            ])
          ]),
          _: 3
        }, 16))
      ]),
      _: 3
    }, 16, ["as", "class", "style"]));
  }
});
function lr(e) {
  const t = ue(), a = T(() => Re(e)), n = T(() => a.value.icon && a.value.leading || a.value.icon && !a.value.trailing || a.value.loading && !a.value.trailing || !!a.value.leadingIcon), r = T(() => a.value.icon && a.value.trailing || a.value.loading && a.value.trailing || !!a.value.trailingIcon), s = T(() => a.value.loading ? a.value.loadingIcon || t.ui.icons.loading : a.value.leadingIcon || a.value.icon), i = T(() => a.value.loading && !n.value ? a.value.loadingIcon || t.ui.icons.loading : a.value.trailingIcon || a.value.icon);
  return {
    isLeading: n,
    isTrailing: r,
    leadingIconName: s,
    trailingIconName: i
  };
}
const h0 = Symbol("nuxt-ui.field-group");
function ur(e) {
  const t = Zt(h0, void 0);
  return {
    orientation: T(() => t?.value.orientation),
    size: T(() => e?.size ?? t?.value.size)
  };
}
const m0 = Symbol("nuxt-ui.form-options"), Kd = Symbol("nuxt-ui.form-events"), Gd = Symbol("nuxt-ui.form-field"), y0 = Symbol("nuxt-ui.input-id"), b0 = Symbol("nuxt-ui.form-inputs"), w0 = Symbol("nuxt-ui.form-loading"), C0 = Symbol("nuxt-ui.form-errors");
function Ca(e, t) {
  const a = Zt(m0, void 0), n = Zt(Kd, void 0), r = Zt(Gd, void 0), s = Zt(b0, void 0), i = Zt(y0, void 0);
  ta(Gd, void 0), r && i && (t?.bind === !1 ? i.value = void 0 : e?.id && (i.value = e?.id), s && r.value.name && i.value && (s.value[r.value.name] = { id: i.value, pattern: r.value.errorPattern }));
  function o(p, g, v) {
    n && r && g && n.emit({ type: p, name: g, eager: v });
  }
  function l() {
    o("blur", r?.value.name);
  }
  function d() {
    o("focus", r?.value.name);
  }
  function c() {
    o("change", r?.value.name);
  }
  const f = /* @__PURE__ */ jb(
    () => {
      o("input", r?.value.name, !t?.deferInputValidation || r?.value.eagerValidation);
    },
    r?.value.validateOnInputDelay ?? a?.value.validateOnInputDelay ?? 0
  );
  return {
    id: T(() => e?.id ?? i?.value),
    name: T(() => e?.name ?? r?.value.name),
    size: T(() => e?.size ?? r?.value.size),
    color: T(() => r?.value.error ? "error" : e?.color),
    highlight: T(() => r?.value.error ? !0 : e?.highlight),
    disabled: T(() => a?.value.disabled || e?.disabled),
    emitFormBlur: l,
    emitFormInput: f,
    emitFormChange: c,
    emitFormFocus: d,
    ariaAttrs: T(() => {
      if (!r?.value) return;
      const p = ["error", "hint", "description", "help"].filter((v) => r?.value?.[v]).map((v) => `${r?.value.ariaId}-${v}`) || [], g = {
        "aria-invalid": !!r?.value.error
      };
      return p.length > 0 && (g["aria-describedby"] = p.join(" ")), g;
    })
  };
}
function Ga(e) {
  const t = Object.keys(e), a = t.filter((s) => s.startsWith("aria-")), n = t.filter((s) => s.startsWith("data-")), r = [
    "active",
    "activeClass",
    "ariaCurrentValue",
    "as",
    "disabled",
    "exact",
    "exactActiveClass",
    "exactHash",
    "exactQuery",
    "external",
    "href",
    "download",
    "inactiveClass",
    "noPrefetch",
    "noRel",
    "prefetch",
    "prefetchedClass",
    "rel",
    "replace",
    "target",
    "to",
    "type",
    "title",
    "onClick",
    ...a,
    ...n
  ];
  return tt(e, ...r);
}
function NR(e, t) {
  const a = NM(e, t).reduce((s, i) => (i.type === "added" && s.add(i.key), s), /* @__PURE__ */ new Set()), n = Object.fromEntries(Object.entries(e).filter(([s]) => !a.has(s))), r = Object.fromEntries(Object.entries(t).filter(([s]) => !a.has(s)));
  return ca(n, r);
}
const ha = /* @__PURE__ */ L({
  __name: "LinkBase",
  props: {
    as: { default: "button" },
    type: { default: "button" },
    disabled: { type: Boolean },
    onClick: {},
    href: {},
    navigate: {},
    target: {},
    rel: {},
    active: { type: Boolean },
    isExternal: { type: Boolean }
  },
  setup(e) {
    const t = e;
    function a(n) {
      if (t.disabled) {
        n.stopPropagation(), n.preventDefault();
        return;
      }
      if (t.onClick)
        for (const r of Array.isArray(t.onClick) ? t.onClick : [t.onClick])
          r(n);
      t.href && t.navigate && !t.isExternal && t.navigate(n);
    }
    return (n, r) => (h(), k(u(U), O(n.href ? {
      as: "a",
      href: n.disabled ? void 0 : n.href,
      "aria-disabled": n.disabled ? "true" : void 0,
      role: n.disabled ? "link" : void 0,
      tabindex: n.disabled ? -1 : void 0
    } : n.as === "button" ? {
      as: n.as,
      type: n.type,
      disabled: n.disabled
    } : {
      as: n.as
    }, {
      rel: n.rel,
      target: n.target,
      onClick: a
    }), {
      default: _(() => [
        S(n.$slots, "default")
      ]),
      _: 3
    }, 16, ["rel", "target"]));
  }
}), HR = {
  base: "focus-visible:outline-primary",
  variants: {
    active: {
      true: "text-primary",
      false: "text-muted"
    },
    disabled: {
      true: "cursor-not-allowed opacity-75"
    }
  },
  compoundVariants: [
    {
      active: !1,
      disabled: !1,
      class: [
        "hover:text-default",
        "transition-colors"
      ]
    }
  ]
}, Wt = /* @__PURE__ */ L({
  inheritAttrs: !1,
  __name: "Link",
  props: {
    as: { default: "button" },
    type: { default: "button" },
    disabled: { type: Boolean },
    active: { type: Boolean, default: void 0 },
    exact: { type: Boolean },
    exactQuery: { type: [Boolean, String] },
    exactHash: { type: Boolean },
    inactiveClass: {},
    custom: { type: Boolean },
    raw: { type: Boolean },
    class: {},
    to: {},
    href: {},
    external: { type: Boolean },
    target: {},
    rel: {},
    noRel: { type: Boolean },
    prefetchedClass: {},
    prefetch: { type: Boolean },
    prefetchOn: {},
    noPrefetch: { type: Boolean },
    activeClass: {},
    exactActiveClass: {},
    ariaCurrentValue: { default: "page" },
    viewTransition: { type: Boolean },
    replace: { type: Boolean }
  },
  setup(e) {
    const t = e, a = Nf(), n = ue(), r = xt(Ui(t, "as", "type", "disabled", "active", "exact", "exactQuery", "exactHash", "activeClass", "inactiveClass", "to", "href", "raw", "custom", "class")), s = T(() => W({
      extend: W(HR),
      ...Ct({
        variants: {
          active: {
            true: cl(n.ui?.link?.variants?.active?.true, t.activeClass),
            false: cl(n.ui?.link?.variants?.active?.false, t.inactiveClass)
          }
        }
      }, n.ui?.link || {})
    })), i = T(() => t.to ?? t.href);
    function o({ route: d, isActive: c, isExactActive: f }) {
      if (t.active !== void 0)
        return t.active;
      if (t.exactQuery === "partial") {
        if (!NR(d.query, a.query)) return !1;
      } else if (t.exactQuery === !0 && !ca(d.query, a.query))
        return !1;
      return t.exactHash && d.hash !== a.hash ? !1 : !!(t.exact && f || !t.exact && c);
    }
    function l({ route: d, isActive: c, isExactActive: f }) {
      const p = o({ route: d, isActive: c, isExactActive: f });
      return t.raw ? [t.class, p ? t.activeClass : t.inactiveClass] : s.value({ class: t.class, active: p, disabled: t.disabled });
    }
    return (d, c) => {
      const f = dm("NuxtLink");
      return h(), k(f, O(u(r), {
        to: i.value,
        custom: ""
      }), {
        default: _(({ href: p, navigate: g, route: v, rel: m, target: y, isExternal: x, isActive: b, isExactActive: C }) => [
          d.custom ? S(d.$slots, "default", pe(O({ key: 0 }, {
            ...d.$attrs,
            ...d.exact && C ? { "aria-current": t.ariaCurrentValue } : {},
            as: d.as,
            type: d.type,
            disabled: d.disabled,
            href: p,
            navigate: g,
            rel: m,
            target: y,
            isExternal: x,
            active: o({ route: v, isActive: b, isExactActive: C })
          }))) : (h(), k(ha, O({ key: 1 }, {
            ...d.$attrs,
            ...d.exact && C ? { "aria-current": t.ariaCurrentValue } : {},
            as: d.as,
            type: d.type,
            disabled: d.disabled,
            href: p,
            navigate: g,
            rel: m,
            target: y,
            isExternal: x
          }, {
            class: l({ route: v, isActive: b, isExactActive: C })
          }), {
            default: _(() => [
              S(d.$slots, "default", {
                active: o({ route: v, isActive: b, isExactActive: C })
              })
            ]),
            _: 2
          }, 1040, ["class"]))
        ]),
        _: 3
      }, 16, ["to"]);
    };
  }
}), jR = {
  slots: {
    base: [
      "rounded-md font-medium inline-flex items-center disabled:cursor-not-allowed aria-disabled:cursor-not-allowed disabled:opacity-75 aria-disabled:opacity-75",
      "transition-colors"
    ],
    label: "truncate",
    leadingIcon: "shrink-0",
    leadingAvatar: "shrink-0",
    leadingAvatarSize: "",
    trailingIcon: "shrink-0"
  },
  variants: {
    fieldGroup: {
      horizontal: "not-only:first:rounded-e-none not-only:last:rounded-s-none not-last:not-first:rounded-none focus-visible:z-[1]",
      vertical: "not-only:first:rounded-b-none not-only:last:rounded-t-none not-last:not-first:rounded-none focus-visible:z-[1]"
    },
    color: {
      primary: "",
      secondary: "",
      success: "",
      info: "",
      warning: "",
      error: "",
      neutral: ""
    },
    variant: {
      solid: "",
      outline: "",
      soft: "",
      subtle: "",
      ghost: "",
      link: ""
    },
    size: {
      xs: {
        base: "px-2 py-1 text-xs gap-1",
        leadingIcon: "size-4",
        leadingAvatarSize: "3xs",
        trailingIcon: "size-4"
      },
      sm: {
        base: "px-2.5 py-1.5 text-xs gap-1.5",
        leadingIcon: "size-4",
        leadingAvatarSize: "3xs",
        trailingIcon: "size-4"
      },
      md: {
        base: "px-2.5 py-1.5 text-sm gap-1.5",
        leadingIcon: "size-5",
        leadingAvatarSize: "2xs",
        trailingIcon: "size-5"
      },
      lg: {
        base: "px-3 py-2 text-sm gap-2",
        leadingIcon: "size-5",
        leadingAvatarSize: "2xs",
        trailingIcon: "size-5"
      },
      xl: {
        base: "px-3 py-2 text-base gap-2",
        leadingIcon: "size-6",
        leadingAvatarSize: "xs",
        trailingIcon: "size-6"
      }
    },
    block: {
      true: {
        base: "w-full justify-center",
        trailingIcon: "ms-auto"
      }
    },
    square: {
      true: ""
    },
    leading: {
      true: ""
    },
    trailing: {
      true: ""
    },
    loading: {
      true: ""
    },
    active: {
      true: {
        base: ""
      },
      false: {
        base: ""
      }
    }
  },
  compoundVariants: [
    {
      color: "primary",
      variant: "solid",
      class: "text-inverted bg-primary hover:bg-primary/75 active:bg-primary/75 disabled:bg-primary aria-disabled:bg-primary focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-primary"
    },
    {
      color: "secondary",
      variant: "solid",
      class: "text-inverted bg-secondary hover:bg-secondary/75 active:bg-secondary/75 disabled:bg-secondary aria-disabled:bg-secondary focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-secondary"
    },
    {
      color: "success",
      variant: "solid",
      class: "text-inverted bg-success hover:bg-success/75 active:bg-success/75 disabled:bg-success aria-disabled:bg-success focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-success"
    },
    {
      color: "info",
      variant: "solid",
      class: "text-inverted bg-info hover:bg-info/75 active:bg-info/75 disabled:bg-info aria-disabled:bg-info focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-info"
    },
    {
      color: "warning",
      variant: "solid",
      class: "text-inverted bg-warning hover:bg-warning/75 active:bg-warning/75 disabled:bg-warning aria-disabled:bg-warning focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-warning"
    },
    {
      color: "error",
      variant: "solid",
      class: "text-inverted bg-error hover:bg-error/75 active:bg-error/75 disabled:bg-error aria-disabled:bg-error focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-error"
    },
    {
      color: "primary",
      variant: "outline",
      class: "ring ring-inset ring-primary/50 text-primary hover:bg-primary/10 active:bg-primary/10 disabled:bg-transparent aria-disabled:bg-transparent dark:disabled:bg-transparent dark:aria-disabled:bg-transparent focus:outline-none focus-visible:ring-2 focus-visible:ring-primary"
    },
    {
      color: "secondary",
      variant: "outline",
      class: "ring ring-inset ring-secondary/50 text-secondary hover:bg-secondary/10 active:bg-secondary/10 disabled:bg-transparent aria-disabled:bg-transparent dark:disabled:bg-transparent dark:aria-disabled:bg-transparent focus:outline-none focus-visible:ring-2 focus-visible:ring-secondary"
    },
    {
      color: "success",
      variant: "outline",
      class: "ring ring-inset ring-success/50 text-success hover:bg-success/10 active:bg-success/10 disabled:bg-transparent aria-disabled:bg-transparent dark:disabled:bg-transparent dark:aria-disabled:bg-transparent focus:outline-none focus-visible:ring-2 focus-visible:ring-success"
    },
    {
      color: "info",
      variant: "outline",
      class: "ring ring-inset ring-info/50 text-info hover:bg-info/10 active:bg-info/10 disabled:bg-transparent aria-disabled:bg-transparent dark:disabled:bg-transparent dark:aria-disabled:bg-transparent focus:outline-none focus-visible:ring-2 focus-visible:ring-info"
    },
    {
      color: "warning",
      variant: "outline",
      class: "ring ring-inset ring-warning/50 text-warning hover:bg-warning/10 active:bg-warning/10 disabled:bg-transparent aria-disabled:bg-transparent dark:disabled:bg-transparent dark:aria-disabled:bg-transparent focus:outline-none focus-visible:ring-2 focus-visible:ring-warning"
    },
    {
      color: "error",
      variant: "outline",
      class: "ring ring-inset ring-error/50 text-error hover:bg-error/10 active:bg-error/10 disabled:bg-transparent aria-disabled:bg-transparent dark:disabled:bg-transparent dark:aria-disabled:bg-transparent focus:outline-none focus-visible:ring-2 focus-visible:ring-error"
    },
    {
      color: "primary",
      variant: "soft",
      class: "text-primary bg-primary/10 hover:bg-primary/15 active:bg-primary/15 focus:outline-none focus-visible:bg-primary/15 disabled:bg-primary/10 aria-disabled:bg-primary/10"
    },
    {
      color: "secondary",
      variant: "soft",
      class: "text-secondary bg-secondary/10 hover:bg-secondary/15 active:bg-secondary/15 focus:outline-none focus-visible:bg-secondary/15 disabled:bg-secondary/10 aria-disabled:bg-secondary/10"
    },
    {
      color: "success",
      variant: "soft",
      class: "text-success bg-success/10 hover:bg-success/15 active:bg-success/15 focus:outline-none focus-visible:bg-success/15 disabled:bg-success/10 aria-disabled:bg-success/10"
    },
    {
      color: "info",
      variant: "soft",
      class: "text-info bg-info/10 hover:bg-info/15 active:bg-info/15 focus:outline-none focus-visible:bg-info/15 disabled:bg-info/10 aria-disabled:bg-info/10"
    },
    {
      color: "warning",
      variant: "soft",
      class: "text-warning bg-warning/10 hover:bg-warning/15 active:bg-warning/15 focus:outline-none focus-visible:bg-warning/15 disabled:bg-warning/10 aria-disabled:bg-warning/10"
    },
    {
      color: "error",
      variant: "soft",
      class: "text-error bg-error/10 hover:bg-error/15 active:bg-error/15 focus:outline-none focus-visible:bg-error/15 disabled:bg-error/10 aria-disabled:bg-error/10"
    },
    {
      color: "primary",
      variant: "subtle",
      class: "text-primary ring ring-inset ring-primary/25 bg-primary/10 hover:bg-primary/15 active:bg-primary/15 disabled:bg-primary/10 aria-disabled:bg-primary/10 focus:outline-none focus-visible:ring-2 focus-visible:ring-primary"
    },
    {
      color: "secondary",
      variant: "subtle",
      class: "text-secondary ring ring-inset ring-secondary/25 bg-secondary/10 hover:bg-secondary/15 active:bg-secondary/15 disabled:bg-secondary/10 aria-disabled:bg-secondary/10 focus:outline-none focus-visible:ring-2 focus-visible:ring-secondary"
    },
    {
      color: "success",
      variant: "subtle",
      class: "text-success ring ring-inset ring-success/25 bg-success/10 hover:bg-success/15 active:bg-success/15 disabled:bg-success/10 aria-disabled:bg-success/10 focus:outline-none focus-visible:ring-2 focus-visible:ring-success"
    },
    {
      color: "info",
      variant: "subtle",
      class: "text-info ring ring-inset ring-info/25 bg-info/10 hover:bg-info/15 active:bg-info/15 disabled:bg-info/10 aria-disabled:bg-info/10 focus:outline-none focus-visible:ring-2 focus-visible:ring-info"
    },
    {
      color: "warning",
      variant: "subtle",
      class: "text-warning ring ring-inset ring-warning/25 bg-warning/10 hover:bg-warning/15 active:bg-warning/15 disabled:bg-warning/10 aria-disabled:bg-warning/10 focus:outline-none focus-visible:ring-2 focus-visible:ring-warning"
    },
    {
      color: "error",
      variant: "subtle",
      class: "text-error ring ring-inset ring-error/25 bg-error/10 hover:bg-error/15 active:bg-error/15 disabled:bg-error/10 aria-disabled:bg-error/10 focus:outline-none focus-visible:ring-2 focus-visible:ring-error"
    },
    {
      color: "primary",
      variant: "ghost",
      class: "text-primary hover:bg-primary/10 active:bg-primary/10 focus:outline-none focus-visible:bg-primary/10 disabled:bg-transparent aria-disabled:bg-transparent dark:disabled:bg-transparent dark:aria-disabled:bg-transparent"
    },
    {
      color: "secondary",
      variant: "ghost",
      class: "text-secondary hover:bg-secondary/10 active:bg-secondary/10 focus:outline-none focus-visible:bg-secondary/10 disabled:bg-transparent aria-disabled:bg-transparent dark:disabled:bg-transparent dark:aria-disabled:bg-transparent"
    },
    {
      color: "success",
      variant: "ghost",
      class: "text-success hover:bg-success/10 active:bg-success/10 focus:outline-none focus-visible:bg-success/10 disabled:bg-transparent aria-disabled:bg-transparent dark:disabled:bg-transparent dark:aria-disabled:bg-transparent"
    },
    {
      color: "info",
      variant: "ghost",
      class: "text-info hover:bg-info/10 active:bg-info/10 focus:outline-none focus-visible:bg-info/10 disabled:bg-transparent aria-disabled:bg-transparent dark:disabled:bg-transparent dark:aria-disabled:bg-transparent"
    },
    {
      color: "warning",
      variant: "ghost",
      class: "text-warning hover:bg-warning/10 active:bg-warning/10 focus:outline-none focus-visible:bg-warning/10 disabled:bg-transparent aria-disabled:bg-transparent dark:disabled:bg-transparent dark:aria-disabled:bg-transparent"
    },
    {
      color: "error",
      variant: "ghost",
      class: "text-error hover:bg-error/10 active:bg-error/10 focus:outline-none focus-visible:bg-error/10 disabled:bg-transparent aria-disabled:bg-transparent dark:disabled:bg-transparent dark:aria-disabled:bg-transparent"
    },
    {
      color: "primary",
      variant: "link",
      class: "text-primary hover:text-primary/75 active:text-primary/75 disabled:text-primary aria-disabled:text-primary focus:outline-none focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-primary"
    },
    {
      color: "secondary",
      variant: "link",
      class: "text-secondary hover:text-secondary/75 active:text-secondary/75 disabled:text-secondary aria-disabled:text-secondary focus:outline-none focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-secondary"
    },
    {
      color: "success",
      variant: "link",
      class: "text-success hover:text-success/75 active:text-success/75 disabled:text-success aria-disabled:text-success focus:outline-none focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-success"
    },
    {
      color: "info",
      variant: "link",
      class: "text-info hover:text-info/75 active:text-info/75 disabled:text-info aria-disabled:text-info focus:outline-none focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-info"
    },
    {
      color: "warning",
      variant: "link",
      class: "text-warning hover:text-warning/75 active:text-warning/75 disabled:text-warning aria-disabled:text-warning focus:outline-none focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-warning"
    },
    {
      color: "error",
      variant: "link",
      class: "text-error hover:text-error/75 active:text-error/75 disabled:text-error aria-disabled:text-error focus:outline-none focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-error"
    },
    {
      color: "neutral",
      variant: "solid",
      class: "text-inverted bg-inverted hover:bg-inverted/90 active:bg-inverted/90 disabled:bg-inverted aria-disabled:bg-inverted focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-inverted"
    },
    {
      color: "neutral",
      variant: "outline",
      class: "ring ring-inset ring-accented text-default bg-default hover:bg-elevated active:bg-elevated disabled:bg-default aria-disabled:bg-default focus:outline-none focus-visible:ring-2 focus-visible:ring-inverted"
    },
    {
      color: "neutral",
      variant: "soft",
      class: "text-default bg-elevated hover:bg-accented/75 active:bg-accented/75 focus:outline-none focus-visible:bg-accented/75 disabled:bg-elevated aria-disabled:bg-elevated"
    },
    {
      color: "neutral",
      variant: "subtle",
      class: "ring ring-inset ring-accented text-default bg-elevated hover:bg-accented/75 active:bg-accented/75 disabled:bg-elevated aria-disabled:bg-elevated focus:outline-none focus-visible:ring-2 focus-visible:ring-inverted"
    },
    {
      color: "neutral",
      variant: "ghost",
      class: "text-default hover:bg-elevated active:bg-elevated focus:outline-none focus-visible:bg-elevated hover:disabled:bg-transparent dark:hover:disabled:bg-transparent hover:aria-disabled:bg-transparent dark:hover:aria-disabled:bg-transparent"
    },
    {
      color: "neutral",
      variant: "link",
      class: "text-muted hover:text-default active:text-default disabled:text-muted aria-disabled:text-muted focus:outline-none focus-visible:ring-inset focus-visible:ring-2 focus-visible:ring-inverted"
    },
    {
      size: "xs",
      square: !0,
      class: "p-1"
    },
    {
      size: "sm",
      square: !0,
      class: "p-1.5"
    },
    {
      size: "md",
      square: !0,
      class: "p-1.5"
    },
    {
      size: "lg",
      square: !0,
      class: "p-2"
    },
    {
      size: "xl",
      square: !0,
      class: "p-2"
    },
    {
      loading: !0,
      leading: !0,
      class: {
        leadingIcon: "animate-spin"
      }
    },
    {
      loading: !0,
      leading: !1,
      trailing: !0,
      class: {
        trailingIcon: "animate-spin"
      }
    }
  ],
  defaultVariants: {
    color: "primary",
    variant: "solid",
    size: "md"
  }
}, Je = /* @__PURE__ */ L({
  __name: "Button",
  props: {
    label: {},
    color: {},
    activeColor: {},
    variant: {},
    activeVariant: {},
    size: {},
    square: { type: Boolean },
    block: { type: Boolean },
    loadingAuto: { type: Boolean },
    onClick: { type: [Function, Array] },
    class: {},
    ui: {},
    icon: {},
    avatar: {},
    leading: { type: Boolean },
    leadingIcon: {},
    trailing: { type: Boolean },
    trailingIcon: {},
    loading: { type: Boolean },
    loadingIcon: {},
    as: {},
    type: {},
    disabled: { type: Boolean },
    active: { type: Boolean },
    exact: { type: Boolean },
    exactQuery: { type: [Boolean, String] },
    exactHash: { type: Boolean },
    inactiveClass: {},
    to: {},
    href: {},
    external: { type: Boolean },
    target: {},
    rel: {},
    noRel: { type: Boolean },
    prefetchedClass: {},
    prefetch: { type: Boolean },
    prefetchOn: {},
    noPrefetch: { type: Boolean },
    activeClass: {},
    exactActiveClass: {},
    ariaCurrentValue: {},
    viewTransition: { type: Boolean },
    replace: { type: Boolean }
  },
  setup(e) {
    const t = e, a = Se(), n = ue(), { orientation: r, size: s } = ur(t), i = xt(Ga(t)), o = N(!1), l = Zt(w0, void 0);
    async function d(y) {
      o.value = !0;
      const x = Array.isArray(t.onClick) ? t.onClick : [t.onClick];
      try {
        await Promise.all(x.map((b) => b?.(y)));
      } finally {
        o.value = !1;
      }
    }
    const c = T(() => t.loading || t.loadingAuto && (o.value || l?.value && t.type === "submit")), { isLeading: f, isTrailing: p, leadingIconName: g, trailingIconName: v } = lr(
      T(() => ({ ...t, loading: c.value }))
    ), m = T(() => W({
      extend: W(jR),
      ...Ct({
        variants: {
          active: {
            true: {
              base: cl(n.ui?.button?.variants?.active?.true?.base, t.activeClass)
            },
            false: {
              base: cl(n.ui?.button?.variants?.active?.false?.base, t.inactiveClass)
            }
          }
        }
      }, n.ui?.button || {})
    })({
      color: t.color,
      variant: t.variant,
      size: s.value,
      loading: c.value,
      block: t.block,
      square: t.square || !a.default && !t.label,
      leading: f.value,
      trailing: p.value,
      fieldGroup: r.value
    }));
    return (y, x) => (h(), k(Wt, O({
      type: y.type,
      disabled: y.disabled || c.value
    }, u(Mt)(u(i), ["type", "disabled", "onClick"]), { custom: "" }), {
      default: _(({ active: b, ...C }) => [
        V(ha, O(C, {
          class: m.value.base({
            class: [t.ui?.base, t.class],
            active: b,
            ...b && y.activeVariant ? { variant: y.activeVariant } : {},
            ...b && y.activeColor ? { color: y.activeColor } : {}
          }),
          onClick: d
        }), {
          default: _(() => [
            S(y.$slots, "leading", {}, () => [
              u(f) && u(g) ? (h(), k(he, {
                key: 0,
                name: u(g),
                class: A(m.value.leadingIcon({ class: t.ui?.leadingIcon, active: b }))
              }, null, 8, ["name", "class"])) : y.avatar ? (h(), k(ft, O({
                key: 1,
                size: t.ui?.leadingAvatarSize || m.value.leadingAvatarSize()
              }, y.avatar, {
                class: m.value.leadingAvatar({ class: t.ui?.leadingAvatar, active: b })
              }), null, 16, ["size", "class"])) : D("", !0)
            ]),
            S(y.$slots, "default", {}, () => [
              y.label !== void 0 && y.label !== null ? (h(), M("span", {
                key: 0,
                class: A(m.value.label({ class: t.ui?.label, active: b }))
              }, X(y.label), 3)) : D("", !0)
            ]),
            S(y.$slots, "trailing", {}, () => [
              u(p) && u(v) ? (h(), k(he, {
                key: 0,
                name: u(v),
                class: A(m.value.trailingIcon({ class: t.ui?.trailingIcon, active: b }))
              }, null, 8, ["name", "class"])) : D("", !0)
            ])
          ]),
          _: 2
        }, 1040, ["class"])
      ]),
      _: 3
    }, 16, ["type", "disabled"]));
  }
}), KR = {
  slots: {
    root: "relative overflow-hidden w-full rounded-lg p-4 flex gap-2.5",
    wrapper: "min-w-0 flex-1 flex flex-col",
    title: "text-sm font-medium",
    description: "text-sm opacity-90",
    icon: "shrink-0 size-5",
    avatar: "shrink-0",
    avatarSize: "2xl",
    actions: "flex flex-wrap gap-1.5 shrink-0",
    close: "p-0"
  },
  variants: {
    color: {
      primary: "",
      secondary: "",
      success: "",
      info: "",
      warning: "",
      error: "",
      neutral: ""
    },
    variant: {
      solid: "",
      outline: "",
      soft: "",
      subtle: ""
    },
    orientation: {
      horizontal: {
        root: "items-center",
        actions: "items-center"
      },
      vertical: {
        root: "items-start",
        actions: "items-start mt-2.5"
      }
    },
    title: {
      true: {
        description: "mt-1"
      }
    }
  },
  compoundVariants: [
    {
      color: "primary",
      variant: "solid",
      class: {
        root: "bg-primary text-inverted"
      }
    },
    {
      color: "secondary",
      variant: "solid",
      class: {
        root: "bg-secondary text-inverted"
      }
    },
    {
      color: "success",
      variant: "solid",
      class: {
        root: "bg-success text-inverted"
      }
    },
    {
      color: "info",
      variant: "solid",
      class: {
        root: "bg-info text-inverted"
      }
    },
    {
      color: "warning",
      variant: "solid",
      class: {
        root: "bg-warning text-inverted"
      }
    },
    {
      color: "error",
      variant: "solid",
      class: {
        root: "bg-error text-inverted"
      }
    },
    {
      color: "primary",
      variant: "outline",
      class: {
        root: "text-primary ring ring-inset ring-primary/25"
      }
    },
    {
      color: "secondary",
      variant: "outline",
      class: {
        root: "text-secondary ring ring-inset ring-secondary/25"
      }
    },
    {
      color: "success",
      variant: "outline",
      class: {
        root: "text-success ring ring-inset ring-success/25"
      }
    },
    {
      color: "info",
      variant: "outline",
      class: {
        root: "text-info ring ring-inset ring-info/25"
      }
    },
    {
      color: "warning",
      variant: "outline",
      class: {
        root: "text-warning ring ring-inset ring-warning/25"
      }
    },
    {
      color: "error",
      variant: "outline",
      class: {
        root: "text-error ring ring-inset ring-error/25"
      }
    },
    {
      color: "primary",
      variant: "soft",
      class: {
        root: "bg-primary/10 text-primary"
      }
    },
    {
      color: "secondary",
      variant: "soft",
      class: {
        root: "bg-secondary/10 text-secondary"
      }
    },
    {
      color: "success",
      variant: "soft",
      class: {
        root: "bg-success/10 text-success"
      }
    },
    {
      color: "info",
      variant: "soft",
      class: {
        root: "bg-info/10 text-info"
      }
    },
    {
      color: "warning",
      variant: "soft",
      class: {
        root: "bg-warning/10 text-warning"
      }
    },
    {
      color: "error",
      variant: "soft",
      class: {
        root: "bg-error/10 text-error"
      }
    },
    {
      color: "primary",
      variant: "subtle",
      class: {
        root: "bg-primary/10 text-primary ring ring-inset ring-primary/25"
      }
    },
    {
      color: "secondary",
      variant: "subtle",
      class: {
        root: "bg-secondary/10 text-secondary ring ring-inset ring-secondary/25"
      }
    },
    {
      color: "success",
      variant: "subtle",
      class: {
        root: "bg-success/10 text-success ring ring-inset ring-success/25"
      }
    },
    {
      color: "info",
      variant: "subtle",
      class: {
        root: "bg-info/10 text-info ring ring-inset ring-info/25"
      }
    },
    {
      color: "warning",
      variant: "subtle",
      class: {
        root: "bg-warning/10 text-warning ring ring-inset ring-warning/25"
      }
    },
    {
      color: "error",
      variant: "subtle",
      class: {
        root: "bg-error/10 text-error ring ring-inset ring-error/25"
      }
    },
    {
      color: "neutral",
      variant: "solid",
      class: {
        root: "text-inverted bg-inverted"
      }
    },
    {
      color: "neutral",
      variant: "outline",
      class: {
        root: "text-highlighted bg-default ring ring-inset ring-default"
      }
    },
    {
      color: "neutral",
      variant: "soft",
      class: {
        root: "text-highlighted bg-elevated/50"
      }
    },
    {
      color: "neutral",
      variant: "subtle",
      class: {
        root: "text-highlighted bg-elevated/50 ring ring-inset ring-accented"
      }
    }
  ],
  defaultVariants: {
    color: "primary",
    variant: "solid"
  }
}, r4 = /* @__PURE__ */ L({
  __name: "Alert",
  props: {
    as: {},
    title: {},
    description: {},
    icon: {},
    avatar: {},
    color: {},
    variant: {},
    orientation: { default: "vertical" },
    actions: {},
    close: { type: [Boolean, Object] },
    closeIcon: {},
    class: {},
    ui: {}
  },
  emits: ["update:open"],
  setup(e, { emit: t }) {
    const a = e, n = t, r = Se(), { t: s } = it(), i = ue(), o = T(() => W({ extend: W(KR), ...i.ui?.alert || {} })({
      color: a.color,
      variant: a.variant,
      orientation: a.orientation,
      title: !!a.title || !!r.title
    }));
    return (l, d) => (h(), k(u(U), {
      as: l.as,
      "data-orientation": l.orientation,
      class: A(o.value.root({ class: [a.ui?.root, a.class] }))
    }, {
      default: _(() => [
        S(l.$slots, "leading", {}, () => [
          l.avatar ? (h(), k(ft, O({
            key: 0,
            size: a.ui?.avatarSize || o.value.avatarSize()
          }, l.avatar, {
            class: o.value.avatar({ class: a.ui?.avatar })
          }), null, 16, ["size", "class"])) : l.icon ? (h(), k(he, {
            key: 1,
            name: l.icon,
            class: A(o.value.icon({ class: a.ui?.icon }))
          }, null, 8, ["name", "class"])) : D("", !0)
        ]),
        J("div", {
          class: A(o.value.wrapper({ class: a.ui?.wrapper }))
        }, [
          l.title || r.title ? (h(), M("div", {
            key: 0,
            class: A(o.value.title({ class: a.ui?.title }))
          }, [
            S(l.$slots, "title", {}, () => [
              ee(X(l.title), 1)
            ])
          ], 2)) : D("", !0),
          l.description || r.description ? (h(), M("div", {
            key: 1,
            class: A(o.value.description({ class: a.ui?.description }))
          }, [
            S(l.$slots, "description", {}, () => [
              ee(X(l.description), 1)
            ])
          ], 2)) : D("", !0),
          l.orientation === "vertical" && (l.actions?.length || r.actions) ? (h(), M("div", {
            key: 2,
            class: A(o.value.actions({ class: a.ui?.actions }))
          }, [
            S(l.$slots, "actions", {}, () => [
              (h(!0), M(te, null, le(l.actions, (c, f) => (h(), k(Je, O({
                key: f,
                size: "xs"
              }, { ref_for: !0 }, c), null, 16))), 128))
            ])
          ], 2)) : D("", !0)
        ], 2),
        l.orientation === "horizontal" && (l.actions?.length || r.actions) || l.close ? (h(), M("div", {
          key: 0,
          class: A(o.value.actions({ class: a.ui?.actions, orientation: "horizontal" }))
        }, [
          l.orientation === "horizontal" && (l.actions?.length || r.actions) ? S(l.$slots, "actions", { key: 0 }, () => [
            (h(!0), M(te, null, le(l.actions, (c, f) => (h(), k(Je, O({
              key: f,
              size: "xs"
            }, { ref_for: !0 }, c), null, 16))), 128))
          ]) : D("", !0),
          S(l.$slots, "close", { ui: o.value }, () => [
            l.close ? (h(), k(Je, O({
              key: 0,
              icon: l.closeIcon || u(i).ui.icons.close,
              color: "neutral",
              variant: "link",
              "aria-label": u(s)("alert.close")
            }, typeof l.close == "object" ? l.close : {}, {
              class: o.value.close({ class: a.ui?.close }),
              onClick: d[0] || (d[0] = (c) => n("update:open", !1))
            }), null, 16, ["icon", "aria-label", "class"])) : D("", !0)
          ])
        ], 2)) : D("", !0)
      ]),
      _: 3
    }, 8, ["as", "data-orientation", "class"]));
  }
}), Ud = Symbol("nuxt-ui.portal-target");
function tn(e) {
  const t = Zt(Ud, void 0), a = T(() => typeof e.value == "boolean" || e.value === void 0 ? t?.value ?? "body" : e.value), n = T(() => typeof e.value == "boolean" ? !e.value : !1);
  return ta(Ud, T(() => a.value)), T(() => ({
    to: a.value,
    disabled: n.value
  }));
}
function GR() {
  const e = YM("toasts", () => []), t = N(!1), a = [], n = () => `${Date.now()}-${Math.random().toString(36).slice(2, 9)}`;
  async function r() {
    if (!(t.value || a.length === 0)) {
      for (t.value = !0; a.length > 0; ) {
        const d = a.shift();
        await Be(), e.value = [...e.value, d].slice(-5);
      }
      t.value = !1;
    }
  }
  function s(d) {
    const c = {
      id: n(),
      open: !0,
      ...d
    };
    return a.push(c), r(), c;
  }
  function i(d, c) {
    const f = e.value.findIndex((p) => p.id === d);
    f !== -1 && (e.value[f] = {
      ...e.value[f],
      ...c
    });
  }
  function o(d) {
    const c = e.value.findIndex((f) => f.id === d);
    c !== -1 && (e.value[c] = {
      ...e.value[c],
      open: !1
    }), setTimeout(() => {
      e.value = e.value.filter((f) => f.id !== d);
    }, 200);
  }
  function l() {
    e.value = [];
  }
  return {
    toasts: e,
    add: s,
    update: i,
    remove: o,
    clear: l
  };
}
const UR = {
  slots: {
    root: "gap-2",
    base: "relative overflow-hidden rounded-full bg-accented",
    indicator: "rounded-full size-full transition-transform duration-200 ease-out",
    status: "flex justify-end text-dimmed transition-[width] duration-200",
    steps: "grid items-end",
    step: "truncate text-end row-start-1 col-start-1 transition-opacity"
  },
  variants: {
    animation: {
      carousel: "",
      "carousel-inverse": "",
      swing: "",
      elastic: ""
    },
    color: {
      primary: {
        indicator: "bg-primary",
        steps: "text-primary"
      },
      secondary: {
        indicator: "bg-secondary",
        steps: "text-secondary"
      },
      success: {
        indicator: "bg-success",
        steps: "text-success"
      },
      info: {
        indicator: "bg-info",
        steps: "text-info"
      },
      warning: {
        indicator: "bg-warning",
        steps: "text-warning"
      },
      error: {
        indicator: "bg-error",
        steps: "text-error"
      },
      neutral: {
        indicator: "bg-inverted",
        steps: "text-inverted"
      }
    },
    size: {
      "2xs": {
        status: "text-xs",
        steps: "text-xs"
      },
      xs: {
        status: "text-xs",
        steps: "text-xs"
      },
      sm: {
        status: "text-sm",
        steps: "text-sm"
      },
      md: {
        status: "text-sm",
        steps: "text-sm"
      },
      lg: {
        status: "text-sm",
        steps: "text-sm"
      },
      xl: {
        status: "text-base",
        steps: "text-base"
      },
      "2xl": {
        status: "text-base",
        steps: "text-base"
      }
    },
    step: {
      active: {
        step: "opacity-100"
      },
      first: {
        step: "opacity-100 text-muted"
      },
      other: {
        step: "opacity-0"
      },
      last: {
        step: ""
      }
    },
    orientation: {
      horizontal: {
        root: "w-full flex flex-col",
        base: "w-full",
        status: "flex-row"
      },
      vertical: {
        root: "h-full flex flex-row-reverse",
        base: "h-full",
        status: "flex-col"
      }
    },
    inverted: {
      true: {
        status: "self-end"
      }
    }
  },
  compoundVariants: [
    {
      inverted: !0,
      orientation: "horizontal",
      class: {
        step: "text-start",
        status: "flex-row-reverse"
      }
    },
    {
      inverted: !0,
      orientation: "vertical",
      class: {
        steps: "items-start",
        status: "flex-col-reverse"
      }
    },
    {
      orientation: "horizontal",
      size: "2xs",
      class: "h-px"
    },
    {
      orientation: "horizontal",
      size: "xs",
      class: "h-0.5"
    },
    {
      orientation: "horizontal",
      size: "sm",
      class: "h-1"
    },
    {
      orientation: "horizontal",
      size: "md",
      class: "h-2"
    },
    {
      orientation: "horizontal",
      size: "lg",
      class: "h-3"
    },
    {
      orientation: "horizontal",
      size: "xl",
      class: "h-4"
    },
    {
      orientation: "horizontal",
      size: "2xl",
      class: "h-5"
    },
    {
      orientation: "vertical",
      size: "2xs",
      class: "w-px"
    },
    {
      orientation: "vertical",
      size: "xs",
      class: "w-0.5"
    },
    {
      orientation: "vertical",
      size: "sm",
      class: "w-1"
    },
    {
      orientation: "vertical",
      size: "md",
      class: "w-2"
    },
    {
      orientation: "vertical",
      size: "lg",
      class: "w-3"
    },
    {
      orientation: "vertical",
      size: "xl",
      class: "w-4"
    },
    {
      orientation: "vertical",
      size: "2xl",
      class: "w-5"
    },
    {
      orientation: "horizontal",
      animation: "carousel",
      class: {
        indicator: "data-[state=indeterminate]:animate-[carousel_2s_ease-in-out_infinite] data-[state=indeterminate]:rtl:animate-[carousel-rtl_2s_ease-in-out_infinite]"
      }
    },
    {
      orientation: "vertical",
      animation: "carousel",
      class: {
        indicator: "data-[state=indeterminate]:animate-[carousel-vertical_2s_ease-in-out_infinite]"
      }
    },
    {
      orientation: "horizontal",
      animation: "carousel-inverse",
      class: {
        indicator: "data-[state=indeterminate]:animate-[carousel-inverse_2s_ease-in-out_infinite] data-[state=indeterminate]:rtl:animate-[carousel-inverse-rtl_2s_ease-in-out_infinite]"
      }
    },
    {
      orientation: "vertical",
      animation: "carousel-inverse",
      class: {
        indicator: "data-[state=indeterminate]:animate-[carousel-inverse-vertical_2s_ease-in-out_infinite]"
      }
    },
    {
      orientation: "horizontal",
      animation: "swing",
      class: {
        indicator: "data-[state=indeterminate]:animate-[swing_2s_ease-in-out_infinite]"
      }
    },
    {
      orientation: "vertical",
      animation: "swing",
      class: {
        indicator: "data-[state=indeterminate]:animate-[swing-vertical_2s_ease-in-out_infinite]"
      }
    },
    {
      orientation: "horizontal",
      animation: "elastic",
      class: {
        indicator: "data-[state=indeterminate]:animate-[elastic_2s_ease-in-out_infinite]"
      }
    },
    {
      orientation: "vertical",
      animation: "elastic",
      class: {
        indicator: "data-[state=indeterminate]:animate-[elastic-vertical_2s_ease-in-out_infinite]"
      }
    }
  ],
  defaultVariants: {
    animation: "carousel",
    color: "primary",
    size: "md"
  }
}, WR = /* @__PURE__ */ L({
  __name: "Progress",
  props: {
    as: {},
    max: {},
    status: { type: Boolean },
    inverted: { type: Boolean, default: !1 },
    size: {},
    color: {},
    orientation: { default: "horizontal" },
    animation: {},
    class: {},
    ui: {},
    getValueLabel: {},
    getValueText: {},
    modelValue: { default: null }
  },
  emits: ["update:modelValue", "update:max"],
  setup(e, { emit: t }) {
    const a = e, n = t, r = Se(), { dir: s } = it(), i = ue(), o = Xe(tt(a, "getValueLabel", "getValueText", "modelValue"), n), l = T(() => o.value.modelValue === null), d = T(() => Array.isArray(a.max)), c = T(() => {
      if (!(l.value || !a.max))
        return Array.isArray(a.max) ? a.max.length - 1 : Number(a.max);
    }), f = T(() => {
      if (!l.value)
        switch (!0) {
          case o.value.modelValue < 0:
            return 0;
          case o.value.modelValue > (c.value ?? 100):
            return 100;
          default:
            return Math.round(o.value.modelValue / (c.value ?? 100) * 100);
        }
    }), p = T(() => {
      if (f.value !== void 0)
        return a.orientation === "vertical" ? {
          transform: `translateY(${a.inverted ? "" : "-"}${100 - f.value}%)`
        } : s.value === "rtl" ? {
          transform: `translateX(${a.inverted ? "-" : ""}${100 - f.value}%)`
        } : {
          transform: `translateX(${a.inverted ? "" : "-"}${100 - f.value}%)`
        };
    }), g = T(() => ({
      [a.orientation === "vertical" ? "height" : "width"]: f.value ? `${f.value}%` : "fit-content"
    }));
    function v(C) {
      return C === Number(a.modelValue);
    }
    function m(C) {
      return C === 0;
    }
    function y(C) {
      return C === c.value;
    }
    function x(C) {
      return C = Number(C), v(C) && !m(C) ? "active" : m(C) && v(C) ? "first" : y(C) && v(C) ? "last" : "other";
    }
    const b = T(() => W({ extend: W(UR), ...i.ui?.progress || {} })({
      animation: a.animation,
      size: a.size,
      color: a.color,
      orientation: a.orientation,
      inverted: a.inverted
    }));
    return (C, w) => (h(), k(u(U), {
      as: C.as,
      class: A(b.value.root({ class: [a.ui?.root, a.class] }))
    }, {
      default: _(() => [
        !l.value && (C.status || r.status) ? (h(), M("div", {
          key: 0,
          class: A(b.value.status({ class: a.ui?.status })),
          style: It(g.value)
        }, [
          S(C.$slots, "status", { percent: f.value }, () => [
            ee(X(f.value) + "% ", 1)
          ])
        ], 6)) : D("", !0),
        V(u(ST), O(u(o), {
          max: c.value,
          class: b.value.base({ class: a.ui?.base }),
          style: { transform: "translateZ(0)" }
        }), {
          default: _(() => [
            V(u(kT), {
              class: A(b.value.indicator({ class: a.ui?.indicator })),
              style: It(p.value)
            }, null, 8, ["class", "style"])
          ]),
          _: 1
        }, 16, ["max", "class"]),
        d.value ? (h(), M("div", {
          key: 1,
          class: A(b.value.steps({ class: a.ui?.steps }))
        }, [
          (h(!0), M(te, null, le(C.max, ($, B) => (h(), M("div", {
            key: B,
            class: A(b.value.step({ class: a.ui?.step, step: x(B) }))
          }, [
            S(C.$slots, `step-${B}`, { step: $ }, () => [
              ee(X($), 1)
            ])
          ], 2))), 128))
        ], 2)) : D("", !0)
      ]),
      _: 3
    }, 8, ["as", "class"]));
  }
}), YR = {
  slots: {
    root: "relative group overflow-hidden bg-default shadow-lg rounded-lg ring ring-default p-4 flex gap-2.5 focus:outline-none",
    wrapper: "w-0 flex-1 flex flex-col",
    title: "text-sm font-medium text-highlighted",
    description: "text-sm text-muted",
    icon: "shrink-0 size-5",
    avatar: "shrink-0",
    avatarSize: "2xl",
    actions: "flex gap-1.5 shrink-0",
    progress: "absolute inset-x-0 bottom-0",
    close: "p-0"
  },
  variants: {
    color: {
      primary: {
        root: "focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-primary",
        icon: "text-primary"
      },
      secondary: {
        root: "focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-secondary",
        icon: "text-secondary"
      },
      success: {
        root: "focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-success",
        icon: "text-success"
      },
      info: {
        root: "focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-info",
        icon: "text-info"
      },
      warning: {
        root: "focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-warning",
        icon: "text-warning"
      },
      error: {
        root: "focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-error",
        icon: "text-error"
      },
      neutral: {
        root: "focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-inverted",
        icon: "text-highlighted"
      }
    },
    orientation: {
      horizontal: {
        root: "items-center",
        actions: "items-center"
      },
      vertical: {
        root: "items-start",
        actions: "items-start mt-2.5"
      }
    },
    title: {
      true: {
        description: "mt-1"
      }
    }
  },
  defaultVariants: {
    color: "primary"
  }
}, XR = /* @__PURE__ */ L({
  __name: "Toast",
  props: {
    as: {},
    title: {},
    description: {},
    icon: {},
    avatar: {},
    color: {},
    orientation: { default: "vertical" },
    close: { type: [Boolean, Object], default: !0 },
    closeIcon: {},
    actions: {},
    progress: { type: [Boolean, Object], default: !0 },
    class: {},
    ui: {},
    defaultOpen: { type: Boolean },
    open: { type: Boolean },
    type: {},
    duration: {}
  },
  emits: ["escapeKeyDown", "pause", "resume", "swipeStart", "swipeMove", "swipeCancel", "swipeEnd", "update:open"],
  setup(e, { expose: t, emit: a }) {
    const n = e, r = a, s = Se(), { t: i } = it(), o = ue(), l = Xe(tt(n, "as", "defaultOpen", "open", "duration", "type"), r), d = T(() => W({ extend: W(YR), ...o.ui?.toast || {} })({
      color: n.color,
      orientation: n.orientation,
      title: !!n.title || !!s.title
    })), c = N(), f = N(0);
    return Pe(() => {
      c.value && Be(() => {
        f.value = c.value?.$el?.getBoundingClientRect()?.height;
      });
    }), t({
      height: f
    }), (p, g) => (h(), k(u(lD), O({
      ref_key: "el",
      ref: c
    }, u(l), {
      "data-orientation": p.orientation,
      class: d.value.root({ class: [n.ui?.root, n.class] }),
      style: { "--height": f.value }
    }), {
      default: _(({ remaining: v, duration: m, open: y }) => [
        S(p.$slots, "leading", {}, () => [
          p.avatar ? (h(), k(ft, O({
            key: 0,
            size: n.ui?.avatarSize || d.value.avatarSize()
          }, p.avatar, {
            class: d.value.avatar({ class: n.ui?.avatar })
          }), null, 16, ["size", "class"])) : p.icon ? (h(), k(he, {
            key: 1,
            name: p.icon,
            class: A(d.value.icon({ class: n.ui?.icon }))
          }, null, 8, ["name", "class"])) : D("", !0)
        ]),
        J("div", {
          class: A(d.value.wrapper({ class: n.ui?.wrapper }))
        }, [
          p.title || s.title ? (h(), k(u(dD), {
            key: 0,
            class: A(d.value.title({ class: n.ui?.title }))
          }, {
            default: _(() => [
              S(p.$slots, "title", {}, () => [
                typeof p.title == "function" ? (h(), k(ut(p.title()), { key: 0 })) : typeof p.title == "object" ? (h(), k(ut(p.title), { key: 1 })) : (h(), M(te, { key: 2 }, [
                  ee(X(p.title), 1)
                ], 64))
              ])
            ]),
            _: 3
          }, 8, ["class"])) : D("", !0),
          p.description || s.description ? (h(), k(u(rD), {
            key: 1,
            class: A(d.value.description({ class: n.ui?.description }))
          }, {
            default: _(() => [
              S(p.$slots, "description", {}, () => [
                typeof p.description == "function" ? (h(), k(ut(p.description()), { key: 0 })) : typeof p.description == "object" ? (h(), k(ut(p.description), { key: 1 })) : (h(), M(te, { key: 2 }, [
                  ee(X(p.description), 1)
                ], 64))
              ])
            ]),
            _: 3
          }, 8, ["class"])) : D("", !0),
          p.orientation === "vertical" && (p.actions?.length || s.actions) ? (h(), M("div", {
            key: 2,
            class: A(d.value.actions({ class: n.ui?.actions }))
          }, [
            S(p.$slots, "actions", {}, () => [
              (h(!0), M(te, null, le(p.actions, (x, b) => (h(), k(u(Dg), {
                key: b,
                "alt-text": x.label || "Action",
                "as-child": "",
                onClick: g[0] || (g[0] = ze(() => {
                }, ["stop"]))
              }, {
                default: _(() => [
                  V(Je, O({
                    size: "xs",
                    color: p.color
                  }, { ref_for: !0 }, x), null, 16, ["color"])
                ]),
                _: 2
              }, 1032, ["alt-text"]))), 128))
            ])
          ], 2)) : D("", !0)
        ], 2),
        p.orientation === "horizontal" && (p.actions?.length || s.actions) || p.close ? (h(), M("div", {
          key: 0,
          class: A(d.value.actions({ class: n.ui?.actions, orientation: "horizontal" }))
        }, [
          p.orientation === "horizontal" && (p.actions?.length || s.actions) ? S(p.$slots, "actions", { key: 0 }, () => [
            (h(!0), M(te, null, le(p.actions, (x, b) => (h(), k(u(Dg), {
              key: b,
              "alt-text": x.label || "Action",
              "as-child": "",
              onClick: g[1] || (g[1] = ze(() => {
              }, ["stop"]))
            }, {
              default: _(() => [
                V(Je, O({
                  size: "xs",
                  color: p.color
                }, { ref_for: !0 }, x), null, 16, ["color"])
              ]),
              _: 2
            }, 1032, ["alt-text"]))), 128))
          ]) : D("", !0),
          p.close || s.close ? (h(), k(u(Ob), {
            key: 1,
            "as-child": ""
          }, {
            default: _(() => [
              S(p.$slots, "close", { ui: d.value }, () => [
                p.close ? (h(), k(Je, O({
                  key: 0,
                  icon: p.closeIcon || u(o).ui.icons.close,
                  color: "neutral",
                  variant: "link",
                  "aria-label": u(i)("toast.close")
                }, typeof p.close == "object" ? p.close : {}, {
                  class: d.value.close({ class: n.ui?.close }),
                  onClick: g[2] || (g[2] = ze(() => {
                  }, ["stop"]))
                }), null, 16, ["icon", "aria-label", "class"])) : D("", !0)
              ])
            ]),
            _: 3
          })) : D("", !0)
        ], 2)) : D("", !0),
        p.progress && y && v > 0 && m ? (h(), k(WR, O({
          key: 1,
          "model-value": v / m * 100,
          color: p.color
        }, typeof p.progress == "object" ? p.progress : {}, {
          size: "sm",
          class: d.value.progress({ class: n.ui?.progress })
        }), null, 16, ["model-value", "color", "class"])) : D("", !0)
      ]),
      _: 3
    }, 16, ["data-orientation", "class", "style"]));
  }
}), JR = {
  slots: {
    viewport: "fixed flex flex-col w-[calc(100%-2rem)] sm:w-96 z-[100] data-[expanded=true]:h-(--height) focus:outline-none",
    base: "pointer-events-auto absolute inset-x-0 z-(--index) transform-(--transform) data-[expanded=false]:data-[front=false]:h-(--front-height) data-[expanded=false]:data-[front=false]:*:opacity-0 data-[front=false]:*:transition-opacity data-[front=false]:*:duration-100 data-[state=closed]:animate-[toast-closed_200ms_ease-in-out] data-[state=closed]:data-[expanded=false]:data-[front=false]:animate-[toast-collapsed-closed_200ms_ease-in-out] data-[swipe=move]:transition-none transition-[transform,translate,height] duration-200 ease-out"
  },
  variants: {
    position: {
      "top-left": {
        viewport: "left-4"
      },
      "top-center": {
        viewport: "left-1/2 transform -translate-x-1/2"
      },
      "top-right": {
        viewport: "right-4"
      },
      "bottom-left": {
        viewport: "left-4"
      },
      "bottom-center": {
        viewport: "left-1/2 transform -translate-x-1/2"
      },
      "bottom-right": {
        viewport: "right-4"
      }
    },
    swipeDirection: {
      up: "data-[swipe=end]:animate-[toast-slide-up_200ms_ease-out]",
      right: "data-[swipe=end]:animate-[toast-slide-right_200ms_ease-out]",
      down: "data-[swipe=end]:animate-[toast-slide-down_200ms_ease-out]",
      left: "data-[swipe=end]:animate-[toast-slide-left_200ms_ease-out]"
    }
  },
  compoundVariants: [
    {
      position: [
        "top-left",
        "top-center",
        "top-right"
      ],
      class: {
        viewport: "top-4",
        base: "top-0 data-[state=open]:animate-[slide-in-from-top_200ms_ease-in-out]"
      }
    },
    {
      position: [
        "bottom-left",
        "bottom-center",
        "bottom-right"
      ],
      class: {
        viewport: "bottom-4",
        base: "bottom-0 data-[state=open]:animate-[slide-in-from-bottom_200ms_ease-in-out]"
      }
    },
    {
      swipeDirection: [
        "left",
        "right"
      ],
      class: "data-[swipe=move]:translate-x-(--reka-toast-swipe-move-x) data-[swipe=end]:translate-x-(--reka-toast-swipe-end-x) data-[swipe=cancel]:translate-x-0"
    },
    {
      swipeDirection: [
        "up",
        "down"
      ],
      class: "data-[swipe=move]:translate-y-(--reka-toast-swipe-move-y) data-[swipe=end]:translate-y-(--reka-toast-swipe-end-y) data-[swipe=cancel]:translate-y-0"
    }
  ],
  defaultVariants: {
    position: "bottom-right"
  }
}, QR = {
  name: "Toaster"
}, ZR = /* @__PURE__ */ L({
  ...QR,
  props: {
    position: {},
    expand: { type: Boolean, default: !0 },
    progress: { type: Boolean, default: !0 },
    portal: { type: [Boolean, String], default: !0 },
    class: {},
    ui: {},
    label: {},
    duration: { default: 5e3 },
    swipeThreshold: {}
  },
  setup(e) {
    const t = e, { toasts: a, remove: n } = GR(), r = ue(), s = xt(tt(t, "duration", "label", "swipeThreshold")), i = tn(Ge(() => t.portal)), o = T(() => {
      switch (t.position) {
        case "top-center":
          return "up";
        case "top-right":
        case "bottom-right":
          return "right";
        case "bottom-center":
          return "down";
        case "top-left":
        case "bottom-left":
          return "left";
      }
      return "right";
    }), l = T(() => W({ extend: W(JR), ...r.ui?.toaster || {} })({
      position: t.position,
      swipeDirection: o.value
    }));
    function d(y, x) {
      y || n(x);
    }
    const c = N(!1), f = T(() => t.expand || c.value), p = N([]), g = T(() => p.value.reduce((y, { height: x }) => y + x + 16, 0)), v = T(() => p.value[p.value.length - 1]?.height || 0);
    function m(y) {
      return p.value.slice(y + 1).reduce((x, { height: b }) => x + b + 16, 0);
    }
    return (y, x) => (h(), k(u(HP), O({ "swipe-direction": o.value }, u(s)), {
      default: _(() => [
        S(y.$slots, "default"),
        (h(!0), M(te, null, le(u(a), (b, C) => (h(), k(XR, O({
          key: b.id,
          ref_for: !0,
          ref_key: "refs",
          ref: p,
          progress: y.progress
        }, { ref_for: !0 }, u(Mt)(b, ["id", "close"]), {
          close: b.close,
          "data-expanded": f.value,
          "data-front": !f.value && C === u(a).length - 1,
          style: {
            "--index": C - u(a).length + u(a).length,
            "--before": u(a).length - 1 - C,
            "--offset": m(C),
            "--scale": f.value ? "1" : "calc(1 - var(--before) * var(--scale-factor))",
            "--translate": f.value ? "calc(var(--offset) * var(--translate-factor))" : "calc(var(--before) * var(--gap))",
            "--transform": "translateY(var(--translate)) scale(var(--scale))"
          },
          class: l.value.base({ class: [t.ui?.base, b.onClick ? "cursor-pointer" : void 0] }),
          "onUpdate:open": (w) => d(w, b.id),
          onClick: (w) => b.onClick && b.onClick(b)
        }), null, 16, ["progress", "close", "data-expanded", "data-front", "style", "class", "onUpdate:open", "onClick"]))), 128)),
        V(u(iD), pe(me(u(i))), {
          default: _(() => [
            V(u(pD), {
              "data-expanded": f.value,
              class: A(l.value.viewport({ class: [t.ui?.viewport, t.class] })),
              style: It({
                "--scale-factor": "0.05",
                "--translate-factor": y.position?.startsWith("top") ? "1px" : "-1px",
                "--gap": y.position?.startsWith("top") ? "16px" : "-16px",
                "--front-height": `${v.value}px`,
                "--height": `${g.value}px`
              }),
              onMouseenter: x[0] || (x[0] = (b) => c.value = !0),
              onMouseleave: x[1] || (x[1] = (b) => c.value = !1)
            }, null, 8, ["data-expanded", "class", "style"])
          ]),
          _: 1
        }, 16)
      ]),
      _: 3
    }, 16, ["swipe-direction"]));
  }
});
function eL() {
  const e = uC([]), t = (d, c) => {
    const { props: f, defaultOpen: p, destroyOnClose: g } = c || {}, v = ba({
      id: Symbol(import.meta.dev ? "useOverlay" : ""),
      isOpen: !!p,
      component: im(d),
      isMounted: !!p,
      destroyOnClose: !!g,
      originalProps: f || {},
      props: { ...f }
    });
    return e.push(v), {
      ...v,
      open: (m) => a(v.id, m),
      close: (m) => n(v.id, m),
      patch: (m) => i(v.id, m)
    };
  }, a = (d, c) => {
    const f = o(d);
    c ? f.props = { ...f.originalProps, ...c } : f.props = { ...f.originalProps }, f.isOpen = !0, f.isMounted = !0;
    const p = new Promise((g) => f.resolvePromise = g);
    return Object.assign(p, {
      id: d,
      isMounted: f.isMounted,
      isOpen: f.isOpen,
      result: p
    });
  }, n = (d, c) => {
    const f = o(d);
    f.isOpen = !1, f.resolvePromise && (f.resolvePromise(c), f.resolvePromise = void 0);
  }, r = () => {
    e.forEach((d) => n(d.id));
  }, s = (d) => {
    const c = o(d);
    if (c.isMounted = !1, c.destroyOnClose) {
      const f = e.findIndex((p) => p.id === d);
      e.splice(f, 1);
    }
  }, i = (d, c) => {
    const f = o(d);
    f.props = { ...f.props, ...c };
  }, o = (d) => {
    const c = e.find((f) => f.id === d);
    if (!c)
      throw new Error("Overlay not found");
    return c;
  };
  return {
    overlays: e,
    open: a,
    close: n,
    closeAll: r,
    create: t,
    patch: i,
    unmount: s,
    isOpen: (d) => o(d).isOpen
  };
}
const tL = /* @__PURE__ */ Lf(eL), aL = /* @__PURE__ */ L({
  __name: "OverlayProvider",
  setup(e) {
    const { overlays: t, unmount: a, close: n } = tL(), r = T(() => t.filter((o) => o.isMounted)), s = (o) => {
      n(o), a(o);
    }, i = (o, l) => {
      n(o, l);
    };
    return (o, l) => (h(!0), M(te, null, le(r.value, (d) => (h(), k(ut(d.component), O({
      key: d.id
    }, { ref_for: !0 }, d.props, {
      open: d.isOpen,
      "onUpdate:open": (c) => d.isOpen = c,
      onClose: (c) => i(d.id, c),
      "onAfter:leave": (c) => s(d.id)
    }), null, 16, ["open", "onUpdate:open", "onClose", "onAfter:leave"]))), 128));
  }
}), nL = {
  name: "App"
}, s4 = /* @__PURE__ */ L({
  ...nL,
  props: {
    tooltip: {},
    toaster: {},
    locale: {},
    portal: { default: "body" },
    scrollBody: { type: [Boolean, Object] },
    nonce: {}
  },
  setup(e) {
    const t = e, a = xt(tt(t, "scrollBody")), n = Ge(() => t.tooltip), r = Ge(() => t.toaster), s = Ge(() => t.locale);
    ta(e0, s);
    const i = Ge(() => t.portal);
    return ta(Ud, i), (o, l) => (h(), k(u(yC), O({
      "use-id": () => Rn(),
      dir: s.value?.dir,
      locale: s.value?.code
    }, u(a)), {
      default: _(() => [
        V(u(yD), pe(me(n.value)), {
          default: _(() => [
            o.toaster !== null ? (h(), k(ZR, pe(O({ key: 0 }, r.value)), {
              default: _(() => [
                S(o.$slots, "default")
              ]),
              _: 3
            }, 16)) : S(o.$slots, "default", { key: 1 }),
            V(aL)
          ]),
          _: 3
        }, 16)
      ]),
      _: 3
    }, 16, ["use-id", "dir", "locale"]));
  }
}), rL = {
  slots: {
    root: "flex items-center align-center text-center",
    border: "",
    container: "font-medium text-default flex",
    icon: "shrink-0 size-5",
    avatar: "shrink-0",
    avatarSize: "2xs",
    label: "text-sm"
  },
  variants: {
    color: {
      primary: {
        border: "border-primary"
      },
      secondary: {
        border: "border-secondary"
      },
      success: {
        border: "border-success"
      },
      info: {
        border: "border-info"
      },
      warning: {
        border: "border-warning"
      },
      error: {
        border: "border-error"
      },
      neutral: {
        border: "border-default"
      }
    },
    orientation: {
      horizontal: {
        root: "w-full flex-row",
        border: "w-full",
        container: "mx-3 whitespace-nowrap"
      },
      vertical: {
        root: "h-full flex-col",
        border: "h-full",
        container: "my-2"
      }
    },
    size: {
      xs: "",
      sm: "",
      md: "",
      lg: "",
      xl: ""
    },
    type: {
      solid: {
        border: "border-solid"
      },
      dashed: {
        border: "border-dashed"
      },
      dotted: {
        border: "border-dotted"
      }
    }
  },
  compoundVariants: [
    {
      orientation: "horizontal",
      size: "xs",
      class: {
        border: "border-t"
      }
    },
    {
      orientation: "horizontal",
      size: "sm",
      class: {
        border: "border-t-[2px]"
      }
    },
    {
      orientation: "horizontal",
      size: "md",
      class: {
        border: "border-t-[3px]"
      }
    },
    {
      orientation: "horizontal",
      size: "lg",
      class: {
        border: "border-t-[4px]"
      }
    },
    {
      orientation: "horizontal",
      size: "xl",
      class: {
        border: "border-t-[5px]"
      }
    },
    {
      orientation: "vertical",
      size: "xs",
      class: {
        border: "border-s"
      }
    },
    {
      orientation: "vertical",
      size: "sm",
      class: {
        border: "border-s-[2px]"
      }
    },
    {
      orientation: "vertical",
      size: "md",
      class: {
        border: "border-s-[3px]"
      }
    },
    {
      orientation: "vertical",
      size: "lg",
      class: {
        border: "border-s-[4px]"
      }
    },
    {
      orientation: "vertical",
      size: "xl",
      class: {
        border: "border-s-[5px]"
      }
    }
  ],
  defaultVariants: {
    color: "neutral",
    size: "xs",
    type: "solid"
  }
}, sL = /* @__PURE__ */ L({
  __name: "Separator",
  props: {
    as: {},
    label: {},
    icon: {},
    avatar: {},
    color: {},
    size: {},
    type: {},
    orientation: { default: "horizontal" },
    class: {},
    ui: {},
    decorative: { type: Boolean }
  },
  setup(e) {
    const t = e, a = Se(), n = ue(), r = xt(tt(t, "as", "decorative", "orientation")), s = T(() => W({ extend: W(rL), ...n.ui?.separator || {} })({
      color: t.color,
      orientation: t.orientation,
      size: t.size,
      type: t.type
    }));
    return (i, o) => (h(), k(u(Bf), O(u(r), {
      class: s.value.root({ class: [t.ui?.root, t.class] })
    }), {
      default: _(() => [
        J("div", {
          class: A(s.value.border({ class: t.ui?.border }))
        }, null, 2),
        i.label || i.icon || i.avatar || a.default ? (h(), M(te, { key: 0 }, [
          J("div", {
            class: A(s.value.container({ class: t.ui?.container }))
          }, [
            S(i.$slots, "default", {}, () => [
              i.label ? (h(), M("span", {
                key: 0,
                class: A(s.value.label({ class: t.ui?.label }))
              }, X(i.label), 3)) : i.icon ? (h(), k(he, {
                key: 1,
                name: i.icon,
                class: A(s.value.icon({ class: t.ui?.icon }))
              }, null, 8, ["name", "class"])) : i.avatar ? (h(), k(ft, O({
                key: 2,
                size: t.ui?.avatarSize || s.value.avatarSize()
              }, i.avatar, {
                class: s.value.avatar({ class: t.ui?.avatar })
              }), null, 16, ["size", "class"])) : D("", !0)
            ])
          ], 2),
          J("div", {
            class: A(s.value.border({ class: t.ui?.border }))
          }, null, 2)
        ], 64)) : D("", !0)
      ]),
      _: 3
    }, 16, ["class"]));
  }
});
function iL(e) {
  return e.validate && e.__isYupSchema__;
}
function oL(e) {
  return e.inner !== void 0;
}
function lL(e) {
  return "schema" in e && typeof e.coercer == "function" && typeof e.validator == "function" && typeof e.refiner == "function";
}
function uL(e) {
  return e.validateAsync !== void 0 && e.id !== void 0;
}
function dL(e) {
  return e.isJoi === !0;
}
function cL(e) {
  return "~standard" in e;
}
async function fL(e, t) {
  const a = await t["~standard"].validate(e);
  return a.issues ? {
    errors: a.issues?.map((n) => ({
      name: n.path?.map((r) => typeof r == "object" ? r.key : r).join(".") || "",
      message: n.message
    })) || [],
    result: null
  } : {
    errors: null,
    result: a.value
  };
}
async function pL(e, t) {
  try {
    return {
      errors: null,
      result: await t.validate(e, { abortEarly: !1 })
    };
  } catch (a) {
    if (oL(a))
      return {
        errors: a.inner.map((r) => ({
          name: r.path ?? "",
          message: r.message
        })),
        result: null
      };
    throw a;
  }
}
async function gL(e, t) {
  const [a, n] = t.validate(e);
  return a ? {
    errors: a.failures().map((s) => ({
      message: s.message,
      name: s.path.join(".")
    })),
    result: null
  } : {
    errors: null,
    result: n
  };
}
async function vL(e, t) {
  try {
    return {
      errors: null,
      result: await t.validateAsync(e, { abortEarly: !1 })
    };
  } catch (a) {
    if (dL(a))
      return {
        errors: a.details.map((r) => ({
          name: r.path.join("."),
          message: r.message
        })),
        result: null
      };
    throw a;
  }
}
function hL(e, t) {
  if (cL(t))
    return fL(e, t);
  if (uL(t))
    return vL(e, t);
  if (iL(t))
    return pL(e, t);
  if (lL(t))
    return gL(e, t);
  throw new Error("Form validation failed: Unsupported form schema");
}
class oi extends Error {
  formId;
  errors;
  children;
  constructor(t, a, n) {
    super("Form validation exception"), this.formId = t, this.errors = a, this.children = n, Object.setPrototypeOf(this, oi.prototype);
  }
}
const mL = {
  base: ""
}, yL = /* @__PURE__ */ L({
  __name: "Form",
  props: {
    id: {},
    schema: {},
    state: {},
    validate: {},
    validateOn: { default() {
      return ["input", "blur", "change"];
    } },
    disabled: { type: Boolean },
    validateOnInputDelay: { default: 300 },
    transform: { default: () => !0 },
    attach: { type: Boolean, default: !0 },
    loadingAuto: { type: Boolean, default: !0 },
    class: {},
    onSubmit: {}
  },
  emits: ["submit", "error"],
  setup(e, { expose: t, emit: a }) {
    const n = e, r = a, s = ue(), i = T(() => W({ extend: W(mL), ...s.ui?.form || {} })), o = n.id ?? Rn(), l = /* @__PURE__ */ hM(`form-${o}`), d = n.attach && Zt(
      Kd,
      void 0
    );
    ta(Kd, l);
    const c = N(/* @__PURE__ */ new Map());
    Pe(async () => {
      l.on(async (I) => {
        I.type === "attach" ? c.value.set(I.formId, { validate: I.validate }) : I.type === "detach" ? c.value.delete(I.formId) : n.validateOn?.includes(I.type) && !w.value && (I.type !== "input" ? await C({ name: I.name, silent: !0, nested: !1 }) : (I.eager || m.has(I.name)) && await C({ name: I.name, silent: !0, nested: !1 })), I.type === "blur" && m.add(I.name), (I.type === "change" || I.type === "input" || I.type === "blur" || I.type === "focus") && v.add(I.name), (I.type === "change" || I.type === "input") && g.add(I.name);
      });
    }), Bt(() => {
      l.reset();
    }), Pe(async () => {
      d && (await Be(), d.emit({ type: "attach", validate: C, formId: o }));
    }), Bt(() => {
      d && d.emit({ type: "detach", formId: o });
    });
    const f = N([]);
    ta(C0, f);
    const p = N({});
    ta(b0, p);
    const g = ba(/* @__PURE__ */ new Set()), v = ba(/* @__PURE__ */ new Set()), m = ba(/* @__PURE__ */ new Set());
    function y(I) {
      return I.map((E) => ({
        ...E,
        id: E?.name ? p.value[E.name]?.id : void 0
      }));
    }
    const x = N(null);
    async function b() {
      let I = n.validate ? await n.validate(n.state) ?? [] : [];
      if (n.schema) {
        const { errors: E, result: P } = await hL(n.state, n.schema);
        E ? I = I.concat(E) : x.value = P;
      }
      return y(I);
    }
    async function C(I = { silent: !1, nested: !0, transform: !1 }) {
      const E = I.name && !Array.isArray(I.name) ? [I.name] : I.name, P = !E && I.nested ? Array.from(c.value.values()).map(
        ({ validate: F }) => F(I).then(() => {
        }).catch((H) => {
          if (!(H instanceof oi))
            throw H;
          return H;
        })
      ) : [];
      if (E) {
        const F = f.value.filter((j) => !E.some((K) => {
          const z = p.value?.[K]?.pattern;
          return K === j.name || z && j.name?.match(z);
        })), H = (await b()).filter((j) => E.some((K) => {
          const z = p.value?.[K]?.pattern;
          return K === j.name || z && j.name?.match(z);
        }));
        f.value = F.concat(H);
      } else
        f.value = await b();
      const R = (await Promise.all(P)).filter((F) => F !== void 0);
      if (f.value.length + R.length > 0) {
        if (I.silent) return !1;
        throw new oi(o, f.value, R);
      }
      return I.transform && Object.assign(n.state, x.value), n.state;
    }
    const w = N(!1);
    ta(w0, Da(w));
    async function $(I) {
      w.value = n.loadingAuto && !0;
      const E = I;
      try {
        E.data = await C({ nested: !0, transform: n.transform }), await n.onSubmit?.(E), g.clear();
      } catch (P) {
        if (!(P instanceof oi))
          throw P;
        const R = {
          ...E,
          errors: P.errors,
          children: P.children
        };
        r("error", R);
      } finally {
        w.value = !1;
      }
    }
    const B = T(() => n.disabled || w.value);
    return ta(m0, T(() => ({
      disabled: B.value,
      validateOnInputDelay: n.validateOnInputDelay
    }))), t({
      validate: C,
      errors: f,
      setErrors(I, E) {
        E ? f.value = f.value.filter((P) => E instanceof RegExp ? !(P.name && E.test(P.name)) : P.name !== E).concat(y(I)) : f.value = y(I);
      },
      async submit() {
        await $(new Event("submit"));
      },
      getErrors(I) {
        return I ? f.value.filter((E) => I instanceof RegExp ? E.name && I.test(E.name) : E.name === I) : f.value;
      },
      clear(I) {
        I ? f.value = f.value.filter((E) => I instanceof RegExp ? !(E.name && I.test(E.name)) : E.name !== I) : f.value = [];
      },
      disabled: B,
      loading: w,
      dirty: T(() => !!g.size),
      dirtyFields: Da(g),
      blurredFields: Da(m),
      touchedFields: Da(v)
    }), (I, E) => (h(), k(ut(u(d) ? "div" : "form"), {
      id: u(o),
      class: A(i.value({ class: n.class })),
      onSubmit: ze($, ["prevent"])
    }, {
      default: _(() => [
        S(I.$slots, "default", {
          errors: f.value,
          loading: w.value
        })
      ]),
      _: 3
    }, 40, ["id", "class"]));
  }
}), bL = {
  slots: {
    root: "",
    wrapper: "",
    labelWrapper: "flex content-center items-center justify-between",
    label: "block font-medium text-default",
    container: "mt-1 relative",
    description: "text-muted",
    error: "mt-2 text-error",
    hint: "text-muted",
    help: "mt-2 text-muted"
  },
  variants: {
    size: {
      xs: {
        root: "text-xs"
      },
      sm: {
        root: "text-xs"
      },
      md: {
        root: "text-sm"
      },
      lg: {
        root: "text-sm"
      },
      xl: {
        root: "text-base"
      }
    },
    required: {
      true: {
        label: "after:content-['*'] after:ms-0.5 after:text-error"
      }
    }
  },
  defaultVariants: {
    size: "md"
  }
}, wL = ["id"], CL = ["id"], xL = ["id"], SL = ["id"], _L = /* @__PURE__ */ L({
  __name: "FormField",
  props: {
    as: {},
    name: {},
    errorPattern: {},
    label: {},
    description: {},
    help: {},
    error: { type: [Boolean, String] },
    hint: {},
    size: {},
    required: { type: Boolean },
    eagerValidation: { type: Boolean },
    validateOnInputDelay: {},
    class: {},
    ui: {}
  },
  setup(e) {
    const t = e, a = Se(), n = ue(), r = T(() => W({ extend: W(bL), ...n.ui?.formField || {} })({
      size: t.size,
      required: t.required
    })), s = Zt(C0, null), i = T(() => t.error || s?.value?.find((d) => d.name && (d.name === t.name || t.errorPattern && d.name.match(t.errorPattern)))?.message), o = N(Rn()), l = o.value;
    return ta(y0, o), ta(Gd, T(() => ({
      error: i.value,
      name: t.name,
      size: t.size,
      eagerValidation: t.eagerValidation,
      validateOnInputDelay: t.validateOnInputDelay,
      errorPattern: t.errorPattern,
      hint: t.hint,
      description: t.description,
      help: t.help,
      ariaId: l
    }))), (d, c) => (h(), k(u(U), {
      as: d.as,
      class: A(r.value.root({ class: [t.ui?.root, t.class] }))
    }, {
      default: _(() => [
        J("div", {
          class: A(r.value.wrapper({ class: t.ui?.wrapper }))
        }, [
          d.label || a.label ? (h(), M("div", {
            key: 0,
            class: A(r.value.labelWrapper({ class: t.ui?.labelWrapper }))
          }, [
            V(u(Cs), {
              for: o.value,
              class: A(r.value.label({ class: t.ui?.label }))
            }, {
              default: _(() => [
                S(d.$slots, "label", { label: d.label }, () => [
                  ee(X(d.label), 1)
                ])
              ]),
              _: 3
            }, 8, ["for", "class"]),
            d.hint || a.hint ? (h(), M("span", {
              key: 0,
              id: `${u(l)}-hint`,
              class: A(r.value.hint({ class: t.ui?.hint }))
            }, [
              S(d.$slots, "hint", { hint: d.hint }, () => [
                ee(X(d.hint), 1)
              ])
            ], 10, wL)) : D("", !0)
          ], 2)) : D("", !0),
          d.description || a.description ? (h(), M("p", {
            key: 1,
            id: `${u(l)}-description`,
            class: A(r.value.description({ class: t.ui?.description }))
          }, [
            S(d.$slots, "description", { description: d.description }, () => [
              ee(X(d.description), 1)
            ])
          ], 10, CL)) : D("", !0)
        ], 2),
        J("div", {
          class: A([(d.label || !!a.label || d.description || !!a.description) && r.value.container({ class: t.ui?.container })])
        }, [
          S(d.$slots, "default", { error: i.value }),
          typeof i.value == "string" && i.value || a.error ? (h(), M("div", {
            key: 0,
            id: `${u(l)}-error`,
            class: A(r.value.error({ class: t.ui?.error }))
          }, [
            S(d.$slots, "error", { error: i.value }, () => [
              ee(X(i.value), 1)
            ])
          ], 10, xL)) : d.help || a.help ? (h(), M("div", {
            key: 1,
            id: `${u(l)}-help`,
            class: A(r.value.help({ class: t.ui?.help }))
          }, [
            S(d.$slots, "help", { help: d.help }, () => [
              ee(X(d.help), 1)
            ])
          ], 10, SL)) : D("", !0)
        ], 2)
      ]),
      _: 3
    }, 8, ["as", "class"]));
  }
}), kL = {
  slots: {
    root: "relative flex items-start",
    container: "flex items-center",
    base: "rounded-sm ring ring-inset ring-accented overflow-hidden focus-visible:outline-2 focus-visible:outline-offset-2",
    indicator: "flex items-center justify-center size-full text-inverted",
    icon: "shrink-0 size-full",
    wrapper: "w-full",
    label: "block font-medium text-default",
    description: "text-muted"
  },
  variants: {
    color: {
      primary: {
        base: "focus-visible:outline-primary",
        indicator: "bg-primary"
      },
      secondary: {
        base: "focus-visible:outline-secondary",
        indicator: "bg-secondary"
      },
      success: {
        base: "focus-visible:outline-success",
        indicator: "bg-success"
      },
      info: {
        base: "focus-visible:outline-info",
        indicator: "bg-info"
      },
      warning: {
        base: "focus-visible:outline-warning",
        indicator: "bg-warning"
      },
      error: {
        base: "focus-visible:outline-error",
        indicator: "bg-error"
      },
      neutral: {
        base: "focus-visible:outline-inverted",
        indicator: "bg-inverted"
      }
    },
    variant: {
      list: {
        root: ""
      },
      card: {
        root: "border border-muted rounded-lg"
      }
    },
    indicator: {
      start: {
        root: "flex-row",
        wrapper: "ms-2"
      },
      end: {
        root: "flex-row-reverse",
        wrapper: "me-2"
      },
      hidden: {
        base: "sr-only",
        wrapper: "text-center"
      }
    },
    size: {
      xs: {
        base: "size-3",
        container: "h-4",
        wrapper: "text-xs"
      },
      sm: {
        base: "size-3.5",
        container: "h-4",
        wrapper: "text-xs"
      },
      md: {
        base: "size-4",
        container: "h-5",
        wrapper: "text-sm"
      },
      lg: {
        base: "size-4.5",
        container: "h-5",
        wrapper: "text-sm"
      },
      xl: {
        base: "size-5",
        container: "h-6",
        wrapper: "text-base"
      }
    },
    required: {
      true: {
        label: "after:content-['*'] after:ms-0.5 after:text-error"
      }
    },
    disabled: {
      true: {
        base: "cursor-not-allowed opacity-75",
        label: "cursor-not-allowed opacity-75",
        description: "cursor-not-allowed opacity-75"
      }
    },
    checked: {
      true: ""
    }
  },
  compoundVariants: [
    {
      size: "xs",
      variant: "card",
      class: {
        root: "p-2.5"
      }
    },
    {
      size: "sm",
      variant: "card",
      class: {
        root: "p-3"
      }
    },
    {
      size: "md",
      variant: "card",
      class: {
        root: "p-3.5"
      }
    },
    {
      size: "lg",
      variant: "card",
      class: {
        root: "p-4"
      }
    },
    {
      size: "xl",
      variant: "card",
      class: {
        root: "p-4.5"
      }
    },
    {
      color: "primary",
      variant: "card",
      class: {
        root: "has-data-[state=checked]:border-primary"
      }
    },
    {
      color: "secondary",
      variant: "card",
      class: {
        root: "has-data-[state=checked]:border-secondary"
      }
    },
    {
      color: "success",
      variant: "card",
      class: {
        root: "has-data-[state=checked]:border-success"
      }
    },
    {
      color: "info",
      variant: "card",
      class: {
        root: "has-data-[state=checked]:border-info"
      }
    },
    {
      color: "warning",
      variant: "card",
      class: {
        root: "has-data-[state=checked]:border-warning"
      }
    },
    {
      color: "error",
      variant: "card",
      class: {
        root: "has-data-[state=checked]:border-error"
      }
    },
    {
      color: "neutral",
      variant: "card",
      class: {
        root: "has-data-[state=checked]:border-inverted"
      }
    },
    {
      variant: "card",
      disabled: !0,
      class: {
        root: "cursor-not-allowed opacity-75"
      }
    }
  ],
  defaultVariants: {
    size: "md",
    color: "primary",
    variant: "list",
    indicator: "start"
  }
}, x0 = /* @__PURE__ */ L({
  inheritAttrs: !1,
  __name: "Checkbox",
  props: /* @__PURE__ */ mt({
    as: {},
    label: {},
    description: {},
    color: {},
    variant: {},
    size: {},
    indicator: {},
    icon: {},
    indeterminateIcon: {},
    class: {},
    ui: {},
    disabled: { type: Boolean },
    required: { type: Boolean },
    name: {},
    value: {},
    id: {},
    defaultValue: { type: [Boolean, String] }
  }, {
    modelValue: { type: [Boolean, String], default: void 0 },
    modelModifiers: {}
  }),
  emits: /* @__PURE__ */ mt(["change"], ["update:modelValue"]),
  setup(e, { emit: t }) {
    const a = e, n = Se(), r = t, s = lt(e, "modelValue"), i = ue(), o = xt(tt(a, "required", "value", "defaultValue")), { id: l, emitFormChange: d, emitFormInput: c, size: f, color: p, name: g, disabled: v, ariaAttrs: m } = Ca(a), y = l.value ?? Rn(), x = T(() => W({ extend: W(kL), ...i.ui?.checkbox || {} })({
      size: f.value,
      color: p.value,
      variant: a.variant,
      indicator: a.indicator,
      required: a.required,
      disabled: v.value
    }));
    function b(C) {
      const w = new Event("change", { target: { value: C } });
      r("change", w), d(), c();
    }
    return (C, w) => (h(), k(u(U), {
      as: !C.variant || C.variant === "list" ? C.as : u(Cs),
      class: A(x.value.root({ class: [a.ui?.root, a.class] }))
    }, {
      default: _(() => [
        J("div", {
          class: A(x.value.container({ class: a.ui?.container }))
        }, [
          V(u(mk), O({ id: u(y) }, { ...u(o), ...C.$attrs, ...u(m) }, {
            modelValue: s.value,
            "onUpdate:modelValue": [
              w[0] || (w[0] = ($) => s.value = $),
              b
            ],
            name: u(g),
            disabled: u(v),
            class: x.value.base({ class: a.ui?.base })
          }), {
            default: _(({ modelValue: $ }) => [
              V(u(bk), {
                class: A(x.value.indicator({ class: a.ui?.indicator }))
              }, {
                default: _(() => [
                  $ === "indeterminate" ? (h(), k(he, {
                    key: 0,
                    name: C.indeterminateIcon || u(i).ui.icons.minus,
                    class: A(x.value.icon({ class: a.ui?.icon }))
                  }, null, 8, ["name", "class"])) : (h(), k(he, {
                    key: 1,
                    name: C.icon || u(i).ui.icons.check,
                    class: A(x.value.icon({ class: a.ui?.icon }))
                  }, null, 8, ["name", "class"]))
                ]),
                _: 2
              }, 1032, ["class"])
            ]),
            _: 1
          }, 16, ["id", "modelValue", "name", "disabled", "class"])
        ], 2),
        C.label || n.label || C.description || n.description ? (h(), M("div", {
          key: 0,
          class: A(x.value.wrapper({ class: a.ui?.wrapper }))
        }, [
          C.label || n.label ? (h(), k(ut(!C.variant || C.variant === "list" ? u(Cs) : "p"), {
            key: 0,
            for: u(y),
            class: A(x.value.label({ class: a.ui?.label }))
          }, {
            default: _(() => [
              S(C.$slots, "label", { label: C.label }, () => [
                ee(X(C.label), 1)
              ])
            ]),
            _: 3
          }, 8, ["for", "class"])) : D("", !0),
          C.description || n.description ? (h(), M("p", {
            key: 1,
            class: A(x.value.description({ class: a.ui?.description }))
          }, [
            S(C.$slots, "description", { description: C.description }, () => [
              ee(X(C.description), 1)
            ])
          ], 2)) : D("", !0)
        ], 2)) : D("", !0)
      ]),
      _: 3
    }, 8, ["as", "class"]));
  }
}), AL = {
  slots: {
    root: "relative inline-flex items-center",
    base: [
      "w-full rounded-md border-0 appearance-none placeholder:text-dimmed focus:outline-none disabled:cursor-not-allowed disabled:opacity-75",
      "transition-colors"
    ],
    leading: "absolute inset-y-0 start-0 flex items-center",
    leadingIcon: "shrink-0 text-dimmed",
    leadingAvatar: "shrink-0",
    leadingAvatarSize: "",
    trailing: "absolute inset-y-0 end-0 flex items-center",
    trailingIcon: "shrink-0 text-dimmed"
  },
  variants: {
    fieldGroup: {
      horizontal: {
        root: "group has-focus-visible:z-[1]",
        base: "group-not-only:group-first:rounded-e-none group-not-only:group-last:rounded-s-none group-not-last:group-not-first:rounded-none"
      },
      vertical: {
        root: "group has-focus-visible:z-[1]",
        base: "group-not-only:group-first:rounded-b-none group-not-only:group-last:rounded-t-none group-not-last:group-not-first:rounded-none"
      }
    },
    size: {
      xs: {
        base: "px-2 py-1 text-xs gap-1",
        leading: "ps-2",
        trailing: "pe-2",
        leadingIcon: "size-4",
        leadingAvatarSize: "3xs",
        trailingIcon: "size-4"
      },
      sm: {
        base: "px-2.5 py-1.5 text-xs gap-1.5",
        leading: "ps-2.5",
        trailing: "pe-2.5",
        leadingIcon: "size-4",
        leadingAvatarSize: "3xs",
        trailingIcon: "size-4"
      },
      md: {
        base: "px-2.5 py-1.5 text-sm gap-1.5",
        leading: "ps-2.5",
        trailing: "pe-2.5",
        leadingIcon: "size-5",
        leadingAvatarSize: "2xs",
        trailingIcon: "size-5"
      },
      lg: {
        base: "px-3 py-2 text-sm gap-2",
        leading: "ps-3",
        trailing: "pe-3",
        leadingIcon: "size-5",
        leadingAvatarSize: "2xs",
        trailingIcon: "size-5"
      },
      xl: {
        base: "px-3 py-2 text-base gap-2",
        leading: "ps-3",
        trailing: "pe-3",
        leadingIcon: "size-6",
        leadingAvatarSize: "xs",
        trailingIcon: "size-6"
      }
    },
    variant: {
      outline: "text-highlighted bg-default ring ring-inset ring-accented",
      soft: "text-highlighted bg-elevated/50 hover:bg-elevated focus:bg-elevated disabled:bg-elevated/50",
      subtle: "text-highlighted bg-elevated ring ring-inset ring-accented",
      ghost: "text-highlighted bg-transparent hover:bg-elevated focus:bg-elevated disabled:bg-transparent dark:disabled:bg-transparent",
      none: "text-highlighted bg-transparent"
    },
    color: {
      primary: "",
      secondary: "",
      success: "",
      info: "",
      warning: "",
      error: "",
      neutral: ""
    },
    leading: {
      true: ""
    },
    trailing: {
      true: ""
    },
    loading: {
      true: ""
    },
    highlight: {
      true: ""
    },
    type: {
      file: "file:me-1.5 file:font-medium file:text-muted file:outline-none"
    }
  },
  compoundVariants: [
    {
      color: "primary",
      variant: [
        "outline",
        "subtle"
      ],
      class: "focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-primary"
    },
    {
      color: "secondary",
      variant: [
        "outline",
        "subtle"
      ],
      class: "focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-secondary"
    },
    {
      color: "success",
      variant: [
        "outline",
        "subtle"
      ],
      class: "focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-success"
    },
    {
      color: "info",
      variant: [
        "outline",
        "subtle"
      ],
      class: "focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-info"
    },
    {
      color: "warning",
      variant: [
        "outline",
        "subtle"
      ],
      class: "focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-warning"
    },
    {
      color: "error",
      variant: [
        "outline",
        "subtle"
      ],
      class: "focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-error"
    },
    {
      color: "primary",
      highlight: !0,
      class: "ring ring-inset ring-primary"
    },
    {
      color: "secondary",
      highlight: !0,
      class: "ring ring-inset ring-secondary"
    },
    {
      color: "success",
      highlight: !0,
      class: "ring ring-inset ring-success"
    },
    {
      color: "info",
      highlight: !0,
      class: "ring ring-inset ring-info"
    },
    {
      color: "warning",
      highlight: !0,
      class: "ring ring-inset ring-warning"
    },
    {
      color: "error",
      highlight: !0,
      class: "ring ring-inset ring-error"
    },
    {
      color: "neutral",
      variant: [
        "outline",
        "subtle"
      ],
      class: "focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-inverted"
    },
    {
      color: "neutral",
      highlight: !0,
      class: "ring ring-inset ring-inverted"
    },
    {
      leading: !0,
      size: "xs",
      class: "ps-7"
    },
    {
      leading: !0,
      size: "sm",
      class: "ps-8"
    },
    {
      leading: !0,
      size: "md",
      class: "ps-9"
    },
    {
      leading: !0,
      size: "lg",
      class: "ps-10"
    },
    {
      leading: !0,
      size: "xl",
      class: "ps-11"
    },
    {
      trailing: !0,
      size: "xs",
      class: "pe-7"
    },
    {
      trailing: !0,
      size: "sm",
      class: "pe-8"
    },
    {
      trailing: !0,
      size: "md",
      class: "pe-9"
    },
    {
      trailing: !0,
      size: "lg",
      class: "pe-10"
    },
    {
      trailing: !0,
      size: "xl",
      class: "pe-11"
    },
    {
      loading: !0,
      leading: !0,
      class: {
        leadingIcon: "animate-spin"
      }
    },
    {
      loading: !0,
      leading: !1,
      trailing: !0,
      class: {
        trailingIcon: "animate-spin"
      }
    }
  ],
  defaultVariants: {
    size: "md",
    color: "primary",
    variant: "outline"
  }
}, $L = ["id", "type", "value", "name", "placeholder", "disabled", "required", "autocomplete"], pl = /* @__PURE__ */ L({
  inheritAttrs: !1,
  __name: "Input",
  props: {
    as: {},
    id: {},
    name: {},
    type: { default: "text" },
    placeholder: {},
    color: {},
    variant: {},
    size: {},
    required: { type: Boolean },
    autocomplete: { default: "off" },
    autofocus: { type: Boolean },
    autofocusDelay: { default: 0 },
    disabled: { type: Boolean },
    highlight: { type: Boolean },
    modelValue: {},
    defaultValue: {},
    modelModifiers: {},
    class: {},
    ui: {},
    icon: {},
    avatar: {},
    leading: { type: Boolean },
    leadingIcon: {},
    trailing: { type: Boolean },
    trailingIcon: {},
    loading: { type: Boolean },
    loadingIcon: {}
  },
  emits: ["update:modelValue", "blur", "change"],
  setup(e, { expose: t, emit: a }) {
    const n = e, r = a, s = Se(), i = /* @__PURE__ */ qf(n, "modelValue", r, { defaultValue: n.defaultValue }), o = ue(), { emitFormBlur: l, emitFormInput: d, emitFormChange: c, size: f, color: p, id: g, name: v, highlight: m, disabled: y, emitFormFocus: x, ariaAttrs: b } = Ca(n, { deferInputValidation: !0 }), { orientation: C, size: w } = ur(n), { isLeading: $, isTrailing: B, leadingIconName: I, trailingIconName: E } = lr(n), P = T(() => w.value || f.value), R = T(() => W({ extend: W(AL), ...o.ui?.input || {} })({
      type: n.type,
      color: p.value,
      variant: n.variant,
      size: P?.value,
      loading: n.loading,
      highlight: m.value,
      leading: $.value || !!n.avatar || !!s.leading,
      trailing: B.value || !!s.trailing,
      fieldGroup: C.value
    })), F = N(null);
    function H(Y) {
      n.modelModifiers?.trim && (Y = Y?.trim() ?? null), (n.modelModifiers?.number || n.type === "number") && (Y = Hf(Y)), n.modelModifiers?.nullable && (Y ||= null), n.modelModifiers?.optional && (Y ||= void 0), i.value = Y, d();
    }
    function j(Y) {
      n.modelModifiers?.lazy || H(Y.target.value);
    }
    function K(Y) {
      const q = Y.target.value;
      n.modelModifiers?.lazy && H(q), n.modelModifiers?.trim && (Y.target.value = q.trim()), c(), r("change", Y);
    }
    function z(Y) {
      l(), r("blur", Y);
    }
    function G() {
      n.autofocus && F.value?.focus();
    }
    return Pe(() => {
      setTimeout(() => {
        G();
      }, n.autofocusDelay);
    }), t({
      inputRef: F
    }), (Y, q) => (h(), k(u(U), {
      as: Y.as,
      class: A(R.value.root({ class: [n.ui?.root, n.class] }))
    }, {
      default: _(() => [
        J("input", O({
          id: u(g),
          ref_key: "inputRef",
          ref: F,
          type: Y.type,
          value: u(i),
          name: u(v),
          placeholder: Y.placeholder,
          class: R.value.base({ class: n.ui?.base }),
          disabled: u(y),
          required: Y.required,
          autocomplete: Y.autocomplete
        }, { ...Y.$attrs, ...u(b) }, {
          onInput: j,
          onBlur: z,
          onChange: K,
          onFocus: q[0] || (q[0] = //@ts-ignore
          (...Q) => u(x) && u(x)(...Q))
        }), null, 16, $L),
        S(Y.$slots, "default"),
        u($) || Y.avatar || s.leading ? (h(), M("span", {
          key: 0,
          class: A(R.value.leading({ class: n.ui?.leading }))
        }, [
          S(Y.$slots, "leading", {}, () => [
            u($) && u(I) ? (h(), k(he, {
              key: 0,
              name: u(I),
              class: A(R.value.leadingIcon({ class: n.ui?.leadingIcon }))
            }, null, 8, ["name", "class"])) : Y.avatar ? (h(), k(ft, O({
              key: 1,
              size: n.ui?.leadingAvatarSize || R.value.leadingAvatarSize()
            }, Y.avatar, {
              class: R.value.leadingAvatar({ class: n.ui?.leadingAvatar })
            }), null, 16, ["size", "class"])) : D("", !0)
          ])
        ], 2)) : D("", !0),
        u(B) || s.trailing ? (h(), M("span", {
          key: 1,
          class: A(R.value.trailing({ class: n.ui?.trailing }))
        }, [
          S(Y.$slots, "trailing", {}, () => [
            u(E) ? (h(), k(he, {
              key: 0,
              name: u(E),
              class: A(R.value.trailingIcon({ class: n.ui?.trailingIcon }))
            }, null, 8, ["name", "class"])) : D("", !0)
          ])
        ], 2)) : D("", !0)
      ]),
      _: 3
    }, 8, ["as", "class"]));
  }
}), IL = {
  slots: {
    base: [
      "relative group rounded-md inline-flex items-center focus:outline-none disabled:cursor-not-allowed disabled:opacity-75",
      "transition-colors"
    ],
    leading: "absolute inset-y-0 start-0 flex items-center",
    leadingIcon: "shrink-0 text-dimmed",
    leadingAvatar: "shrink-0",
    leadingAvatarSize: "",
    trailing: "absolute inset-y-0 end-0 flex items-center",
    trailingIcon: "shrink-0 text-dimmed",
    value: "truncate pointer-events-none",
    placeholder: "truncate text-dimmed",
    arrow: "fill-default",
    content: [
      "max-h-60 w-(--reka-select-trigger-width) bg-default shadow-lg rounded-md ring ring-default overflow-hidden data-[state=open]:animate-[scale-in_100ms_ease-out] data-[state=closed]:animate-[scale-out_100ms_ease-in] origin-(--reka-select-content-transform-origin) pointer-events-auto flex flex-col",
      "origin-(--reka-combobox-content-transform-origin) w-(--reka-combobox-trigger-width)"
    ],
    viewport: "relative divide-y divide-default scroll-py-1 overflow-y-auto flex-1",
    group: "p-1 isolate",
    empty: "text-center text-muted",
    label: "font-semibold text-highlighted",
    separator: "-mx-1 my-1 h-px bg-border",
    item: [
      "group relative w-full flex items-center select-none outline-none before:absolute before:z-[-1] before:inset-px before:rounded-md data-disabled:cursor-not-allowed data-disabled:opacity-75 text-default data-highlighted:not-data-disabled:text-highlighted data-highlighted:not-data-disabled:before:bg-elevated/50",
      "transition-colors before:transition-colors"
    ],
    itemLeadingIcon: [
      "shrink-0 text-dimmed group-data-highlighted:not-group-data-disabled:text-default",
      "transition-colors"
    ],
    itemLeadingAvatar: "shrink-0",
    itemLeadingAvatarSize: "",
    itemLeadingChip: "shrink-0",
    itemLeadingChipSize: "",
    itemTrailing: "ms-auto inline-flex gap-1.5 items-center",
    itemTrailingIcon: "shrink-0",
    itemLabel: "truncate",
    input: "border-b border-default",
    focusScope: "flex flex-col min-h-0"
  },
  variants: {
    fieldGroup: {
      horizontal: "not-only:first:rounded-e-none not-only:last:rounded-s-none not-last:not-first:rounded-none focus-visible:z-[1]",
      vertical: "not-only:first:rounded-b-none not-only:last:rounded-t-none not-last:not-first:rounded-none focus-visible:z-[1]"
    },
    size: {
      xs: {
        base: "px-2 py-1 text-xs gap-1",
        leading: "ps-2",
        trailing: "pe-2",
        leadingIcon: "size-4",
        leadingAvatarSize: "3xs",
        trailingIcon: "size-4",
        label: "p-1 text-[10px]/3 gap-1",
        item: "p-1 text-xs gap-1",
        itemLeadingIcon: "size-4",
        itemLeadingAvatarSize: "3xs",
        itemLeadingChip: "size-4",
        itemLeadingChipSize: "sm",
        itemTrailingIcon: "size-4",
        empty: "p-1 text-xs"
      },
      sm: {
        base: "px-2.5 py-1.5 text-xs gap-1.5",
        leading: "ps-2.5",
        trailing: "pe-2.5",
        leadingIcon: "size-4",
        leadingAvatarSize: "3xs",
        trailingIcon: "size-4",
        label: "p-1.5 text-[10px]/3 gap-1.5",
        item: "p-1.5 text-xs gap-1.5",
        itemLeadingIcon: "size-4",
        itemLeadingAvatarSize: "3xs",
        itemLeadingChip: "size-4",
        itemLeadingChipSize: "sm",
        itemTrailingIcon: "size-4",
        empty: "p-1.5 text-xs"
      },
      md: {
        base: "px-2.5 py-1.5 text-sm gap-1.5",
        leading: "ps-2.5",
        trailing: "pe-2.5",
        leadingIcon: "size-5",
        leadingAvatarSize: "2xs",
        trailingIcon: "size-5",
        label: "p-1.5 text-xs gap-1.5",
        item: "p-1.5 text-sm gap-1.5",
        itemLeadingIcon: "size-5",
        itemLeadingAvatarSize: "2xs",
        itemLeadingChip: "size-5",
        itemLeadingChipSize: "md",
        itemTrailingIcon: "size-5",
        empty: "p-1.5 text-sm"
      },
      lg: {
        base: "px-3 py-2 text-sm gap-2",
        leading: "ps-3",
        trailing: "pe-3",
        leadingIcon: "size-5",
        leadingAvatarSize: "2xs",
        trailingIcon: "size-5",
        label: "p-2 text-xs gap-2",
        item: "p-2 text-sm gap-2",
        itemLeadingIcon: "size-5",
        itemLeadingAvatarSize: "2xs",
        itemLeadingChip: "size-5",
        itemLeadingChipSize: "md",
        itemTrailingIcon: "size-5",
        empty: "p-2 text-sm"
      },
      xl: {
        base: "px-3 py-2 text-base gap-2",
        leading: "ps-3",
        trailing: "pe-3",
        leadingIcon: "size-6",
        leadingAvatarSize: "xs",
        trailingIcon: "size-6",
        label: "p-2 text-sm gap-2",
        item: "p-2 text-base gap-2",
        itemLeadingIcon: "size-6",
        itemLeadingAvatarSize: "xs",
        itemLeadingChip: "size-6",
        itemLeadingChipSize: "lg",
        itemTrailingIcon: "size-6",
        empty: "p-2 text-base"
      }
    },
    variant: {
      outline: "text-highlighted bg-default ring ring-inset ring-accented",
      soft: "text-highlighted bg-elevated/50 hover:bg-elevated focus:bg-elevated disabled:bg-elevated/50",
      subtle: "text-highlighted bg-elevated ring ring-inset ring-accented",
      ghost: "text-highlighted bg-transparent hover:bg-elevated focus:bg-elevated disabled:bg-transparent dark:disabled:bg-transparent",
      none: "text-highlighted bg-transparent"
    },
    color: {
      primary: "",
      secondary: "",
      success: "",
      info: "",
      warning: "",
      error: "",
      neutral: ""
    },
    leading: {
      true: ""
    },
    trailing: {
      true: ""
    },
    loading: {
      true: ""
    },
    highlight: {
      true: ""
    },
    type: {
      file: "file:me-1.5 file:font-medium file:text-muted file:outline-none"
    }
  },
  compoundVariants: [
    {
      color: "primary",
      variant: [
        "outline",
        "subtle"
      ],
      class: "focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-primary"
    },
    {
      color: "secondary",
      variant: [
        "outline",
        "subtle"
      ],
      class: "focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-secondary"
    },
    {
      color: "success",
      variant: [
        "outline",
        "subtle"
      ],
      class: "focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-success"
    },
    {
      color: "info",
      variant: [
        "outline",
        "subtle"
      ],
      class: "focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-info"
    },
    {
      color: "warning",
      variant: [
        "outline",
        "subtle"
      ],
      class: "focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-warning"
    },
    {
      color: "error",
      variant: [
        "outline",
        "subtle"
      ],
      class: "focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-error"
    },
    {
      color: "primary",
      highlight: !0,
      class: "ring ring-inset ring-primary"
    },
    {
      color: "secondary",
      highlight: !0,
      class: "ring ring-inset ring-secondary"
    },
    {
      color: "success",
      highlight: !0,
      class: "ring ring-inset ring-success"
    },
    {
      color: "info",
      highlight: !0,
      class: "ring ring-inset ring-info"
    },
    {
      color: "warning",
      highlight: !0,
      class: "ring ring-inset ring-warning"
    },
    {
      color: "error",
      highlight: !0,
      class: "ring ring-inset ring-error"
    },
    {
      color: "neutral",
      variant: [
        "outline",
        "subtle"
      ],
      class: "focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-inverted"
    },
    {
      color: "neutral",
      highlight: !0,
      class: "ring ring-inset ring-inverted"
    },
    {
      leading: !0,
      size: "xs",
      class: "ps-7"
    },
    {
      leading: !0,
      size: "sm",
      class: "ps-8"
    },
    {
      leading: !0,
      size: "md",
      class: "ps-9"
    },
    {
      leading: !0,
      size: "lg",
      class: "ps-10"
    },
    {
      leading: !0,
      size: "xl",
      class: "ps-11"
    },
    {
      trailing: !0,
      size: "xs",
      class: "pe-7"
    },
    {
      trailing: !0,
      size: "sm",
      class: "pe-8"
    },
    {
      trailing: !0,
      size: "md",
      class: "pe-9"
    },
    {
      trailing: !0,
      size: "lg",
      class: "pe-10"
    },
    {
      trailing: !0,
      size: "xl",
      class: "pe-11"
    },
    {
      loading: !0,
      leading: !0,
      class: {
        leadingIcon: "animate-spin"
      }
    },
    {
      loading: !0,
      leading: !1,
      trailing: !0,
      class: {
        trailingIcon: "animate-spin"
      }
    }
  ],
  defaultVariants: {
    size: "md",
    color: "primary",
    variant: "outline"
  }
}, EL = /* @__PURE__ */ L({
  inheritAttrs: !1,
  __name: "SelectMenu",
  props: /* @__PURE__ */ mt({
    id: {},
    placeholder: {},
    searchInput: { type: [Boolean, Object], default: !0 },
    color: {},
    variant: {},
    size: {},
    required: { type: Boolean },
    trailingIcon: {},
    selectedIcon: {},
    content: {},
    arrow: { type: [Boolean, Object] },
    portal: { type: [Boolean, String], default: !0 },
    valueKey: {},
    labelKey: { default: "label" },
    items: {},
    defaultValue: {},
    modelValue: {},
    multiple: { type: Boolean },
    highlight: { type: Boolean },
    createItem: { type: [Boolean, String, Object] },
    filterFields: {},
    ignoreFilter: { type: Boolean },
    autofocus: { type: Boolean },
    autofocusDelay: { default: 0 },
    class: {},
    ui: {},
    open: { type: Boolean },
    defaultOpen: { type: Boolean },
    disabled: { type: Boolean },
    name: {},
    resetSearchTermOnBlur: { type: Boolean, default: !0 },
    resetSearchTermOnSelect: { type: Boolean, default: !0 },
    highlightOnHover: { type: Boolean },
    icon: {},
    avatar: {},
    leading: { type: Boolean },
    leadingIcon: {},
    trailing: { type: Boolean },
    loading: { type: Boolean },
    loadingIcon: {}
  }, {
    searchTerm: { default: "" },
    searchTermModifiers: {}
  }),
  emits: /* @__PURE__ */ mt(["update:open", "change", "blur", "focus", "create", "highlight", "update:modelValue"], ["update:searchTerm"]),
  setup(e, { expose: t, emit: a }) {
    const n = e, r = a, s = Se(), i = lt(e, "searchTerm"), { t: o } = it(), l = ue(), { contains: d } = af({ sensitivity: "base" }), c = Xe(tt(n, "modelValue", "defaultValue", "open", "defaultOpen", "required", "multiple", "resetSearchTermOnBlur", "resetSearchTermOnSelect", "highlightOnHover"), r), f = tn(Ge(() => n.portal)), p = Ge(() => Ct(n.content, { side: "bottom", sideOffset: 8, collisionPadding: 8, position: "popper" })), g = Ge(() => n.arrow), v = Ge(() => Ct(n.searchInput, { placeholder: o("selectMenu.search"), variant: "none" })), { emitFormBlur: m, emitFormFocus: y, emitFormInput: x, emitFormChange: b, size: C, color: w, id: $, name: B, highlight: I, disabled: E, ariaAttrs: P } = Ca(n), { orientation: R, size: F } = ur(n), { isLeading: H, isTrailing: j, leadingIconName: K, trailingIconName: z } = lr(Ge(() => Ct(n, { trailingIcon: l.ui.icons.chevronDown }))), G = T(() => F.value || C.value), [Y, q] = /* @__PURE__ */ Lt(), Q = T(() => W({ extend: W(IL), ...l.ui?.selectMenu || {} })({
      color: w.value,
      variant: n.variant,
      size: G?.value,
      loading: n.loading,
      highlight: I.value,
      leading: H.value || !!n.avatar || !!s.leading,
      trailing: j.value || !!s.trailing,
      fieldGroup: R.value
    }));
    function se(de) {
      if (n.multiple && Array.isArray(de)) {
        const _e = de.map((ie) => xi(oe.value, ie, {
          labelKey: n.labelKey,
          valueKey: n.valueKey
        })).filter((ie) => ie != null && ie !== "");
        return _e.length > 0 ? _e.join(", ") : void 0;
      }
      return xi(oe.value, de, {
        labelKey: n.labelKey,
        valueKey: n.valueKey
      });
    }
    const ce = T(
      () => n.items?.length ? Ps(n.items) ? n.items : [n.items] : []
    ), oe = T(() => ce.value.flatMap((de) => de)), xe = T(() => {
      if (n.ignoreFilter || !i.value)
        return ce.value;
      const de = Array.isArray(n.filterFields) ? n.filterFields : [n.labelKey];
      return ce.value.map((_e) => _e.filter((ie) => ie == null ? !1 : typeof ie != "object" ? d(String(ie), i.value) : ie.type && ["label", "separator"].includes(ie.type) ? !0 : de.some((Ne) => {
        const Oe = qe(ie, Ne);
        return Oe != null && d(String(Oe), i.value);
      }))).filter((_e) => _e.filter(
        (ie) => !re(ie) || !ie.type || !["label", "separator"].includes(ie.type)
      ).length > 0);
    }), $e = T(() => xe.value.flatMap((de) => de)), Le = T(() => {
      if (!n.createItem || !i.value)
        return !1;
      const de = n.valueKey ? { [n.valueKey]: i.value } : i.value;
      return typeof n.createItem == "object" && n.createItem.when === "always" || n.createItem === "always" ? !$e.value.find((_e) => jf(_e, de, n.valueKey)) : !$e.value.length;
    }), Ye = T(() => typeof n.createItem == "object" ? n.createItem.position : "bottom"), ne = N(null);
    function ae() {
      n.autofocus && ne.value?.$el?.focus({
        focusVisible: !0
      });
    }
    Pe(() => {
      setTimeout(() => {
        ae();
      }, n.autofocusDelay);
    });
    function be(de) {
      if (Tl(n.modelValue) === de)
        return;
      const _e = new Event("change", { target: { value: de } });
      r("change", _e), b(), x(), n.resetSearchTermOnSelect && (i.value = "");
    }
    function De(de) {
      let _e;
      if (de) {
        const ie = new FocusEvent("focus");
        r("focus", ie), y(), clearTimeout(_e);
      } else {
        const ie = new FocusEvent("blur");
        r("blur", ie), m(), n.resetSearchTermOnBlur && (_e = setTimeout(() => {
          i.value = "";
        }, 100));
      }
    }
    function Ke(de, _e) {
      if (re(_e)) {
        if (_e.disabled) {
          de.preventDefault();
          return;
        }
        _e.onSelect?.(de);
      }
    }
    function re(de) {
      return typeof de == "object" && de !== null;
    }
    return t({
      triggerRef: ne
    }), (de, _e) => (h(), M(te, null, [
      V(u(Y), null, {
        default: _(() => [
          V(u(sl), {
            class: A(Q.value.group({ class: n.ui?.group }))
          }, {
            default: _(() => [
              V(u(il), {
                class: A(Q.value.item({ class: n.ui?.item })),
                value: i.value,
                onSelect: _e[0] || (_e[0] = ze((ie) => r("create", i.value), ["prevent"]))
              }, {
                default: _(() => [
                  J("span", {
                    class: A(Q.value.itemLabel({ class: n.ui?.itemLabel }))
                  }, [
                    S(de.$slots, "create-item-label", { item: i.value }, () => [
                      ee(X(u(o)("selectMenu.create", { label: i.value })), 1)
                    ])
                  ], 2)
                ]),
                _: 3
              }, 8, ["class", "value"])
            ]),
            _: 3
          }, 8, ["class"])
        ]),
        _: 3
      }),
      V(u(Iy), O({ id: u($) }, { ...u(c), ...de.$attrs, ...u(P) }, {
        "ignore-filter": "",
        "as-child": "",
        name: u(B),
        disabled: u(E),
        "onUpdate:modelValue": be,
        "onUpdate:open": De
      }), {
        default: _(({ modelValue: ie, open: Ne }) => [
          V(u(Cy), { "as-child": "" }, {
            default: _(() => [
              V(u(Oy), {
                ref_key: "triggerRef",
                ref: ne,
                class: A(Q.value.base({ class: [n.ui?.base, n.class] })),
                tabindex: "0"
              }, {
                default: _(() => [
                  u(H) || de.avatar || s.leading ? (h(), M("span", {
                    key: 0,
                    class: A(Q.value.leading({ class: n.ui?.leading }))
                  }, [
                    S(de.$slots, "leading", {
                      modelValue: ie,
                      open: Ne,
                      ui: Q.value
                    }, () => [
                      u(H) && u(K) ? (h(), k(he, {
                        key: 0,
                        name: u(K),
                        class: A(Q.value.leadingIcon({ class: n.ui?.leadingIcon }))
                      }, null, 8, ["name", "class"])) : de.avatar ? (h(), k(ft, O({
                        key: 1,
                        size: n.ui?.itemLeadingAvatarSize || Q.value.itemLeadingAvatarSize()
                      }, de.avatar, {
                        class: Q.value.itemLeadingAvatar({ class: n.ui?.itemLeadingAvatar })
                      }), null, 16, ["size", "class"])) : D("", !0)
                    ])
                  ], 2)) : D("", !0),
                  S(de.$slots, "default", {
                    modelValue: ie,
                    open: Ne
                  }, () => [
                    (h(!0), M(te, null, le([se(ie)], (Oe) => (h(), M(te, { key: Oe }, [
                      Oe != null ? (h(), M("span", {
                        key: 0,
                        class: A(Q.value.value({ class: n.ui?.value }))
                      }, X(Oe), 3)) : (h(), M("span", {
                        key: 1,
                        class: A(Q.value.placeholder({ class: n.ui?.placeholder }))
                      }, X(de.placeholder ?? " "), 3))
                    ], 64))), 128))
                  ]),
                  u(j) || s.trailing ? (h(), M("span", {
                    key: 1,
                    class: A(Q.value.trailing({ class: n.ui?.trailing }))
                  }, [
                    S(de.$slots, "trailing", {
                      modelValue: ie,
                      open: Ne,
                      ui: Q.value
                    }, () => [
                      u(z) ? (h(), k(he, {
                        key: 0,
                        name: u(z),
                        class: A(Q.value.trailingIcon({ class: n.ui?.trailingIcon }))
                      }, null, 8, ["name", "class"])) : D("", !0)
                    ])
                  ], 2)) : D("", !0)
                ]),
                _: 2
              }, 1032, ["class"])
            ]),
            _: 2
          }, 1024),
          V(u(Ry), pe(me(u(f))), {
            default: _(() => [
              V(u(Ty), O({
                class: Q.value.content({ class: n.ui?.content })
              }, p.value), {
                default: _(() => [
                  V(u(Ni), {
                    trapped: "",
                    class: A(Q.value.focusScope({ class: n.ui?.focusScope }))
                  }, {
                    default: _(() => [
                      S(de.$slots, "content-top"),
                      de.searchInput ? (h(), k(u(_d), {
                        key: 0,
                        modelValue: i.value,
                        "onUpdate:modelValue": _e[1] || (_e[1] = (Oe) => i.value = Oe),
                        "display-value": () => i.value,
                        "as-child": ""
                      }, {
                        default: _(() => [
                          V(pl, O({
                            autofocus: "",
                            autocomplete: "off",
                            size: de.size
                          }, v.value, {
                            class: Q.value.input({ class: n.ui?.input })
                          }), null, 16, ["size", "class"])
                        ]),
                        _: 1
                      }, 8, ["modelValue", "display-value"])) : D("", !0),
                      V(u(By), {
                        class: A(Q.value.empty({ class: n.ui?.empty }))
                      }, {
                        default: _(() => [
                          S(de.$slots, "empty", { searchTerm: i.value }, () => [
                            ee(X(i.value ? u(o)("selectMenu.noMatch", { searchTerm: i.value }) : u(o)("selectMenu.noData")), 1)
                          ])
                        ]),
                        _: 3
                      }, 8, ["class"]),
                      J("div", {
                        role: "presentation",
                        class: A(Q.value.viewport({ class: n.ui?.viewport }))
                      }, [
                        Le.value && Ye.value === "top" ? (h(), k(u(q), { key: 0 })) : D("", !0),
                        (h(!0), M(te, null, le(xe.value, (Oe, Ae) => (h(), k(u(sl), {
                          key: `group-${Ae}`,
                          class: A(Q.value.group({ class: n.ui?.group }))
                        }, {
                          default: _(() => [
                            (h(!0), M(te, null, le(Oe, (ge, Fe) => (h(), M(te, {
                              key: `group-${Ae}-${Fe}`
                            }, [
                              re(ge) && ge.type === "label" ? (h(), k(u(My), {
                                key: 0,
                                class: A(Q.value.label({ class: [n.ui?.label, ge.ui?.label, ge.class] }))
                              }, {
                                default: _(() => [
                                  ee(X(u(qe)(ge, n.labelKey)), 1)
                                ]),
                                _: 2
                              }, 1032, ["class"])) : re(ge) && ge.type === "separator" ? (h(), k(u(Ly), {
                                key: 1,
                                class: A(Q.value.separator({ class: [n.ui?.separator, ge.ui?.separator, ge.class] }))
                              }, null, 8, ["class"])) : (h(), k(u(il), {
                                key: 2,
                                class: A(Q.value.item({ class: [n.ui?.item, re(ge) && ge.ui?.item, re(ge) && ge.class] })),
                                disabled: re(ge) && ge.disabled,
                                value: n.valueKey && re(ge) ? u(qe)(ge, n.valueKey) : ge,
                                onSelect: (ve) => Ke(ve, ge)
                              }, {
                                default: _(() => [
                                  S(de.$slots, "item", {
                                    item: ge,
                                    index: Fe
                                  }, () => [
                                    S(de.$slots, "item-leading", {
                                      item: ge,
                                      index: Fe
                                    }, () => [
                                      re(ge) && ge.icon ? (h(), k(he, {
                                        key: 0,
                                        name: ge.icon,
                                        class: A(Q.value.itemLeadingIcon({ class: [n.ui?.itemLeadingIcon, ge.ui?.itemLeadingIcon] }))
                                      }, null, 8, ["name", "class"])) : re(ge) && ge.avatar ? (h(), k(ft, O({
                                        key: 1,
                                        size: ge.ui?.itemLeadingAvatarSize || n.ui?.itemLeadingAvatarSize || Q.value.itemLeadingAvatarSize()
                                      }, { ref_for: !0 }, ge.avatar, {
                                        class: Q.value.itemLeadingAvatar({ class: [n.ui?.itemLeadingAvatar, ge.ui?.itemLeadingAvatar] })
                                      }), null, 16, ["size", "class"])) : re(ge) && ge.chip ? (h(), k(Rs, O({
                                        key: 2,
                                        size: n.ui?.itemLeadingChipSize || Q.value.itemLeadingChipSize(),
                                        inset: "",
                                        standalone: ""
                                      }, { ref_for: !0 }, ge.chip, {
                                        class: Q.value.itemLeadingChip({ class: [n.ui?.itemLeadingChip, ge.ui?.itemLeadingChip] })
                                      }), null, 16, ["size", "class"])) : D("", !0)
                                    ]),
                                    J("span", {
                                      class: A(Q.value.itemLabel({ class: [n.ui?.itemLabel, re(ge) && ge.ui?.itemLabel] }))
                                    }, [
                                      S(de.$slots, "item-label", {
                                        item: ge,
                                        index: Fe
                                      }, () => [
                                        ee(X(re(ge) ? u(qe)(ge, n.labelKey) : ge), 1)
                                      ])
                                    ], 2),
                                    J("span", {
                                      class: A(Q.value.itemTrailing({ class: [n.ui?.itemTrailing, re(ge) && ge.ui?.itemTrailing] }))
                                    }, [
                                      S(de.$slots, "item-trailing", {
                                        item: ge,
                                        index: Fe
                                      }),
                                      V(u(Dy), { "as-child": "" }, {
                                        default: _(() => [
                                          V(he, {
                                            name: de.selectedIcon || u(l).ui.icons.check,
                                            class: A(Q.value.itemTrailingIcon({ class: [n.ui?.itemTrailingIcon, re(ge) && ge.ui?.itemTrailingIcon] }))
                                          }, null, 8, ["name", "class"])
                                        ]),
                                        _: 2
                                      }, 1024)
                                    ], 2)
                                  ])
                                ]),
                                _: 2
                              }, 1032, ["class", "disabled", "value", "onSelect"]))
                            ], 64))), 128))
                          ]),
                          _: 2
                        }, 1032, ["class"]))), 128)),
                        Le.value && Ye.value === "bottom" ? (h(), k(u(q), { key: 1 })) : D("", !0)
                      ], 2),
                      S(de.$slots, "content-bottom")
                    ]),
                    _: 3
                  }, 8, ["class"]),
                  de.arrow ? (h(), k(u(Ey), O({ key: 0 }, g.value, {
                    class: Q.value.arrow({ class: n.ui?.arrow })
                  }), null, 16, ["class"])) : D("", !0)
                ]),
                _: 3
              }, 16, ["class"])
            ]),
            _: 3
          }, 16)
        ]),
        _: 3
      }, 16, ["id", "name", "disabled"])
    ], 64));
  }
}), TL = {
  slots: {
    root: "relative inline-flex items-center gap-1.5",
    base: [
      "rounded-md border-0 placeholder:text-dimmed text-center focus:outline-none disabled:cursor-not-allowed disabled:opacity-75",
      "transition-colors"
    ]
  },
  variants: {
    size: {
      xs: {
        base: "size-6 text-xs"
      },
      sm: {
        base: "size-7 text-xs"
      },
      md: {
        base: "size-8 text-sm"
      },
      lg: {
        base: "size-9 text-sm"
      },
      xl: {
        base: "size-10 text-base"
      }
    },
    variant: {
      outline: "text-highlighted bg-default ring ring-inset ring-accented",
      soft: "text-highlighted bg-elevated/50 hover:bg-elevated focus:bg-elevated disabled:bg-elevated/50",
      subtle: "text-highlighted bg-elevated ring ring-inset ring-accented",
      ghost: "text-highlighted bg-transparent hover:bg-elevated focus:bg-elevated disabled:bg-transparent dark:disabled:bg-transparent",
      none: "text-highlighted bg-transparent"
    },
    color: {
      primary: "",
      secondary: "",
      success: "",
      info: "",
      warning: "",
      error: "",
      neutral: ""
    },
    highlight: {
      true: ""
    }
  },
  compoundVariants: [
    {
      color: "primary",
      variant: [
        "outline",
        "subtle"
      ],
      class: "focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-primary"
    },
    {
      color: "secondary",
      variant: [
        "outline",
        "subtle"
      ],
      class: "focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-secondary"
    },
    {
      color: "success",
      variant: [
        "outline",
        "subtle"
      ],
      class: "focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-success"
    },
    {
      color: "info",
      variant: [
        "outline",
        "subtle"
      ],
      class: "focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-info"
    },
    {
      color: "warning",
      variant: [
        "outline",
        "subtle"
      ],
      class: "focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-warning"
    },
    {
      color: "error",
      variant: [
        "outline",
        "subtle"
      ],
      class: "focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-error"
    },
    {
      color: "primary",
      highlight: !0,
      class: "ring ring-inset ring-primary"
    },
    {
      color: "secondary",
      highlight: !0,
      class: "ring ring-inset ring-secondary"
    },
    {
      color: "success",
      highlight: !0,
      class: "ring ring-inset ring-success"
    },
    {
      color: "info",
      highlight: !0,
      class: "ring ring-inset ring-info"
    },
    {
      color: "warning",
      highlight: !0,
      class: "ring ring-inset ring-warning"
    },
    {
      color: "error",
      highlight: !0,
      class: "ring ring-inset ring-error"
    },
    {
      color: "neutral",
      variant: [
        "outline",
        "subtle"
      ],
      class: "focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-inverted"
    },
    {
      color: "neutral",
      highlight: !0,
      class: "ring ring-inset ring-inverted"
    }
  ],
  defaultVariants: {
    size: "md",
    color: "primary",
    variant: "outline"
  }
}, BL = /* @__PURE__ */ L({
  __name: "PinInput",
  props: {
    as: {},
    color: {},
    variant: {},
    size: {},
    length: { default: 5 },
    autofocus: { type: Boolean },
    autofocusDelay: { default: 0 },
    highlight: { type: Boolean },
    class: {},
    ui: {},
    defaultValue: {},
    disabled: { type: Boolean },
    id: {},
    mask: { type: Boolean },
    modelValue: {},
    name: {},
    otp: { type: Boolean },
    placeholder: {},
    required: { type: Boolean },
    type: { default: "text" }
  },
  emits: ["update:modelValue", "complete", "change", "blur"],
  setup(e, { expose: t, emit: a }) {
    const n = e, r = a, s = ue(), i = Xe(tt(n, "disabled", "id", "mask", "name", "otp", "required", "type"), r), { emitFormInput: o, emitFormFocus: l, emitFormChange: d, emitFormBlur: c, size: f, color: p, id: g, name: v, highlight: m, disabled: y, ariaAttrs: x } = Ca(n), b = T(() => W({ extend: W(TL), ...s.ui?.pinInput || {} })({
      color: p.value,
      variant: n.variant,
      size: f.value,
      highlight: m.value
    })), C = N([]), w = N(!1);
    function $(E) {
      const P = new Event("change", { target: { value: E } });
      r("change", P), d();
    }
    function B(E) {
      (!E.relatedTarget || w.value) && (r("blur", E), c());
    }
    function I() {
      n.autofocus && C.value[0]?.$el?.focus();
    }
    return Pe(() => {
      setTimeout(() => {
        I();
      }, n.autofocusDelay);
    }), t({
      inputsRef: C
    }), (E, P) => (h(), k(u(vT), O({ ...u(i), ...u(x) }, {
      id: u(g),
      name: u(v),
      placeholder: E.placeholder,
      "model-value": E.modelValue,
      "default-value": E.defaultValue,
      class: b.value.root({ class: [n.ui?.root, n.class] }),
      "onUpdate:modelValue": P[0] || (P[0] = (R) => u(o)()),
      onComplete: $
    }), {
      default: _(() => [
        (h(!0), M(te, null, le(u(Hf)(n.length), (R, F) => (h(), k(u(mT), {
          key: R,
          ref_for: !0,
          ref: (H) => C.value[F] = H,
          index: F,
          class: A(b.value.base({ class: n.ui?.base })),
          disabled: u(y),
          onBlur: B,
          onFocus: u(l)
        }, null, 8, ["index", "class", "disabled", "onFocus"]))), 128))
      ]),
      _: 1
    }, 16, ["id", "name", "placeholder", "model-value", "default-value", "class"]));
  }
}), PL = {
  slots: {
    root: "w-full space-y-6",
    header: "flex flex-col text-center",
    leading: "mb-2",
    leadingIcon: "size-8 shrink-0 inline-block",
    title: "text-xl text-pretty font-semibold text-highlighted",
    description: "mt-1 text-base text-pretty text-muted",
    body: "gap-y-6 flex flex-col",
    providers: "space-y-3",
    checkbox: "",
    select: "",
    password: "w-full",
    otp: "w-full justify-center",
    input: "w-full",
    separator: "",
    form: "space-y-5",
    footer: "text-sm text-center text-muted mt-2"
  }
}, i4 = /* @__PURE__ */ L({
  __name: "AuthForm",
  props: {
    as: {},
    icon: {},
    title: {},
    description: {},
    fields: {},
    providers: {},
    separator: { default: "or" },
    submit: {},
    schema: {},
    validate: {},
    validateOn: {},
    validateOnInputDelay: {},
    disabled: { type: Boolean },
    loading: { type: Boolean },
    loadingAuto: { type: Boolean },
    class: {},
    onSubmit: {},
    ui: {}
  },
  emits: ["submit"],
  setup(e, { expose: t }) {
    const a = e, n = ba((a.fields || []).reduce((c, f) => (f.name && (c[f.name] = f.defaultValue), c), {})), r = Se(), { t: s } = it(), i = ue(), o = Bl("formRef"), l = N(!1), d = T(() => W({ extend: W(PL), ...i.ui?.authForm || {} })());
    return t({
      formRef: o,
      state: n
    }), (c, f) => (h(), k(u(U), {
      as: c.as,
      class: A(d.value.root({ class: [a.ui?.root, a.class] }))
    }, {
      default: _(() => [
        c.icon || r.icon || c.title || r.title || c.description || r.description || r.header ? (h(), M("div", {
          key: 0,
          class: A(d.value.header({ class: a.ui?.header }))
        }, [
          S(c.$slots, "header", {}, () => [
            c.icon || r.leading ? (h(), M("div", {
              key: 0,
              class: A(d.value.leading({ class: a.ui?.leading }))
            }, [
              S(c.$slots, "leading", {}, () => [
                c.icon ? (h(), k(he, {
                  key: 0,
                  name: c.icon,
                  class: A(d.value.leadingIcon({ class: a.ui?.leadingIcon }))
                }, null, 8, ["name", "class"])) : D("", !0)
              ])
            ], 2)) : D("", !0),
            c.title || r.title ? (h(), M("div", {
              key: 1,
              class: A(d.value.title({ class: a.ui?.title }))
            }, [
              S(c.$slots, "title", {}, () => [
                ee(X(c.title), 1)
              ])
            ], 2)) : D("", !0),
            c.description || r.description ? (h(), M("div", {
              key: 2,
              class: A(d.value.description({ class: a.ui?.description }))
            }, [
              S(c.$slots, "description", {}, () => [
                ee(X(c.description), 1)
              ])
            ], 2)) : D("", !0)
          ])
        ], 2)) : D("", !0),
        J("div", {
          class: A(d.value.body({ class: a.ui?.body }))
        }, [
          c.providers?.length || r.providers ? (h(), M("div", {
            key: 0,
            class: A(d.value.providers({ class: a.ui?.providers }))
          }, [
            S(c.$slots, "providers", {}, () => [
              (h(!0), M(te, null, le(c.providers, (p, g) => (h(), k(Je, O({
                key: g,
                block: "",
                color: "neutral",
                variant: "subtle"
              }, { ref_for: !0 }, p), null, 16))), 128))
            ])
          ], 2)) : D("", !0),
          c.providers?.length && c.fields?.length ? (h(), k(sL, O({ key: 1 }, typeof c.separator == "object" ? c.separator : { label: c.separator }, {
            class: d.value.separator({ class: a.ui?.separator })
          }), null, 16, ["class"])) : D("", !0),
          c.fields?.length ? (h(), k(yL, {
            key: 2,
            ref_key: "formRef",
            ref: o,
            state: n,
            schema: c.schema,
            validate: c.validate,
            "validate-on": c.validateOn,
            class: A(d.value.form({ class: a.ui?.form })),
            disabled: c.disabled,
            "loading-auto": c.loadingAuto,
            onSubmit: c.onSubmit
          }, {
            default: _(() => [
              (h(!0), M(te, null, le(c.fields, (p) => (h(), k(_L, {
                key: p.name,
                label: p.type === "checkbox" ? "" : p.label ?? "",
                description: p.description,
                help: p.help,
                hint: p.hint,
                name: p.name,
                size: p.size,
                required: p.required,
                error: p.error
              }, Ia({
                default: _(() => [
                  S(c.$slots, `${p.name}-field`, O({ ref_for: !0 }, { state: n, field: p }), () => [
                    p.type === "checkbox" ? (h(), k(x0, O({
                      key: 0,
                      modelValue: n[p.name],
                      "onUpdate:modelValue": (g) => n[p.name] = g,
                      class: d.value.checkbox({ class: a.ui?.checkbox })
                    }, { ref_for: !0 }, u(Mt)(p, ["description", "help", "hint", "size"])), null, 16, ["modelValue", "onUpdate:modelValue", "class"])) : p.type === "select" ? (h(), k(EL, O({
                      key: 1,
                      modelValue: n[p.name],
                      "onUpdate:modelValue": (g) => n[p.name] = g,
                      class: d.value.select({ class: a.ui?.select })
                    }, { ref_for: !0 }, u(Mt)(p, ["description", "help", "hint", "size"])), null, 16, ["modelValue", "onUpdate:modelValue", "class"])) : p.type === "password" ? (h(), k(pl, O({
                      key: 2,
                      modelValue: n[p.name],
                      "onUpdate:modelValue": (g) => n[p.name] = g,
                      class: d.value.password({ class: a.ui?.password }),
                      type: l.value ? "text" : "password"
                    }, { ref_for: !0 }, u(Mt)(p, ["label", "description", "help", "hint", "size", "type", "required", "defaultValue"]), { ui: { root: "w-full" } }), {
                      trailing: _(() => [
                        V(Je, {
                          color: "neutral",
                          variant: "link",
                          size: "sm",
                          icon: l.value ? u(i).ui.icons.eyeOff : u(i).ui.icons.eye,
                          "aria-label": l.value ? u(s)("authForm.hidePassword") : u(s)("authForm.showPassword"),
                          "aria-pressed": l.value,
                          "aria-controls": "password",
                          onClick: f[0] || (f[0] = (g) => l.value = !l.value)
                        }, null, 8, ["icon", "aria-label", "aria-pressed"])
                      ]),
                      _: 1
                    }, 16, ["modelValue", "onUpdate:modelValue", "class", "type"])) : p.type === "otp" ? (h(), k(BL, O({
                      key: 3,
                      id: p.name,
                      modelValue: n[p.name],
                      "onUpdate:modelValue": (g) => n[p.name] = g,
                      class: d.value.otp({ class: a.ui?.otp }),
                      otp: ""
                    }, { ref_for: !0 }, p.otp), null, 16, ["id", "modelValue", "onUpdate:modelValue", "class"])) : (h(), k(pl, O({
                      key: 4,
                      modelValue: n[p.name],
                      "onUpdate:modelValue": (g) => n[p.name] = g,
                      class: d.value.input({ class: a.ui?.input })
                    }, { ref_for: !0 }, u(Mt)(p, ["label", "description", "help", "hint", "size", "required", "defaultValue"])), null, 16, ["modelValue", "onUpdate:modelValue", "class"]))
                  ])
                ]),
                _: 2
              }, [
                r[`${p.name}-label`] ? {
                  name: "label",
                  fn: _(() => [
                    S(c.$slots, `${p.name}-label`)
                  ]),
                  key: "0"
                } : void 0,
                r[`${p.name}-description`] ? {
                  name: "description",
                  fn: _(() => [
                    S(c.$slots, `${p.name}-description`)
                  ]),
                  key: "1"
                } : void 0,
                r[`${p.name}-hint`] ? {
                  name: "hint",
                  fn: _(() => [
                    S(c.$slots, `${p.name}-hint`)
                  ]),
                  key: "2"
                } : void 0,
                r[`${p.name}-help`] ? {
                  name: "help",
                  fn: _(() => [
                    S(c.$slots, `${p.name}-help`)
                  ]),
                  key: "3"
                } : void 0,
                r[`${p.name}-error`] ? {
                  name: "error",
                  fn: _(() => [
                    S(c.$slots, `${p.name}-error`)
                  ]),
                  key: "4"
                } : void 0
              ]), 1032, ["label", "description", "help", "hint", "name", "size", "required", "error"]))), 128)),
              r.validation ? S(c.$slots, "validation", { key: 0 }) : D("", !0),
              S(c.$slots, "submit", { loading: c.loading }, () => [
                V(Je, O({
                  type: "submit",
                  label: u(s)("authForm.submit"),
                  block: "",
                  loading: c.loading,
                  "loading-auto": c.loadingAuto
                }, c.submit), null, 16, ["label", "loading", "loading-auto"])
              ])
            ]),
            _: 3
          }, 8, ["state", "schema", "validate", "validate-on", "class", "disabled", "loading-auto", "onSubmit"])) : D("", !0)
        ], 2),
        r.footer ? (h(), M("div", {
          key: 1,
          class: A(d.value.footer({ class: a.ui?.footer }))
        }, [
          S(c.$slots, "footer")
        ], 2)) : D("", !0)
      ]),
      _: 3
    }, 8, ["as", "class"]));
  }
}), DL = {
  slots: {
    root: "inline-flex flex-row-reverse justify-end",
    base: "relative rounded-full ring-bg first:me-0"
  },
  variants: {
    size: {
      "3xs": {
        base: "ring -me-0.5"
      },
      "2xs": {
        base: "ring -me-0.5"
      },
      xs: {
        base: "ring -me-0.5"
      },
      sm: {
        base: "ring-2 -me-1.5"
      },
      md: {
        base: "ring-2 -me-1.5"
      },
      lg: {
        base: "ring-2 -me-1.5"
      },
      xl: {
        base: "ring-3 -me-2"
      },
      "2xl": {
        base: "ring-3 -me-2"
      },
      "3xl": {
        base: "ring-3 -me-2"
      }
    }
  },
  defaultVariants: {
    size: "md"
  }
}, ML = /* @__PURE__ */ L({
  __name: "AvatarGroup",
  props: {
    as: {},
    size: {},
    max: {},
    class: {},
    ui: {}
  },
  setup(e) {
    const t = e, a = Se(), n = ue(), r = T(() => W({ extend: W(DL), ...n.ui?.avatarGroup || {} })({
      size: t.size
    })), s = T(() => typeof t.max == "string" ? Number.parseInt(t.max, 10) : t.max), i = T(() => {
      let d = a.default?.();
      return d?.length && (d = d.flatMap((c) => typeof c.type == "symbol" ? typeof c.children == "string" ? void 0 : c.children : c).filter(Boolean)), d || [];
    }), o = T(() => i.value.length ? !s.value || s.value <= 0 ? [...i.value].reverse() : [...i.value].slice(0, s.value).reverse() : []), l = T(() => i.value.length ? i.value.length - o.value.length : 0);
    return ta(jd, T(() => ({
      size: t.size
    }))), (d, c) => (h(), k(u(U), {
      as: d.as,
      class: A(r.value.root({ class: [t.ui?.root, t.class] }))
    }, {
      default: _(() => [
        l.value > 0 ? (h(), k(ft, {
          key: 0,
          text: `+${l.value}`,
          class: A(r.value.base({ class: t.ui?.base }))
        }, null, 8, ["text", "class"])) : D("", !0),
        (h(!0), M(te, null, le(o.value, (f, p) => (h(), k(ut(f), {
          key: p,
          class: A(r.value.base({ class: t.ui?.base }))
        }, null, 8, ["class"]))), 128))
      ]),
      _: 1
    }, 8, ["as", "class"]));
  }
}), RL = {
  slots: {
    base: "font-medium inline-flex items-center",
    label: "truncate",
    leadingIcon: "shrink-0",
    leadingAvatar: "shrink-0",
    leadingAvatarSize: "",
    trailingIcon: "shrink-0"
  },
  variants: {
    fieldGroup: {
      horizontal: "not-only:first:rounded-e-none not-only:last:rounded-s-none not-last:not-first:rounded-none focus-visible:z-[1]",
      vertical: "not-only:first:rounded-b-none not-only:last:rounded-t-none not-last:not-first:rounded-none focus-visible:z-[1]"
    },
    color: {
      primary: "",
      secondary: "",
      success: "",
      info: "",
      warning: "",
      error: "",
      neutral: ""
    },
    variant: {
      solid: "",
      outline: "",
      soft: "",
      subtle: ""
    },
    size: {
      xs: {
        base: "text-[8px]/3 px-1 py-0.5 gap-1 rounded-sm",
        leadingIcon: "size-3",
        leadingAvatarSize: "3xs",
        trailingIcon: "size-3"
      },
      sm: {
        base: "text-[10px]/3 px-1.5 py-1 gap-1 rounded-sm",
        leadingIcon: "size-3",
        leadingAvatarSize: "3xs",
        trailingIcon: "size-3"
      },
      md: {
        base: "text-xs px-2 py-1 gap-1 rounded-md",
        leadingIcon: "size-4",
        leadingAvatarSize: "3xs",
        trailingIcon: "size-4"
      },
      lg: {
        base: "text-sm px-2 py-1 gap-1.5 rounded-md",
        leadingIcon: "size-5",
        leadingAvatarSize: "2xs",
        trailingIcon: "size-5"
      },
      xl: {
        base: "text-base px-2.5 py-1 gap-1.5 rounded-md",
        leadingIcon: "size-6",
        leadingAvatarSize: "2xs",
        trailingIcon: "size-6"
      }
    },
    square: {
      true: ""
    }
  },
  compoundVariants: [
    {
      color: "primary",
      variant: "solid",
      class: "bg-primary text-inverted"
    },
    {
      color: "secondary",
      variant: "solid",
      class: "bg-secondary text-inverted"
    },
    {
      color: "success",
      variant: "solid",
      class: "bg-success text-inverted"
    },
    {
      color: "info",
      variant: "solid",
      class: "bg-info text-inverted"
    },
    {
      color: "warning",
      variant: "solid",
      class: "bg-warning text-inverted"
    },
    {
      color: "error",
      variant: "solid",
      class: "bg-error text-inverted"
    },
    {
      color: "primary",
      variant: "outline",
      class: "text-primary ring ring-inset ring-primary/50"
    },
    {
      color: "secondary",
      variant: "outline",
      class: "text-secondary ring ring-inset ring-secondary/50"
    },
    {
      color: "success",
      variant: "outline",
      class: "text-success ring ring-inset ring-success/50"
    },
    {
      color: "info",
      variant: "outline",
      class: "text-info ring ring-inset ring-info/50"
    },
    {
      color: "warning",
      variant: "outline",
      class: "text-warning ring ring-inset ring-warning/50"
    },
    {
      color: "error",
      variant: "outline",
      class: "text-error ring ring-inset ring-error/50"
    },
    {
      color: "primary",
      variant: "soft",
      class: "bg-primary/10 text-primary"
    },
    {
      color: "secondary",
      variant: "soft",
      class: "bg-secondary/10 text-secondary"
    },
    {
      color: "success",
      variant: "soft",
      class: "bg-success/10 text-success"
    },
    {
      color: "info",
      variant: "soft",
      class: "bg-info/10 text-info"
    },
    {
      color: "warning",
      variant: "soft",
      class: "bg-warning/10 text-warning"
    },
    {
      color: "error",
      variant: "soft",
      class: "bg-error/10 text-error"
    },
    {
      color: "primary",
      variant: "subtle",
      class: "bg-primary/10 text-primary ring ring-inset ring-primary/25"
    },
    {
      color: "secondary",
      variant: "subtle",
      class: "bg-secondary/10 text-secondary ring ring-inset ring-secondary/25"
    },
    {
      color: "success",
      variant: "subtle",
      class: "bg-success/10 text-success ring ring-inset ring-success/25"
    },
    {
      color: "info",
      variant: "subtle",
      class: "bg-info/10 text-info ring ring-inset ring-info/25"
    },
    {
      color: "warning",
      variant: "subtle",
      class: "bg-warning/10 text-warning ring ring-inset ring-warning/25"
    },
    {
      color: "error",
      variant: "subtle",
      class: "bg-error/10 text-error ring ring-inset ring-error/25"
    },
    {
      color: "neutral",
      variant: "solid",
      class: "text-inverted bg-inverted"
    },
    {
      color: "neutral",
      variant: "outline",
      class: "ring ring-inset ring-accented text-default bg-default"
    },
    {
      color: "neutral",
      variant: "soft",
      class: "text-default bg-elevated"
    },
    {
      color: "neutral",
      variant: "subtle",
      class: "ring ring-inset ring-accented text-default bg-elevated"
    },
    {
      size: "xs",
      square: !0,
      class: "p-0.5"
    },
    {
      size: "sm",
      square: !0,
      class: "p-1"
    },
    {
      size: "md",
      square: !0,
      class: "p-1"
    },
    {
      size: "lg",
      square: !0,
      class: "p-1"
    },
    {
      size: "xl",
      square: !0,
      class: "p-1"
    }
  ],
  defaultVariants: {
    color: "primary",
    variant: "solid",
    size: "md"
  }
}, Ls = /* @__PURE__ */ L({
  __name: "Badge",
  props: {
    as: { default: "span" },
    label: {},
    color: {},
    variant: {},
    size: {},
    square: { type: Boolean },
    class: {},
    ui: {},
    icon: {},
    avatar: {},
    leading: { type: Boolean },
    leadingIcon: {},
    trailing: { type: Boolean },
    trailingIcon: {}
  },
  setup(e) {
    const t = e, a = Se(), n = ue(), { orientation: r, size: s } = ur(t), { isLeading: i, isTrailing: o, leadingIconName: l, trailingIconName: d } = lr(t), c = T(() => W({ extend: W(RL), ...n.ui?.badge || {} })({
      color: t.color,
      variant: t.variant,
      size: s.value || t.size,
      square: t.square || !a.default && !t.label,
      fieldGroup: r.value
    }));
    return (f, p) => (h(), k(u(U), {
      as: f.as,
      class: A(c.value.base({ class: [t.ui?.base, t.class] }))
    }, {
      default: _(() => [
        S(f.$slots, "leading", {}, () => [
          u(i) && u(l) ? (h(), k(he, {
            key: 0,
            name: u(l),
            class: A(c.value.leadingIcon({ class: t.ui?.leadingIcon }))
          }, null, 8, ["name", "class"])) : f.avatar ? (h(), k(ft, O({
            key: 1,
            size: t.ui?.leadingAvatarSize || c.value.leadingAvatarSize()
          }, f.avatar, {
            class: c.value.leadingAvatar({ class: t.ui?.leadingAvatar })
          }), null, 16, ["size", "class"])) : D("", !0)
        ]),
        S(f.$slots, "default", {}, () => [
          f.label !== void 0 && f.label !== null ? (h(), M("span", {
            key: 0,
            class: A(c.value.label({ class: t.ui?.label }))
          }, X(f.label), 3)) : D("", !0)
        ]),
        S(f.$slots, "trailing", {}, () => [
          u(o) && u(d) ? (h(), k(he, {
            key: 0,
            name: u(d),
            class: A(c.value.trailingIcon({ class: t.ui?.trailingIcon }))
          }, null, 8, ["name", "class"])) : D("", !0)
        ])
      ]),
      _: 3
    }, 8, ["as", "class"]));
  }
}), LL = {
  base: "w-full max-w-(--ui-container) mx-auto px-4 sm:px-6 lg:px-8"
}, Os = /* @__PURE__ */ L({
  __name: "Container",
  props: {
    as: {},
    class: {}
  },
  setup(e) {
    const t = e, a = ue(), n = T(() => W({ extend: W(LL), ...a.ui?.container || {} }));
    return (r, s) => (h(), k(u(U), {
      as: r.as,
      class: A(n.value({ class: t.class }))
    }, {
      default: _(() => [
        S(r.$slots, "default")
      ]),
      _: 3
    }, 8, ["as", "class"]));
  }
}), OL = {
  slots: {
    root: [
      "relative z-50 w-full",
      "transition-colors"
    ],
    container: "flex items-center justify-between gap-3 h-12",
    left: "hidden lg:flex-1 lg:flex lg:items-center",
    center: "flex items-center gap-1.5 min-w-0",
    right: "lg:flex-1 flex items-center justify-end",
    icon: "size-5 shrink-0 text-inverted pointer-events-none",
    title: "text-sm text-inverted font-medium truncate",
    actions: "flex gap-1.5 shrink-0 isolate",
    close: "text-inverted hover:bg-default/10 focus-visible:bg-default/10 -me-1.5 lg:me-0"
  },
  variants: {
    color: {
      primary: {
        root: "bg-primary"
      },
      secondary: {
        root: "bg-secondary"
      },
      success: {
        root: "bg-success"
      },
      info: {
        root: "bg-info"
      },
      warning: {
        root: "bg-warning"
      },
      error: {
        root: "bg-error"
      },
      neutral: {
        root: "bg-inverted"
      }
    },
    to: {
      true: ""
    }
  },
  compoundVariants: [
    {
      color: "primary",
      to: !0,
      class: {
        root: "hover:bg-primary/90"
      }
    },
    {
      color: "secondary",
      to: !0,
      class: {
        root: "hover:bg-secondary/90"
      }
    },
    {
      color: "success",
      to: !0,
      class: {
        root: "hover:bg-success/90"
      }
    },
    {
      color: "info",
      to: !0,
      class: {
        root: "hover:bg-info/90"
      }
    },
    {
      color: "warning",
      to: !0,
      class: {
        root: "hover:bg-warning/90"
      }
    },
    {
      color: "error",
      to: !0,
      class: {
        root: "hover:bg-error/90"
      }
    },
    {
      color: "neutral",
      to: !0,
      class: {
        root: "hover:bg-inverted/90"
      }
    }
  ],
  defaultVariants: {
    color: "primary"
  }
}, FL = /* @__PURE__ */ L({
  inheritAttrs: !1,
  __name: "Banner",
  props: {
    as: {},
    id: {},
    icon: {},
    title: {},
    actions: {},
    to: {},
    target: {},
    color: {},
    close: { type: [Boolean, Object] },
    closeIcon: {},
    class: {},
    ui: {}
  },
  emits: ["close"],
  setup(e, { emit: t }) {
    const a = e, n = Se(), r = t, { t: s } = it(), i = ue(), o = T(() => W({ extend: W(OL), ...i.ui?.banner || {} })({
      color: a.color,
      to: !!a.to
    })), l = T(() => `banner-${a.id || "1"}`);
    ye(l, (c) => {
      if (typeof document > "u" || typeof localStorage > "u") return;
      const f = localStorage.getItem(c) === "true";
      document.querySelector("html")?.classList.toggle("hide-banner", f);
    }), PM({
      script: [{
        key: "prehydrate-template-banner",
        innerHTML: `
            if (localStorage.getItem('${l.value}') === 'true') {
              document.querySelector('html').classList.add('hide-banner')
            }`.replace(/\s+/g, " "),
        type: "text/javascript"
      }]
    });
    function d() {
      localStorage.setItem(l.value, "true"), document.querySelector("html")?.classList.add("hide-banner"), r("close");
    }
    return (c, f) => (h(), k(u(U), {
      as: c.as,
      class: A(["banner", o.value.root({ class: [a.ui?.root, a.class] })])
    }, {
      default: _(() => [
        c.to ? (h(), k(Wt, O({
          key: 0,
          "aria-label": c.title
        }, { to: c.to, target: c.target, ...c.$attrs }, {
          class: "focus:outline-none",
          tabindex: "-1",
          raw: ""
        }), {
          default: _(() => [...f[0] || (f[0] = [
            J("span", {
              class: "absolute inset-0",
              "aria-hidden": "true"
            }, null, -1)
          ])]),
          _: 1
        }, 16, ["aria-label"])) : D("", !0),
        V(Os, {
          class: A(o.value.container({ class: a.ui?.container }))
        }, {
          default: _(() => [
            J("div", {
              class: A(o.value.left({ class: a.ui?.left }))
            }, null, 2),
            J("div", {
              class: A(o.value.center({ class: a.ui?.center }))
            }, [
              S(c.$slots, "leading", {}, () => [
                c.icon ? (h(), k(he, {
                  key: 0,
                  name: c.icon,
                  class: A(o.value.icon({ class: a.ui?.icon }))
                }, null, 8, ["name", "class"])) : D("", !0)
              ], !0),
              c.title || n.title ? (h(), M("div", {
                key: 0,
                class: A(o.value.title({ class: a.ui?.title }))
              }, [
                S(c.$slots, "title", {}, () => [
                  ee(X(c.title), 1)
                ], !0)
              ], 2)) : D("", !0),
              c.actions?.length ? (h(), M("div", {
                key: 1,
                class: A(o.value.actions({ class: a.ui?.actions }))
              }, [
                S(c.$slots, "actions", {}, () => [
                  (h(!0), M(te, null, le(c.actions, (p, g) => (h(), k(Je, O({
                    key: g,
                    color: "neutral",
                    size: "xs"
                  }, { ref_for: !0 }, p), null, 16))), 128))
                ], !0)
              ], 2)) : D("", !0)
            ], 2),
            J("div", {
              class: A(o.value.right({ class: a.ui?.right }))
            }, [
              S(c.$slots, "close", { ui: o.value }, () => [
                c.close ? (h(), k(Je, O({
                  key: 0,
                  icon: c.closeIcon || u(i).ui.icons.close,
                  size: "md",
                  color: "neutral",
                  variant: "ghost",
                  "aria-label": u(s)("banner.close")
                }, typeof c.close == "object" ? c.close : {}, {
                  class: o.value.close({ class: a.ui?.close }),
                  onClick: d
                }), null, 16, ["icon", "aria-label", "class"])) : D("", !0)
              ], !0)
            ], 2)
          ]),
          _: 3
        }, 8, ["class"])
      ]),
      _: 3
    }, 8, ["as", "class"]));
  }
}), S0 = (e, t) => {
  const a = e.__vccOpts || e;
  for (const [n, r] of t)
    a[n] = r;
  return a;
}, o4 = /* @__PURE__ */ S0(FL, [["__scopeId", "data-v-68990ee3"]]), zL = {
  slots: {
    root: "relative group/user",
    wrapper: "",
    name: "font-medium",
    description: "text-muted",
    avatar: "shrink-0"
  },
  variants: {
    orientation: {
      horizontal: {
        root: "flex items-center"
      },
      vertical: {
        root: "flex flex-col"
      }
    },
    to: {
      true: {
        name: [
          "text-default peer-hover:text-highlighted",
          "transition-colors"
        ],
        description: [
          "peer-hover:text-toned",
          "transition-colors"
        ],
        avatar: "transform transition-transform duration-200 group-hover/user:scale-115"
      },
      false: {
        name: "text-highlighted",
        description: ""
      }
    },
    size: {
      "3xs": {
        root: "gap-1",
        wrapper: "flex items-center gap-1",
        name: "text-xs",
        description: "text-xs"
      },
      "2xs": {
        root: "gap-1.5",
        wrapper: "flex items-center gap-1.5",
        name: "text-xs",
        description: "text-xs"
      },
      xs: {
        root: "gap-1.5",
        wrapper: "flex items-center gap-1.5",
        name: "text-xs",
        description: "text-xs"
      },
      sm: {
        root: "gap-2",
        name: "text-xs",
        description: "text-xs"
      },
      md: {
        root: "gap-2",
        name: "text-sm",
        description: "text-xs"
      },
      lg: {
        root: "gap-2.5",
        name: "text-sm",
        description: "text-sm"
      },
      xl: {
        root: "gap-2.5",
        name: "text-base",
        description: "text-sm"
      },
      "2xl": {
        root: "gap-3",
        name: "text-base",
        description: "text-base"
      },
      "3xl": {
        root: "gap-3",
        name: "text-lg",
        description: "text-base"
      }
    }
  },
  defaultVariants: {
    size: "md"
  }
}, _0 = /* @__PURE__ */ L({
  inheritAttrs: !1,
  __name: "User",
  props: {
    as: {},
    name: {},
    description: {},
    avatar: {},
    chip: { type: [Boolean, Object] },
    size: {},
    orientation: { default: "horizontal" },
    to: {},
    target: {},
    onClick: {},
    class: {},
    ui: {}
  },
  setup(e) {
    const t = e, a = Se(), n = ue(), r = T(() => W({ extend: W(zL), ...n.ui?.user || {} })({
      size: t.size,
      orientation: t.orientation,
      to: !!t.to || !!t.onClick
    }));
    return (s, i) => (h(), k(u(U), {
      as: s.as,
      "data-orientation": s.orientation,
      class: A(r.value.root({ class: [t.ui?.root, t.class] })),
      onClick: s.onClick
    }, {
      default: _(() => [
        S(s.$slots, "avatar", {}, () => [
          s.chip && s.avatar ? (h(), k(Rs, O({
            key: 0,
            inset: ""
          }, typeof s.chip == "object" ? s.chip : {}, { size: s.size }), {
            default: _(() => [
              V(ft, O({ alt: s.name }, s.avatar, {
                size: s.size,
                class: r.value.avatar({ class: t.ui?.avatar })
              }), null, 16, ["alt", "size", "class"])
            ]),
            _: 1
          }, 16, ["size"])) : s.avatar ? (h(), k(ft, O({
            key: 1,
            alt: s.name
          }, s.avatar, {
            size: s.size,
            class: r.value.avatar({ class: t.ui?.avatar })
          }), null, 16, ["alt", "size", "class"])) : D("", !0)
        ]),
        J("div", {
          class: A(r.value.wrapper({ class: t.ui?.wrapper }))
        }, [
          s.to ? (h(), k(Wt, O({
            key: 0,
            "aria-label": s.name
          }, { to: s.to, target: s.target, ...s.$attrs }, {
            class: "focus:outline-none peer",
            tabindex: "-1",
            raw: ""
          }), {
            default: _(() => [...i[0] || (i[0] = [
              J("span", {
                class: "absolute inset-0",
                "aria-hidden": "true"
              }, null, -1)
            ])]),
            _: 1
          }, 16, ["aria-label"])) : D("", !0),
          S(s.$slots, "default", {}, () => [
            s.name || a.name ? (h(), M("p", {
              key: 0,
              class: A(r.value.name({ class: t.ui?.name }))
            }, [
              S(s.$slots, "name", {}, () => [
                ee(X(s.name), 1)
              ])
            ], 2)) : D("", !0),
            s.description || a.description ? (h(), M("p", {
              key: 1,
              class: A(r.value.description({ class: t.ui?.description }))
            }, [
              S(s.$slots, "description", {}, () => [
                ee(X(s.description), 1)
              ])
            ], 2)) : D("", !0)
          ])
        ], 2)
      ]),
      _: 3
    }, 8, ["as", "data-orientation", "class", "onClick"]));
  }
}), qL = {
  slots: {
    root: "relative group/blog-post flex flex-col rounded-lg overflow-hidden",
    header: "relative overflow-hidden aspect-[16/9] w-full pointer-events-none",
    body: "min-w-0 flex-1 flex flex-col",
    footer: "",
    image: "object-cover object-top w-full h-full",
    title: "text-xl text-pretty font-semibold text-highlighted",
    description: "mt-1 text-base text-pretty",
    authors: "pt-4 mt-auto flex flex-wrap gap-x-3 gap-y-1.5",
    avatar: "",
    meta: "flex items-center gap-2 mb-2",
    date: "text-sm",
    badge: ""
  },
  variants: {
    orientation: {
      horizontal: {
        root: "lg:grid lg:grid-cols-2 lg:items-center gap-x-8",
        body: "justify-center p-4 sm:p-6 lg:px-0"
      },
      vertical: {
        root: "flex flex-col",
        body: "p-4 sm:p-6"
      }
    },
    variant: {
      outline: {
        root: "bg-default ring ring-default",
        date: "text-toned",
        description: "text-muted"
      },
      soft: {
        root: "bg-elevated/50",
        date: "text-muted",
        description: "text-toned"
      },
      subtle: {
        root: "bg-elevated/50 ring ring-default",
        date: "text-muted",
        description: "text-toned"
      },
      ghost: {
        date: "text-toned",
        description: "text-muted",
        header: "shadow-lg rounded-lg"
      },
      naked: {
        root: "p-0 sm:p-0",
        date: "text-toned",
        description: "text-muted",
        header: "shadow-lg rounded-lg"
      }
    },
    to: {
      true: {
        root: [
          "transition"
        ],
        image: "transform transition-transform duration-200 group-hover/blog-post:scale-110",
        avatar: "transform transition-transform duration-200 hover:scale-115"
      }
    },
    image: {
      true: ""
    }
  },
  compoundVariants: [
    {
      variant: "outline",
      to: !0,
      class: {
        root: "hover:bg-elevated/50"
      }
    },
    {
      variant: "soft",
      to: !0,
      class: {
        root: "hover:bg-elevated"
      }
    },
    {
      variant: "subtle",
      to: !0,
      class: {
        root: "hover:bg-elevated hover:ring-accented"
      }
    },
    {
      variant: "ghost",
      to: !0,
      class: {
        root: "hover:bg-elevated/50",
        header: [
          "group-hover/blog-post:shadow-none",
          "transition-all"
        ]
      }
    },
    {
      variant: "ghost",
      to: !0,
      orientation: "vertical",
      class: {
        header: "group-hover/blog-post:rounded-b-none"
      }
    },
    {
      variant: "ghost",
      to: !0,
      orientation: "horizontal",
      class: {
        header: "group-hover/blog-post:rounded-r-none"
      }
    },
    {
      orientation: "vertical",
      image: !1,
      variant: "naked",
      class: {
        body: "p-0 sm:p-0"
      }
    }
  ],
  defaultVariants: {
    variant: "outline"
  }
}, VL = ["datetime"], NL = /* @__PURE__ */ L({
  inheritAttrs: !1,
  __name: "BlogPost",
  props: {
    as: { default: "article" },
    title: {},
    description: {},
    date: {},
    badge: {},
    authors: {},
    image: {},
    orientation: { default: "vertical" },
    variant: {},
    to: {},
    target: {},
    onClick: {},
    class: {},
    ui: {}
  },
  setup(e) {
    const t = e, a = Se(), { locale: n } = it(), r = ue(), s = tf(n.value.code), i = T(() => W({ extend: W(qL), ...r.ui?.blogPost || {} })({
      orientation: t.orientation,
      variant: t.variant,
      image: !!t.image,
      to: !!t.to || !!t.onClick
    })), o = T(() => {
      if (t.date)
        try {
          return s.custom(new Date(t.date), { dateStyle: "medium" });
        } catch {
          return t.date;
        }
    }), l = T(() => {
      if (t.date)
        try {
          return new Date(t.date)?.toISOString();
        } catch {
          return;
        }
    }), d = T(() => (a.title && Er(a.title()) || t.title || "Post link").trim());
    return (c, f) => (h(), k(u(U), {
      as: c.as,
      "data-orientation": c.orientation,
      class: A(i.value.root({ class: [t.ui?.root, t.class] })),
      onClick: c.onClick
    }, {
      default: _(() => [
        c.image || a.header ? (h(), M("div", {
          key: 0,
          class: A(i.value.header({ class: t.ui?.header }))
        }, [
          S(c.$slots, "header", {}, () => [
            (h(), k(ut(u(Gf)), O(typeof c.image == "string" ? { src: c.image, alt: c.title } : { alt: c.title, ...c.image }, {
              class: i.value.image({ class: t.ui?.image, to: !!c.to })
            }), null, 16, ["class"]))
          ])
        ], 2)) : D("", !0),
        J("div", {
          class: A(i.value.body({ class: t.ui?.body }))
        }, [
          c.to ? (h(), k(Wt, O({
            key: 0,
            "aria-label": d.value
          }, { to: c.to, target: c.target, ...c.$attrs }, {
            class: "focus:outline-none peer",
            tabindex: "-1",
            raw: ""
          }), {
            default: _(() => [...f[0] || (f[0] = [
              J("span", {
                class: "absolute inset-0",
                "aria-hidden": "true"
              }, null, -1)
            ])]),
            _: 1
          }, 16, ["aria-label"])) : D("", !0),
          S(c.$slots, "body", {}, () => [
            o.value || a.date || c.badge || a.badge ? (h(), M("div", {
              key: 0,
              class: A(i.value.meta({ class: t.ui?.meta }))
            }, [
              S(c.$slots, "badge", {}, () => [
                c.badge ? (h(), k(Ls, O({
                  key: 0,
                  color: "neutral",
                  variant: "subtle"
                }, typeof c.badge == "string" ? { label: c.badge } : c.badge, {
                  class: i.value.badge({ class: t.ui?.badge })
                }), null, 16, ["class"])) : D("", !0)
              ]),
              o.value || a.date ? (h(), M("time", {
                key: 0,
                datetime: l.value,
                class: A(i.value.date({ class: t.ui?.date }))
              }, [
                S(c.$slots, "date", {}, () => [
                  ee(X(o.value), 1)
                ])
              ], 10, VL)) : D("", !0)
            ], 2)) : D("", !0),
            c.title || a.title ? (h(), M("h2", {
              key: 1,
              class: A(i.value.title({ class: t.ui?.title }))
            }, [
              S(c.$slots, "title", {}, () => [
                ee(X(c.title), 1)
              ])
            ], 2)) : D("", !0),
            c.description || a.description ? (h(), M("div", {
              key: 2,
              class: A(i.value.description({ class: t.ui?.description }))
            }, [
              S(c.$slots, "description", {}, () => [
                ee(X(c.description), 1)
              ])
            ], 2)) : D("", !0),
            c.authors?.length || a.authors ? (h(), M("div", {
              key: 3,
              class: A(i.value.authors({ class: t.ui?.authors }))
            }, [
              S(c.$slots, "authors", {}, () => [
                c.authors?.length ? (h(), M(te, { key: 0 }, [
                  c.authors.length > 1 ? (h(), k(ML, { key: 0 }, {
                    default: _(() => [
                      (h(!0), M(te, null, le(c.authors, (p, g) => (h(), k(Wt, {
                        key: g,
                        to: p.to,
                        target: p.target,
                        class: A(i.value.avatar({ class: t.ui?.avatar, to: !!p.to })),
                        raw: ""
                      }, {
                        default: _(() => [
                          V(ft, O({ ref_for: !0 }, p.avatar), null, 16)
                        ]),
                        _: 2
                      }, 1032, ["to", "target", "class"]))), 128))
                    ]),
                    _: 1
                  })) : (h(), k(_0, pe(O({ key: 1 }, c.authors[0])), null, 16))
                ], 64)) : D("", !0)
              ])
            ], 2)) : D("", !0)
          ])
        ], 2),
        a.footer ? (h(), M("div", {
          key: 1,
          class: A(i.value.footer({ class: t.ui?.footer }))
        }, [
          S(c.$slots, "footer")
        ], 2)) : D("", !0)
      ]),
      _: 3
    }, 8, ["as", "data-orientation", "class", "onClick"]));
  }
}), HL = {
  base: "flex flex-col gap-8 lg:gap-y-16",
  variants: {
    orientation: {
      horizontal: "sm:grid sm:grid-cols-2 lg:grid-cols-3",
      vertical: ""
    }
  }
}, l4 = /* @__PURE__ */ L({
  __name: "BlogPosts",
  props: {
    as: {},
    posts: {},
    orientation: { default: "horizontal" },
    class: {}
  },
  setup(e) {
    const t = e, a = ue(), n = T(() => W({ extend: W(HL), ...a.ui?.blogPosts || {} }));
    return (r, s) => (h(), k(u(U), {
      as: r.as,
      "data-orientation": r.orientation,
      class: A(n.value({ orientation: r.orientation, class: t.class }))
    }, {
      default: _(() => [
        S(r.$slots, "default", {}, () => [
          (h(!0), M(te, null, le(r.posts, (i, o) => (h(), k(NL, O({
            key: o,
            orientation: r.orientation === "vertical" ? "horizontal" : "vertical"
          }, { ref_for: !0 }, i), null, 16, ["orientation"]))), 128))
        ])
      ]),
      _: 3
    }, 8, ["as", "data-orientation", "class"]));
  }
}), jL = {
  slots: {
    root: "relative min-w-0",
    list: "flex items-center gap-1.5",
    item: "flex min-w-0",
    link: "group relative flex items-center gap-1.5 text-sm min-w-0 focus-visible:outline-primary",
    linkLeadingIcon: "shrink-0 size-5",
    linkLeadingAvatar: "shrink-0",
    linkLeadingAvatarSize: "2xs",
    linkLabel: "truncate",
    separator: "flex",
    separatorIcon: "shrink-0 size-5 text-muted"
  },
  variants: {
    active: {
      true: {
        link: "text-primary font-semibold"
      },
      false: {
        link: "text-muted font-medium"
      }
    },
    disabled: {
      true: {
        link: "cursor-not-allowed opacity-75"
      }
    },
    to: {
      true: ""
    }
  },
  compoundVariants: [
    {
      disabled: !1,
      active: !1,
      to: !0,
      class: {
        link: [
          "hover:text-default",
          "transition-colors"
        ]
      }
    }
  ]
}, u4 = /* @__PURE__ */ L({
  __name: "Breadcrumb",
  props: {
    as: { default: "nav" },
    items: {},
    separatorIcon: {},
    labelKey: { default: "label" },
    class: {},
    ui: {}
  },
  setup(e) {
    const t = e, a = Se(), { dir: n } = it(), r = ue(), s = T(() => t.separatorIcon || (n.value === "rtl" ? r.ui.icons.chevronLeft : r.ui.icons.chevronRight)), i = T(() => W({ extend: W(jL), ...r.ui?.breadcrumb || {} })());
    return (o, l) => (h(), k(u(U), {
      as: o.as,
      "aria-label": "breadcrumb",
      class: A(i.value.root({ class: [t.ui?.root, t.class] }))
    }, {
      default: _(() => [
        J("ol", {
          class: A(i.value.list({ class: t.ui?.list }))
        }, [
          (h(!0), M(te, null, le(o.items, (d, c) => (h(), M(te, { key: c }, [
            J("li", {
              class: A(i.value.item({ class: [t.ui?.item, d.ui?.item] }))
            }, [
              V(Wt, O({ ref_for: !0 }, u(Ga)(d), { custom: "" }), {
                default: _(({ active: f, ...p }) => [
                  V(ha, O({ ref_for: !0 }, p, {
                    as: "span",
                    "aria-current": f && c === o.items.length - 1 ? "page" : void 0,
                    class: i.value.link({ class: [t.ui?.link, d.ui?.link, d.class], active: c === o.items.length - 1, disabled: !!d.disabled, to: !!d.to })
                  }), {
                    default: _(() => [
                      S(o.$slots, d.slot || "item", {
                        item: d,
                        index: c
                      }, () => [
                        S(o.$slots, d.slot ? `${d.slot}-leading` : "item-leading", {
                          item: d,
                          active: c === o.items.length - 1,
                          index: c
                        }, () => [
                          d.icon ? (h(), k(he, {
                            key: 0,
                            name: d.icon,
                            class: A(i.value.linkLeadingIcon({ class: [t.ui?.linkLeadingIcon, d.ui?.linkLeadingIcon], active: c === o.items.length - 1 }))
                          }, null, 8, ["name", "class"])) : d.avatar ? (h(), k(ft, O({
                            key: 1,
                            size: t.ui?.linkLeadingAvatarSize || i.value.linkLeadingAvatarSize()
                          }, { ref_for: !0 }, d.avatar, {
                            class: i.value.linkLeadingAvatar({ class: [t.ui?.linkLeadingAvatar, d.ui?.linkLeadingAvatar], active: c === o.items.length - 1 })
                          }), null, 16, ["size", "class"])) : D("", !0)
                        ]),
                        u(qe)(d, t.labelKey) || a[d.slot ? `${d.slot}-label` : "item-label"] ? (h(), M("span", {
                          key: 0,
                          class: A(i.value.linkLabel({ class: [t.ui?.linkLabel, d.ui?.linkLabel] }))
                        }, [
                          S(o.$slots, d.slot ? `${d.slot}-label` : "item-label", {
                            item: d,
                            active: c === o.items.length - 1,
                            index: c
                          }, () => [
                            ee(X(u(qe)(d, t.labelKey)), 1)
                          ])
                        ], 2)) : D("", !0),
                        S(o.$slots, d.slot ? `${d.slot}-trailing` : "item-trailing", {
                          item: d,
                          active: c === o.items.length - 1,
                          index: c
                        })
                      ])
                    ]),
                    _: 2
                  }, 1040, ["aria-current", "class"])
                ]),
                _: 2
              }, 1040)
            ], 2),
            c < o.items.length - 1 ? (h(), M("li", {
              key: 0,
              role: "presentation",
              "aria-hidden": "true",
              class: A(i.value.separator({ class: [t.ui?.separator, d.ui?.separator] }))
            }, [
              S(o.$slots, "separator", {}, () => [
                V(he, {
                  name: s.value,
                  class: A(i.value.separatorIcon({ class: [t.ui?.separatorIcon, d.ui?.separatorIcon] }))
                }, null, 8, ["name", "class"])
              ])
            ], 2)) : D("", !0)
          ], 64))), 128))
        ], 2)
      ]),
      _: 3
    }, 8, ["as", "class"]));
  }
}), KL = {
  Root: E_,
  Header: G_,
  Heading: W_,
  Grid: L_,
  Cell: B_,
  HeadCell: j_,
  Next: X_,
  Prev: Q_,
  GridHead: q_,
  GridBody: F_,
  GridRow: N_,
  CellTrigger: M_
}, Va = {
  Root: ab,
  Trigger: nb,
  Portal: uI,
  Content: Z$,
  Arrow: U$,
  Item: nI,
  Group: tI,
  Separator: vI,
  CheckboxItem: Y$,
  ItemIndicator: sI,
  Label: oI,
  RadioGroup: cI,
  RadioItem: pI,
  Sub: mI,
  SubContent: bI,
  SubTrigger: CI
}, Na = {
  Root: ob,
  Trigger: lb,
  Portal: D2,
  Content: S2,
  Arrow: sb,
  Item: $2,
  Group: k2,
  Separator: z2,
  CheckboxItem: b2,
  ItemIndicator: E2,
  Label: B2,
  RadioGroup: R2,
  RadioItem: O2,
  Sub: V2,
  SubContent: H2,
  SubTrigger: K2
}, GL = {
  Root: J2,
  Trigger: iE,
  Portal: rE,
  Content: aE,
  Arrow: W2
}, UL = {
  Root: kI,
  Trigger: NI,
  Portal: qI,
  Content: FI,
  Arrow: EI,
  Close: BI,
  Anchor: $I
}, WL = {
  Root: WI,
  Header: d2,
  Heading: f2,
  Grid: e2,
  Cell: XI,
  HeadCell: l2,
  Next: g2,
  Prev: h2,
  GridHead: r2,
  GridBody: a2,
  GridRow: i2,
  CellTrigger: QI
}, YL = {
  slots: {
    root: "",
    header: "flex items-center justify-between",
    body: "flex flex-col space-y-4 pt-4 sm:flex-row sm:space-x-4 sm:space-y-0",
    heading: "text-center font-medium truncate mx-auto",
    grid: "w-full border-collapse select-none space-y-1 focus:outline-none",
    gridRow: "grid grid-cols-7 place-items-center",
    gridWeekDaysRow: "mb-1 grid w-full grid-cols-7",
    gridBody: "grid",
    headCell: "rounded-md",
    cell: "relative text-center",
    cellTrigger: [
      "m-0.5 relative flex items-center justify-center rounded-full whitespace-nowrap focus-visible:ring-2 focus:outline-none data-disabled:text-muted data-unavailable:line-through data-unavailable:text-muted data-unavailable:pointer-events-none data-[selected]:text-inverted data-today:font-semibold data-[outside-view]:text-muted",
      "transition"
    ]
  },
  variants: {
    color: {
      primary: {
        headCell: "text-primary",
        cellTrigger: "focus-visible:ring-primary data-[selected]:bg-primary data-today:not-data-[selected]:text-primary data-[highlighted]:bg-primary/20 hover:not-data-[selected]:bg-primary/20"
      },
      secondary: {
        headCell: "text-secondary",
        cellTrigger: "focus-visible:ring-secondary data-[selected]:bg-secondary data-today:not-data-[selected]:text-secondary data-[highlighted]:bg-secondary/20 hover:not-data-[selected]:bg-secondary/20"
      },
      success: {
        headCell: "text-success",
        cellTrigger: "focus-visible:ring-success data-[selected]:bg-success data-today:not-data-[selected]:text-success data-[highlighted]:bg-success/20 hover:not-data-[selected]:bg-success/20"
      },
      info: {
        headCell: "text-info",
        cellTrigger: "focus-visible:ring-info data-[selected]:bg-info data-today:not-data-[selected]:text-info data-[highlighted]:bg-info/20 hover:not-data-[selected]:bg-info/20"
      },
      warning: {
        headCell: "text-warning",
        cellTrigger: "focus-visible:ring-warning data-[selected]:bg-warning data-today:not-data-[selected]:text-warning data-[highlighted]:bg-warning/20 hover:not-data-[selected]:bg-warning/20"
      },
      error: {
        headCell: "text-error",
        cellTrigger: "focus-visible:ring-error data-[selected]:bg-error data-today:not-data-[selected]:text-error data-[highlighted]:bg-error/20 hover:not-data-[selected]:bg-error/20"
      },
      neutral: {
        headCell: "text-highlighted",
        cellTrigger: "focus-visible:ring-inverted data-[selected]:bg-inverted data-today:not-data-[selected]:text-highlighted data-[highlighted]:bg-inverted/20 hover:not-data-[selected]:bg-inverted/10"
      }
    },
    size: {
      xs: {
        heading: "text-xs",
        cell: "text-xs",
        headCell: "text-[10px]",
        cellTrigger: "size-7",
        body: "space-y-2 pt-2"
      },
      sm: {
        heading: "text-xs",
        headCell: "text-xs",
        cell: "text-xs",
        cellTrigger: "size-7"
      },
      md: {
        heading: "text-sm",
        headCell: "text-xs",
        cell: "text-sm",
        cellTrigger: "size-8"
      },
      lg: {
        heading: "text-md",
        headCell: "text-md",
        cellTrigger: "size-9 text-md"
      },
      xl: {
        heading: "text-lg",
        headCell: "text-lg",
        cellTrigger: "size-10 text-lg"
      }
    }
  },
  defaultVariants: {
    size: "md",
    color: "primary"
  }
}, d4 = /* @__PURE__ */ L({
  __name: "Calendar",
  props: {
    as: {},
    nextYearIcon: {},
    nextYear: {},
    nextMonthIcon: {},
    nextMonth: {},
    prevYearIcon: {},
    prevYear: {},
    prevMonthIcon: {},
    prevMonth: {},
    color: {},
    size: {},
    range: { type: Boolean },
    multiple: { type: Boolean },
    monthControls: { type: Boolean, default: !0 },
    yearControls: { type: Boolean, default: !0 },
    defaultValue: {},
    modelValue: {},
    class: {},
    ui: {},
    defaultPlaceholder: {},
    placeholder: {},
    allowNonContiguousRanges: { type: Boolean },
    pagedNavigation: { type: Boolean },
    preventDeselect: { type: Boolean },
    maximumDays: {},
    weekStartsOn: {},
    weekdayFormat: {},
    fixedWeeks: { type: Boolean, default: !0 },
    maxValue: {},
    minValue: {},
    numberOfMonths: {},
    disabled: { type: Boolean },
    readonly: { type: Boolean },
    initialFocus: { type: Boolean },
    isDateDisabled: {},
    isDateUnavailable: {},
    isDateHighlightable: {},
    nextPage: {},
    prevPage: {},
    disableDaysOutsideCurrentView: { type: Boolean },
    fixedDate: {}
  },
  emits: ["update:modelValue", "update:placeholder", "update:validModelValue", "update:startValue"],
  setup(e, { emit: t }) {
    const a = e, n = t, { code: r, dir: s, t: i } = it(), o = ue(), l = Xe(Ui(a, "range", "modelValue", "defaultValue", "color", "size", "monthControls", "yearControls", "class", "ui"), n), d = T(() => a.nextYearIcon || (s.value === "rtl" ? o.ui.icons.chevronDoubleLeft : o.ui.icons.chevronDoubleRight)), c = T(() => a.nextMonthIcon || (s.value === "rtl" ? o.ui.icons.chevronLeft : o.ui.icons.chevronRight)), f = T(() => a.prevYearIcon || (s.value === "rtl" ? o.ui.icons.chevronDoubleRight : o.ui.icons.chevronDoubleLeft)), p = T(() => a.prevMonthIcon || (s.value === "rtl" ? o.ui.icons.chevronRight : o.ui.icons.chevronLeft)), g = T(() => W({ extend: W(YL), ...o.ui?.calendar || {} })({
      color: a.color,
      size: a.size
    }));
    function v(y, x) {
      return x === -1 ? y.subtract({ years: 1 }) : y.add({ years: 1 });
    }
    const m = T(() => a.range ? WL : KL);
    return (y, x) => (h(), k(u(m).Root, O(u(l), {
      "model-value": y.modelValue,
      "default-value": y.defaultValue,
      locale: u(r),
      dir: u(s),
      class: g.value.root({ class: [a.ui?.root, a.class] })
    }), {
      default: _(({ weekDays: b, grid: C }) => [
        V(u(m).Header, {
          class: A(g.value.header({ class: a.ui?.header }))
        }, {
          default: _(() => [
            a.yearControls ? (h(), k(u(m).Prev, {
              key: 0,
              "prev-page": (w) => v(w, -1),
              "aria-label": u(i)("calendar.prevYear"),
              "as-child": ""
            }, {
              default: _(() => [
                V(Je, O({
                  icon: f.value,
                  size: a.size,
                  color: "neutral",
                  variant: "ghost"
                }, a.prevYear), null, 16, ["icon", "size"])
              ]),
              _: 1
            }, 8, ["prev-page", "aria-label"])) : D("", !0),
            a.monthControls ? (h(), k(u(m).Prev, {
              key: 1,
              "aria-label": u(i)("calendar.prevMonth"),
              "as-child": ""
            }, {
              default: _(() => [
                V(Je, O({
                  icon: p.value,
                  size: a.size,
                  color: "neutral",
                  variant: "ghost"
                }, a.prevMonth), null, 16, ["icon", "size"])
              ]),
              _: 1
            }, 8, ["aria-label"])) : D("", !0),
            V(u(m).Heading, {
              class: A(g.value.heading({ class: a.ui?.heading }))
            }, {
              default: _(({ headingValue: w }) => [
                S(y.$slots, "heading", { value: w }, () => [
                  ee(X(w), 1)
                ])
              ]),
              _: 3
            }, 8, ["class"]),
            a.monthControls ? (h(), k(u(m).Next, {
              key: 2,
              "aria-label": u(i)("calendar.nextMonth"),
              "as-child": ""
            }, {
              default: _(() => [
                V(Je, O({
                  icon: c.value,
                  size: a.size,
                  color: "neutral",
                  variant: "ghost"
                }, a.nextMonth), null, 16, ["icon", "size"])
              ]),
              _: 1
            }, 8, ["aria-label"])) : D("", !0),
            a.yearControls ? (h(), k(u(m).Next, {
              key: 3,
              "next-page": (w) => v(w, 1),
              "aria-label": u(i)("calendar.nextYear"),
              "as-child": ""
            }, {
              default: _(() => [
                V(Je, O({
                  icon: d.value,
                  size: a.size,
                  color: "neutral",
                  variant: "ghost"
                }, a.nextYear), null, 16, ["icon", "size"])
              ]),
              _: 1
            }, 8, ["next-page", "aria-label"])) : D("", !0)
          ]),
          _: 3
        }, 8, ["class"]),
        J("div", {
          class: A(g.value.body({ class: a.ui?.body }))
        }, [
          (h(!0), M(te, null, le(C, (w) => (h(), k(u(m).Grid, {
            key: w.value.toString(),
            class: A(g.value.grid({ class: a.ui?.grid }))
          }, {
            default: _(() => [
              V(u(m).GridHead, null, {
                default: _(() => [
                  V(u(m).GridRow, {
                    class: A(g.value.gridWeekDaysRow({ class: a.ui?.gridWeekDaysRow }))
                  }, {
                    default: _(() => [
                      (h(!0), M(te, null, le(b, ($) => (h(), k(u(m).HeadCell, {
                        key: $,
                        class: A(g.value.headCell({ class: a.ui?.headCell }))
                      }, {
                        default: _(() => [
                          S(y.$slots, "week-day", { day: $ }, () => [
                            ee(X($), 1)
                          ])
                        ]),
                        _: 2
                      }, 1032, ["class"]))), 128))
                    ]),
                    _: 2
                  }, 1032, ["class"])
                ]),
                _: 2
              }, 1024),
              V(u(m).GridBody, {
                class: A(g.value.gridBody({ class: a.ui?.gridBody }))
              }, {
                default: _(() => [
                  (h(!0), M(te, null, le(w.rows, ($, B) => (h(), k(u(m).GridRow, {
                    key: `weekDate-${B}`,
                    class: A(g.value.gridRow({ class: a.ui?.gridRow }))
                  }, {
                    default: _(() => [
                      (h(!0), M(te, null, le($, (I) => (h(), k(u(m).Cell, {
                        key: I.toString(),
                        date: I,
                        class: A(g.value.cell({ class: a.ui?.cell }))
                      }, {
                        default: _(() => [
                          V(u(m).CellTrigger, {
                            day: I,
                            month: w.value,
                            class: A(g.value.cellTrigger({ class: a.ui?.cellTrigger }))
                          }, {
                            default: _(() => [
                              S(y.$slots, "day", { day: I }, () => [
                                ee(X(I.day), 1)
                              ])
                            ]),
                            _: 2
                          }, 1032, ["day", "month", "class"])
                        ]),
                        _: 2
                      }, 1032, ["date", "class"]))), 128))
                    ]),
                    _: 2
                  }, 1032, ["class"]))), 128))
                ]),
                _: 2
              }, 1032, ["class"])
            ]),
            _: 2
          }, 1032, ["class"]))), 128))
        ], 2)
      ]),
      _: 3
    }, 16, ["model-value", "default-value", "locale", "dir", "class"]));
  }
}), XL = {
  slots: {
    root: "rounded-lg overflow-hidden",
    header: "p-4 sm:px-6",
    body: "p-4 sm:p-6",
    footer: "p-4 sm:px-6"
  },
  variants: {
    variant: {
      solid: {
        root: "bg-inverted text-inverted"
      },
      outline: {
        root: "bg-default ring ring-default divide-y divide-default"
      },
      soft: {
        root: "bg-elevated/50 divide-y divide-default"
      },
      subtle: {
        root: "bg-elevated/50 ring ring-default divide-y divide-default"
      }
    }
  },
  defaultVariants: {
    variant: "outline"
  }
}, c4 = /* @__PURE__ */ L({
  __name: "Card",
  props: {
    as: {},
    variant: {},
    class: {},
    ui: {}
  },
  setup(e) {
    const t = e, a = Se(), n = ue(), r = T(() => W({ extend: W(XL), ...n.ui?.card || {} })({
      variant: t.variant
    }));
    return (s, i) => (h(), k(u(U), {
      as: s.as,
      class: A(r.value.root({ class: [t.ui?.root, t.class] }))
    }, {
      default: _(() => [
        a.header ? (h(), M("div", {
          key: 0,
          class: A(r.value.header({ class: t.ui?.header }))
        }, [
          S(s.$slots, "header")
        ], 2)) : D("", !0),
        a.default ? (h(), M("div", {
          key: 1,
          class: A(r.value.body({ class: t.ui?.body }))
        }, [
          S(s.$slots, "default")
        ], 2)) : D("", !0),
        a.footer ? (h(), M("div", {
          key: 2,
          class: A(r.value.footer({ class: t.ui?.footer }))
        }, [
          S(s.$slots, "footer")
        ], 2)) : D("", !0)
      ]),
      _: 3
    }, 8, ["as", "class"]));
  }
});
function JL(e) {
  return Object.prototype.toString.call(e) === "[object Object]";
}
function Zg(e) {
  return JL(e) || Array.isArray(e);
}
function QL() {
  return !!(typeof window < "u" && window.document && window.document.createElement);
}
function Uf(e, t) {
  const a = Object.keys(e), n = Object.keys(t);
  if (a.length !== n.length) return !1;
  const r = JSON.stringify(Object.keys(e.breakpoints || {})), s = JSON.stringify(Object.keys(t.breakpoints || {}));
  return r !== s ? !1 : a.every((i) => {
    const o = e[i], l = t[i];
    return typeof o == "function" ? `${o}` == `${l}` : !Zg(o) || !Zg(l) ? o === l : Uf(o, l);
  });
}
function ev(e) {
  return e.concat().sort((t, a) => t.name > a.name ? 1 : -1).map((t) => t.options);
}
function ZL(e, t) {
  if (e.length !== t.length) return !1;
  const a = ev(e), n = ev(t);
  return a.every((r, s) => {
    const i = n[s];
    return Uf(r, i);
  });
}
function Wf(e) {
  return typeof e == "number";
}
function Wd(e) {
  return typeof e == "string";
}
function Xl(e) {
  return typeof e == "boolean";
}
function tv(e) {
  return Object.prototype.toString.call(e) === "[object Object]";
}
function $t(e) {
  return Math.abs(e);
}
function Yf(e) {
  return Math.sign(e);
}
function li(e, t) {
  return $t(e - t);
}
function eO(e, t) {
  if (e === 0 || t === 0 || $t(e) <= $t(t)) return 0;
  const a = li($t(e), $t(t));
  return $t(a / e);
}
function tO(e) {
  return Math.round(e * 100) / 100;
}
function Si(e) {
  return _i(e).map(Number);
}
function Ua(e) {
  return e[Wi(e)];
}
function Wi(e) {
  return Math.max(0, e.length - 1);
}
function Xf(e, t) {
  return t === Wi(e);
}
function av(e, t = 0) {
  return Array.from(Array(e), (a, n) => t + n);
}
function _i(e) {
  return Object.keys(e);
}
function k0(e, t) {
  return [e, t].reduce((a, n) => (_i(n).forEach((r) => {
    const s = a[r], i = n[r], o = tv(s) && tv(i);
    a[r] = o ? k0(s, i) : i;
  }), a), {});
}
function Yd(e, t) {
  return typeof t.MouseEvent < "u" && e instanceof t.MouseEvent;
}
function aO(e, t) {
  const a = {
    start: n,
    center: r,
    end: s
  };
  function n() {
    return 0;
  }
  function r(l) {
    return s(l) / 2;
  }
  function s(l) {
    return t - l;
  }
  function i(l, d) {
    return Wd(e) ? a[e](l) : e(t, l, d);
  }
  return {
    measure: i
  };
}
function ki() {
  let e = [];
  function t(r, s, i, o = {
    passive: !0
  }) {
    let l;
    if ("addEventListener" in r)
      r.addEventListener(s, i, o), l = () => r.removeEventListener(s, i, o);
    else {
      const d = r;
      d.addListener(i), l = () => d.removeListener(i);
    }
    return e.push(l), n;
  }
  function a() {
    e = e.filter((r) => r());
  }
  const n = {
    add: t,
    clear: a
  };
  return n;
}
function nO(e, t, a, n) {
  const r = ki(), s = 1e3 / 60;
  let i = null, o = 0, l = 0;
  function d() {
    r.add(e, "visibilitychange", () => {
      e.hidden && v();
    });
  }
  function c() {
    g(), r.clear();
  }
  function f(y) {
    if (!l) return;
    i || (i = y, a(), a());
    const x = y - i;
    for (i = y, o += x; o >= s; )
      a(), o -= s;
    const b = o / s;
    n(b), l && (l = t.requestAnimationFrame(f));
  }
  function p() {
    l || (l = t.requestAnimationFrame(f));
  }
  function g() {
    t.cancelAnimationFrame(l), i = null, o = 0, l = 0;
  }
  function v() {
    i = null, o = 0;
  }
  return {
    init: d,
    destroy: c,
    start: p,
    stop: g,
    update: a,
    render: n
  };
}
function rO(e, t) {
  const a = t === "rtl", n = e === "y", r = n ? "y" : "x", s = n ? "x" : "y", i = !n && a ? -1 : 1, o = c(), l = f();
  function d(v) {
    const {
      height: m,
      width: y
    } = v;
    return n ? m : y;
  }
  function c() {
    return n ? "top" : a ? "right" : "left";
  }
  function f() {
    return n ? "bottom" : a ? "left" : "right";
  }
  function p(v) {
    return v * i;
  }
  return {
    scroll: r,
    cross: s,
    startEdge: o,
    endEdge: l,
    measureSize: d,
    direction: p
  };
}
function Tr(e = 0, t = 0) {
  const a = $t(e - t);
  function n(d) {
    return d < e;
  }
  function r(d) {
    return d > t;
  }
  function s(d) {
    return n(d) || r(d);
  }
  function i(d) {
    return s(d) ? n(d) ? e : t : d;
  }
  function o(d) {
    return a ? d - a * Math.ceil((d - t) / a) : d;
  }
  return {
    length: a,
    max: t,
    min: e,
    constrain: i,
    reachedAny: s,
    reachedMax: r,
    reachedMin: n,
    removeOffset: o
  };
}
function A0(e, t, a) {
  const {
    constrain: n
  } = Tr(0, e), r = e + 1;
  let s = i(t);
  function i(p) {
    return a ? $t((r + p) % r) : n(p);
  }
  function o() {
    return s;
  }
  function l(p) {
    return s = i(p), f;
  }
  function d(p) {
    return c().set(o() + p);
  }
  function c() {
    return A0(e, o(), a);
  }
  const f = {
    get: o,
    set: l,
    add: d,
    clone: c
  };
  return f;
}
function sO(e, t, a, n, r, s, i, o, l, d, c, f, p, g, v, m, y, x, b) {
  const {
    cross: C,
    direction: w
  } = e, $ = ["INPUT", "SELECT", "TEXTAREA"], B = {
    passive: !1
  }, I = ki(), E = ki(), P = Tr(50, 225).constrain(g.measure(20)), R = {
    mouse: 300,
    touch: 400
  }, F = {
    mouse: 500,
    touch: 600
  }, H = v ? 43 : 25;
  let j = !1, K = 0, z = 0, G = !1, Y = !1, q = !1, Q = !1;
  function se(re) {
    if (!b) return;
    function de(ie) {
      (Xl(b) || b(re, ie)) && Ye(ie);
    }
    const _e = t;
    I.add(_e, "dragstart", (ie) => ie.preventDefault(), B).add(_e, "touchmove", () => {
    }, B).add(_e, "touchend", () => {
    }).add(_e, "touchstart", de).add(_e, "mousedown", de).add(_e, "touchcancel", ae).add(_e, "contextmenu", ae).add(_e, "click", be, !0);
  }
  function ce() {
    I.clear(), E.clear();
  }
  function oe() {
    const re = Q ? a : t;
    E.add(re, "touchmove", ne, B).add(re, "touchend", ae).add(re, "mousemove", ne, B).add(re, "mouseup", ae);
  }
  function xe(re) {
    const de = re.nodeName || "";
    return $.includes(de);
  }
  function $e() {
    return (v ? F : R)[Q ? "mouse" : "touch"];
  }
  function Le(re, de) {
    const _e = f.add(Yf(re) * -1), ie = c.byDistance(re, !v).distance;
    return v || $t(re) < P ? ie : y && de ? ie * 0.5 : c.byIndex(_e.get(), 0).distance;
  }
  function Ye(re) {
    const de = Yd(re, n);
    Q = de, q = v && de && !re.buttons && j, j = li(r.get(), i.get()) >= 2, !(de && re.button !== 0) && (xe(re.target) || (G = !0, s.pointerDown(re), d.useFriction(0).useDuration(0), r.set(i), oe(), K = s.readPoint(re), z = s.readPoint(re, C), p.emit("pointerDown")));
  }
  function ne(re) {
    if (!Yd(re, n) && re.touches.length >= 2) return ae(re);
    const _e = s.readPoint(re), ie = s.readPoint(re, C), Ne = li(_e, K), Oe = li(ie, z);
    if (!Y && !Q && (!re.cancelable || (Y = Ne > Oe, !Y)))
      return ae(re);
    const Ae = s.pointerMove(re);
    Ne > m && (q = !0), d.useFriction(0.3).useDuration(0.75), o.start(), r.add(w(Ae)), re.preventDefault();
  }
  function ae(re) {
    const _e = c.byDistance(0, !1).index !== f.get(), ie = s.pointerUp(re) * $e(), Ne = Le(w(ie), _e), Oe = eO(ie, Ne), Ae = H - 10 * Oe, ge = x + Oe / 50;
    Y = !1, G = !1, E.clear(), d.useDuration(Ae).useFriction(ge), l.distance(Ne, !v), Q = !1, p.emit("pointerUp");
  }
  function be(re) {
    q && (re.stopPropagation(), re.preventDefault(), q = !1);
  }
  function De() {
    return G;
  }
  return {
    init: se,
    destroy: ce,
    pointerDown: De
  };
}
function iO(e, t) {
  let n, r;
  function s(f) {
    return f.timeStamp;
  }
  function i(f, p) {
    const v = `client${(p || e.scroll) === "x" ? "X" : "Y"}`;
    return (Yd(f, t) ? f : f.touches[0])[v];
  }
  function o(f) {
    return n = f, r = f, i(f);
  }
  function l(f) {
    const p = i(f) - i(r), g = s(f) - s(n) > 170;
    return r = f, g && (n = f), p;
  }
  function d(f) {
    if (!n || !r) return 0;
    const p = i(r) - i(n), g = s(f) - s(n), v = s(f) - s(r) > 170, m = p / g;
    return g && !v && $t(m) > 0.1 ? m : 0;
  }
  return {
    pointerDown: o,
    pointerMove: l,
    pointerUp: d,
    readPoint: i
  };
}
function oO() {
  function e(a) {
    const {
      offsetTop: n,
      offsetLeft: r,
      offsetWidth: s,
      offsetHeight: i
    } = a;
    return {
      top: n,
      right: r + s,
      bottom: n + i,
      left: r,
      width: s,
      height: i
    };
  }
  return {
    measure: e
  };
}
function lO(e) {
  function t(n) {
    return e * (n / 100);
  }
  return {
    measure: t
  };
}
function uO(e, t, a, n, r, s, i) {
  const o = [e].concat(n);
  let l, d, c = [], f = !1;
  function p(y) {
    return r.measureSize(i.measure(y));
  }
  function g(y) {
    if (!s) return;
    d = p(e), c = n.map(p);
    function x(b) {
      for (const C of b) {
        if (f) return;
        const w = C.target === e, $ = n.indexOf(C.target), B = w ? d : c[$], I = p(w ? e : n[$]);
        if ($t(I - B) >= 0.5) {
          y.reInit(), t.emit("resize");
          break;
        }
      }
    }
    l = new ResizeObserver((b) => {
      (Xl(s) || s(y, b)) && x(b);
    }), a.requestAnimationFrame(() => {
      o.forEach((b) => l.observe(b));
    });
  }
  function v() {
    f = !0, l && l.disconnect();
  }
  return {
    init: g,
    destroy: v
  };
}
function dO(e, t, a, n, r, s) {
  let i = 0, o = 0, l = r, d = s, c = e.get(), f = 0;
  function p() {
    const B = n.get() - e.get(), I = !l;
    let E = 0;
    return I ? (i = 0, a.set(n), e.set(n), E = B) : (a.set(e), i += B / l, i *= d, c += i, e.add(i), E = c - f), o = Yf(E), f = c, $;
  }
  function g() {
    const B = n.get() - t.get();
    return $t(B) < 1e-3;
  }
  function v() {
    return l;
  }
  function m() {
    return o;
  }
  function y() {
    return i;
  }
  function x() {
    return C(r);
  }
  function b() {
    return w(s);
  }
  function C(B) {
    return l = B, $;
  }
  function w(B) {
    return d = B, $;
  }
  const $ = {
    direction: m,
    duration: v,
    velocity: y,
    seek: p,
    settled: g,
    useBaseFriction: b,
    useBaseDuration: x,
    useFriction: w,
    useDuration: C
  };
  return $;
}
function cO(e, t, a, n, r) {
  const s = r.measure(10), i = r.measure(50), o = Tr(0.1, 0.99);
  let l = !1;
  function d() {
    return !(l || !e.reachedAny(a.get()) || !e.reachedAny(t.get()));
  }
  function c(g) {
    if (!d()) return;
    const v = e.reachedMin(t.get()) ? "min" : "max", m = $t(e[v] - t.get()), y = a.get() - t.get(), x = o.constrain(m / i);
    a.subtract(y * x), !g && $t(y) < s && (a.set(e.constrain(a.get())), n.useDuration(25).useBaseFriction());
  }
  function f(g) {
    l = !g;
  }
  return {
    shouldConstrain: d,
    constrain: c,
    toggleActive: f
  };
}
function fO(e, t, a, n, r) {
  const s = Tr(-t + e, 0), i = f(), o = c(), l = p();
  function d(v, m) {
    return li(v, m) <= 1;
  }
  function c() {
    const v = i[0], m = Ua(i), y = i.lastIndexOf(v), x = i.indexOf(m) + 1;
    return Tr(y, x);
  }
  function f() {
    return a.map((v, m) => {
      const {
        min: y,
        max: x
      } = s, b = s.constrain(v), C = !m, w = Xf(a, m);
      return C ? x : w || d(y, b) ? y : d(x, b) ? x : b;
    }).map((v) => parseFloat(v.toFixed(3)));
  }
  function p() {
    if (t <= e + r) return [s.max];
    if (n === "keepSnaps") return i;
    const {
      min: v,
      max: m
    } = o;
    return i.slice(v, m);
  }
  return {
    snapsContained: l,
    scrollContainLimit: o
  };
}
function pO(e, t, a) {
  const n = t[0], r = a ? n - e : Ua(t);
  return {
    limit: Tr(r, n)
  };
}
function gO(e, t, a, n) {
  const s = t.min + 0.1, i = t.max + 0.1, {
    reachedMin: o,
    reachedMax: l
  } = Tr(s, i);
  function d(p) {
    return p === 1 ? l(a.get()) : p === -1 ? o(a.get()) : !1;
  }
  function c(p) {
    if (!d(p)) return;
    const g = e * (p * -1);
    n.forEach((v) => v.add(g));
  }
  return {
    loop: c
  };
}
function vO(e) {
  const {
    max: t,
    length: a
  } = e;
  function n(s) {
    const i = s - t;
    return a ? i / -a : 0;
  }
  return {
    get: n
  };
}
function hO(e, t, a, n, r) {
  const {
    startEdge: s,
    endEdge: i
  } = e, {
    groupSlides: o
  } = r, l = f().map(t.measure), d = p(), c = g();
  function f() {
    return o(n).map((m) => Ua(m)[i] - m[0][s]).map($t);
  }
  function p() {
    return n.map((m) => a[s] - m[s]).map((m) => -$t(m));
  }
  function g() {
    return o(d).map((m) => m[0]).map((m, y) => m + l[y]);
  }
  return {
    snaps: d,
    snapsAligned: c
  };
}
function mO(e, t, a, n, r, s) {
  const {
    groupSlides: i
  } = r, {
    min: o,
    max: l
  } = n, d = c();
  function c() {
    const p = i(s), g = !e || t === "keepSnaps";
    return a.length === 1 ? [s] : g ? p : p.slice(o, l).map((v, m, y) => {
      const x = !m, b = Xf(y, m);
      if (x) {
        const C = Ua(y[0]) + 1;
        return av(C);
      }
      if (b) {
        const C = Wi(s) - Ua(y)[0] + 1;
        return av(C, Ua(y)[0]);
      }
      return v;
    });
  }
  return {
    slideRegistry: d
  };
}
function yO(e, t, a, n, r) {
  const {
    reachedAny: s,
    removeOffset: i,
    constrain: o
  } = n;
  function l(v) {
    return v.concat().sort((m, y) => $t(m) - $t(y))[0];
  }
  function d(v) {
    const m = e ? i(v) : o(v), y = t.map((b, C) => ({
      diff: c(b - m, 0),
      index: C
    })).sort((b, C) => $t(b.diff) - $t(C.diff)), {
      index: x
    } = y[0];
    return {
      index: x,
      distance: m
    };
  }
  function c(v, m) {
    const y = [v, v + a, v - a];
    if (!e) return v;
    if (!m) return l(y);
    const x = y.filter((b) => Yf(b) === m);
    return x.length ? l(x) : Ua(y) - a;
  }
  function f(v, m) {
    const y = t[v] - r.get(), x = c(y, m);
    return {
      index: v,
      distance: x
    };
  }
  function p(v, m) {
    const y = r.get() + v, {
      index: x,
      distance: b
    } = d(y), C = !e && s(y);
    if (!m || C) return {
      index: x,
      distance: v
    };
    const w = t[x] - b, $ = v + c(w, 0);
    return {
      index: x,
      distance: $
    };
  }
  return {
    byDistance: p,
    byIndex: f,
    shortcut: c
  };
}
function bO(e, t, a, n, r, s, i) {
  function o(f) {
    const p = f.distance, g = f.index !== t.get();
    s.add(p), p && (n.duration() ? e.start() : (e.update(), e.render(1), e.update())), g && (a.set(t.get()), t.set(f.index), i.emit("select"));
  }
  function l(f, p) {
    const g = r.byDistance(f, p);
    o(g);
  }
  function d(f, p) {
    const g = t.clone().set(f), v = r.byIndex(g.get(), p);
    o(v);
  }
  return {
    distance: l,
    index: d
  };
}
function wO(e, t, a, n, r, s, i, o) {
  const l = {
    passive: !0,
    capture: !0
  };
  let d = 0;
  function c(g) {
    if (!o) return;
    function v(m) {
      if ((/* @__PURE__ */ new Date()).getTime() - d > 10) return;
      i.emit("slideFocusStart"), e.scrollLeft = 0;
      const b = a.findIndex((C) => C.includes(m));
      Wf(b) && (r.useDuration(0), n.index(b, 0), i.emit("slideFocus"));
    }
    s.add(document, "keydown", f, !1), t.forEach((m, y) => {
      s.add(m, "focus", (x) => {
        (Xl(o) || o(g, x)) && v(y);
      }, l);
    });
  }
  function f(g) {
    g.code === "Tab" && (d = (/* @__PURE__ */ new Date()).getTime());
  }
  return {
    init: c
  };
}
function ei(e) {
  let t = e;
  function a() {
    return t;
  }
  function n(l) {
    t = i(l);
  }
  function r(l) {
    t += i(l);
  }
  function s(l) {
    t -= i(l);
  }
  function i(l) {
    return Wf(l) ? l : l.get();
  }
  return {
    get: a,
    set: n,
    add: r,
    subtract: s
  };
}
function $0(e, t) {
  const a = e.scroll === "x" ? i : o, n = t.style;
  let r = null, s = !1;
  function i(p) {
    return `translate3d(${p}px,0px,0px)`;
  }
  function o(p) {
    return `translate3d(0px,${p}px,0px)`;
  }
  function l(p) {
    if (s) return;
    const g = tO(e.direction(p));
    g !== r && (n.transform = a(g), r = g);
  }
  function d(p) {
    s = !p;
  }
  function c() {
    s || (n.transform = "", t.getAttribute("style") || t.removeAttribute("style"));
  }
  return {
    clear: c,
    to: l,
    toggleActive: d
  };
}
function CO(e, t, a, n, r, s, i, o, l) {
  const c = Si(r), f = Si(r).reverse(), p = x().concat(b());
  function g(I, E) {
    return I.reduce((P, R) => P - r[R], E);
  }
  function v(I, E) {
    return I.reduce((P, R) => g(P, E) > 0 ? P.concat([R]) : P, []);
  }
  function m(I) {
    return s.map((E, P) => ({
      start: E - n[P] + 0.5 + I,
      end: E + t - 0.5 + I
    }));
  }
  function y(I, E, P) {
    const R = m(E);
    return I.map((F) => {
      const H = P ? 0 : -a, j = P ? a : 0, K = P ? "end" : "start", z = R[F][K];
      return {
        index: F,
        loopPoint: z,
        slideLocation: ei(-1),
        translate: $0(e, l[F]),
        target: () => o.get() > z ? H : j
      };
    });
  }
  function x() {
    const I = i[0], E = v(f, I);
    return y(E, a, !1);
  }
  function b() {
    const I = t - i[0] - 1, E = v(c, I);
    return y(E, -a, !0);
  }
  function C() {
    return p.every(({
      index: I
    }) => {
      const E = c.filter((P) => P !== I);
      return g(E, t) <= 0.1;
    });
  }
  function w() {
    p.forEach((I) => {
      const {
        target: E,
        translate: P,
        slideLocation: R
      } = I, F = E();
      F !== R.get() && (P.to(F), R.set(F));
    });
  }
  function $() {
    p.forEach((I) => I.translate.clear());
  }
  return {
    canLoop: C,
    clear: $,
    loop: w,
    loopPoints: p
  };
}
function xO(e, t, a) {
  let n, r = !1;
  function s(l) {
    if (!a) return;
    function d(c) {
      for (const f of c)
        if (f.type === "childList") {
          l.reInit(), t.emit("slidesChanged");
          break;
        }
    }
    n = new MutationObserver((c) => {
      r || (Xl(a) || a(l, c)) && d(c);
    }), n.observe(e, {
      childList: !0
    });
  }
  function i() {
    n && n.disconnect(), r = !0;
  }
  return {
    init: s,
    destroy: i
  };
}
function SO(e, t, a, n) {
  const r = {};
  let s = null, i = null, o, l = !1;
  function d() {
    o = new IntersectionObserver((v) => {
      l || (v.forEach((m) => {
        const y = t.indexOf(m.target);
        r[y] = m;
      }), s = null, i = null, a.emit("slidesInView"));
    }, {
      root: e.parentElement,
      threshold: n
    }), t.forEach((v) => o.observe(v));
  }
  function c() {
    o && o.disconnect(), l = !0;
  }
  function f(v) {
    return _i(r).reduce((m, y) => {
      const x = parseInt(y), {
        isIntersecting: b
      } = r[x];
      return (v && b || !v && !b) && m.push(x), m;
    }, []);
  }
  function p(v = !0) {
    if (v && s) return s;
    if (!v && i) return i;
    const m = f(v);
    return v && (s = m), v || (i = m), m;
  }
  return {
    init: d,
    destroy: c,
    get: p
  };
}
function _O(e, t, a, n, r, s) {
  const {
    measureSize: i,
    startEdge: o,
    endEdge: l
  } = e, d = a[0] && r, c = v(), f = m(), p = a.map(i), g = y();
  function v() {
    if (!d) return 0;
    const b = a[0];
    return $t(t[o] - b[o]);
  }
  function m() {
    if (!d) return 0;
    const b = s.getComputedStyle(Ua(n));
    return parseFloat(b.getPropertyValue(`margin-${l}`));
  }
  function y() {
    return a.map((b, C, w) => {
      const $ = !C, B = Xf(w, C);
      return $ ? p[C] + c : B ? p[C] + f : w[C + 1][o] - b[o];
    }).map($t);
  }
  return {
    slideSizes: p,
    slideSizesWithGaps: g,
    startGap: c,
    endGap: f
  };
}
function kO(e, t, a, n, r, s, i, o, l) {
  const {
    startEdge: d,
    endEdge: c,
    direction: f
  } = e, p = Wf(a);
  function g(x, b) {
    return Si(x).filter((C) => C % b === 0).map((C) => x.slice(C, C + b));
  }
  function v(x) {
    return x.length ? Si(x).reduce((b, C, w) => {
      const $ = Ua(b) || 0, B = $ === 0, I = C === Wi(x), E = r[d] - s[$][d], P = r[d] - s[C][c], R = !n && B ? f(i) : 0, F = !n && I ? f(o) : 0, H = $t(P - F - (E + R));
      return w && H > t + l && b.push(C), I && b.push(x.length), b;
    }, []).map((b, C, w) => {
      const $ = Math.max(w[C - 1] || 0);
      return x.slice($, b);
    }) : [];
  }
  function m(x) {
    return p ? g(x, a) : v(x);
  }
  return {
    groupSlides: m
  };
}
function AO(e, t, a, n, r, s, i) {
  const {
    align: o,
    axis: l,
    direction: d,
    startIndex: c,
    loop: f,
    duration: p,
    dragFree: g,
    dragThreshold: v,
    inViewThreshold: m,
    slidesToScroll: y,
    skipSnaps: x,
    containScroll: b,
    watchResize: C,
    watchSlides: w,
    watchDrag: $,
    watchFocus: B
  } = s, I = 2, E = oO(), P = E.measure(t), R = a.map(E.measure), F = rO(l, d), H = F.measureSize(P), j = lO(H), K = aO(o, H), z = !f && !!b, G = f || !!b, {
    slideSizes: Y,
    slideSizesWithGaps: q,
    startGap: Q,
    endGap: se
  } = _O(F, P, R, a, G, r), ce = kO(F, H, y, f, P, R, Q, se, I), {
    snaps: oe,
    snapsAligned: xe
  } = hO(F, K, P, R, ce), $e = -Ua(oe) + Ua(q), {
    snapsContained: Le,
    scrollContainLimit: Ye
  } = fO(H, $e, xe, b, I), ne = z ? Le : xe, {
    limit: ae
  } = pO($e, ne, f), be = A0(Wi(ne), c, f), De = be.clone(), Ke = Si(a), re = ({
    dragHandler: wn,
    scrollBody: qa,
    scrollBounds: Nr,
    options: {
      loop: Hr
    }
  }) => {
    Hr || Nr.constrain(wn.pointerDown()), qa.seek();
  }, de = ({
    scrollBody: wn,
    translate: qa,
    location: Nr,
    offsetLocation: Hr,
    previousLocation: Cn,
    scrollLooper: jr,
    slideLooper: ao,
    dragHandler: Z1,
    animation: eC,
    eventHandler: Dp,
    scrollBounds: tC,
    options: {
      loop: Mp
    }
  }, Rp) => {
    const Lp = wn.settled(), aC = !tC.shouldConstrain(), Op = Mp ? Lp : Lp && aC, Fp = Op && !Z1.pointerDown();
    Fp && eC.stop();
    const nC = Nr.get() * Rp + Cn.get() * (1 - Rp);
    Hr.set(nC), Mp && (jr.loop(wn.direction()), ao.loop()), qa.to(Hr.get()), Fp && Dp.emit("settle"), Op || Dp.emit("scroll");
  }, _e = nO(n, r, () => re(xa), (wn) => de(xa, wn)), ie = 0.68, Ne = ne[be.get()], Oe = ei(Ne), Ae = ei(Ne), ge = ei(Ne), Fe = ei(Ne), ve = dO(Oe, ge, Ae, Fe, p, ie), ct = yO(f, ne, $e, ae, Fe), St = bO(_e, be, De, ve, ct, Fe, i), ia = vO(ae), za = ki(), qn = SO(t, a, i, m), {
    slideRegistry: et
  } = mO(z, b, ne, Ye, ce, Ke), oa = wO(e, a, et, St, ve, za, i, B), xa = {
    ownerDocument: n,
    ownerWindow: r,
    eventHandler: i,
    containerRect: P,
    slideRects: R,
    animation: _e,
    axis: F,
    dragHandler: sO(F, e, n, r, Fe, iO(F, r), Oe, _e, St, ve, ct, be, i, j, g, v, x, ie, $),
    eventStore: za,
    percentOfView: j,
    index: be,
    indexPrevious: De,
    limit: ae,
    location: Oe,
    offsetLocation: ge,
    previousLocation: Ae,
    options: s,
    resizeHandler: uO(t, i, r, a, F, C, E),
    scrollBody: ve,
    scrollBounds: cO(ae, ge, Fe, ve, j),
    scrollLooper: gO($e, ae, ge, [Oe, ge, Ae, Fe]),
    scrollProgress: ia,
    scrollSnapList: ne.map(ia.get),
    scrollSnaps: ne,
    scrollTarget: ct,
    scrollTo: St,
    slideLooper: CO(F, H, $e, Y, q, oe, ne, ge, a),
    slideFocus: oa,
    slidesHandler: xO(t, i, w),
    slidesInView: qn,
    slideIndexes: Ke,
    slideRegistry: et,
    slidesToScroll: ce,
    target: Fe,
    translate: $0(F, t)
  };
  return xa;
}
function $O() {
  let e = {}, t;
  function a(d) {
    t = d;
  }
  function n(d) {
    return e[d] || [];
  }
  function r(d) {
    return n(d).forEach((c) => c(t, d)), l;
  }
  function s(d, c) {
    return e[d] = n(d).concat([c]), l;
  }
  function i(d, c) {
    return e[d] = n(d).filter((f) => f !== c), l;
  }
  function o() {
    e = {};
  }
  const l = {
    init: a,
    emit: r,
    off: i,
    on: s,
    clear: o
  };
  return l;
}
const IO = {
  align: "center",
  axis: "x",
  container: null,
  slides: null,
  containScroll: "trimSnaps",
  direction: "ltr",
  slidesToScroll: 1,
  inViewThreshold: 0,
  breakpoints: {},
  dragFree: !1,
  dragThreshold: 10,
  loop: !1,
  skipSnaps: !1,
  duration: 25,
  startIndex: 0,
  active: !0,
  watchDrag: !0,
  watchResize: !0,
  watchSlides: !0,
  watchFocus: !0
};
function EO(e) {
  function t(s, i) {
    return k0(s, i || {});
  }
  function a(s) {
    const i = s.breakpoints || {}, o = _i(i).filter((l) => e.matchMedia(l).matches).map((l) => i[l]).reduce((l, d) => t(l, d), {});
    return t(s, o);
  }
  function n(s) {
    return s.map((i) => _i(i.breakpoints || {})).reduce((i, o) => i.concat(o), []).map(e.matchMedia);
  }
  return {
    mergeOptions: t,
    optionsAtMedia: a,
    optionsMediaQueries: n
  };
}
function TO(e) {
  let t = [];
  function a(s, i) {
    return t = i.filter(({
      options: o
    }) => e.optionsAtMedia(o).active !== !1), t.forEach((o) => o.init(s, e)), i.reduce((o, l) => Object.assign(o, {
      [l.name]: l
    }), {});
  }
  function n() {
    t = t.filter((s) => s.destroy());
  }
  return {
    init: a,
    destroy: n
  };
}
function gl(e, t, a) {
  const n = e.ownerDocument, r = n.defaultView, s = EO(r), i = TO(s), o = ki(), l = $O(), {
    mergeOptions: d,
    optionsAtMedia: c,
    optionsMediaQueries: f
  } = s, {
    on: p,
    off: g,
    emit: v
  } = l, m = F;
  let y = !1, x, b = d(IO, gl.globalOptions), C = d(b), w = [], $, B, I;
  function E() {
    const {
      container: Ke,
      slides: re
    } = C;
    B = (Wd(Ke) ? e.querySelector(Ke) : Ke) || e.children[0];
    const _e = Wd(re) ? B.querySelectorAll(re) : re;
    I = [].slice.call(_e || B.children);
  }
  function P(Ke) {
    const re = AO(e, B, I, n, r, Ke, l);
    if (Ke.loop && !re.slideLooper.canLoop()) {
      const de = Object.assign({}, Ke, {
        loop: !1
      });
      return P(de);
    }
    return re;
  }
  function R(Ke, re) {
    y || (b = d(b, Ke), C = c(b), w = re || w, E(), x = P(C), f([b, ...w.map(({
      options: de
    }) => de)]).forEach((de) => o.add(de, "change", F)), C.active && (x.translate.to(x.location.get()), x.animation.init(), x.slidesInView.init(), x.slideFocus.init(De), x.eventHandler.init(De), x.resizeHandler.init(De), x.slidesHandler.init(De), x.options.loop && x.slideLooper.loop(), B.offsetParent && I.length && x.dragHandler.init(De), $ = i.init(De, w)));
  }
  function F(Ke, re) {
    const de = ce();
    H(), R(d({
      startIndex: de
    }, Ke), re), l.emit("reInit");
  }
  function H() {
    x.dragHandler.destroy(), x.eventStore.clear(), x.translate.clear(), x.slideLooper.clear(), x.resizeHandler.destroy(), x.slidesHandler.destroy(), x.slidesInView.destroy(), x.animation.destroy(), i.destroy(), o.clear();
  }
  function j() {
    y || (y = !0, o.clear(), H(), l.emit("destroy"), l.clear());
  }
  function K(Ke, re, de) {
    !C.active || y || (x.scrollBody.useBaseFriction().useDuration(re === !0 ? 0 : C.duration), x.scrollTo.index(Ke, de || 0));
  }
  function z(Ke) {
    const re = x.index.add(1).get();
    K(re, Ke, -1);
  }
  function G(Ke) {
    const re = x.index.add(-1).get();
    K(re, Ke, 1);
  }
  function Y() {
    return x.index.add(1).get() !== ce();
  }
  function q() {
    return x.index.add(-1).get() !== ce();
  }
  function Q() {
    return x.scrollSnapList;
  }
  function se() {
    return x.scrollProgress.get(x.offsetLocation.get());
  }
  function ce() {
    return x.index.get();
  }
  function oe() {
    return x.indexPrevious.get();
  }
  function xe() {
    return x.slidesInView.get();
  }
  function $e() {
    return x.slidesInView.get(!1);
  }
  function Le() {
    return $;
  }
  function Ye() {
    return x;
  }
  function ne() {
    return e;
  }
  function ae() {
    return B;
  }
  function be() {
    return I;
  }
  const De = {
    canScrollNext: Y,
    canScrollPrev: q,
    containerNode: ae,
    internalEngine: Ye,
    destroy: j,
    off: g,
    on: p,
    emit: v,
    plugins: Le,
    previousScrollSnap: oe,
    reInit: m,
    rootNode: ne,
    scrollNext: z,
    scrollPrev: G,
    scrollProgress: se,
    scrollSnapList: Q,
    scrollTo: K,
    selectedScrollSnap: ce,
    slideNodes: be,
    slidesInView: xe,
    slidesNotInView: $e
  };
  return R(t, a), setTimeout(() => l.emit("init"), 0), De;
}
gl.globalOptions = void 0;
function Jf(e = {}, t = []) {
  const a = ht(e), n = ht(t);
  let r = a ? e.value : e, s = n ? t.value : t;
  const i = rt(), o = rt();
  function l() {
    o.value && o.value.reInit(r, s);
  }
  return Pe(() => {
    !QL() || !i.value || (gl.globalOptions = Jf.globalOptions, o.value = gl(i.value, r, s));
  }), Di(() => {
    o.value && o.value.destroy();
  }), a && ye(e, (d) => {
    Uf(r, d) || (r = d, l());
  }), n && ye(t, (d) => {
    ZL(s, d) || (s = d, l());
  }), [i, o];
}
Jf.globalOptions = void 0;
const BO = {
  slots: {
    root: "relative focus:outline-none",
    viewport: "overflow-hidden",
    container: "flex items-start",
    item: "min-w-0 shrink-0 basis-full",
    controls: "",
    arrows: "",
    prev: "absolute rounded-full",
    next: "absolute rounded-full",
    dots: "absolute inset-x-0 -bottom-7 flex flex-wrap items-center justify-center gap-3",
    dot: [
      "cursor-pointer size-3 bg-accented rounded-full",
      "transition"
    ]
  },
  variants: {
    orientation: {
      vertical: {
        container: "flex-col -mt-4",
        item: "pt-4",
        prev: "top-4 sm:-top-12 left-1/2 -translate-x-1/2 rotate-90 rtl:-rotate-90",
        next: "bottom-4 sm:-bottom-12 left-1/2 -translate-x-1/2 rotate-90 rtl:-rotate-90"
      },
      horizontal: {
        container: "flex-row -ms-4",
        item: "ps-4",
        prev: "start-4 sm:-start-12 top-1/2 -translate-y-1/2",
        next: "end-4 sm:-end-12 top-1/2 -translate-y-1/2"
      }
    },
    active: {
      true: {
        dot: "data-[state=active]:bg-inverted"
      }
    }
  }
}, PO = ["aria-label"], DO = ["aria-label", "aria-selected", "data-state", "onClick"], f4 = /* @__PURE__ */ L({
  __name: "Carousel",
  props: {
    as: {},
    prev: {},
    prevIcon: {},
    next: {},
    nextIcon: {},
    arrows: { type: Boolean, default: !1 },
    dots: { type: Boolean, default: !1 },
    orientation: { default: "horizontal" },
    items: {},
    autoplay: { type: [Boolean, Object], default: !1 },
    autoScroll: { type: [Boolean, Object], default: !1 },
    autoHeight: { type: [Boolean, Object], default: !1 },
    classNames: { type: [Boolean, Object], default: !1 },
    fade: { type: [Boolean, Object], default: !1 },
    wheelGestures: { type: [Boolean, Object], default: !1 },
    class: {},
    ui: {},
    align: { type: [String, Function], default: "center" },
    containScroll: { type: [Boolean, String], default: "trimSnaps" },
    slidesToScroll: { default: 1 },
    dragFree: { type: Boolean, default: !1 },
    dragThreshold: { default: 10 },
    inViewThreshold: { default: 0 },
    loop: { type: Boolean, default: !1 },
    skipSnaps: { type: Boolean, default: !1 },
    duration: { default: 25 },
    startIndex: { default: 0 },
    watchDrag: { type: [Boolean, Function], default: !0 },
    watchResize: { type: [Boolean, Function], default: !0 },
    watchSlides: { type: [Boolean, Function], default: !0 },
    watchFocus: { type: [Boolean, Function], default: !0 },
    active: { type: Boolean, default: !0 },
    breakpoints: { default: () => ({}) }
  },
  emits: ["select"],
  setup(e, { expose: t, emit: a }) {
    const n = e, r = a, { dir: s, t: i } = it(), o = ue(), l = xt(tt(n, "active", "align", "breakpoints", "containScroll", "dragFree", "dragThreshold", "duration", "inViewThreshold", "loop", "skipSnaps", "slidesToScroll", "startIndex", "watchDrag", "watchResize", "watchSlides", "watchFocus")), d = T(() => n.prevIcon || (s.value === "rtl" ? o.ui.icons.arrowRight : o.ui.icons.arrowLeft)), c = T(() => n.nextIcon || (s.value === "rtl" ? o.ui.icons.arrowLeft : o.ui.icons.arrowRight)), f = T(() => W({ extend: W(BO), ...o.ui?.carousel || {} })({
      orientation: n.orientation
    })), p = T(() => ({
      ...n.fade ? { align: "center", containScroll: !1 } : {},
      ...l.value,
      axis: n.orientation === "horizontal" ? "x" : "y",
      direction: s.value === "rtl" ? "rtl" : "ltr"
    })), g = N([]);
    async function v() {
      const H = [];
      if (n.autoplay) {
        const j = await import("./embla-carousel-autoplay.esm-Dsq4myy1.js").then((K) => K.default);
        H.push(j(typeof n.autoplay == "boolean" ? {} : n.autoplay));
      }
      if (n.autoScroll) {
        const j = await import("./embla-carousel-auto-scroll.esm-kh3r9SbL.js").then((K) => K.default);
        H.push(j(typeof n.autoScroll == "boolean" ? {} : n.autoScroll));
      }
      if (n.autoHeight) {
        const j = await import("./embla-carousel-auto-height.esm-ChnXvXj8.js").then((K) => K.default);
        H.push(j(typeof n.autoHeight == "boolean" ? {} : n.autoHeight));
      }
      if (n.classNames) {
        const j = await import("./embla-carousel-class-names.esm-BLcxNRTO.js").then((K) => K.default);
        H.push(j(typeof n.classNames == "boolean" ? {} : n.classNames));
      }
      if (n.fade) {
        const j = await import("./embla-carousel-fade.esm-Dhou20uz.js").then((K) => K.default);
        H.push(j(typeof n.fade == "boolean" ? {} : n.fade));
      }
      if (n.wheelGestures) {
        const { WheelGesturesPlugin: j } = await import("./embla-carousel-wheel-gestures.esm-Db_jQKYH.js");
        H.push(j(typeof n.wheelGestures == "boolean" ? {} : n.wheelGestures));
      }
      g.value = H;
    }
    ye(() => [n.autoplay, n.autoScroll, n.autoHeight, n.classNames, n.fade, n.wheelGestures], v, { immediate: !0 });
    const [m, y] = Jf(p.value, g.value);
    ye([p, g], () => {
      y.value?.reInit(p.value, g.value);
    });
    function x() {
      y.value?.scrollPrev();
    }
    function b() {
      y.value?.scrollNext();
    }
    function C(H) {
      y.value?.scrollTo(H);
    }
    function w(H) {
      const j = n.orientation === "vertical" ? "ArrowUp" : "ArrowLeft", K = n.orientation === "vertical" ? "ArrowDown" : "ArrowRight";
      if (H.key === j) {
        H.preventDefault(), x();
        return;
      }
      H.key === K && (H.preventDefault(), b());
    }
    const $ = N(!1), B = N(!1), I = N(0), E = N([]);
    function P(H) {
      E.value = H?.scrollSnapList() || [];
    }
    function R(H) {
      $.value = H?.canScrollNext() || !1, B.value = H?.canScrollPrev() || !1, I.value = H?.selectedScrollSnap() || 0, r("select", I.value);
    }
    function F(H) {
      return typeof H == "object" && H !== null;
    }
    return Pe(() => {
      y.value && (y.value?.on("init", P), y.value?.on("init", R), y.value?.on("reInit", P), y.value?.on("reInit", R), y.value?.on("select", R));
    }), t({
      emblaRef: m,
      emblaApi: y
    }), (H, j) => (h(), k(u(U), {
      as: H.as,
      role: "region",
      "aria-roledescription": "carousel",
      tabindex: "0",
      class: A(f.value.root({ class: [n.ui?.root, n.class] })),
      onKeydown: w
    }, {
      default: _(() => [
        J("div", {
          ref_key: "emblaRef",
          ref: m,
          class: A(f.value.viewport({ class: n.ui?.viewport }))
        }, [
          J("div", {
            class: A(f.value.container({ class: n.ui?.container }))
          }, [
            (h(!0), M(te, null, le(H.items, (K, z) => (h(), M("div", O({ key: z }, { ref_for: !0 }, H.dots ? { role: "tabpanel" } : { role: "group", "aria-roledescription": "slide" }, {
              class: f.value.item({ class: [n.ui?.item, F(K) && K.ui?.item, F(K) && K.class] })
            }), [
              S(H.$slots, "default", {
                item: K,
                index: z
              })
            ], 16))), 128))
          ], 2)
        ], 2),
        H.arrows || H.dots ? (h(), M("div", {
          key: 0,
          class: A(f.value.controls({ class: n.ui?.controls }))
        }, [
          H.arrows ? (h(), M("div", {
            key: 0,
            class: A(f.value.arrows({ class: n.ui?.arrows }))
          }, [
            V(Je, O({
              disabled: !B.value,
              icon: d.value,
              color: "neutral",
              variant: "outline",
              "aria-label": u(i)("carousel.prev")
            }, typeof H.prev == "object" ? H.prev : void 0, {
              class: f.value.prev({ class: n.ui?.prev }),
              onClick: x
            }), null, 16, ["disabled", "icon", "aria-label", "class"]),
            V(Je, O({
              disabled: !$.value,
              icon: c.value,
              color: "neutral",
              variant: "outline",
              "aria-label": u(i)("carousel.next")
            }, typeof H.next == "object" ? H.next : void 0, {
              class: f.value.next({ class: n.ui?.next }),
              onClick: b
            }), null, 16, ["disabled", "icon", "aria-label", "class"])
          ], 2)) : D("", !0),
          H.dots ? (h(), M("div", {
            key: 1,
            role: "tablist",
            "aria-label": u(i)("carousel.dots"),
            class: A(f.value.dots({ class: n.ui?.dots }))
          }, [
            (h(!0), M(te, null, le(E.value, (K, z) => (h(), M("button", {
              key: z,
              type: "button",
              role: "tab",
              "aria-label": u(i)("carousel.goto", { slide: z + 1 }),
              "aria-selected": I.value === z,
              class: A(f.value.dot({ class: n.ui?.dot, active: I.value === z })),
              "data-state": I.value === z ? "active" : void 0,
              onClick: (G) => C(z)
            }, null, 10, DO))), 128))
          ], 10, PO)) : D("", !0)
        ], 2)) : D("", !0)
      ]),
      _: 3
    }, 8, ["as", "class"]));
  }
}), MO = {
  slots: {
    root: "relative",
    container: "flex flex-col mx-auto max-w-2xl",
    header: "",
    meta: "flex items-center gap-3 mb-2",
    date: "text-sm/6 text-toned truncate",
    badge: "",
    title: "relative text-xl text-pretty font-semibold text-highlighted",
    description: "text-base text-pretty text-muted mt-1",
    imageWrapper: "relative overflow-hidden rounded-lg aspect-[16/9] mt-5 group/changelog-version-image",
    image: "object-cover object-top w-full h-full",
    authors: "flex flex-wrap gap-x-4 gap-y-1.5",
    footer: "border-t border-default pt-5 flex items-center justify-between",
    indicator: "absolute start-0 top-0 w-32 hidden lg:flex items-center justify-end gap-3 min-w-0",
    dot: "size-4 rounded-full bg-default ring ring-default flex items-center justify-center my-1",
    dotInner: "size-2 rounded-full bg-primary"
  },
  variants: {
    body: {
      false: {
        footer: "mt-5"
      }
    },
    badge: {
      false: {
        meta: "lg:hidden"
      }
    },
    to: {
      true: {
        image: "transform transition-transform duration-200 group-hover/changelog-version-image:scale-105"
      }
    },
    hidden: {
      true: {
        date: "lg:hidden"
      }
    }
  }
}, RO = ["datetime"], LO = /* @__PURE__ */ L({
  inheritAttrs: !1,
  __name: "ChangelogVersion",
  props: {
    as: { default: "article" },
    title: {},
    description: {},
    date: {},
    badge: {},
    authors: {},
    image: {},
    indicator: { type: Boolean, default: !0 },
    to: {},
    target: {},
    onClick: {},
    class: {},
    ui: {}
  },
  setup(e) {
    const t = e, a = Se(), { locale: n } = it(), r = ue(), s = tf(n.value.code), [i, o] = /* @__PURE__ */ Lt(), [l, d] = /* @__PURE__ */ Lt({
      props: {
        hidden: {
          type: Boolean,
          default: !1
        }
      }
    }), c = T(() => W({ extend: W(MO), ...r.ui?.changelogVersion || {} })({
      to: !!t.to || !!t.onClick
    })), f = T(() => {
      if (t.date)
        try {
          return s.custom(new Date(t.date), { dateStyle: "medium" });
        } catch {
          return t.date;
        }
    }), p = T(() => {
      if (t.date)
        try {
          return new Date(t.date)?.toISOString();
        } catch {
          return;
        }
    }), g = T(() => (a.title && Er(a.title()) || t.title || "Version link").trim());
    return (v, m) => (h(), M(te, null, [
      V(u(i), null, {
        default: _(() => [
          v.to ? (h(), k(Wt, O({
            key: 0,
            "aria-label": g.value
          }, { to: v.to, target: v.target, ...v.$attrs }, {
            class: "focus:outline-none peer",
            tabindex: "-1",
            raw: ""
          }), {
            default: _(() => [...m[0] || (m[0] = [
              J("span", {
                class: "absolute inset-0",
                "aria-hidden": "true"
              }, null, -1)
            ])]),
            _: 1
          }, 16, ["aria-label"])) : D("", !0)
        ]),
        _: 1
      }),
      V(u(l), null, {
        default: _(({ hidden: y }) => [
          f.value ? (h(), M("time", {
            key: 0,
            datetime: p.value,
            class: A(c.value.date({ class: t.ui?.date, hidden: y }))
          }, [
            S(v.$slots, "date", {}, () => [
              ee(X(f.value), 1)
            ])
          ], 10, RO)) : D("", !0)
        ]),
        _: 3
      }),
      V(u(U), {
        as: v.as,
        class: A(c.value.root({ class: [t.ui?.root, t.class] })),
        onClick: v.onClick
      }, {
        default: _(() => [
          t.indicator || a.indicator ? (h(), M("div", {
            key: 0,
            class: A(c.value.indicator({ class: t.ui?.indicator }))
          }, [
            S(v.$slots, "indicator", {}, () => [
              V(u(d)),
              J("div", {
                class: A(c.value.dot({ class: t.ui?.dot }))
              }, [
                J("div", {
                  class: A(c.value.dotInner({ class: t.ui?.dotInner }))
                }, null, 2)
              ], 2)
            ])
          ], 2)) : D("", !0),
          J("div", {
            class: A(c.value.container({ class: t.ui?.container }))
          }, [
            a.header || f.value || a.date || v.badge || a.badge || v.title || a.title || v.description || a.description || v.image || a.image ? (h(), M("div", {
              key: 0,
              class: A(c.value.header({ class: t.ui?.header }))
            }, [
              S(v.$slots, "header", {}, () => [
                f.value || a.date || v.badge || a.badge ? (h(), M("div", {
                  key: 0,
                  class: A(c.value.meta({ class: t.ui?.meta, badge: !!v.badge || !!a.badge || !t.indicator }))
                }, [
                  S(v.$slots, "badge", {}, () => [
                    v.badge ? (h(), k(Ls, O({
                      key: 0,
                      color: "neutral",
                      variant: "solid"
                    }, typeof v.badge == "string" ? { label: v.badge } : v.badge, {
                      class: c.value.badge({ class: t.ui?.badge })
                    }), null, 16, ["class"])) : D("", !0)
                  ]),
                  V(u(d), {
                    hidden: !!t.indicator
                  }, null, 8, ["hidden"])
                ], 2)) : D("", !0),
                v.title || a.title ? (h(), M("h2", {
                  key: 1,
                  class: A(c.value.title({ class: t.ui?.title }))
                }, [
                  V(u(o)),
                  S(v.$slots, "title", {}, () => [
                    ee(X(v.title), 1)
                  ])
                ], 2)) : D("", !0),
                v.description || a.description ? (h(), M("div", {
                  key: 2,
                  class: A(c.value.description({ class: t.ui?.description }))
                }, [
                  S(v.$slots, "description", {}, () => [
                    ee(X(v.description), 1)
                  ])
                ], 2)) : D("", !0),
                v.image || a.image ? (h(), M("div", {
                  key: 3,
                  class: A(c.value.imageWrapper({ class: t.ui?.imageWrapper }))
                }, [
                  S(v.$slots, "image", {}, () => [
                    v.image ? (h(), k(ut(u(Gf)), O({ key: 0 }, typeof v.image == "string" ? { src: v.image, alt: v.title } : { alt: v.title, ...v.image }, {
                      class: c.value.image({ class: t.ui?.image, to: !!v.to })
                    }), null, 16, ["class"])) : D("", !0)
                  ]),
                  V(u(o))
                ], 2)) : D("", !0)
              ])
            ], 2)) : D("", !0),
            S(v.$slots, "body"),
            a.footer || v.authors?.length || a.authors || a.actions ? (h(), M("div", {
              key: 1,
              class: A(c.value.footer({ class: t.ui?.footer, body: !!a.body }))
            }, [
              S(v.$slots, "footer", {}, () => [
                v.authors?.length || a.authors ? (h(), M("div", {
                  key: 0,
                  class: A(c.value.authors({ class: t.ui?.authors }))
                }, [
                  S(v.$slots, "authors", {}, () => [
                    (h(!0), M(te, null, le(v.authors, (y, x) => (h(), k(_0, O({ key: x }, { ref_for: !0 }, y), null, 16))), 128))
                  ])
                ], 2)) : D("", !0),
                S(v.$slots, "actions")
              ])
            ], 2)) : D("", !0)
          ], 2)
        ]),
        _: 3
      }, 8, ["as", "class", "onClick"])
    ], 64));
  }
}), wo = [
  "setup",
  // Compute
  "read",
  // Read
  "resolveKeyframes",
  // Write/Read/Write/Read
  "preUpdate",
  // Compute
  "update",
  // Compute
  "preRender",
  // Compute
  "render",
  // Write
  "postRender"
  // Compute
];
function OO(e, t) {
  let a = /* @__PURE__ */ new Set(), n = /* @__PURE__ */ new Set(), r = !1, s = !1;
  const i = /* @__PURE__ */ new WeakSet();
  let o = {
    delta: 0,
    timestamp: 0,
    isProcessing: !1
  };
  function l(c) {
    i.has(c) && (d.schedule(c), e()), c(o);
  }
  const d = {
    /**
     * Schedule a process to run on the next frame.
     */
    schedule: (c, f = !1, p = !1) => {
      const v = p && r ? a : n;
      return f && i.add(c), v.has(c) || v.add(c), c;
    },
    /**
     * Cancel the provided callback from running on the next frame.
     */
    cancel: (c) => {
      n.delete(c), i.delete(c);
    },
    /**
     * Execute all schedule callbacks.
     */
    process: (c) => {
      if (o = c, r) {
        s = !0;
        return;
      }
      r = !0, [a, n] = [n, a], a.forEach(l), a.clear(), r = !1, s && (s = !1, d.process(c));
    }
  };
  return d;
}
const Dn = {}, FO = 40;
function I0(e, t) {
  let a = !1, n = !0;
  const r = {
    delta: 0,
    timestamp: 0,
    isProcessing: !1
  }, s = () => a = !0, i = wo.reduce((C, w) => (C[w] = OO(s), C), {}), { setup: o, read: l, resolveKeyframes: d, preUpdate: c, update: f, preRender: p, render: g, postRender: v } = i, m = () => {
    const C = Dn.useManualTiming ? r.timestamp : performance.now();
    a = !1, Dn.useManualTiming || (r.delta = n ? 1e3 / 60 : Math.max(Math.min(C - r.timestamp, FO), 1)), r.timestamp = C, r.isProcessing = !0, o.process(r), l.process(r), d.process(r), c.process(r), f.process(r), p.process(r), g.process(r), v.process(r), r.isProcessing = !1, a && t && (n = !1, e(m));
  }, y = () => {
    a = !0, n = !0, r.isProcessing || e(m);
  };
  return { schedule: wo.reduce((C, w) => {
    const $ = i[w];
    return C[w] = (B, I = !1, E = !1) => (a || y(), $.schedule(B, I, E)), C;
  }, {}), cancel: (C) => {
    for (let w = 0; w < wo.length; w++)
      i[wo[w]].cancel(C);
  }, state: r, steps: i };
}
const ua = /* @__NO_SIDE_EFFECTS__ */ (e) => e, { schedule: st, cancel: Fa, state: Gt, steps: $u } = /* @__PURE__ */ I0(typeof requestAnimationFrame < "u" ? requestAnimationFrame : ua, !0);
let Ho;
function zO() {
  Ho = void 0;
}
const ya = {
  now: () => (Ho === void 0 && ya.set(Gt.isProcessing || Dn.useManualTiming ? Gt.timestamp : performance.now()), Ho),
  set: (e) => {
    Ho = e, queueMicrotask(zO);
  }
}, La = /* @__NO_SIDE_EFFECTS__ */ (e) => e * 1e3, cn = /* @__NO_SIDE_EFFECTS__ */ (e) => e / 1e3;
function qO(e, t) {
  const a = ya.now(), n = ({ timestamp: r }) => {
    const s = r - a;
    s >= t && (Fa(n), e(s - t));
  };
  return st.setup(n, !0), () => Fa(n);
}
const E0 = (e) => (t) => typeof t == "string" && t.startsWith(e), Qf = /* @__PURE__ */ E0("--"), VO = /* @__PURE__ */ E0("var(--"), Zf = (e) => VO(e) ? NO.test(e.split("/*")[0].trim()) : !1, NO = /var\(--(?:[\w-]+\s*|[\w-]+\s*,(?:\s*[^)(\s]|\s*\((?:[^)(]|\([^)(]*\))*\))+\s*)\)$/iu, Ai = {};
function T0(e) {
  for (const t in e)
    Ai[t] = e[t], Qf(t) && (Ai[t].isCSSVariable = !0);
}
function Yi(e, t) {
  const a = typeof e == "string" && !t ? `${e}Context` : t, n = Symbol(a);
  return [(i) => {
    const o = Zt(n, i);
    if (o === void 0)
      throw new Error(
        `Injection \`${n.toString()}\` not found. Component must be used within ${Array.isArray(e) ? `one of the following components: ${e.join(
          ", "
        )}` : `\`${e}\``}`
      );
    return o;
  }, (i) => (ta(n, i), i)];
}
const [HO, jO] = Yi("Motion"), [KO, p4] = Yi("LayoutGroup");
function nv(e) {
  return e !== null && typeof e == "object" && typeof e.start == "function";
}
class zn {
  constructor(t) {
    this.state = t;
  }
  beforeMount() {
  }
  mount() {
  }
  unmount() {
  }
  update() {
  }
  beforeUpdate() {
  }
  beforeUnmount() {
  }
}
var Zr = function() {
}, Jl = function() {
};
process.env.NODE_ENV !== "production" && (Zr = function(e, t) {
  !e && typeof console < "u" && console.warn(t);
}, Jl = function(e, t) {
  if (!e)
    throw new Error(t);
});
function ui(e, t, a) {
  if (Array.isArray(e))
    return e.reduce((n, r) => {
      const s = ui(r, t, a);
      return s ? { ...n, ...s } : n;
    }, {});
  if (typeof e == "object")
    return e;
  if (e && t) {
    const n = t[e];
    return typeof n == "function" ? n(a) : n;
  }
}
function GO(e, t) {
  return typeof e != typeof t ? !0 : Array.isArray(e) && Array.isArray(t) ? !UO(e, t) : e !== t;
}
function UO(e, t) {
  const a = t.length;
  if (a !== e.length)
    return !1;
  for (let n = 0; n < a; n++)
    if (t[n] !== e[n])
      return !1;
  return !0;
}
function rv(e) {
  return e?.startsWith("--");
}
const WO = (e) => e;
function YO(e) {
  return typeof e == "number";
}
const XO = [
  "animate",
  "circle",
  "defs",
  "desc",
  "ellipse",
  "g",
  "image",
  "line",
  "filter",
  "marker",
  "mask",
  "metadata",
  "path",
  "pattern",
  "polygon",
  "polyline",
  "rect",
  "stop",
  "svg",
  "switch",
  "symbol",
  "text",
  "tspan",
  "use",
  "view",
  "clipPath",
  "feBlend",
  "feColorMatrix",
  "feComponentTransfer",
  "feComposite",
  "feConvolveMatrix",
  "feDiffuseLighting",
  "feDisplacementMap",
  "feDistantLight",
  "feDropShadow",
  "feFlood",
  "feFuncA",
  "feFuncB",
  "feFuncG",
  "feFuncR",
  "feGaussianBlur",
  "feImage",
  "feMerge",
  "feMergeNode",
  "feMorphology",
  "feOffset",
  "fePointLight",
  "feSpecularLighting",
  "feSpotLight",
  "feTile",
  "feTurbulence",
  "foreignObject",
  "linearGradient",
  "radialGradient",
  "textPath"
], JO = new Set(XO);
function B0(e) {
  return JO.has(e);
}
class QO {
  constructor(t) {
    this.features = [];
    const { features: a = [], lazyMotionContext: n } = t.options, r = a.concat(n.features.value);
    this.features = r.map((i) => new i(t));
    const s = this.features;
    ye(n.features, (i) => {
      i.forEach((o) => {
        if (!r.includes(o)) {
          r.push(o);
          const l = new o(t);
          s.push(l), t.isMounted() && (l.beforeMount(), l.mount());
        }
      });
    }, {
      flush: "pre"
    });
  }
  mount() {
    this.features.forEach((t) => t.mount());
  }
  beforeMount() {
    this.features.forEach((t) => {
      var a;
      return (a = t.beforeMount) == null ? void 0 : a.call(t);
    });
  }
  unmount() {
    this.features.forEach((t) => t.unmount());
  }
  update() {
    this.features.forEach((t) => {
      var a;
      return (a = t.update) == null ? void 0 : a.call(t);
    });
  }
  beforeUpdate() {
    this.features.forEach((t) => t.beforeUpdate());
  }
  beforeUnmount() {
    this.features.forEach((t) => t.beforeUnmount());
  }
}
const ep = /* @__PURE__ */ new WeakMap(), [ZO, g4] = Yi("AnimatePresenceContext");
function eF(e) {
  return typeof e == "string" || e === !1 || Array.isArray(e);
}
const P0 = /* @__PURE__ */ new WeakMap();
let tF = 0;
const Iu = /* @__PURE__ */ new Set();
class aF {
  constructor(t, a) {
    var n;
    this.element = null, this.isSafeToRemove = !1, this.isVShow = !1, this.children = /* @__PURE__ */ new Set(), this.activeStates = {
      initial: !0,
      animate: !0
    }, this.currentProcess = null, this._context = null, this.animateUpdates = ua, this.id = `motion-state-${tF++}`, this.options = t, this.parent = a, (n = a?.children) == null || n.add(this);
    const s = (t.initial === void 0 && t.variants ? this.context.initial : t.initial) === !1 ? ["initial", "animate"] : ["initial"];
    this.initTarget(s), this.featureManager = new QO(this), this.type = B0(this.options.as) ? "svg" : "html";
  }
  // Get animation context, falling back to parent context for inheritance
  get context() {
    if (!this._context) {
      const t = {
        get: (a, n) => {
          var r;
          return eF(this.options[n]) ? this.options[n] : (r = this.parent) == null ? void 0 : r.context[n];
        }
      };
      this._context = new Proxy({}, t);
    }
    return this._context;
  }
  // Initialize animation target values
  initTarget(t) {
    var a;
    const n = this.options.custom ?? ((a = this.options.animatePresenceContext) == null ? void 0 : a.custom);
    this.baseTarget = t.reduce((r, s) => ({
      ...r,
      ...ui(this.options[s] || this.context[s], this.options.variants, n)
    }), {}), this.target = {};
  }
  // Update visual element with new options
  updateOptions(t) {
    var a;
    this.options = t, (a = this.visualElement) == null || a.update({
      ...this.options,
      whileTap: this.options.whilePress
    }, {
      isPresent: !ep.has(this.element)
    });
  }
  // Called before mounting, executes in parent-to-child order
  beforeMount() {
    this.featureManager.beforeMount();
  }
  // Mount motion state to DOM element, handles parent-child relationships
  mount(t, a, n = !1) {
    var r;
    Jl(
      !!t,
      "Animation state must be mounted with valid Element"
    ), this.element = t, this.updateOptions(a), this.featureManager.mount(), !n && this.options.animate && ((r = this.startAnimation) == null || r.call(this)), this.options.layoutId && (Iu.add(this.options.layoutId), st.render(() => {
      Iu.clear();
    }));
  }
  clearAnimation() {
    var t, a;
    this.currentProcess && Fa(this.currentProcess), this.currentProcess = null, (a = (t = this.visualElement) == null ? void 0 : t.variantChildren) == null || a.forEach((n) => {
      n.state.clearAnimation();
    });
  }
  // update trigger animation
  startAnimation() {
    this.clearAnimation(), this.currentProcess = st.render(() => {
      this.currentProcess = null, this.animateUpdates();
    });
  }
  // Called before unmounting, executes in child-to-parent order
  beforeUnmount() {
    this.featureManager.beforeUnmount();
  }
  unmount(t = !1) {
    const a = this.options.layoutId && !Iu.has(this.options.layoutId);
    (() => {
      const r = () => {
        var s, i, o;
        t && Array.from(this.children).reverse().forEach(this.unmountChild), (i = (s = this.parent) == null ? void 0 : s.children) == null || i.delete(this), P0.delete(this.element), this.featureManager.unmount(), (o = this.visualElement) == null || o.unmount(), this.clearAnimation();
      };
      a ? Promise.resolve().then(r) : r();
    })();
  }
  unmountChild(t) {
    t.unmount(!0);
  }
  // Called before updating, executes in parent-to-child order
  beforeUpdate() {
    this.featureManager.beforeUpdate();
  }
  // Update motion state with new options
  update(t) {
    this.updateOptions(t), this.featureManager.update(), this.startAnimation();
  }
  // Set animation state active status and propagate to children
  setActive(t, a, n = !0) {
    var r;
    !this.element || this.activeStates[t] === a || (this.activeStates[t] = a, (r = this.visualElement.variantChildren) == null || r.forEach((s) => {
      s.state.setActive(t, a, !1);
    }), n && this.animateUpdates({
      isExit: t === "exit" && this.activeStates.exit
    }));
  }
  isMounted() {
    return !!this.element;
  }
  // Called before layout updates to prepare for changes
  willUpdate(t) {
    var a;
    (this.options.layout || this.options.layoutId) && ((a = this.visualElement.projection) == null || a.willUpdate());
  }
}
const Br = /* @__PURE__ */ new WeakMap();
function sv(e, t, a) {
  return new CustomEvent(e, { detail: { target: t, isExit: a } });
}
const iv = {
  syntax: "<angle>",
  initialValue: "0deg",
  toDefaultUnit: (e) => `${e}deg`
}, nF = {
  translate: {
    syntax: "<length-percentage>",
    initialValue: "0px",
    toDefaultUnit: (e) => `${e}px`
  },
  rotate: iv,
  scale: {
    syntax: "<number>",
    initialValue: 1,
    toDefaultUnit: WO
  },
  skew: iv
}, rF = ["translate", "scale", "rotate", "skew"], sF = ["", "X", "Y", "Z"], tp = /* @__PURE__ */ new Map(), vl = ["transformPerspective", "x", "y", "z", "translateX", "translateY", "translateZ", "scale", "scaleX", "scaleY", "rotate", "rotateX", "rotateY", "rotateZ", "skew", "skewX", "skewY"];
rF.forEach((e) => {
  sF.forEach((t) => {
    vl.push(e + t), tp.set(
      e + t,
      nF[e]
    );
  });
});
const iF = new Set(vl), oF = (e) => iF.has(e), ov = {
  x: "translateX",
  y: "translateY",
  z: "translateZ"
};
function lF([e], [t]) {
  return vl.indexOf(e) - vl.indexOf(t);
}
function uF(e, [t, a]) {
  return `${e} ${t}(${a})`;
}
function dF(e) {
  return e.sort(lF).reduce(uF, "").trim();
}
const lv = {
  translate: [0, 0],
  rotate: 0,
  scale: 1,
  skew: 0,
  x: 0,
  y: 0,
  z: 0
}, Xi = /* @__NO_SIDE_EFFECTS__ */ (e) => ({
  test: (t) => typeof t == "string" && t.endsWith(e) && t.split(" ").length === 1,
  parse: parseFloat,
  transform: (t) => `${t}${e}`
}), jn = /* @__PURE__ */ Xi("deg"), fn = /* @__PURE__ */ Xi("%"), Ve = /* @__PURE__ */ Xi("px"), cF = /* @__PURE__ */ Xi("vh"), fF = /* @__PURE__ */ Xi("vw"), uv = {
  ...fn,
  parse: (e) => fn.parse(e) / 100,
  transform: (e) => fn.transform(e * 100)
}, Tt = (e) => !!(e && e.getVelocity), pF = {
  get: (e, t) => {
    let a = rv(t) ? e.style.getPropertyValue(t) : getComputedStyle(e)[t];
    if (!a && a !== "0") {
      const n = tp.get(t);
      n && (a = n.initialValue);
    }
    return a;
  },
  set: (e, t, a) => {
    rv(t) ? e.style.setProperty(t, a) : e.style[t] = a;
  }
};
function gF(e) {
  var t;
  const a = {}, n = [];
  for (let r in e) {
    let s = e[r];
    s = Tt(s) ? s.get() : s, oF(r) && r in ov && (r = ov[r]);
    let i = Array.isArray(s) ? s[0] : s;
    const o = tp.get(r);
    o ? (i = YO(s) ? (t = o.toDefaultUnit) == null ? void 0 : t.call(o, s) : s, n.push([r, i])) : a[r] = i;
  }
  return n.length && (a.transform = dF(n)), Object.keys(a).length === 0 ? null : a;
}
const vF = {
  fill: !0,
  stroke: !0,
  opacity: !0,
  "stroke-width": !0,
  "fill-opacity": !0,
  "stroke-opacity": !0,
  "stroke-linecap": !0,
  "stroke-linejoin": !0,
  "stroke-dasharray": !0,
  "stroke-dashoffset": !0,
  cx: !0,
  cy: !0,
  r: !0,
  d: !0,
  x1: !0,
  y1: !0,
  x2: !0,
  y2: !0,
  points: !0,
  "path-length": !0,
  viewBox: !0,
  width: !0,
  height: !0,
  "preserve-aspect-ratio": !0,
  "clip-path": !0,
  filter: !0,
  mask: !0,
  "stop-color": !0,
  "stop-opacity": !0,
  "gradient-transform": !0,
  "gradient-units": !0,
  "spread-method": !0,
  "marker-end": !0,
  "marker-mid": !0,
  "marker-start": !0,
  "text-anchor": !0,
  "dominant-baseline": !0,
  "font-family": !0,
  "font-size": !0,
  "font-weight": !0,
  "letter-spacing": !0,
  "vector-effect": !0
};
function hF(e) {
  return e.replace(/([a-z0-9])([A-Z])/g, "$1-$2").toLowerCase();
}
function mF(e, t, a = 1, n = 0) {
  e.pathLength = 1, delete e["path-length"], e["stroke-dashoffset"] = Ve.transform(-n);
  const r = Ve.transform(t), s = Ve.transform(a);
  e["stroke-dasharray"] = `${r} ${s}`;
}
function yF(e) {
  const t = {}, a = {};
  for (const n in e) {
    const r = hF(n);
    if (r in vF) {
      const s = e[n];
      t[r] = Tt(s) ? s.get() : s;
    } else
      a[n] = e[n];
  }
  return t["path-length"] !== void 0 && mF(t, t["path-length"], t["path-spacing"], t["path-offset"]), {
    attrs: t,
    style: a
  };
}
function bF({ top: e, left: t, right: a, bottom: n }) {
  return {
    x: { min: t, max: a },
    y: { min: e, max: n }
  };
}
function wF(e, t) {
  if (!t)
    return e;
  const a = t({ x: e.left, y: e.top }), n = t({ x: e.right, y: e.bottom });
  return {
    top: a.y,
    left: a.x,
    bottom: n.y,
    right: n.x
  };
}
function CF(e, t) {
  return bF(wF(e.getBoundingClientRect(), t));
}
const dv = {
  animation: [
    "animate",
    "variants",
    "whileHover",
    "whileTap",
    "exit",
    "whileInView",
    "whileFocus",
    "whileDrag"
  ],
  exit: ["exit"],
  drag: ["drag", "dragControls"],
  focus: ["whileFocus"],
  hover: ["whileHover", "onHoverStart", "onHoverEnd"],
  tap: ["whileTap", "onTap", "onTapStart", "onTapCancel"],
  pan: ["onPan", "onPanStart", "onPanSessionStart", "onPanEnd"],
  inView: ["whileInView", "onViewportEnter", "onViewportLeave"],
  layout: ["layout", "layoutId"]
}, Xd = {};
for (const e in dv)
  Xd[e] = {
    isEnabled: (t) => dv[e].some((a) => !!t[a])
  };
const cv = () => ({
  translate: 0,
  scale: 1,
  origin: 0,
  originPoint: 0
}), es = () => ({
  x: cv(),
  y: cv()
}), fv = () => ({ min: 0, max: 0 }), Pt = () => ({
  x: fv(),
  y: fv()
}), xF = typeof window < "u", hl = { current: null }, D0 = { current: !1 };
function SF() {
  if (D0.current = !0, !!xF)
    if (window.matchMedia) {
      const e = window.matchMedia("(prefers-reduced-motion)"), t = () => hl.current = e.matches;
      e.addEventListener("change", t), t();
    } else
      hl.current = !1;
}
function _F(e) {
  return e !== null && typeof e == "object" && typeof e.start == "function";
}
function kF(e) {
  return typeof e == "string" || Array.isArray(e);
}
const AF = [
  "animate",
  "whileInView",
  "whileFocus",
  "whileHover",
  "whileTap",
  "whileDrag",
  "exit"
], $F = ["initial", ...AF];
function M0(e) {
  return _F(e.animate) || $F.some((t) => kF(e[t]));
}
function IF(e) {
  return !!(M0(e) || e.variants);
}
function Jd(e, t) {
  return t ? `${e}. For more information and steps for solving, visit https://motion.dev/troubleshooting/${t}` : e;
}
const pv = /* @__PURE__ */ new Set();
function ap(e, t, a) {
  e || pv.has(t) || (console.warn(Jd(t, a)), pv.add(t));
}
function np(e, t) {
  e.indexOf(t) === -1 && e.push(t);
}
function Ql(e, t) {
  const a = e.indexOf(t);
  a > -1 && e.splice(a, 1);
}
class rp {
  constructor() {
    this.subscriptions = [];
  }
  add(t) {
    return np(this.subscriptions, t), () => Ql(this.subscriptions, t);
  }
  notify(t, a, n) {
    const r = this.subscriptions.length;
    if (r)
      if (r === 1)
        this.subscriptions[0](t, a, n);
      else
        for (let s = 0; s < r; s++) {
          const i = this.subscriptions[s];
          i && i(t, a, n);
        }
  }
  getSize() {
    return this.subscriptions.length;
  }
  clear() {
    this.subscriptions.length = 0;
  }
}
function sp(e, t) {
  return t ? e * (1e3 / t) : 0;
}
const gv = 30, EF = (e) => !isNaN(parseFloat(e)), Gn = {
  current: void 0
};
class TF {
  /**
   * @param init - The initiating value
   * @param config - Optional configuration options
   *
   * -  `transformer`: A function to transform incoming values with.
   */
  constructor(t, a = {}) {
    this.canTrackVelocity = null, this.events = {}, this.updateAndNotify = (n) => {
      var r;
      const s = ya.now();
      if (this.updatedAt !== s && this.setPrevFrameValue(), this.prev = this.current, this.setCurrent(n), this.current !== this.prev && ((r = this.events.change) == null || r.notify(this.current), this.dependents))
        for (const i of this.dependents)
          i.dirty();
    }, this.hasAnimated = !1, this.setCurrent(t), this.owner = a.owner;
  }
  setCurrent(t) {
    this.current = t, this.updatedAt = ya.now(), this.canTrackVelocity === null && t !== void 0 && (this.canTrackVelocity = EF(this.current));
  }
  setPrevFrameValue(t = this.current) {
    this.prevFrameValue = t, this.prevUpdatedAt = this.updatedAt;
  }
  /**
   * Adds a function that will be notified when the `MotionValue` is updated.
   *
   * It returns a function that, when called, will cancel the subscription.
   *
   * When calling `onChange` inside a React component, it should be wrapped with the
   * `useEffect` hook. As it returns an unsubscribe function, this should be returned
   * from the `useEffect` function to ensure you don't add duplicate subscribers..
   *
   * ```jsx
   * export const MyComponent = () => {
   *   const x = useMotionValue(0)
   *   const y = useMotionValue(0)
   *   const opacity = useMotionValue(1)
   *
   *   useEffect(() => {
   *     function updateOpacity() {
   *       const maxXY = Math.max(x.get(), y.get())
   *       const newOpacity = transform(maxXY, [0, 100], [1, 0])
   *       opacity.set(newOpacity)
   *     }
   *
   *     const unsubscribeX = x.on("change", updateOpacity)
   *     const unsubscribeY = y.on("change", updateOpacity)
   *
   *     return () => {
   *       unsubscribeX()
   *       unsubscribeY()
   *     }
   *   }, [])
   *
   *   return <motion.div style={{ x }} />
   * }
   * ```
   *
   * @param subscriber - A function that receives the latest value.
   * @returns A function that, when called, will cancel this subscription.
   *
   * @deprecated
   */
  onChange(t) {
    return process.env.NODE_ENV !== "production" && ap(!1, 'value.onChange(callback) is deprecated. Switch to value.on("change", callback).'), this.on("change", t);
  }
  on(t, a) {
    this.events[t] || (this.events[t] = new rp());
    const n = this.events[t].add(a);
    return t === "change" ? () => {
      n(), st.read(() => {
        this.events.change.getSize() || this.stop();
      });
    } : n;
  }
  clearListeners() {
    for (const t in this.events)
      this.events[t].clear();
  }
  /**
   * Attaches a passive effect to the `MotionValue`.
   */
  attach(t, a) {
    this.passiveEffect = t, this.stopPassiveEffect = a;
  }
  /**
   * Sets the state of the `MotionValue`.
   *
   * @remarks
   *
   * ```jsx
   * const x = useMotionValue(0)
   * x.set(10)
   * ```
   *
   * @param latest - Latest value to set.
   * @param render - Whether to notify render subscribers. Defaults to `true`
   *
   * @public
   */
  set(t) {
    this.passiveEffect ? this.passiveEffect(t, this.updateAndNotify) : this.updateAndNotify(t);
  }
  setWithVelocity(t, a, n) {
    this.set(a), this.prev = void 0, this.prevFrameValue = t, this.prevUpdatedAt = this.updatedAt - n;
  }
  /**
   * Set the state of the `MotionValue`, stopping any active animations,
   * effects, and resets velocity to `0`.
   */
  jump(t, a = !0) {
    this.updateAndNotify(t), this.prev = t, this.prevUpdatedAt = this.prevFrameValue = void 0, a && this.stop(), this.stopPassiveEffect && this.stopPassiveEffect();
  }
  dirty() {
    var t;
    (t = this.events.change) == null || t.notify(this.current);
  }
  addDependent(t) {
    this.dependents || (this.dependents = /* @__PURE__ */ new Set()), this.dependents.add(t);
  }
  removeDependent(t) {
    this.dependents && this.dependents.delete(t);
  }
  /**
   * Returns the latest state of `MotionValue`
   *
   * @returns - The latest state of `MotionValue`
   *
   * @public
   */
  get() {
    return Gn.current && Gn.current.push(this), this.current;
  }
  /**
   * @public
   */
  getPrevious() {
    return this.prev;
  }
  /**
   * Returns the latest velocity of `MotionValue`
   *
   * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.
   *
   * @public
   */
  getVelocity() {
    const t = ya.now();
    if (!this.canTrackVelocity || this.prevFrameValue === void 0 || t - this.updatedAt > gv)
      return 0;
    const a = Math.min(this.updatedAt - this.prevUpdatedAt, gv);
    return sp(parseFloat(this.current) - parseFloat(this.prevFrameValue), a);
  }
  /**
   * Registers a new animation to control this `MotionValue`. Only one
   * animation can drive a `MotionValue` at one time.
   *
   * ```jsx
   * value.start()
   * ```
   *
   * @param animation - A function that starts the provided animation
   */
  start(t) {
    return this.stop(), new Promise((a) => {
      this.hasAnimated = !0, this.animation = t(a), this.events.animationStart && this.events.animationStart.notify();
    }).then(() => {
      this.events.animationComplete && this.events.animationComplete.notify(), this.clearAnimation();
    });
  }
  /**
   * Stop the currently active animation.
   *
   * @public
   */
  stop() {
    this.animation && (this.animation.stop(), this.events.animationCancel && this.events.animationCancel.notify()), this.clearAnimation();
  }
  /**
   * Returns `true` if this value is currently animating.
   *
   * @public
   */
  isAnimating() {
    return !!this.animation;
  }
  clearAnimation() {
    delete this.animation;
  }
  /**
   * Destroy and clean up subscribers to this `MotionValue`.
   *
   * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically
   * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually
   * created a `MotionValue` via the `motionValue` function.
   *
   * @public
   */
  destroy() {
    var t, a;
    (t = this.dependents) == null || t.clear(), (a = this.events.destroy) == null || a.notify(), this.clearListeners(), this.stop(), this.stopPassiveEffect && this.stopPassiveEffect();
  }
}
function Ma(e, t) {
  return new TF(e, t);
}
function BF(e, t, a) {
  for (const n in t) {
    const r = t[n], s = a[n];
    if (Tt(r))
      e.addValue(n, r);
    else if (Tt(s))
      e.addValue(n, Ma(r, { owner: e }));
    else if (s !== r)
      if (e.hasValue(n)) {
        const i = e.getValue(n);
        i.liveStyle === !0 ? i.jump(r) : i.hasAnimated || i.set(r);
      } else {
        const i = e.getStaticValue(n);
        e.addValue(n, Ma(i !== void 0 ? i : r, { owner: e }));
      }
  }
  for (const n in a)
    t[n] === void 0 && e.removeValue(n);
  return t;
}
function vv(e) {
  const t = [{}, {}];
  return e?.values.forEach((a, n) => {
    t[0][n] = a.get(), t[1][n] = a.getVelocity();
  }), t;
}
function R0(e, t, a, n) {
  if (typeof t == "function") {
    const [r, s] = vv(n);
    t = t(a !== void 0 ? a : e.custom, r, s);
  }
  if (typeof t == "string" && (t = e.variants && e.variants[t]), typeof t == "function") {
    const [r, s] = vv(n);
    t = t(a !== void 0 ? a : e.custom, r, s);
  }
  return t;
}
function PF(e) {
  for (let t = 1; t < e.length; t++)
    e[t] ?? (e[t] = e[t - 1]);
}
const br = (e) => e * 180 / Math.PI, Qd = (e) => {
  const t = br(Math.atan2(e[1], e[0]));
  return Zd(t);
}, DF = {
  x: 4,
  y: 5,
  translateX: 4,
  translateY: 5,
  scaleX: 0,
  scaleY: 3,
  scale: (e) => (Math.abs(e[0]) + Math.abs(e[3])) / 2,
  rotate: Qd,
  rotateZ: Qd,
  skewX: (e) => br(Math.atan(e[1])),
  skewY: (e) => br(Math.atan(e[2])),
  skew: (e) => (Math.abs(e[1]) + Math.abs(e[2])) / 2
}, Zd = (e) => (e = e % 360, e < 0 && (e += 360), e), hv = Qd, mv = (e) => Math.sqrt(e[0] * e[0] + e[1] * e[1]), yv = (e) => Math.sqrt(e[4] * e[4] + e[5] * e[5]), MF = {
  x: 12,
  y: 13,
  z: 14,
  translateX: 12,
  translateY: 13,
  translateZ: 14,
  scaleX: mv,
  scaleY: yv,
  scale: (e) => (mv(e) + yv(e)) / 2,
  rotateX: (e) => Zd(br(Math.atan2(e[6], e[5]))),
  rotateY: (e) => Zd(br(Math.atan2(-e[2], e[0]))),
  rotateZ: hv,
  rotate: hv,
  skewX: (e) => br(Math.atan(e[4])),
  skewY: (e) => br(Math.atan(e[1])),
  skew: (e) => (Math.abs(e[1]) + Math.abs(e[4])) / 2
};
function ec(e) {
  return e.includes("scale") ? 1 : 0;
}
function tc(e, t) {
  if (!e || e === "none")
    return ec(t);
  const a = e.match(/^matrix3d\(([-\d.e\s,]+)\)$/u);
  let n, r;
  if (a)
    n = MF, r = a;
  else {
    const o = e.match(/^matrix\(([-\d.e\s,]+)\)$/u);
    n = DF, r = o;
  }
  if (!r)
    return ec(t);
  const s = n[t], i = r[1].split(",").map(LF);
  return typeof s == "function" ? s(i) : i[s];
}
const RF = (e, t) => {
  const { transform: a = "none" } = getComputedStyle(e);
  return tc(a, t);
};
function LF(e) {
  return parseFloat(e.trim());
}
const Fs = [
  "transformPerspective",
  "x",
  "y",
  "z",
  "translateX",
  "translateY",
  "translateZ",
  "scale",
  "scaleX",
  "scaleY",
  "rotate",
  "rotateX",
  "rotateY",
  "rotateZ",
  "skew",
  "skewX",
  "skewY"
], zs = new Set(Fs), gn = (e, t, a) => a > t ? t : a < e ? e : a, qs = {
  test: (e) => typeof e == "number",
  parse: parseFloat,
  transform: (e) => e
}, $i = {
  ...qs,
  transform: (e) => gn(0, 1, e)
}, Co = {
  ...qs,
  default: 1
}, bv = (e) => e === qs || e === Ve, OF = /* @__PURE__ */ new Set(["x", "y", "z"]), FF = Fs.filter((e) => !OF.has(e));
function zF(e) {
  const t = [];
  return FF.forEach((a) => {
    const n = e.getValue(a);
    n !== void 0 && (t.push([a, n.get()]), n.set(a.startsWith("scale") ? 1 : 0));
  }), t;
}
const _r = {
  // Dimensions
  width: ({ x: e }, { paddingLeft: t = "0", paddingRight: a = "0" }) => e.max - e.min - parseFloat(t) - parseFloat(a),
  height: ({ y: e }, { paddingTop: t = "0", paddingBottom: a = "0" }) => e.max - e.min - parseFloat(t) - parseFloat(a),
  top: (e, { top: t }) => parseFloat(t),
  left: (e, { left: t }) => parseFloat(t),
  bottom: ({ y: e }, { top: t }) => parseFloat(t) + (e.max - e.min),
  right: ({ x: e }, { left: t }) => parseFloat(t) + (e.max - e.min),
  // Transform
  x: (e, { transform: t }) => tc(t, "x"),
  y: (e, { transform: t }) => tc(t, "y")
};
_r.translateX = _r.x;
_r.translateY = _r.y;
const kr = /* @__PURE__ */ new Set();
let ac = !1, nc = !1, rc = !1;
function L0() {
  if (nc) {
    const e = Array.from(kr).filter((n) => n.needsMeasurement), t = new Set(e.map((n) => n.element)), a = /* @__PURE__ */ new Map();
    t.forEach((n) => {
      const r = zF(n);
      r.length && (a.set(n, r), n.render());
    }), e.forEach((n) => n.measureInitialState()), t.forEach((n) => {
      n.render();
      const r = a.get(n);
      r && r.forEach(([s, i]) => {
        var o;
        (o = n.getValue(s)) == null || o.set(i);
      });
    }), e.forEach((n) => n.measureEndState()), e.forEach((n) => {
      n.suspendedScrollY !== void 0 && window.scrollTo(0, n.suspendedScrollY);
    });
  }
  nc = !1, ac = !1, kr.forEach((e) => e.complete(rc)), kr.clear();
}
function O0() {
  kr.forEach((e) => {
    e.readKeyframes(), e.needsMeasurement && (nc = !0);
  });
}
function qF() {
  rc = !0, O0(), L0(), rc = !1;
}
class ip {
  constructor(t, a, n, r, s, i = !1) {
    this.state = "pending", this.isAsync = !1, this.needsMeasurement = !1, this.unresolvedKeyframes = [...t], this.onComplete = a, this.name = n, this.motionValue = r, this.element = s, this.isAsync = i;
  }
  scheduleResolve() {
    this.state = "scheduled", this.isAsync ? (kr.add(this), ac || (ac = !0, st.read(O0), st.resolveKeyframes(L0))) : (this.readKeyframes(), this.complete());
  }
  readKeyframes() {
    const { unresolvedKeyframes: t, name: a, element: n, motionValue: r } = this;
    if (t[0] === null) {
      const s = r?.get(), i = t[t.length - 1];
      if (s !== void 0)
        t[0] = s;
      else if (n && a) {
        const o = n.readValue(a, i);
        o != null && (t[0] = o);
      }
      t[0] === void 0 && (t[0] = i), r && s === void 0 && r.set(t[0]);
    }
    PF(t);
  }
  setFinalKeyframe() {
  }
  measureInitialState() {
  }
  renderEndStyles() {
  }
  measureEndState() {
  }
  complete(t = !1) {
    this.state = "complete", this.onComplete(this.unresolvedKeyframes, this.finalKeyframe, t), kr.delete(this);
  }
  cancel() {
    this.state === "scheduled" && (kr.delete(this), this.state = "pending");
  }
  resume() {
    this.state === "pending" && this.scheduleResolve();
  }
}
const F0 = (e) => /^-?(?:\d+(?:\.\d+)?|\.\d+)$/u.test(e), z0 = (e) => /^0[^.\s]+$/u.test(e), di = (e) => Math.round(e * 1e5) / 1e5, op = /-?(?:\d+(?:\.\d+)?|\.\d+)/gu;
function VF(e) {
  return e == null;
}
const NF = /^(?:#[\da-f]{3,8}|(?:rgb|hsl)a?\((?:-?[\d.]+%?[,\s]+){2}-?[\d.]+%?\s*(?:[,/]\s*)?(?:\b\d+(?:\.\d+)?|\.\d+)?%?\))$/iu, lp = (e, t) => (a) => !!(typeof a == "string" && NF.test(a) && a.startsWith(e) || t && !VF(a) && Object.prototype.hasOwnProperty.call(a, t)), q0 = (e, t, a) => (n) => {
  if (typeof n != "string")
    return n;
  const [r, s, i, o] = n.match(op);
  return {
    [e]: parseFloat(r),
    [t]: parseFloat(s),
    [a]: parseFloat(i),
    alpha: o !== void 0 ? parseFloat(o) : 1
  };
}, HF = (e) => gn(0, 255, e), Eu = {
  ...qs,
  transform: (e) => Math.round(HF(e))
}, wr = {
  test: /* @__PURE__ */ lp("rgb", "red"),
  parse: /* @__PURE__ */ q0("red", "green", "blue"),
  transform: ({ red: e, green: t, blue: a, alpha: n = 1 }) => "rgba(" + Eu.transform(e) + ", " + Eu.transform(t) + ", " + Eu.transform(a) + ", " + di($i.transform(n)) + ")"
};
function jF(e) {
  let t = "", a = "", n = "", r = "";
  return e.length > 5 ? (t = e.substring(1, 3), a = e.substring(3, 5), n = e.substring(5, 7), r = e.substring(7, 9)) : (t = e.substring(1, 2), a = e.substring(2, 3), n = e.substring(3, 4), r = e.substring(4, 5), t += t, a += a, n += n, r += r), {
    red: parseInt(t, 16),
    green: parseInt(a, 16),
    blue: parseInt(n, 16),
    alpha: r ? parseInt(r, 16) / 255 : 1
  };
}
const sc = {
  test: /* @__PURE__ */ lp("#"),
  parse: jF,
  transform: wr.transform
}, ts = {
  test: /* @__PURE__ */ lp("hsl", "hue"),
  parse: /* @__PURE__ */ q0("hue", "saturation", "lightness"),
  transform: ({ hue: e, saturation: t, lightness: a, alpha: n = 1 }) => "hsla(" + Math.round(e) + ", " + fn.transform(di(t)) + ", " + fn.transform(di(a)) + ", " + di($i.transform(n)) + ")"
}, Vt = {
  test: (e) => wr.test(e) || sc.test(e) || ts.test(e),
  parse: (e) => wr.test(e) ? wr.parse(e) : ts.test(e) ? ts.parse(e) : sc.parse(e),
  transform: (e) => typeof e == "string" ? e : e.hasOwnProperty("red") ? wr.transform(e) : ts.transform(e),
  getAnimatableNone: (e) => {
    const t = Vt.parse(e);
    return t.alpha = 0, Vt.transform(t);
  }
}, KF = /(?:#[\da-f]{3,8}|(?:rgb|hsl)a?\((?:-?[\d.]+%?[,\s]+){2}-?[\d.]+%?\s*(?:[,/]\s*)?(?:\b\d+(?:\.\d+)?|\.\d+)?%?\))/giu;
function GF(e) {
  var t, a;
  return isNaN(e) && typeof e == "string" && (((t = e.match(op)) == null ? void 0 : t.length) || 0) + (((a = e.match(KF)) == null ? void 0 : a.length) || 0) > 0;
}
const V0 = "number", N0 = "color", UF = "var", WF = "var(", wv = "${}", YF = /var\s*\(\s*--(?:[\w-]+\s*|[\w-]+\s*,(?:\s*[^)(\s]|\s*\((?:[^)(]|\([^)(]*\))*\))+\s*)\)|#[\da-f]{3,8}|(?:rgb|hsl)a?\((?:-?[\d.]+%?[,\s]+){2}-?[\d.]+%?\s*(?:[,/]\s*)?(?:\b\d+(?:\.\d+)?|\.\d+)?%?\)|-?(?:\d+(?:\.\d+)?|\.\d+)/giu;
function Ii(e) {
  const t = e.toString(), a = [], n = {
    color: [],
    number: [],
    var: []
  }, r = [];
  let s = 0;
  const o = t.replace(YF, (l) => (Vt.test(l) ? (n.color.push(s), r.push(N0), a.push(Vt.parse(l))) : l.startsWith(WF) ? (n.var.push(s), r.push(UF), a.push(l)) : (n.number.push(s), r.push(V0), a.push(parseFloat(l))), ++s, wv)).split(wv);
  return { values: a, split: o, indexes: n, types: r };
}
function H0(e) {
  return Ii(e).values;
}
function j0(e) {
  const { split: t, types: a } = Ii(e), n = t.length;
  return (r) => {
    let s = "";
    for (let i = 0; i < n; i++)
      if (s += t[i], r[i] !== void 0) {
        const o = a[i];
        o === V0 ? s += di(r[i]) : o === N0 ? s += Vt.transform(r[i]) : s += r[i];
      }
    return s;
  };
}
const XF = (e) => typeof e == "number" ? 0 : Vt.test(e) ? Vt.getAnimatableNone(e) : e;
function JF(e) {
  const t = H0(e);
  return j0(e)(t.map(XF));
}
const er = {
  test: GF,
  parse: H0,
  createTransformer: j0,
  getAnimatableNone: JF
}, QF = {
  test: (e) => e === "auto",
  parse: (e) => e
}, K0 = (e) => (t) => t.test(e), G0 = [qs, Ve, fn, jn, fF, cF, QF], Cv = (e) => G0.find(K0(e)), ZF = [...G0, Vt, er], ez = (e) => ZF.find(K0(e)), tz = /* @__PURE__ */ new Set(["brightness", "contrast", "saturate", "opacity"]);
function az(e) {
  const [t, a] = e.slice(0, -1).split("(");
  if (t === "drop-shadow")
    return e;
  const [n] = a.match(op) || [];
  if (!n)
    return e;
  const r = a.replace(n, "");
  let s = tz.has(t) ? 1 : 0;
  return n !== a && (s *= 100), t + "(" + s + r + ")";
}
const nz = /\b([a-z-]*)\(.*?\)/gu, ic = {
  ...er,
  getAnimatableNone: (e) => {
    const t = e.match(nz);
    return t ? t.map(az).join(" ") : e;
  }
}, xv = {
  ...qs,
  transform: Math.round
}, rz = {
  rotate: jn,
  rotateX: jn,
  rotateY: jn,
  rotateZ: jn,
  scale: Co,
  scaleX: Co,
  scaleY: Co,
  scaleZ: Co,
  skew: jn,
  skewX: jn,
  skewY: jn,
  distance: Ve,
  translateX: Ve,
  translateY: Ve,
  translateZ: Ve,
  x: Ve,
  y: Ve,
  z: Ve,
  perspective: Ve,
  transformPerspective: Ve,
  opacity: $i,
  originX: uv,
  originY: uv,
  originZ: Ve
}, up = {
  // Border props
  borderWidth: Ve,
  borderTopWidth: Ve,
  borderRightWidth: Ve,
  borderBottomWidth: Ve,
  borderLeftWidth: Ve,
  borderRadius: Ve,
  radius: Ve,
  borderTopLeftRadius: Ve,
  borderTopRightRadius: Ve,
  borderBottomRightRadius: Ve,
  borderBottomLeftRadius: Ve,
  // Positioning props
  width: Ve,
  maxWidth: Ve,
  height: Ve,
  maxHeight: Ve,
  top: Ve,
  right: Ve,
  bottom: Ve,
  left: Ve,
  // Spacing props
  padding: Ve,
  paddingTop: Ve,
  paddingRight: Ve,
  paddingBottom: Ve,
  paddingLeft: Ve,
  margin: Ve,
  marginTop: Ve,
  marginRight: Ve,
  marginBottom: Ve,
  marginLeft: Ve,
  // Misc
  backgroundPositionX: Ve,
  backgroundPositionY: Ve,
  ...rz,
  zIndex: xv,
  // SVG
  fillOpacity: $i,
  strokeOpacity: $i,
  numOctaves: xv
}, sz = {
  ...up,
  // Color props
  color: Vt,
  backgroundColor: Vt,
  outlineColor: Vt,
  fill: Vt,
  stroke: Vt,
  // Border props
  borderColor: Vt,
  borderTopColor: Vt,
  borderRightColor: Vt,
  borderBottomColor: Vt,
  borderLeftColor: Vt,
  filter: ic,
  WebkitFilter: ic
}, U0 = (e) => sz[e];
function W0(e, t) {
  let a = U0(e);
  return a !== ic && (a = er), a.getAnimatableNone ? a.getAnimatableNone(t) : void 0;
}
const { schedule: Y0 } = /* @__PURE__ */ I0(queueMicrotask, !1), Sv = [
  "AnimationStart",
  "AnimationComplete",
  "Update",
  "BeforeLayoutMeasure",
  "LayoutMeasure",
  "LayoutAnimationStart",
  "LayoutAnimationComplete"
];
class X0 {
  /**
   * This method takes React props and returns found MotionValues. For example, HTML
   * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.
   *
   * This isn't an abstract method as it needs calling in the constructor, but it is
   * intended to be one.
   */
  scrapeMotionValuesFromProps(t, a, n) {
    return {};
  }
  constructor({ parent: t, props: a, presenceContext: n, reducedMotionConfig: r, blockInitialAnimation: s, visualState: i }, o = {}) {
    this.current = null, this.children = /* @__PURE__ */ new Set(), this.isVariantNode = !1, this.isControllingVariants = !1, this.shouldReduceMotion = null, this.values = /* @__PURE__ */ new Map(), this.KeyframeResolver = ip, this.features = {}, this.valueSubscriptions = /* @__PURE__ */ new Map(), this.prevMotionValues = {}, this.events = {}, this.propEventSubscriptions = {}, this.notifyUpdate = () => this.notify("Update", this.latestValues), this.render = () => {
      this.current && (this.triggerBuild(), this.renderInstance(this.current, this.renderState, this.props.style, this.projection));
    }, this.renderScheduledAt = 0, this.scheduleRender = () => {
      const p = ya.now();
      this.renderScheduledAt < p && (this.renderScheduledAt = p, st.render(this.render, !1, !0));
    };
    const { latestValues: l, renderState: d } = i;
    this.latestValues = l, this.baseTarget = { ...l }, this.initialValues = a.initial ? { ...l } : {}, this.renderState = d, this.parent = t, this.props = a, this.presenceContext = n, this.depth = t ? t.depth + 1 : 0, this.reducedMotionConfig = r, this.options = o, this.blockInitialAnimation = !!s, this.isControllingVariants = M0(a), this.isVariantNode = IF(a), this.isVariantNode && (this.variantChildren = /* @__PURE__ */ new Set()), this.manuallyAnimateOnMount = !!(t && t.current);
    const { willChange: c, ...f } = this.scrapeMotionValuesFromProps(a, {}, this);
    for (const p in f) {
      const g = f[p];
      l[p] !== void 0 && Tt(g) && g.set(l[p]);
    }
  }
  mount(t) {
    var a;
    this.current = t, Br.set(t, this), this.projection && !this.projection.instance && this.projection.mount(t), this.parent && this.isVariantNode && !this.isControllingVariants && (this.removeFromVariantTree = this.parent.addVariantChild(this)), this.values.forEach((n, r) => this.bindToMotionValue(r, n)), D0.current || SF(), this.shouldReduceMotion = this.reducedMotionConfig === "never" ? !1 : this.reducedMotionConfig === "always" ? !0 : hl.current, process.env.NODE_ENV !== "production" && ap(this.shouldReduceMotion !== !0, "You have Reduced Motion enabled on your device. Animations may not appear as expected.", "reduced-motion-disabled"), (a = this.parent) == null || a.addChild(this), this.update(this.props, this.presenceContext);
  }
  unmount() {
    var t;
    this.projection && this.projection.unmount(), Fa(this.notifyUpdate), Fa(this.render), this.valueSubscriptions.forEach((a) => a()), this.valueSubscriptions.clear(), this.removeFromVariantTree && this.removeFromVariantTree(), (t = this.parent) == null || t.removeChild(this);
    for (const a in this.events)
      this.events[a].clear();
    for (const a in this.features) {
      const n = this.features[a];
      n && (n.unmount(), n.isMounted = !1);
    }
    this.current = null;
  }
  addChild(t) {
    this.children.add(t), this.enteringChildren ?? (this.enteringChildren = /* @__PURE__ */ new Set()), this.enteringChildren.add(t);
  }
  removeChild(t) {
    this.children.delete(t), this.enteringChildren && this.enteringChildren.delete(t);
  }
  bindToMotionValue(t, a) {
    this.valueSubscriptions.has(t) && this.valueSubscriptions.get(t)();
    const n = zs.has(t);
    n && this.onBindTransform && this.onBindTransform();
    const r = a.on("change", (i) => {
      this.latestValues[t] = i, this.props.onUpdate && st.preRender(this.notifyUpdate), n && this.projection && (this.projection.isTransformDirty = !0), this.scheduleRender();
    });
    let s;
    window.MotionCheckAppearSync && (s = window.MotionCheckAppearSync(this, t, a)), this.valueSubscriptions.set(t, () => {
      r(), s && s(), a.owner && a.stop();
    });
  }
  sortNodePosition(t) {
    return !this.current || !this.sortInstanceNodePosition || this.type !== t.type ? 0 : this.sortInstanceNodePosition(this.current, t.current);
  }
  updateFeatures() {
    let t = "animation";
    for (t in Xd) {
      const a = Xd[t];
      if (!a)
        continue;
      const { isEnabled: n, Feature: r } = a;
      if (!this.features[t] && r && n(this.props) && (this.features[t] = new r(this)), this.features[t]) {
        const s = this.features[t];
        s.isMounted ? s.update() : (s.mount(), s.isMounted = !0);
      }
    }
  }
  triggerBuild() {
    this.build(this.renderState, this.latestValues, this.props);
  }
  /**
   * Measure the current viewport box with or without transforms.
   * Only measures axis-aligned boxes, rotate and skew must be manually
   * removed with a re-render to work.
   */
  measureViewportBox() {
    return this.current ? this.measureInstanceViewportBox(this.current, this.props) : Pt();
  }
  getStaticValue(t) {
    return this.latestValues[t];
  }
  setStaticValue(t, a) {
    this.latestValues[t] = a;
  }
  /**
   * Update the provided props. Ensure any newly-added motion values are
   * added to our map, old ones removed, and listeners updated.
   */
  update(t, a) {
    (t.transformTemplate || this.props.transformTemplate) && this.scheduleRender(), this.prevProps = this.props, this.props = t, this.prevPresenceContext = this.presenceContext, this.presenceContext = a;
    for (let n = 0; n < Sv.length; n++) {
      const r = Sv[n];
      this.propEventSubscriptions[r] && (this.propEventSubscriptions[r](), delete this.propEventSubscriptions[r]);
      const s = "on" + r, i = t[s];
      i && (this.propEventSubscriptions[r] = this.on(r, i));
    }
    this.prevMotionValues = BF(this, this.scrapeMotionValuesFromProps(t, this.prevProps, this), this.prevMotionValues), this.handleChildMotionValue && this.handleChildMotionValue();
  }
  getProps() {
    return this.props;
  }
  /**
   * Returns the variant definition with a given name.
   */
  getVariant(t) {
    return this.props.variants ? this.props.variants[t] : void 0;
  }
  /**
   * Returns the defined default transition on this component.
   */
  getDefaultTransition() {
    return this.props.transition;
  }
  getTransformPagePoint() {
    return this.props.transformPagePoint;
  }
  getClosestVariantNode() {
    return this.isVariantNode ? this : this.parent ? this.parent.getClosestVariantNode() : void 0;
  }
  /**
   * Add a child visual element to our set of children.
   */
  addVariantChild(t) {
    const a = this.getClosestVariantNode();
    if (a)
      return a.variantChildren && a.variantChildren.add(t), () => a.variantChildren.delete(t);
  }
  /**
   * Add a motion value and bind it to this visual element.
   */
  addValue(t, a) {
    const n = this.values.get(t);
    a !== n && (n && this.removeValue(t), this.bindToMotionValue(t, a), this.values.set(t, a), this.latestValues[t] = a.get());
  }
  /**
   * Remove a motion value and unbind any active subscriptions.
   */
  removeValue(t) {
    this.values.delete(t);
    const a = this.valueSubscriptions.get(t);
    a && (a(), this.valueSubscriptions.delete(t)), delete this.latestValues[t], this.removeValueFromRenderState(t, this.renderState);
  }
  /**
   * Check whether we have a motion value for this key
   */
  hasValue(t) {
    return this.values.has(t);
  }
  getValue(t, a) {
    if (this.props.values && this.props.values[t])
      return this.props.values[t];
    let n = this.values.get(t);
    return n === void 0 && a !== void 0 && (n = Ma(a === null ? void 0 : a, { owner: this }), this.addValue(t, n)), n;
  }
  /**
   * If we're trying to animate to a previously unencountered value,
   * we need to check for it in our state and as a last resort read it
   * directly from the instance (which might have performance implications).
   */
  readValue(t, a) {
    let n = this.latestValues[t] !== void 0 || !this.current ? this.latestValues[t] : this.getBaseTargetFromProps(this.props, t) ?? this.readValueFromInstance(this.current, t, this.options);
    return n != null && (typeof n == "string" && (F0(n) || z0(n)) ? n = parseFloat(n) : !ez(n) && er.test(a) && (n = W0(t, a)), this.setBaseTarget(t, Tt(n) ? n.get() : n)), Tt(n) ? n.get() : n;
  }
  /**
   * Set the base target to later animate back to. This is currently
   * only hydrated on creation and when we first read a value.
   */
  setBaseTarget(t, a) {
    this.baseTarget[t] = a;
  }
  /**
   * Find the base target for a value thats been removed from all animation
   * props.
   */
  getBaseTarget(t) {
    var a;
    const { initial: n } = this.props;
    let r;
    if (typeof n == "string" || typeof n == "object") {
      const i = R0(this.props, n, (a = this.presenceContext) == null ? void 0 : a.custom);
      i && (r = i[t]);
    }
    if (n && r !== void 0)
      return r;
    const s = this.getBaseTargetFromProps(this.props, t);
    return s !== void 0 && !Tt(s) ? s : this.initialValues[t] !== void 0 && r === void 0 ? void 0 : this.baseTarget[t];
  }
  on(t, a) {
    return this.events[t] || (this.events[t] = new rp()), this.events[t].add(a);
  }
  notify(t, ...a) {
    this.events[t] && this.events[t].notify(...a);
  }
  scheduleRenderMicrotask() {
    Y0.render(this.render);
  }
}
const J0 = /* @__PURE__ */ new Set([
  "width",
  "height",
  "top",
  "left",
  "right",
  "bottom",
  ...Fs
]);
let Ji = () => {
}, vn = () => {
};
process.env.NODE_ENV !== "production" && (Ji = (e, t, a) => {
  !e && typeof console < "u" && console.warn(Jd(t, a));
}, vn = (e, t, a) => {
  if (!e)
    throw new Error(Jd(t, a));
});
const iz = (
  // eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words
  /^var\(--(?:([\w-]+)|([\w-]+), ?([a-zA-Z\d ()%#.,-]+))\)/u
);
function oz(e) {
  const t = iz.exec(e);
  if (!t)
    return [,];
  const [, a, n, r] = t;
  return [`--${a ?? n}`, r];
}
const lz = 4;
function Q0(e, t, a = 1) {
  vn(a <= lz, `Max CSS variable fallback depth detected in property "${e}". This may indicate a circular fallback dependency.`, "max-css-var-depth");
  const [n, r] = oz(e);
  if (!n)
    return;
  const s = window.getComputedStyle(t).getPropertyValue(n);
  if (s) {
    const i = s.trim();
    return F0(i) ? parseFloat(i) : i;
  }
  return Zf(r) ? Q0(r, t, a + 1) : r;
}
function uz(e) {
  return typeof e == "number" ? e === 0 : e !== null ? e === "none" || e === "0" || z0(e) : !0;
}
const dz = /* @__PURE__ */ new Set(["auto", "none", "0"]);
function cz(e, t, a) {
  let n = 0, r;
  for (; n < e.length && !r; ) {
    const s = e[n];
    typeof s == "string" && !dz.has(s) && Ii(s).values.length && (r = e[n]), n++;
  }
  if (r && a)
    for (const s of t)
      e[s] = W0(a, r);
}
class fz extends ip {
  constructor(t, a, n, r, s) {
    super(t, a, n, r, s, !0);
  }
  readKeyframes() {
    const { unresolvedKeyframes: t, element: a, name: n } = this;
    if (!a || !a.current)
      return;
    super.readKeyframes();
    for (let l = 0; l < t.length; l++) {
      let d = t[l];
      if (typeof d == "string" && (d = d.trim(), Zf(d))) {
        const c = Q0(d, a.current);
        c !== void 0 && (t[l] = c), l === t.length - 1 && (this.finalKeyframe = d);
      }
    }
    if (this.resolveNoneKeyframes(), !J0.has(n) || t.length !== 2)
      return;
    const [r, s] = t, i = Cv(r), o = Cv(s);
    if (i !== o)
      if (bv(i) && bv(o))
        for (let l = 0; l < t.length; l++) {
          const d = t[l];
          typeof d == "string" && (t[l] = parseFloat(d));
        }
      else _r[n] && (this.needsMeasurement = !0);
  }
  resolveNoneKeyframes() {
    const { unresolvedKeyframes: t, name: a } = this, n = [];
    for (let r = 0; r < t.length; r++)
      (t[r] === null || uz(t[r])) && n.push(r);
    n.length && cz(t, n, a);
  }
  measureInitialState() {
    const { element: t, unresolvedKeyframes: a, name: n } = this;
    if (!t || !t.current)
      return;
    n === "height" && (this.suspendedScrollY = window.pageYOffset), this.measuredOrigin = _r[n](t.measureViewportBox(), window.getComputedStyle(t.current)), a[0] = this.measuredOrigin;
    const r = a[a.length - 1];
    r !== void 0 && t.getValue(n, r).jump(r, !1);
  }
  measureEndState() {
    var t;
    const { element: a, name: n, unresolvedKeyframes: r } = this;
    if (!a || !a.current)
      return;
    const s = a.getValue(n);
    s && s.jump(this.measuredOrigin, !1);
    const i = r.length - 1, o = r[i];
    r[i] = _r[n](a.measureViewportBox(), window.getComputedStyle(a.current)), o !== null && this.finalKeyframe === void 0 && (this.finalKeyframe = o), (t = this.removedTransforms) != null && t.length && this.removedTransforms.forEach(([l, d]) => {
      a.getValue(l).set(d);
    }), this.resolveNoneKeyframes();
  }
}
class Z0 extends X0 {
  constructor() {
    super(...arguments), this.KeyframeResolver = fz;
  }
  sortInstanceNodePosition(t, a) {
    return t.compareDocumentPosition(a) & 2 ? 1 : -1;
  }
  getBaseTargetFromProps(t, a) {
    return t.style ? t.style[a] : void 0;
  }
  removeValueFromRenderState(t, { vars: a, style: n }) {
    delete a[t], delete n[t];
  }
  handleChildMotionValue() {
    this.childSubscription && (this.childSubscription(), delete this.childSubscription);
    const { children: t } = this.props;
    Tt(t) && (this.childSubscription = t.on("change", (a) => {
      this.current && (this.current.textContent = `${a}`);
    }));
  }
}
const ew = (e, t) => t && typeof e == "number" ? t.transform(e) : e, pz = {
  x: "translateX",
  y: "translateY",
  z: "translateZ",
  transformPerspective: "perspective"
}, gz = Fs.length;
function vz(e, t, a) {
  let n = "", r = !0;
  for (let s = 0; s < gz; s++) {
    const i = Fs[s], o = e[i];
    if (o === void 0)
      continue;
    let l = !0;
    if (typeof o == "number" ? l = o === (i.startsWith("scale") ? 1 : 0) : l = parseFloat(o) === 0, !l || a) {
      const d = ew(o, up[i]);
      if (!l) {
        r = !1;
        const c = pz[i] || i;
        n += `${c}(${d}) `;
      }
      a && (t[i] = d);
    }
  }
  return n = n.trim(), a ? n = a(t, r ? "" : n) : r && (n = "none"), n;
}
function tw(e, t, a) {
  const { style: n, vars: r, transformOrigin: s } = e;
  let i = !1, o = !1;
  for (const l in t) {
    const d = t[l];
    if (zs.has(l)) {
      i = !0;
      continue;
    } else if (Qf(l)) {
      r[l] = d;
      continue;
    } else {
      const c = ew(d, up[l]);
      l.startsWith("origin") ? (o = !0, s[l] = c) : n[l] = c;
    }
  }
  if (t.transform || (i || a ? n.transform = vz(t, e.transform, a) : n.transform && (n.transform = "none")), o) {
    const { originX: l = "50%", originY: d = "50%", originZ: c = 0 } = s;
    n.transformOrigin = `${l} ${d} ${c}`;
  }
}
function aw(e, { style: t, vars: a }, n, r) {
  const s = e.style;
  let i;
  for (i in t)
    s[i] = t[i];
  r?.applyProjectionStyles(s, n);
  for (i in a)
    s.setProperty(i, a[i]);
}
function hz(e, { layout: t, layoutId: a }) {
  return zs.has(e) || e.startsWith("origin") || (t || a !== void 0) && (!!Ai[e] || e === "opacity");
}
function nw(e, t, a) {
  var n;
  const { style: r } = e, s = {};
  for (const i in r)
    (Tt(r[i]) || t.style && Tt(t.style[i]) || hz(i, e) || ((n = a?.getValue(i)) == null ? void 0 : n.liveStyle) !== void 0) && (s[i] = r[i]);
  return s;
}
function mz(e) {
  return window.getComputedStyle(e);
}
class rw extends Z0 {
  constructor() {
    super(...arguments), this.type = "html", this.renderInstance = aw;
  }
  readValueFromInstance(t, a) {
    var n;
    if (zs.has(a))
      return (n = this.projection) != null && n.isProjecting ? ec(a) : RF(t, a);
    {
      const r = mz(t), s = (Qf(a) ? r.getPropertyValue(a) : r[a]) || 0;
      return typeof s == "string" ? s.trim() : s;
    }
  }
  measureInstanceViewportBox(t, { transformPagePoint: a }) {
    return CF(t, a);
  }
  build(t, a, n) {
    tw(t, a, n.transformTemplate);
  }
  scrapeMotionValuesFromProps(t, a, n) {
    return nw(t, a, n);
  }
}
const dp = (e) => e.replace(/([a-z])([A-Z])/gu, "$1-$2").toLowerCase(), yz = {
  offset: "stroke-dashoffset",
  array: "stroke-dasharray"
}, bz = {
  offset: "strokeDashoffset",
  array: "strokeDasharray"
};
function wz(e, t, a = 1, n = 0, r = !0) {
  e.pathLength = 1;
  const s = r ? yz : bz;
  e[s.offset] = Ve.transform(-n);
  const i = Ve.transform(t), o = Ve.transform(a);
  e[s.array] = `${i} ${o}`;
}
function Cz(e, {
  attrX: t,
  attrY: a,
  attrScale: n,
  pathLength: r,
  pathSpacing: s = 1,
  pathOffset: i = 0,
  // This is object creation, which we try to avoid per-frame.
  ...o
}, l, d, c) {
  if (tw(e, o, d), l) {
    e.style.viewBox && (e.attrs.viewBox = e.style.viewBox);
    return;
  }
  e.attrs = e.style, e.style = {};
  const { attrs: f, style: p } = e;
  f.transform && (p.transform = f.transform, delete f.transform), (p.transform || f.transformOrigin) && (p.transformOrigin = f.transformOrigin ?? "50% 50%", delete f.transformOrigin), p.transform && (p.transformBox = c?.transformBox ?? "fill-box", delete f.transformBox), t !== void 0 && (f.x = t), a !== void 0 && (f.y = a), n !== void 0 && (f.scale = n), r !== void 0 && wz(f, r, s, i, !1);
}
const sw = /* @__PURE__ */ new Set([
  "baseFrequency",
  "diffuseConstant",
  "kernelMatrix",
  "kernelUnitLength",
  "keySplines",
  "keyTimes",
  "limitingConeAngle",
  "markerHeight",
  "markerWidth",
  "numOctaves",
  "targetX",
  "targetY",
  "surfaceScale",
  "specularConstant",
  "specularExponent",
  "stdDeviation",
  "tableValues",
  "viewBox",
  "gradientTransform",
  "pathLength",
  "startOffset",
  "textLength",
  "lengthAdjust"
]), xz = (e) => typeof e == "string" && e.toLowerCase() === "svg";
function Sz(e, t, a, n) {
  aw(e, t, void 0, n);
  for (const r in t.attrs)
    e.setAttribute(sw.has(r) ? r : dp(r), t.attrs[r]);
}
function _z(e, t, a) {
  const n = nw(e, t, a);
  for (const r in e)
    if (Tt(e[r]) || Tt(t[r])) {
      const s = Fs.indexOf(r) !== -1 ? "attr" + r.charAt(0).toUpperCase() + r.substring(1) : r;
      n[s] = e[r];
    }
  return n;
}
class iw extends Z0 {
  constructor() {
    super(...arguments), this.type = "svg", this.isSVGTag = !1, this.measureInstanceViewportBox = Pt;
  }
  getBaseTargetFromProps(t, a) {
    return t[a];
  }
  readValueFromInstance(t, a) {
    if (zs.has(a)) {
      const n = U0(a);
      return n && n.default || 0;
    }
    return a = sw.has(a) ? a : dp(a), t.getAttribute(a);
  }
  scrapeMotionValuesFromProps(t, a, n) {
    return _z(t, a, n);
  }
  build(t, a, n) {
    Cz(t, a, this.isSVGTag, n.transformTemplate, n.style);
  }
  renderInstance(t, a, n, r) {
    Sz(t, a, n, r);
  }
  mount(t) {
    this.isSVGTag = xz(t.tagName), super.mount(t);
  }
}
function kz(e, t) {
  return B0(e) ? new iw(t) : new rw(t);
}
function Az(e, t, a, n = 0, r = 1) {
  const s = Array.from(e).sort((c, f) => c.sortNodePosition(f)), i = s.indexOf(t), o = e.size, l = (o - 1) * n, d = typeof a == "function";
  return i === s.length - 1 && (t.parent.enteringChildren = void 0), d ? a(i, o) : r === 1 ? i * n : l - i * n;
}
function cp(e) {
  return typeof e == "object" && !Array.isArray(e);
}
function Zl(e, t, a) {
  if (e instanceof EventTarget)
    return [e];
  if (typeof e == "string") {
    let n = document;
    const r = a?.[e] ?? n.querySelectorAll(e);
    return r ? Array.from(r) : [];
  }
  return Array.from(e);
}
function ow(e, t, a, n) {
  return typeof e == "string" && cp(t) ? Zl(e, a, n) : e instanceof NodeList ? Array.from(e) : Array.isArray(e) ? e : [e];
}
function $z(e, t, a) {
  return e * (t + 1);
}
function _v(e, t, a, n) {
  return typeof t == "number" ? t : t.startsWith("-") || t.startsWith("+") ? Math.max(0, e + parseFloat(t)) : t === "<" ? a : t.startsWith("<") ? Math.max(0, a + parseFloat(t.slice(1))) : n.get(t) ?? e;
}
const bt = (e, t, a) => e + (t - e) * a, Iz = (e, t, a) => {
  const n = t - e;
  return ((a - e) % n + n) % n + e;
}, lw = (e) => Array.isArray(e) && typeof e[0] != "number";
function uw(e, t) {
  return lw(e) ? e[Iz(0, e.length, t)] : e;
}
function Ez(e, t, a) {
  for (let n = 0; n < e.length; n++) {
    const r = e[n];
    r.at > t && r.at < a && (Ql(e, r), n--);
  }
}
function Tz(e, t, a, n, r, s) {
  Ez(e, r, s);
  for (let i = 0; i < t.length; i++)
    e.push({
      value: t[i],
      at: bt(r, s, n[i]),
      easing: uw(a, i)
    });
}
function Bz(e, t) {
  for (let a = 0; a < e.length; a++)
    e[a] = e[a] / (t + 1);
}
function Pz(e, t) {
  return e.at === t.at ? e.value === null ? 1 : t.value === null ? -1 : 0 : e.at - t.at;
}
const Pr = /* @__NO_SIDE_EFFECTS__ */ (e, t, a) => {
  const n = t - e;
  return n === 0 ? 1 : (a - e) / n;
};
function dw(e, t) {
  const a = e[e.length - 1];
  for (let n = 1; n <= t; n++) {
    const r = /* @__PURE__ */ Pr(0, t, n);
    e.push(bt(a, 1, r));
  }
}
function fp(e) {
  const t = [0];
  return dw(t, e.length - 1), t;
}
const ml = 2e4;
function pp(e) {
  let t = 0;
  const a = 50;
  let n = e.next(t);
  for (; !n.done && t < ml; )
    t += a, n = e.next(t);
  return t >= ml ? 1 / 0 : t;
}
function cw(e, t = 100, a) {
  const n = a({ ...e, keyframes: [0, t] }), r = Math.min(pp(n), ml);
  return {
    type: "keyframes",
    ease: (s) => n.next(r * s).value / t,
    duration: /* @__PURE__ */ cn(r)
  };
}
function gp(e) {
  return typeof e == "function" && "applyToOptions" in e;
}
const Dz = "easeInOut", Mz = 20;
function Rz(e, { defaultTransition: t = {}, ...a } = {}, n, r) {
  const s = t.duration || 0.3, i = /* @__PURE__ */ new Map(), o = /* @__PURE__ */ new Map(), l = {}, d = /* @__PURE__ */ new Map();
  let c = 0, f = 0, p = 0;
  for (let g = 0; g < e.length; g++) {
    const v = e[g];
    if (typeof v == "string") {
      d.set(v, f);
      continue;
    } else if (!Array.isArray(v)) {
      d.set(v.name, _v(f, v.at, c, d));
      continue;
    }
    let [m, y, x = {}] = v;
    x.at !== void 0 && (f = _v(f, x.at, c, d));
    let b = 0;
    const C = (w, $, B, I = 0, E = 0) => {
      const P = Lz(w), { delay: R = 0, times: F = fp(P), type: H = "keyframes", repeat: j, repeatType: K, repeatDelay: z = 0, ...G } = $;
      let { ease: Y = t.ease || "easeOut", duration: q } = $;
      const Q = typeof R == "function" ? R(I, E) : R, se = P.length, ce = gp(H) ? H : r?.[H || "keyframes"];
      if (se <= 2 && ce) {
        let Le = 100;
        if (se === 2 && zz(P)) {
          const ae = P[1] - P[0];
          Le = Math.abs(ae);
        }
        const Ye = { ...G };
        q !== void 0 && (Ye.duration = /* @__PURE__ */ La(q));
        const ne = cw(Ye, Le, ce);
        Y = ne.ease, q = ne.duration;
      }
      q ?? (q = s);
      const oe = f + Q;
      F.length === 1 && F[0] === 0 && (F[1] = 1);
      const xe = F.length - P.length;
      if (xe > 0 && dw(F, xe), P.length === 1 && P.unshift(null), j) {
        vn(j < Mz, "Repeat count too high, must be less than 20", "repeat-count-high"), q = $z(q, j);
        const Le = [...P], Ye = [...F];
        Y = Array.isArray(Y) ? [...Y] : [Y];
        const ne = [...Y];
        for (let ae = 0; ae < j; ae++) {
          P.push(...Le);
          for (let be = 0; be < Le.length; be++)
            F.push(Ye[be] + (ae + 1)), Y.push(be === 0 ? "linear" : uw(ne, be - 1));
        }
        Bz(F, j);
      }
      const $e = oe + q;
      Tz(B, P, Y, F, oe, $e), b = Math.max(Q + q, b), p = Math.max($e, p);
    };
    if (Tt(m)) {
      const w = kv(m, o);
      C(y, x, Av("default", w));
    } else {
      const w = ow(m, y, n, l), $ = w.length;
      for (let B = 0; B < $; B++) {
        y = y, x = x;
        const I = w[B], E = kv(I, o);
        for (const P in y)
          C(y[P], Oz(x, P), Av(P, E), B, $);
      }
    }
    c = f, f += b;
  }
  return o.forEach((g, v) => {
    for (const m in g) {
      const y = g[m];
      y.sort(Pz);
      const x = [], b = [], C = [];
      for (let $ = 0; $ < y.length; $++) {
        const { at: B, value: I, easing: E } = y[$];
        x.push(I), b.push(/* @__PURE__ */ Pr(0, p, B)), C.push(E || "easeOut");
      }
      b[0] !== 0 && (b.unshift(0), x.unshift(x[0]), C.unshift(Dz)), b[b.length - 1] !== 1 && (b.push(1), x.push(null)), i.has(v) || i.set(v, {
        keyframes: {},
        transition: {}
      });
      const w = i.get(v);
      w.keyframes[m] = x, w.transition[m] = {
        ...t,
        duration: p,
        ease: C,
        times: b,
        ...a
      };
    }
  }), i;
}
function kv(e, t) {
  return !t.has(e) && t.set(e, {}), t.get(e);
}
function Av(e, t) {
  return t[e] || (t[e] = []), t[e];
}
function Lz(e) {
  return Array.isArray(e) ? e : [e];
}
function Oz(e, t) {
  return e && e[t] ? {
    ...e,
    ...e[t]
  } : { ...e };
}
const Fz = (e) => typeof e == "number", zz = (e) => e.every(Fz), qz = (e) => Array.isArray(e);
function Vz(e, t, a) {
  const n = e.getProps();
  return R0(n, t, n.custom, e);
}
function Nz(e, t, a) {
  e.hasValue(t) ? e.getValue(t).set(a) : e.addValue(t, Ma(a));
}
function Hz(e) {
  return qz(e) ? e[e.length - 1] || 0 : e;
}
function jz(e, t) {
  const a = Vz(e, t);
  let { transitionEnd: n = {}, transition: r = {}, ...s } = a || {};
  s = { ...s, ...n };
  for (const i in s) {
    const o = Hz(s[i]);
    Nz(e, i, o);
  }
}
function Kz(e) {
  return !!(Tt(e) && e.add);
}
function Gz(e, t) {
  const a = e.getValue("willChange");
  if (Kz(a))
    return a.add(t);
  if (!a && Dn.WillChange) {
    const n = new Dn.WillChange("auto");
    e.addValue("willChange", n), n.add(t);
  }
}
const Uz = "framerAppearId", Wz = "data-" + dp(Uz);
function fw(e) {
  return e.props[Wz];
}
const Yz = (e) => e !== null;
function Xz(e, { repeat: t, repeatType: a = "loop" }, n) {
  const r = e.filter(Yz), s = t && a !== "loop" && t % 2 === 1 ? 0 : r.length - 1;
  return r[s];
}
const Jz = {
  type: "spring",
  stiffness: 500,
  damping: 25,
  restSpeed: 10
}, Qz = (e) => ({
  type: "spring",
  stiffness: 550,
  damping: e === 0 ? 2 * Math.sqrt(550) : 30,
  restSpeed: 10
}), Zz = {
  type: "keyframes",
  duration: 0.8
}, eq = {
  type: "keyframes",
  ease: [0.25, 0.1, 0.35, 1],
  duration: 0.3
}, tq = (e, { keyframes: t }) => t.length > 2 ? Zz : zs.has(e) ? e.startsWith("scale") ? Qz(t[1]) : Jz : eq;
function aq({ when: e, delay: t, delayChildren: a, staggerChildren: n, staggerDirection: r, repeat: s, repeatType: i, repeatDelay: o, from: l, elapsed: d, ...c }) {
  return !!Object.keys(c).length;
}
function vp(e, t) {
  return e?.[t] ?? e?.default ?? e;
}
function oc(e) {
  e.duration = 0, e.type;
}
function Tu(e, t, a) {
  return a < 0 && (a += 1), a > 1 && (a -= 1), a < 1 / 6 ? e + (t - e) * 6 * a : a < 1 / 2 ? t : a < 2 / 3 ? e + (t - e) * (2 / 3 - a) * 6 : e;
}
function nq({ hue: e, saturation: t, lightness: a, alpha: n }) {
  e /= 360, t /= 100, a /= 100;
  let r = 0, s = 0, i = 0;
  if (!t)
    r = s = i = a;
  else {
    const o = a < 0.5 ? a * (1 + t) : a + t - a * t, l = 2 * a - o;
    r = Tu(l, o, e + 1 / 3), s = Tu(l, o, e), i = Tu(l, o, e - 1 / 3);
  }
  return {
    red: Math.round(r * 255),
    green: Math.round(s * 255),
    blue: Math.round(i * 255),
    alpha: n
  };
}
function yl(e, t) {
  return (a) => a > 0 ? t : e;
}
const Bu = (e, t, a) => {
  const n = e * e, r = a * (t * t - n) + n;
  return r < 0 ? 0 : Math.sqrt(r);
}, rq = [sc, wr, ts], sq = (e) => rq.find((t) => t.test(e));
function $v(e) {
  const t = sq(e);
  if (Ji(!!t, `'${e}' is not an animatable color. Use the equivalent color code instead.`, "color-not-animatable"), !t)
    return !1;
  let a = t.parse(e);
  return t === ts && (a = nq(a)), a;
}
const Iv = (e, t) => {
  const a = $v(e), n = $v(t);
  if (!a || !n)
    return yl(e, t);
  const r = { ...a };
  return (s) => (r.red = Bu(a.red, n.red, s), r.green = Bu(a.green, n.green, s), r.blue = Bu(a.blue, n.blue, s), r.alpha = bt(a.alpha, n.alpha, s), wr.transform(r));
}, lc = /* @__PURE__ */ new Set(["none", "hidden"]);
function iq(e, t) {
  return lc.has(e) ? (a) => a <= 0 ? e : t : (a) => a >= 1 ? t : e;
}
const oq = (e, t) => (a) => t(e(a)), Qi = (...e) => e.reduce(oq);
function lq(e, t) {
  return (a) => bt(e, t, a);
}
function hp(e) {
  return typeof e == "number" ? lq : typeof e == "string" ? Zf(e) ? yl : Vt.test(e) ? Iv : cq : Array.isArray(e) ? pw : typeof e == "object" ? Vt.test(e) ? Iv : uq : yl;
}
function pw(e, t) {
  const a = [...e], n = a.length, r = e.map((s, i) => hp(s)(s, t[i]));
  return (s) => {
    for (let i = 0; i < n; i++)
      a[i] = r[i](s);
    return a;
  };
}
function uq(e, t) {
  const a = { ...e, ...t }, n = {};
  for (const r in a)
    e[r] !== void 0 && t[r] !== void 0 && (n[r] = hp(e[r])(e[r], t[r]));
  return (r) => {
    for (const s in n)
      a[s] = n[s](r);
    return a;
  };
}
function dq(e, t) {
  const a = [], n = { color: 0, var: 0, number: 0 };
  for (let r = 0; r < t.values.length; r++) {
    const s = t.types[r], i = e.indexes[s][n[s]], o = e.values[i] ?? 0;
    a[r] = o, n[s]++;
  }
  return a;
}
const cq = (e, t) => {
  const a = er.createTransformer(t), n = Ii(e), r = Ii(t);
  return n.indexes.var.length === r.indexes.var.length && n.indexes.color.length === r.indexes.color.length && n.indexes.number.length >= r.indexes.number.length ? lc.has(e) && !r.values.length || lc.has(t) && !n.values.length ? iq(e, t) : Qi(pw(dq(n, r), r.values), a) : (Ji(!0, `Complex values '${e}' and '${t}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`, "complex-values-different"), yl(e, t));
};
function gw(e, t, a) {
  return typeof e == "number" && typeof t == "number" && typeof a == "number" ? bt(e, t, a) : hp(e)(e, t);
}
const fq = (e) => {
  const t = ({ timestamp: a }) => e(a);
  return {
    start: (a = !0) => st.update(t, a),
    stop: () => Fa(t),
    /**
     * If we're processing this frame we can use the
     * framelocked timestamp to keep things in sync.
     */
    now: () => Gt.isProcessing ? Gt.timestamp : ya.now()
  };
}, vw = (e, t, a = 10) => {
  let n = "";
  const r = Math.max(Math.round(t / a), 2);
  for (let s = 0; s < r; s++)
    n += Math.round(e(s / (r - 1)) * 1e4) / 1e4 + ", ";
  return `linear(${n.substring(0, n.length - 2)})`;
}, pq = 5;
function hw(e, t, a) {
  const n = Math.max(t - pq, 0);
  return sp(a - e(n), t - n);
}
const _t = {
  // Default spring physics
  stiffness: 100,
  damping: 10,
  mass: 1,
  velocity: 0,
  // Default duration/bounce-based options
  duration: 800,
  // in ms
  bounce: 0.3,
  visualDuration: 0.3,
  // in seconds
  // Rest thresholds
  restSpeed: {
    granular: 0.01,
    default: 2
  },
  restDelta: {
    granular: 5e-3,
    default: 0.5
  },
  // Limits
  minDuration: 0.01,
  // in seconds
  maxDuration: 10,
  // in seconds
  minDamping: 0.05,
  maxDamping: 1
}, Pu = 1e-3;
function gq({ duration: e = _t.duration, bounce: t = _t.bounce, velocity: a = _t.velocity, mass: n = _t.mass }) {
  let r, s;
  Ji(e <= /* @__PURE__ */ La(_t.maxDuration), "Spring duration must be 10 seconds or less", "spring-duration-limit");
  let i = 1 - t;
  i = gn(_t.minDamping, _t.maxDamping, i), e = gn(_t.minDuration, _t.maxDuration, /* @__PURE__ */ cn(e)), i < 1 ? (r = (d) => {
    const c = d * i, f = c * e, p = c - a, g = uc(d, i), v = Math.exp(-f);
    return Pu - p / g * v;
  }, s = (d) => {
    const f = d * i * e, p = f * a + a, g = Math.pow(i, 2) * Math.pow(d, 2) * e, v = Math.exp(-f), m = uc(Math.pow(d, 2), i);
    return (-r(d) + Pu > 0 ? -1 : 1) * ((p - g) * v) / m;
  }) : (r = (d) => {
    const c = Math.exp(-d * e), f = (d - a) * e + 1;
    return -Pu + c * f;
  }, s = (d) => {
    const c = Math.exp(-d * e), f = (a - d) * (e * e);
    return c * f;
  });
  const o = 5 / e, l = hq(r, s, o);
  if (e = /* @__PURE__ */ La(e), isNaN(l))
    return {
      stiffness: _t.stiffness,
      damping: _t.damping,
      duration: e
    };
  {
    const d = Math.pow(l, 2) * n;
    return {
      stiffness: d,
      damping: i * 2 * Math.sqrt(n * d),
      duration: e
    };
  }
}
const vq = 12;
function hq(e, t, a) {
  let n = a;
  for (let r = 1; r < vq; r++)
    n = n - e(n) / t(n);
  return n;
}
function uc(e, t) {
  return e * Math.sqrt(1 - t * t);
}
const mq = ["duration", "bounce"], yq = ["stiffness", "damping", "mass"];
function Ev(e, t) {
  return t.some((a) => e[a] !== void 0);
}
function bq(e) {
  let t = {
    velocity: _t.velocity,
    stiffness: _t.stiffness,
    damping: _t.damping,
    mass: _t.mass,
    isResolvedFromDuration: !1,
    ...e
  };
  if (!Ev(e, yq) && Ev(e, mq))
    if (e.visualDuration) {
      const a = e.visualDuration, n = 2 * Math.PI / (a * 1.2), r = n * n, s = 2 * gn(0.05, 1, 1 - (e.bounce || 0)) * Math.sqrt(r);
      t = {
        ...t,
        mass: _t.mass,
        stiffness: r,
        damping: s
      };
    } else {
      const a = gq(e);
      t = {
        ...t,
        ...a,
        mass: _t.mass
      }, t.isResolvedFromDuration = !0;
    }
  return t;
}
function Ei(e = _t.visualDuration, t = _t.bounce) {
  const a = typeof e != "object" ? {
    visualDuration: e,
    keyframes: [0, 1],
    bounce: t
  } : e;
  let { restSpeed: n, restDelta: r } = a;
  const s = a.keyframes[0], i = a.keyframes[a.keyframes.length - 1], o = { done: !1, value: s }, { stiffness: l, damping: d, mass: c, duration: f, velocity: p, isResolvedFromDuration: g } = bq({
    ...a,
    velocity: -/* @__PURE__ */ cn(a.velocity || 0)
  }), v = p || 0, m = d / (2 * Math.sqrt(l * c)), y = i - s, x = /* @__PURE__ */ cn(Math.sqrt(l / c)), b = Math.abs(y) < 5;
  n || (n = b ? _t.restSpeed.granular : _t.restSpeed.default), r || (r = b ? _t.restDelta.granular : _t.restDelta.default);
  let C;
  if (m < 1) {
    const $ = uc(x, m);
    C = (B) => {
      const I = Math.exp(-m * x * B);
      return i - I * ((v + m * x * y) / $ * Math.sin($ * B) + y * Math.cos($ * B));
    };
  } else if (m === 1)
    C = ($) => i - Math.exp(-x * $) * (y + (v + x * y) * $);
  else {
    const $ = x * Math.sqrt(m * m - 1);
    C = (B) => {
      const I = Math.exp(-m * x * B), E = Math.min($ * B, 300);
      return i - I * ((v + m * x * y) * Math.sinh(E) + $ * y * Math.cosh(E)) / $;
    };
  }
  const w = {
    calculatedDuration: g && f || null,
    next: ($) => {
      const B = C($);
      if (g)
        o.done = $ >= f;
      else {
        let I = $ === 0 ? v : 0;
        m < 1 && (I = $ === 0 ? /* @__PURE__ */ La(v) : hw(C, $, B));
        const E = Math.abs(I) <= n, P = Math.abs(i - B) <= r;
        o.done = E && P;
      }
      return o.value = o.done ? i : B, o;
    },
    toString: () => {
      const $ = Math.min(pp(w), ml), B = vw((I) => w.next($ * I).value, $, 30);
      return $ + "ms " + B;
    },
    toTransition: () => {
    }
  };
  return w;
}
Ei.applyToOptions = (e) => {
  const t = cw(e, 100, Ei);
  return e.ease = t.ease, e.duration = /* @__PURE__ */ La(t.duration), e.type = "keyframes", e;
};
function dc({ keyframes: e, velocity: t = 0, power: a = 0.8, timeConstant: n = 325, bounceDamping: r = 10, bounceStiffness: s = 500, modifyTarget: i, min: o, max: l, restDelta: d = 0.5, restSpeed: c }) {
  const f = e[0], p = {
    done: !1,
    value: f
  }, g = (E) => o !== void 0 && E < o || l !== void 0 && E > l, v = (E) => o === void 0 ? l : l === void 0 || Math.abs(o - E) < Math.abs(l - E) ? o : l;
  let m = a * t;
  const y = f + m, x = i === void 0 ? y : i(y);
  x !== y && (m = x - f);
  const b = (E) => -m * Math.exp(-E / n), C = (E) => x + b(E), w = (E) => {
    const P = b(E), R = C(E);
    p.done = Math.abs(P) <= d, p.value = p.done ? x : R;
  };
  let $, B;
  const I = (E) => {
    g(p.value) && ($ = E, B = Ei({
      keyframes: [p.value, v(p.value)],
      velocity: hw(C, E, p.value),
      // TODO: This should be passing * 1000
      damping: r,
      stiffness: s,
      restDelta: d,
      restSpeed: c
    }));
  };
  return I(0), {
    calculatedDuration: null,
    next: (E) => {
      let P = !1;
      return !B && $ === void 0 && (P = !0, w(E), I(E)), $ !== void 0 && E >= $ ? B.next(E - $) : (!P && w(E), p);
    }
  };
}
function wq(e, t, a) {
  const n = [], r = a || Dn.mix || gw, s = e.length - 1;
  for (let i = 0; i < s; i++) {
    let o = r(e[i], e[i + 1]);
    if (t) {
      const l = Array.isArray(t) ? t[i] || ua : t;
      o = Qi(l, o);
    }
    n.push(o);
  }
  return n;
}
function mp(e, t, { clamp: a = !0, ease: n, mixer: r } = {}) {
  const s = e.length;
  if (vn(s === t.length, "Both input and output ranges must be the same length", "range-length"), s === 1)
    return () => t[0];
  if (s === 2 && t[0] === t[1])
    return () => t[1];
  const i = e[0] === e[1];
  e[0] > e[s - 1] && (e = [...e].reverse(), t = [...t].reverse());
  const o = wq(t, n, r), l = o.length, d = (c) => {
    if (i && c < e[0])
      return t[0];
    let f = 0;
    if (l > 1)
      for (; f < e.length - 2 && !(c < e[f + 1]); f++)
        ;
    const p = /* @__PURE__ */ Pr(e[f], e[f + 1], c);
    return o[f](p);
  };
  return a ? (c) => d(gn(e[0], e[s - 1], c)) : d;
}
function Cq(e, t) {
  return e.map((a) => a * t);
}
const mw = (e, t, a) => (((1 - 3 * a + 3 * t) * e + (3 * a - 6 * t)) * e + 3 * t) * e, xq = 1e-7, Sq = 12;
function _q(e, t, a, n, r) {
  let s, i, o = 0;
  do
    i = t + (a - t) / 2, s = mw(i, n, r) - e, s > 0 ? a = i : t = i;
  while (Math.abs(s) > xq && ++o < Sq);
  return i;
}
function Zi(e, t, a, n) {
  if (e === t && a === n)
    return ua;
  const r = (s) => _q(s, 0, 1, e, a);
  return (s) => s === 0 || s === 1 ? s : mw(r(s), t, n);
}
const kq = /* @__PURE__ */ Zi(0.42, 0, 1, 1), Aq = /* @__PURE__ */ Zi(0, 0, 0.58, 1), yw = /* @__PURE__ */ Zi(0.42, 0, 0.58, 1), bw = (e) => (t) => t <= 0.5 ? e(2 * t) / 2 : (2 - e(2 * (1 - t))) / 2, ww = (e) => (t) => 1 - e(1 - t), Cw = /* @__PURE__ */ Zi(0.33, 1.53, 0.69, 0.99), yp = /* @__PURE__ */ ww(Cw), xw = /* @__PURE__ */ bw(yp), Sw = (e) => (e *= 2) < 1 ? 0.5 * yp(e) : 0.5 * (2 - Math.pow(2, -10 * (e - 1))), bp = (e) => 1 - Math.sin(Math.acos(e)), _w = ww(bp), kw = bw(bp), Aw = (e) => Array.isArray(e) && typeof e[0] == "number", Tv = {
  linear: ua,
  easeIn: kq,
  easeInOut: yw,
  easeOut: Aq,
  circIn: bp,
  circInOut: kw,
  circOut: _w,
  backIn: yp,
  backInOut: xw,
  backOut: Cw,
  anticipate: Sw
}, $q = (e) => typeof e == "string", Bv = (e) => {
  if (Aw(e)) {
    vn(e.length === 4, "Cubic bezier arrays must contain four numerical values.", "cubic-bezier-length");
    const [t, a, n, r] = e;
    return Zi(t, a, n, r);
  } else if ($q(e))
    return vn(Tv[e] !== void 0, `Invalid easing type '${e}'`, "invalid-easing-type"), Tv[e];
  return e;
};
function Iq(e, t) {
  return e.map(() => t || yw).splice(0, e.length - 1);
}
function as({ duration: e = 300, keyframes: t, times: a, ease: n = "easeInOut" }) {
  const r = lw(n) ? n.map(Bv) : Bv(n), s = {
    done: !1,
    value: t[0]
  }, i = Cq(
    // Only use the provided offsets if they're the correct length
    // TODO Maybe we should warn here if there's a length mismatch
    a && a.length === t.length ? a : fp(t),
    e
  ), o = mp(i, t, {
    ease: Array.isArray(r) ? r : Iq(t, r)
  });
  return {
    calculatedDuration: e,
    next: (l) => (s.value = o(l), s.done = l >= e, s)
  };
}
const Eq = (e) => e !== null;
function wp(e, { repeat: t, repeatType: a = "loop" }, n, r = 1) {
  const s = e.filter(Eq), o = r < 0 || t && a !== "loop" && t % 2 === 1 ? 0 : s.length - 1;
  return !o || n === void 0 ? s[o] : n;
}
const Tq = {
  decay: dc,
  inertia: dc,
  tween: as,
  keyframes: as,
  spring: Ei
};
function $w(e) {
  typeof e.type == "string" && (e.type = Tq[e.type]);
}
class Cp {
  constructor() {
    this.updateFinished();
  }
  get finished() {
    return this._finished;
  }
  updateFinished() {
    this._finished = new Promise((t) => {
      this.resolve = t;
    });
  }
  notifyFinished() {
    this.resolve();
  }
  /**
   * Allows the animation to be awaited.
   *
   * @deprecated Use `finished` instead.
   */
  then(t, a) {
    return this.finished.then(t, a);
  }
}
const Bq = (e) => e / 100;
class eu extends Cp {
  constructor(t) {
    super(), this.state = "idle", this.startTime = null, this.isStopped = !1, this.currentTime = 0, this.holdTime = null, this.playbackSpeed = 1, this.stop = () => {
      var a, n;
      const { motionValue: r } = this.options;
      r && r.updatedAt !== ya.now() && this.tick(ya.now()), this.isStopped = !0, this.state !== "idle" && (this.teardown(), (n = (a = this.options).onStop) == null || n.call(a));
    }, this.options = t, this.initAnimation(), this.play(), t.autoplay === !1 && this.pause();
  }
  initAnimation() {
    const { options: t } = this;
    $w(t);
    const { type: a = as, repeat: n = 0, repeatDelay: r = 0, repeatType: s, velocity: i = 0 } = t;
    let { keyframes: o } = t;
    const l = a || as;
    process.env.NODE_ENV !== "production" && l !== as && vn(o.length <= 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${o}`, "spring-two-frames"), l !== as && typeof o[0] != "number" && (this.mixKeyframes = Qi(Bq, gw(o[0], o[1])), o = [0, 100]);
    const d = l({ ...t, keyframes: o });
    s === "mirror" && (this.mirroredGenerator = l({
      ...t,
      keyframes: [...o].reverse(),
      velocity: -i
    })), d.calculatedDuration === null && (d.calculatedDuration = pp(d));
    const { calculatedDuration: c } = d;
    this.calculatedDuration = c, this.resolvedDuration = c + r, this.totalDuration = this.resolvedDuration * (n + 1) - r, this.generator = d;
  }
  updateTime(t) {
    const a = Math.round(t - this.startTime) * this.playbackSpeed;
    this.holdTime !== null ? this.currentTime = this.holdTime : this.currentTime = a;
  }
  tick(t, a = !1) {
    const { generator: n, totalDuration: r, mixKeyframes: s, mirroredGenerator: i, resolvedDuration: o, calculatedDuration: l } = this;
    if (this.startTime === null)
      return n.next(0);
    const { delay: d = 0, keyframes: c, repeat: f, repeatType: p, repeatDelay: g, type: v, onUpdate: m, finalKeyframe: y } = this.options;
    this.speed > 0 ? this.startTime = Math.min(this.startTime, t) : this.speed < 0 && (this.startTime = Math.min(t - r / this.speed, this.startTime)), a ? this.currentTime = t : this.updateTime(t);
    const x = this.currentTime - d * (this.playbackSpeed >= 0 ? 1 : -1), b = this.playbackSpeed >= 0 ? x < 0 : x > r;
    this.currentTime = Math.max(x, 0), this.state === "finished" && this.holdTime === null && (this.currentTime = r);
    let C = this.currentTime, w = n;
    if (f) {
      const E = Math.min(this.currentTime, r) / o;
      let P = Math.floor(E), R = E % 1;
      !R && E >= 1 && (R = 1), R === 1 && P--, P = Math.min(P, f + 1), !!(P % 2) && (p === "reverse" ? (R = 1 - R, g && (R -= g / o)) : p === "mirror" && (w = i)), C = gn(0, 1, R) * o;
    }
    const $ = b ? { done: !1, value: c[0] } : w.next(C);
    s && ($.value = s($.value));
    let { done: B } = $;
    !b && l !== null && (B = this.playbackSpeed >= 0 ? this.currentTime >= r : this.currentTime <= 0);
    const I = this.holdTime === null && (this.state === "finished" || this.state === "running" && B);
    return I && v !== dc && ($.value = wp(c, this.options, y, this.speed)), m && m($.value), I && this.finish(), $;
  }
  /**
   * Allows the returned animation to be awaited or promise-chained. Currently
   * resolves when the animation finishes at all but in a future update could/should
   * reject if its cancels.
   */
  then(t, a) {
    return this.finished.then(t, a);
  }
  get duration() {
    return /* @__PURE__ */ cn(this.calculatedDuration);
  }
  get time() {
    return /* @__PURE__ */ cn(this.currentTime);
  }
  set time(t) {
    var a;
    t = /* @__PURE__ */ La(t), this.currentTime = t, this.startTime === null || this.holdTime !== null || this.playbackSpeed === 0 ? this.holdTime = t : this.driver && (this.startTime = this.driver.now() - t / this.playbackSpeed), (a = this.driver) == null || a.start(!1);
  }
  get speed() {
    return this.playbackSpeed;
  }
  set speed(t) {
    this.updateTime(ya.now());
    const a = this.playbackSpeed !== t;
    this.playbackSpeed = t, a && (this.time = /* @__PURE__ */ cn(this.currentTime));
  }
  play() {
    var t, a;
    if (this.isStopped)
      return;
    const { driver: n = fq, startTime: r } = this.options;
    this.driver || (this.driver = n((i) => this.tick(i))), (a = (t = this.options).onPlay) == null || a.call(t);
    const s = this.driver.now();
    this.state === "finished" ? (this.updateFinished(), this.startTime = s) : this.holdTime !== null ? this.startTime = s - this.holdTime : this.startTime || (this.startTime = r ?? s), this.state === "finished" && this.speed < 0 && (this.startTime += this.calculatedDuration), this.holdTime = null, this.state = "running", this.driver.start();
  }
  pause() {
    this.state = "paused", this.updateTime(ya.now()), this.holdTime = this.currentTime;
  }
  complete() {
    this.state !== "running" && this.play(), this.state = "finished", this.holdTime = null;
  }
  finish() {
    var t, a;
    this.notifyFinished(), this.teardown(), this.state = "finished", (a = (t = this.options).onComplete) == null || a.call(t);
  }
  cancel() {
    var t, a;
    this.holdTime = null, this.startTime = 0, this.tick(0), this.teardown(), (a = (t = this.options).onCancel) == null || a.call(t);
  }
  teardown() {
    this.state = "idle", this.stopDriver(), this.startTime = this.holdTime = null;
  }
  stopDriver() {
    this.driver && (this.driver.stop(), this.driver = void 0);
  }
  sample(t) {
    return this.startTime = 0, this.tick(t, !0);
  }
  attachTimeline(t) {
    var a;
    return this.options.allowFlatten && (this.options.type = "keyframes", this.options.ease = "linear", this.initAnimation()), (a = this.driver) == null || a.stop(), t.observe(this);
  }
}
function Pq(e) {
  return new eu(e);
}
const Dq = (e) => e.startsWith("--");
function Mq(e, t, a) {
  Dq(t) ? e.style.setProperty(t, a) : e.style[t] = a;
}
// @__NO_SIDE_EFFECTS__
function xp(e) {
  let t;
  return () => (t === void 0 && (t = e()), t);
}
const Iw = /* @__PURE__ */ xp(() => window.ScrollTimeline !== void 0), Rq = {};
function Lq(e, t) {
  const a = /* @__PURE__ */ xp(e);
  return () => Rq[t] ?? a();
}
const Ew = /* @__PURE__ */ Lq(() => {
  try {
    document.createElement("div").animate({ opacity: 0 }, { easing: "linear(0, 1)" });
  } catch {
    return !1;
  }
  return !0;
}, "linearEasing"), ti = ([e, t, a, n]) => `cubic-bezier(${e}, ${t}, ${a}, ${n})`, Pv = {
  linear: "linear",
  ease: "ease",
  easeIn: "ease-in",
  easeOut: "ease-out",
  easeInOut: "ease-in-out",
  circIn: /* @__PURE__ */ ti([0, 0.65, 0.55, 1]),
  circOut: /* @__PURE__ */ ti([0.55, 0, 1, 0.45]),
  backIn: /* @__PURE__ */ ti([0.31, 0.01, 0.66, -0.59]),
  backOut: /* @__PURE__ */ ti([0.33, 1.53, 0.69, 0.99])
};
function Tw(e, t) {
  if (e)
    return typeof e == "function" ? Ew() ? vw(e, t) : "ease-out" : Aw(e) ? ti(e) : Array.isArray(e) ? e.map((a) => Tw(a, t) || Pv.easeOut) : Pv[e];
}
function Oq(e, t, a, { delay: n = 0, duration: r = 300, repeat: s = 0, repeatType: i = "loop", ease: o = "easeOut", times: l } = {}, d = void 0) {
  const c = {
    [t]: a
  };
  l && (c.offset = l);
  const f = Tw(o, r);
  Array.isArray(f) && (c.easing = f);
  const p = {
    delay: n,
    duration: r,
    easing: Array.isArray(f) ? "linear" : f,
    fill: "both",
    iterations: s + 1,
    direction: i === "reverse" ? "alternate" : "normal"
  };
  return d && (p.pseudoElement = d), e.animate(c, p);
}
function Fq({ type: e, ...t }) {
  return gp(e) && Ew() ? e.applyToOptions(t) : (t.duration ?? (t.duration = 300), t.ease ?? (t.ease = "easeOut"), t);
}
class zq extends Cp {
  constructor(t) {
    if (super(), this.finishedTime = null, this.isStopped = !1, !t)
      return;
    const { element: a, name: n, keyframes: r, pseudoElement: s, allowFlatten: i = !1, finalKeyframe: o, onComplete: l } = t;
    this.isPseudoElement = !!s, this.allowFlatten = i, this.options = t, vn(typeof t.type != "string", `Mini animate() doesn't support "type" as a string.`, "mini-spring");
    const d = Fq(t);
    this.animation = Oq(a, n, r, d, s), d.autoplay === !1 && this.animation.pause(), this.animation.onfinish = () => {
      if (this.finishedTime = this.time, !s) {
        const c = wp(r, this.options, o, this.speed);
        this.updateMotionValue ? this.updateMotionValue(c) : Mq(a, n, c), this.animation.cancel();
      }
      l?.(), this.notifyFinished();
    };
  }
  play() {
    this.isStopped || (this.animation.play(), this.state === "finished" && this.updateFinished());
  }
  pause() {
    this.animation.pause();
  }
  complete() {
    var t, a;
    (a = (t = this.animation).finish) == null || a.call(t);
  }
  cancel() {
    try {
      this.animation.cancel();
    } catch {
    }
  }
  stop() {
    if (this.isStopped)
      return;
    this.isStopped = !0;
    const { state: t } = this;
    t === "idle" || t === "finished" || (this.updateMotionValue ? this.updateMotionValue() : this.commitStyles(), this.isPseudoElement || this.cancel());
  }
  /**
   * WAAPI doesn't natively have any interruption capabilities.
   *
   * In this method, we commit styles back to the DOM before cancelling
   * the animation.
   *
   * This is designed to be overridden by NativeAnimationExtended, which
   * will create a renderless JS animation and sample it twice to calculate
   * its current value, "previous" value, and therefore allow
   * Motion to also correctly calculate velocity for any subsequent animation
   * while deferring the commit until the next animation frame.
   */
  commitStyles() {
    var t, a;
    this.isPseudoElement || (a = (t = this.animation).commitStyles) == null || a.call(t);
  }
  get duration() {
    var t, a;
    const n = ((a = (t = this.animation.effect) == null ? void 0 : t.getComputedTiming) == null ? void 0 : a.call(t).duration) || 0;
    return /* @__PURE__ */ cn(Number(n));
  }
  get time() {
    return /* @__PURE__ */ cn(Number(this.animation.currentTime) || 0);
  }
  set time(t) {
    this.finishedTime = null, this.animation.currentTime = /* @__PURE__ */ La(t);
  }
  /**
   * The playback speed of the animation.
   * 1 = normal speed, 2 = double speed, 0.5 = half speed.
   */
  get speed() {
    return this.animation.playbackRate;
  }
  set speed(t) {
    t < 0 && (this.finishedTime = null), this.animation.playbackRate = t;
  }
  get state() {
    return this.finishedTime !== null ? "finished" : this.animation.playState;
  }
  get startTime() {
    return Number(this.animation.startTime);
  }
  set startTime(t) {
    this.animation.startTime = t;
  }
  /**
   * Attaches a timeline to the animation, for instance the `ScrollTimeline`.
   */
  attachTimeline({ timeline: t, observe: a }) {
    var n;
    return this.allowFlatten && ((n = this.animation.effect) == null || n.updateTiming({ easing: "linear" })), this.animation.onfinish = null, t && Iw() ? (this.animation.timeline = t, ua) : a(this);
  }
}
const Bw = {
  anticipate: Sw,
  backInOut: xw,
  circInOut: kw
};
function qq(e) {
  return e in Bw;
}
function Vq(e) {
  typeof e.ease == "string" && qq(e.ease) && (e.ease = Bw[e.ease]);
}
const Dv = 10;
class Nq extends zq {
  constructor(t) {
    Vq(t), $w(t), super(t), t.startTime && (this.startTime = t.startTime), this.options = t;
  }
  /**
   * WAAPI doesn't natively have any interruption capabilities.
   *
   * Rather than read commited styles back out of the DOM, we can
   * create a renderless JS animation and sample it twice to calculate
   * its current value, "previous" value, and therefore allow
   * Motion to calculate velocity for any subsequent animation.
   */
  updateMotionValue(t) {
    const { motionValue: a, onUpdate: n, onComplete: r, element: s, ...i } = this.options;
    if (!a)
      return;
    if (t !== void 0) {
      a.set(t);
      return;
    }
    const o = new eu({
      ...i,
      autoplay: !1
    }), l = /* @__PURE__ */ La(this.finishedTime ?? this.time);
    a.setWithVelocity(o.sample(l - Dv).value, o.sample(l).value, Dv), o.stop();
  }
}
const Mv = (e, t) => t === "zIndex" ? !1 : !!(typeof e == "number" || Array.isArray(e) || typeof e == "string" && // It's animatable if we have a string
(er.test(e) || e === "0") && // And it contains numbers and/or colors
!e.startsWith("url("));
function Hq(e) {
  const t = e[0];
  if (e.length === 1)
    return !0;
  for (let a = 0; a < e.length; a++)
    if (e[a] !== t)
      return !0;
}
function jq(e, t, a, n) {
  const r = e[0];
  if (r === null)
    return !1;
  if (t === "display" || t === "visibility")
    return !0;
  const s = e[e.length - 1], i = Mv(r, t), o = Mv(s, t);
  return Ji(i === o, `You are trying to animate ${t} from "${r}" to "${s}". "${i ? s : r}" is not an animatable value.`, "value-not-animatable"), !i || !o ? !1 : Hq(e) || (a === "spring" || gp(a)) && n;
}
const Kq = /* @__PURE__ */ new Set([
  "opacity",
  "clipPath",
  "filter",
  "transform"
  // TODO: Could be re-enabled now we have support for linear() easing
  // "background-color"
]), Gq = /* @__PURE__ */ xp(() => Object.hasOwnProperty.call(Element.prototype, "animate"));
function Uq(e) {
  var t;
  const { motionValue: a, name: n, repeatDelay: r, repeatType: s, damping: i, type: o } = e;
  if (!(((t = a?.owner) == null ? void 0 : t.current) instanceof HTMLElement))
    return !1;
  const { onUpdate: d, transformTemplate: c } = a.owner.getProps();
  return Gq() && n && Kq.has(n) && (n !== "transform" || !c) && /**
  * If we're outputting values to onUpdate then we can't use WAAPI as there's
  * no way to read the value from WAAPI every frame.
  */
  !d && !r && s !== "mirror" && i !== 0 && o !== "inertia";
}
const Wq = 40;
class Yq extends Cp {
  constructor({ autoplay: t = !0, delay: a = 0, type: n = "keyframes", repeat: r = 0, repeatDelay: s = 0, repeatType: i = "loop", keyframes: o, name: l, motionValue: d, element: c, ...f }) {
    var p;
    super(), this.stop = () => {
      var m, y;
      this._animation && (this._animation.stop(), (m = this.stopTimeline) == null || m.call(this)), (y = this.keyframeResolver) == null || y.cancel();
    }, this.createdAt = ya.now();
    const g = {
      autoplay: t,
      delay: a,
      type: n,
      repeat: r,
      repeatDelay: s,
      repeatType: i,
      name: l,
      motionValue: d,
      element: c,
      ...f
    }, v = c?.KeyframeResolver || ip;
    this.keyframeResolver = new v(o, (m, y, x) => this.onKeyframesResolved(m, y, g, !x), l, d, c), (p = this.keyframeResolver) == null || p.scheduleResolve();
  }
  onKeyframesResolved(t, a, n, r) {
    this.keyframeResolver = void 0;
    const { name: s, type: i, velocity: o, delay: l, isHandoff: d, onUpdate: c } = n;
    this.resolvedAt = ya.now(), jq(t, s, i, o) || ((Dn.instantAnimations || !l) && c?.(wp(t, n, a)), t[0] = t[t.length - 1], oc(n), n.repeat = 0);
    const p = {
      startTime: r ? this.resolvedAt ? this.resolvedAt - this.createdAt > Wq ? this.resolvedAt : this.createdAt : this.createdAt : void 0,
      finalKeyframe: a,
      ...n,
      keyframes: t
    }, g = !d && Uq(p) ? new Nq({
      ...p,
      element: p.motionValue.owner.current
    }) : new eu(p);
    g.finished.then(() => this.notifyFinished()).catch(ua), this.pendingTimeline && (this.stopTimeline = g.attachTimeline(this.pendingTimeline), this.pendingTimeline = void 0), this._animation = g;
  }
  get finished() {
    return this._animation ? this.animation.finished : this._finished;
  }
  then(t, a) {
    return this.finished.finally(t).then(() => {
    });
  }
  get animation() {
    var t;
    return this._animation || ((t = this.keyframeResolver) == null || t.resume(), qF()), this._animation;
  }
  get duration() {
    return this.animation.duration;
  }
  get time() {
    return this.animation.time;
  }
  set time(t) {
    this.animation.time = t;
  }
  get speed() {
    return this.animation.speed;
  }
  get state() {
    return this.animation.state;
  }
  set speed(t) {
    this.animation.speed = t;
  }
  get startTime() {
    return this.animation.startTime;
  }
  attachTimeline(t) {
    return this._animation ? this.stopTimeline = this.animation.attachTimeline(t) : this.pendingTimeline = t, () => this.stop();
  }
  play() {
    this.animation.play();
  }
  pause() {
    this.animation.pause();
  }
  complete() {
    this.animation.complete();
  }
  cancel() {
    var t;
    this._animation && this.animation.cancel(), (t = this.keyframeResolver) == null || t.cancel();
  }
}
const Sp = (e, t, a, n = {}, r, s) => (i) => {
  const o = vp(n, e) || {}, l = o.delay || n.delay || 0;
  let { elapsed: d = 0 } = n;
  d = d - /* @__PURE__ */ La(l);
  const c = {
    keyframes: Array.isArray(a) ? a : [null, a],
    ease: "easeOut",
    velocity: t.getVelocity(),
    ...o,
    delay: -d,
    onUpdate: (p) => {
      t.set(p), o.onUpdate && o.onUpdate(p);
    },
    onComplete: () => {
      i(), o.onComplete && o.onComplete();
    },
    name: e,
    motionValue: t,
    element: s ? void 0 : r
  };
  aq(o) || Object.assign(c, tq(e, c)), c.duration && (c.duration = /* @__PURE__ */ La(c.duration)), c.repeatDelay && (c.repeatDelay = /* @__PURE__ */ La(c.repeatDelay)), c.from !== void 0 && (c.keyframes[0] = c.from);
  let f = !1;
  if ((c.type === !1 || c.duration === 0 && !c.repeatDelay) && (oc(c), c.delay === 0 && (f = !0)), (Dn.instantAnimations || Dn.skipAnimations) && (f = !0, oc(c), c.delay = 0), c.allowFlatten = !o.type && !o.ease, f && !s && t.get() !== void 0) {
    const p = Xz(c.keyframes, o);
    if (p !== void 0) {
      st.update(() => {
        c.onUpdate(p), c.onComplete();
      });
      return;
    }
  }
  return o.isSync ? new eu(c) : new Yq(c);
};
function Xq({ protectedKeys: e, needsAnimating: t }, a) {
  const n = e.hasOwnProperty(a) && t[a] !== !0;
  return t[a] = !1, n;
}
function Jq(e, t, { delay: a = 0, transitionOverride: n, type: r } = {}) {
  let { transition: s = e.getDefaultTransition(), transitionEnd: i, ...o } = t;
  n && (s = n);
  const l = [], d = r && e.animationState && e.animationState.getState()[r];
  for (const c in o) {
    const f = e.getValue(c, e.latestValues[c] ?? null), p = o[c];
    if (p === void 0 || d && Xq(d, c))
      continue;
    const g = {
      delay: a,
      ...vp(s || {}, c)
    }, v = f.get();
    if (v !== void 0 && !f.isAnimating && !Array.isArray(p) && p === v && !g.velocity)
      continue;
    let m = !1;
    if (window.MotionHandoffAnimation) {
      const x = fw(e);
      if (x) {
        const b = window.MotionHandoffAnimation(x, c, st);
        b !== null && (g.startTime = b, m = !0);
      }
    }
    Gz(e, c), f.start(Sp(c, f, p, e.shouldReduceMotion && J0.has(c) ? { type: !1 } : g, e, m));
    const y = f.animation;
    y && l.push(y);
  }
  return i && Promise.all(l).then(() => {
    st.update(() => {
      i && jz(e, i);
    });
  }), l;
}
function Qq(e, t) {
  return e in t;
}
class Zq extends X0 {
  constructor() {
    super(...arguments), this.type = "object";
  }
  readValueFromInstance(t, a) {
    if (Qq(a, t)) {
      const n = t[a];
      if (typeof n == "string" || typeof n == "number")
        return n;
    }
  }
  getBaseTargetFromProps() {
  }
  removeValueFromRenderState(t, a) {
    delete a.output[t];
  }
  measureInstanceViewportBox() {
    return Pt();
  }
  build(t, a) {
    Object.assign(t.output, a);
  }
  renderInstance(t, { output: a }) {
    Object.assign(t, a);
  }
  sortInstanceNodePosition() {
    return 0;
  }
}
function Pw(e) {
  return typeof e == "object" && e !== null;
}
function tu(e) {
  return Pw(e) && "ownerSVGElement" in e;
}
function Dw(e) {
  return tu(e) && e.tagName === "svg";
}
function eV(e) {
  const t = {
    presenceContext: null,
    props: {},
    visualState: {
      renderState: {
        transform: {},
        transformOrigin: {},
        style: {},
        vars: {},
        attrs: {}
      },
      latestValues: {}
    }
  }, a = tu(e) && !Dw(e) ? new iw(t) : new rw(t);
  a.mount(e), Br.set(e, a);
}
function tV(e) {
  const t = {
    presenceContext: null,
    props: {},
    visualState: {
      renderState: {
        output: {}
      },
      latestValues: {}
    }
  }, a = new Zq(t);
  a.mount(e), Br.set(e, a);
}
function Mw(e, t, a) {
  const n = Tt(e) ? e : Ma(e);
  return n.start(Sp("", n, t, a)), n.animation;
}
function aV(e, t) {
  return Tt(e) || typeof e == "number" || typeof e == "string" && !cp(t);
}
function Rw(e, t, a, n) {
  const r = [];
  if (aV(e, t))
    r.push(Mw(e, cp(t) && t.default || t, a && (a.default || a)));
  else {
    const s = ow(e, t, n), i = s.length;
    vn(!!i, "No valid elements provided.", "no-valid-elements");
    for (let o = 0; o < i; o++) {
      const l = s[o];
      vn(l !== null, "You're trying to perform an animation on null. Ensure that selectors are correctly finding elements and refs are correctly hydrated.", "animate-null");
      const d = l instanceof Element ? eV : tV;
      Br.has(l) || d(l);
      const c = Br.get(l), f = { ...a };
      "delay" in f && typeof f.delay == "function" && (f.delay = f.delay(o, i)), r.push(...Jq(c, { ...t, transition: f }, {}));
    }
  }
  return r;
}
function nV(e, t, a) {
  const n = [];
  return Rz(e, t, a, { spring: Ei }).forEach(({ keyframes: s, transition: i }, o) => {
    n.push(...Rw(o, s, i));
  }), n;
}
class rV {
  constructor(t) {
    this.stop = () => this.runAll("stop"), this.animations = t.filter(Boolean);
  }
  get finished() {
    return Promise.all(this.animations.map((t) => t.finished));
  }
  /**
   * TODO: Filter out cancelled or stopped animations before returning
   */
  getAll(t) {
    return this.animations[0][t];
  }
  setAll(t, a) {
    for (let n = 0; n < this.animations.length; n++)
      this.animations[n][t] = a;
  }
  attachTimeline(t) {
    const a = this.animations.map((n) => n.attachTimeline(t));
    return () => {
      a.forEach((n, r) => {
        n && n(), this.animations[r].stop();
      });
    };
  }
  get time() {
    return this.getAll("time");
  }
  set time(t) {
    this.setAll("time", t);
  }
  get speed() {
    return this.getAll("speed");
  }
  set speed(t) {
    this.setAll("speed", t);
  }
  get state() {
    return this.getAll("state");
  }
  get startTime() {
    return this.getAll("startTime");
  }
  get duration() {
    let t = 0;
    for (let a = 0; a < this.animations.length; a++)
      t = Math.max(t, this.animations[a].duration);
    return t;
  }
  runAll(t) {
    this.animations.forEach((a) => a[t]());
  }
  play() {
    this.runAll("play");
  }
  pause() {
    this.runAll("pause");
  }
  cancel() {
    this.runAll("cancel");
  }
  complete() {
    this.runAll("complete");
  }
}
class sV extends rV {
  then(t, a) {
    return this.finished.finally(t).then(() => {
    });
  }
}
function iV(e) {
  return Array.isArray(e) && e.some(Array.isArray);
}
function oV(e) {
  function t(a, n, r) {
    let s = [];
    return iV(a) ? s = nV(a, n, e) : s = Rw(a, n, r, e), new sV(s);
  }
  return t;
}
const lV = oV(), uV = ["initial", "animate", "whileInView", "whileHover", "whilePress", "whileDrag", "whileFocus", "exit"];
class dV extends zn {
  constructor(t) {
    var a, n;
    super(t), this.animateUpdates = ({
      controlActiveState: r,
      directAnimate: s,
      directTransition: i,
      controlDelay: o = 0,
      isExit: l
    } = {}) => {
      const { reducedMotion: d } = this.state.options.motionConfig;
      this.state.visualElement.shouldReduceMotion = d === "always" || d === "user" && !!hl.current;
      const c = this.state.target;
      this.state.target = { ...this.state.baseTarget };
      let f = {};
      f = this.resolveStateAnimation({
        controlActiveState: r,
        directAnimate: s,
        directTransition: i
      }), this.state.finalTransition = f;
      const p = this.createAnimationFactories(c, f, o), { getChildAnimations: g } = this.setupChildAnimations(f, this.state.activeStates);
      return this.executeAnimations({
        factories: p,
        getChildAnimations: g,
        transition: f,
        controlActiveState: r,
        isExit: l
      });
    }, this.state.visualElement = kz(this.state.options.as, {
      presenceContext: null,
      parent: (a = this.state.parent) == null ? void 0 : a.visualElement,
      props: {
        ...this.state.options,
        whileTap: this.state.options.whilePress
      },
      visualState: {
        renderState: {
          transform: {},
          transformOrigin: {},
          style: {},
          vars: {},
          attrs: {}
        },
        latestValues: {
          ...this.state.baseTarget
        }
      },
      reducedMotionConfig: this.state.options.motionConfig.reducedMotion
    }), (n = this.state.visualElement.parent) == null || n.addChild(this.state.visualElement), this.state.animateUpdates = this.animateUpdates, this.state.isMounted() && this.state.startAnimation();
  }
  updateAnimationControlsSubscription() {
    const { animate: t } = this.state.options;
    nv(t) && (this.unmountControls = t.subscribe(this.state));
  }
  executeAnimations({
    factories: t,
    getChildAnimations: a,
    transition: n,
    controlActiveState: r,
    isExit: s = !1
  }) {
    const i = () => Promise.all(t.map((f) => f()).filter(Boolean)), o = { ...this.state.target }, l = this.state.element, d = (f) => {
      var p, g;
      l.dispatchEvent(sv("motionstart", o)), (g = (p = this.state.options).onAnimationStart) == null || g.call(p, o), f.then(() => {
        var v, m;
        l.dispatchEvent(sv("motioncomplete", o, s)), (m = (v = this.state.options).onAnimationComplete) == null || m.call(v, o);
      }).catch(ua);
    }, c = () => {
      const f = n?.when ? (n.when === "beforeChildren" ? i() : a()).then(() => n.when === "beforeChildren" ? a() : i()) : Promise.all([i(), a()]);
      return d(f), f;
    };
    return r ? c : c();
  }
  /**
   * Setup child animations
   */
  setupChildAnimations(t, a) {
    var n;
    const r = this.state.visualElement;
    if (!((n = r.variantChildren) != null && n.size) || !a)
      return { getChildAnimations: () => Promise.resolve() };
    const { staggerChildren: s = 0, staggerDirection: i = 1, delayChildren: o = 0 } = t || {}, l = r.variantChildren.size, d = (l - 1) * s, c = typeof o == "function", f = c ? (g) => o(g, l) : i === 1 ? (g = 0) => g * s : (g = 0) => d - g * s, p = Array.from(r.variantChildren).map((g, v) => g.state.animateUpdates({
      controlActiveState: a,
      controlDelay: (c ? 0 : o) + f(v)
    }));
    return {
      getChildAnimations: () => Promise.all(p.map((g) => g()))
    };
  }
  createAnimationFactories(t, a, n) {
    const r = [];
    return Object.keys(this.state.target).forEach((s) => {
      var i;
      if (!GO(t[s], this.state.target[s]))
        return;
      (i = this.state.baseTarget)[s] ?? (i[s] = pF.get(this.state.element, s));
      const o = this.state.target[s] === "none" && Bd(lv[s]) ? lv[s] : this.state.target[s];
      r.push(() => {
        var l;
        return lV(
          this.state.element,
          { [s]: o },
          {
            ...a?.[s] || a,
            delay: (((l = a?.[s]) == null ? void 0 : l.delay) || a?.delay || 0) + n
          }
        );
      });
    }), r;
  }
  resolveStateAnimation({
    controlActiveState: t,
    directAnimate: a,
    directTransition: n
  }) {
    let r = this.state.options.transition, s = {};
    const { variants: i, custom: o, transition: l, animatePresenceContext: d } = this.state.options, c = o ?? d?.custom;
    return this.state.activeStates = { ...this.state.activeStates, ...t }, uV.forEach((f) => {
      if (!this.state.activeStates[f] || nv(this.state.options[f]))
        return;
      const p = this.state.options[f];
      let g = Bd(p) ? ui(p, i, c) : void 0;
      if (this.state.visualElement.isVariantNode) {
        const v = ui(this.state.context[f], i, c);
        g = v ? Object.assign(v || {}, g) : s;
      }
      g && (f !== "initial" && (r = g.transition || this.state.options.transition || {}), s = Object.assign(s, g));
    }), a && (s = ui(a, i, c), r = s.transition || n || l), Object.entries(s).forEach(([f, p]) => {
      f !== "transition" && (this.state.target[f] = p);
    }), r;
  }
  /**
   * Subscribe any provided AnimationControls to the component's VisualElement
   */
  mount() {
    var t, a;
    const { element: n } = this.state;
    P0.set(n, this.state), Br.get(n) || (this.state.visualElement.mount(n), Br.set(n, this.state.visualElement)), this.state.visualElement.state = this.state, this.updateAnimationControlsSubscription();
    const r = this.state.visualElement, s = r.parent;
    if (r.enteringChildren = void 0, (t = this.state.parent) != null && t.isMounted() && !r.isControllingVariants && ((a = s?.enteringChildren) != null && a.has(r))) {
      const { delayChildren: i } = this.state.parent.finalTransition || {};
      this.animateUpdates({
        controlActiveState: this.state.parent.activeStates,
        controlDelay: Az(s.enteringChildren, r, i)
      })();
    }
  }
  update() {
    const { animate: t } = this.state.options, { animate: a } = this.state.visualElement.prevProps || {};
    t !== a && this.updateAnimationControlsSubscription();
  }
  unmount() {
    var t;
    (t = this.unmountControls) == null || t.call(this);
  }
}
function Lw(e) {
  return Pw(e) && "offsetHeight" in e;
}
const cV = {
  y: !1
};
function fV() {
  return cV.y;
}
const Ow = (e, t) => t ? e === t ? !0 : Ow(e, t.parentElement) : !1, pV = (e) => e.pointerType === "mouse" ? typeof e.button != "number" || e.button <= 0 : e.isPrimary !== !1;
function Fw(e, t) {
  const a = Zl(e), n = new AbortController(), r = {
    passive: !0,
    ...t,
    signal: n.signal
  };
  return [a, r, () => n.abort()];
}
const gV = /* @__PURE__ */ new Set([
  "BUTTON",
  "INPUT",
  "SELECT",
  "TEXTAREA",
  "A"
]);
function vV(e) {
  return gV.has(e.tagName) || e.tabIndex !== -1;
}
const jo = /* @__PURE__ */ new WeakSet();
function Rv(e) {
  return (t) => {
    t.key === "Enter" && e(t);
  };
}
function Du(e, t) {
  e.dispatchEvent(new PointerEvent("pointer" + t, { isPrimary: !0, bubbles: !0 }));
}
const hV = (e, t) => {
  const a = e.currentTarget;
  if (!a)
    return;
  const n = Rv(() => {
    if (jo.has(a))
      return;
    Du(a, "down");
    const r = Rv(() => {
      Du(a, "up");
    }), s = () => Du(a, "cancel");
    a.addEventListener("keyup", r, t), a.addEventListener("blur", s, t);
  });
  a.addEventListener("keydown", n, t), a.addEventListener("blur", () => a.removeEventListener("keydown", n), t);
};
function Lv(e) {
  return pV(e) && !0;
}
function mV(e, t, a = {}) {
  const [n, r, s] = Fw(e, a), i = (o) => {
    const l = o.currentTarget;
    if (!Lv(o))
      return;
    jo.add(l);
    const d = t(l, o), c = (g, v) => {
      window.removeEventListener("pointerup", f), window.removeEventListener("pointercancel", p), jo.has(l) && jo.delete(l), Lv(g) && typeof d == "function" && d(g, { success: v });
    }, f = (g) => {
      c(g, l === window || l === document || a.useGlobalTarget || Ow(l, g.target));
    }, p = (g) => {
      c(g, !1);
    };
    window.addEventListener("pointerup", f, r), window.addEventListener("pointercancel", p, r);
  };
  return n.forEach((o) => {
    (a.useGlobalTarget ? window : o).addEventListener("pointerdown", i, r), Lw(o) && (o.addEventListener("focus", (d) => hV(d, r)), !vV(o) && !o.hasAttribute("tabindex") && (o.tabIndex = 0));
  }), s;
}
function zw(e) {
  return {
    point: {
      x: e.pageX,
      y: e.pageY
    }
  };
}
function Ov(e, t, a) {
  const n = e.options;
  n.whilePress && e.setActive("whilePress", a === "Start");
  const r = `onPress${a === "End" ? "" : a}`, s = n[r];
  s && st.postRender(() => s(t, zw(t)));
}
class yV extends zn {
  isActive() {
    const { whilePress: t, onPress: a, onPressCancel: n, onPressStart: r } = this.state.options;
    return !!(t || a || n || r);
  }
  constructor(t) {
    super(t);
  }
  mount() {
    this.register();
  }
  update() {
    const { whilePress: t, onPress: a, onPressCancel: n, onPressStart: r } = this.state.options;
    t || a || n || r || this.register();
  }
  register() {
    const t = this.state.element;
    !t || !this.isActive() || (this.unmount(), this.unmount = mV(
      t,
      (a, n) => (Ov(this.state, n, "Start"), (r, { success: s }) => Ov(
        this.state,
        r,
        s ? "End" : "Cancel"
      )),
      { useGlobalTarget: this.state.options.globalPressTarget }
    ));
  }
}
function Fv(e) {
  return !(e.pointerType === "touch" || fV());
}
function bV(e, t, a = {}) {
  const [n, r, s] = Fw(e, a), i = (o) => {
    if (!Fv(o))
      return;
    const { target: l } = o, d = t(l, o);
    if (typeof d != "function" || !l)
      return;
    const c = (f) => {
      Fv(f) && (d(f), l.removeEventListener("pointerleave", c));
    };
    l.addEventListener("pointerleave", c, r);
  };
  return n.forEach((o) => {
    o.addEventListener("pointerenter", i, r);
  }), s;
}
function zv(e, t, a) {
  const n = e.options;
  n.whileHover && e.setActive("whileHover", a === "Start");
  const r = `onHover${a}`, s = n[r];
  s && st.postRender(() => s(t, zw(t)));
}
class wV extends zn {
  isActive() {
    const { whileHover: t, onHoverStart: a, onHoverEnd: n } = this.state.options;
    return !!(t || a || n);
  }
  constructor(t) {
    super(t);
  }
  mount() {
    this.register();
  }
  update() {
    const { whileHover: t, onHoverStart: a, onHoverEnd: n } = this.state.visualElement.prevProps;
    t || a || n || this.register();
  }
  register() {
    const t = this.state.element;
    !t || !this.isActive() || (this.unmount(), this.unmount = bV(
      t,
      (a, n) => (zv(this.state, n, "Start"), (r) => {
        zv(this.state, r, "End");
      })
    ));
  }
}
const CV = {
  some: 0,
  all: 1
};
function xV(e, t, { root: a, margin: n, amount: r = "some" } = {}) {
  const s = Zl(e), i = /* @__PURE__ */ new WeakMap(), o = (d) => {
    d.forEach((c) => {
      const f = i.get(c.target);
      if (c.isIntersecting !== !!f)
        if (c.isIntersecting) {
          const p = t(c.target, c);
          typeof p == "function" ? i.set(c.target, p) : l.unobserve(c.target);
        } else typeof f == "function" && (f(c), i.delete(c.target));
    });
  }, l = new IntersectionObserver(o, {
    root: a,
    rootMargin: n,
    threshold: typeof r == "number" ? r : CV[r]
  });
  return s.forEach((d) => l.observe(d)), () => l.disconnect();
}
function qv(e, t, a) {
  const n = e.options;
  n.whileInView && e.setActive("whileInView", a === "Enter");
  const r = `onViewport${a}`, s = n[r];
  s && st.postRender(() => s(t));
}
class SV extends zn {
  isActive() {
    const { whileInView: t, onViewportEnter: a, onViewportLeave: n } = this.state.options;
    return !!(t || a || n);
  }
  constructor(t) {
    super(t);
  }
  startObserver() {
    const t = this.state.element;
    if (!t || !this.isActive())
      return;
    this.unmount();
    const { once: a, ...n } = this.state.options.inViewOptions || {};
    this.unmount = xV(
      t,
      (r, s) => {
        if (qv(this.state, s, "Enter"), !a)
          return (i) => {
            qv(this.state, s, "Leave");
          };
      },
      n
    );
  }
  mount() {
    this.startObserver();
  }
  update() {
    const { props: t, prevProps: a } = this.state.visualElement;
    ["amount", "margin", "root"].some(
      _V(t, a)
    ) && this.startObserver();
  }
}
function _V({ inViewOptions: e = {} }, { inViewOptions: t = {} } = {}) {
  return (a) => e[a] !== t[a];
}
function bl(e, t, a, n = { passive: !0 }) {
  return e.addEventListener(t, a, n), () => e.removeEventListener(t, a);
}
class kV extends zn {
  constructor() {
    super(...arguments), this.isActive = !1;
  }
  onFocus() {
    let t = !1;
    try {
      t = this.state.element.matches(":focus-visible");
    } catch {
      t = !0;
    }
    t && (this.state.setActive("whileFocus", !0), this.isActive = !0);
  }
  onBlur() {
    this.isActive && (this.state.setActive("whileFocus", !1), this.isActive = !1);
  }
  mount() {
    this.unmount = Qi(
      bl(this.state.element, "focus", () => this.onFocus()),
      bl(this.state.element, "blur", () => this.onBlur())
    );
  }
}
const AV = (e, t) => e.depth - t.depth;
class $V {
  constructor() {
    this.children = [], this.isDirty = !1;
  }
  add(t) {
    np(this.children, t), this.isDirty = !0;
  }
  remove(t) {
    Ql(this.children, t), this.isDirty = !0;
  }
  forEach(t) {
    this.isDirty && this.children.sort(AV), this.isDirty = !1, this.children.forEach(t);
  }
}
function Mu(e) {
  return Tt(e) ? e.get() : e;
}
const qw = ["TopLeft", "TopRight", "BottomLeft", "BottomRight"], IV = qw.length, Vv = (e) => typeof e == "string" ? parseFloat(e) : e, Nv = (e) => typeof e == "number" || Ve.test(e);
function EV(e, t, a, n, r, s) {
  r ? (e.opacity = bt(0, a.opacity ?? 1, TV(n)), e.opacityExit = bt(t.opacity ?? 1, 0, BV(n))) : s && (e.opacity = bt(t.opacity ?? 1, a.opacity ?? 1, n));
  for (let i = 0; i < IV; i++) {
    const o = `border${qw[i]}Radius`;
    let l = Hv(t, o), d = Hv(a, o);
    if (l === void 0 && d === void 0)
      continue;
    l || (l = 0), d || (d = 0), l === 0 || d === 0 || Nv(l) === Nv(d) ? (e[o] = Math.max(bt(Vv(l), Vv(d), n), 0), (fn.test(d) || fn.test(l)) && (e[o] += "%")) : e[o] = d;
  }
  (t.rotate || a.rotate) && (e.rotate = bt(t.rotate || 0, a.rotate || 0, n));
}
function Hv(e, t) {
  return e[t] !== void 0 ? e[t] : e.borderRadius;
}
const TV = /* @__PURE__ */ Vw(0, 0.5, _w), BV = /* @__PURE__ */ Vw(0.5, 0.95, ua);
function Vw(e, t, a) {
  return (n) => n < e ? 0 : n > t ? 1 : a(/* @__PURE__ */ Pr(e, t, n));
}
function jv(e, t) {
  e.min = t.min, e.max = t.max;
}
function Ea(e, t) {
  jv(e.x, t.x), jv(e.y, t.y);
}
function Kv(e, t) {
  e.translate = t.translate, e.scale = t.scale, e.originPoint = t.originPoint, e.origin = t.origin;
}
function Ru(e) {
  return e === void 0 || e === 1;
}
function cc({ scale: e, scaleX: t, scaleY: a }) {
  return !Ru(e) || !Ru(t) || !Ru(a);
}
function vr(e) {
  return cc(e) || Nw(e) || e.z || e.rotate || e.rotateX || e.rotateY || e.skewX || e.skewY;
}
function Nw(e) {
  return Gv(e.x) || Gv(e.y);
}
function Gv(e) {
  return e && e !== "0%";
}
function wl(e, t, a) {
  const n = e - a, r = t * n;
  return a + r;
}
function Uv(e, t, a, n, r) {
  return r !== void 0 && (e = wl(e, r, n)), wl(e, a, n) + t;
}
function fc(e, t = 0, a = 1, n, r) {
  e.min = Uv(e.min, t, a, n, r), e.max = Uv(e.max, t, a, n, r);
}
function Hw(e, { x: t, y: a }) {
  fc(e.x, t.translate, t.scale, t.originPoint), fc(e.y, a.translate, a.scale, a.originPoint);
}
const Wv = 0.999999999999, Yv = 1.0000000000001;
function PV(e, t, a, n = !1) {
  const r = a.length;
  if (!r)
    return;
  t.x = t.y = 1;
  let s, i;
  for (let o = 0; o < r; o++) {
    s = a[o], i = s.projectionDelta;
    const { visualElement: l } = s.options;
    l && l.props.style && l.props.style.display === "contents" || (n && s.options.layoutScroll && s.scroll && s !== s.root && ns(e, {
      x: -s.scroll.offset.x,
      y: -s.scroll.offset.y
    }), i && (t.x *= i.x.scale, t.y *= i.y.scale, Hw(e, i)), n && vr(s.latestValues) && ns(e, s.latestValues));
  }
  t.x < Yv && t.x > Wv && (t.x = 1), t.y < Yv && t.y > Wv && (t.y = 1);
}
function xo(e, t) {
  e.min = e.min + t, e.max = e.max + t;
}
function Xv(e, t, a, n, r = 0.5) {
  const s = bt(e.min, e.max, r);
  fc(e, t, a, s, n);
}
function ns(e, t) {
  Xv(e.x, t.x, t.scaleX, t.scale, t.originX), Xv(e.y, t.y, t.scaleY, t.scale, t.originY);
}
const jw = 1e-4, DV = 1 - jw, MV = 1 + jw, Kw = 0.01, RV = 0 - Kw, LV = 0 + Kw;
function Ra(e) {
  return e.max - e.min;
}
function OV(e, t, a) {
  return Math.abs(e - t) <= a;
}
function Jv(e, t, a, n = 0.5) {
  e.origin = n, e.originPoint = bt(t.min, t.max, e.origin), e.scale = Ra(a) / Ra(t), e.translate = bt(a.min, a.max, e.origin) - e.originPoint, (e.scale >= DV && e.scale <= MV || isNaN(e.scale)) && (e.scale = 1), (e.translate >= RV && e.translate <= LV || isNaN(e.translate)) && (e.translate = 0);
}
function ci(e, t, a, n) {
  Jv(e.x, t.x, a.x, n ? n.originX : void 0), Jv(e.y, t.y, a.y, n ? n.originY : void 0);
}
function Qv(e, t, a) {
  e.min = a.min + t.min, e.max = e.min + Ra(t);
}
function FV(e, t, a) {
  Qv(e.x, t.x, a.x), Qv(e.y, t.y, a.y);
}
function Zv(e, t, a) {
  e.min = t.min - a.min, e.max = e.min + Ra(t);
}
function fi(e, t, a) {
  Zv(e.x, t.x, a.x), Zv(e.y, t.y, a.y);
}
function eh(e, t, a, n, r) {
  return e -= t, e = wl(e, 1 / a, n), r !== void 0 && (e = wl(e, 1 / r, n)), e;
}
function zV(e, t = 0, a = 1, n = 0.5, r, s = e, i = e) {
  if (fn.test(t) && (t = parseFloat(t), t = bt(i.min, i.max, t / 100) - i.min), typeof t != "number")
    return;
  let o = bt(s.min, s.max, n);
  e === s && (o -= t), e.min = eh(e.min, t, a, o, r), e.max = eh(e.max, t, a, o, r);
}
function th(e, t, [a, n, r], s, i) {
  zV(e, t[a], t[n], t[r], t.scale, s, i);
}
const qV = ["x", "scaleX", "originX"], VV = ["y", "scaleY", "originY"];
function ah(e, t, a, n) {
  th(e.x, t, qV, a ? a.x : void 0, n ? n.x : void 0), th(e.y, t, VV, a ? a.y : void 0, n ? n.y : void 0);
}
function nh(e) {
  return e.translate === 0 && e.scale === 1;
}
function Gw(e) {
  return nh(e.x) && nh(e.y);
}
function rh(e, t) {
  return e.min === t.min && e.max === t.max;
}
function NV(e, t) {
  return rh(e.x, t.x) && rh(e.y, t.y);
}
function sh(e, t) {
  return Math.round(e.min) === Math.round(t.min) && Math.round(e.max) === Math.round(t.max);
}
function Uw(e, t) {
  return sh(e.x, t.x) && sh(e.y, t.y);
}
function ih(e) {
  return Ra(e.x) / Ra(e.y);
}
function oh(e, t) {
  return e.translate === t.translate && e.scale === t.scale && e.originPoint === t.originPoint;
}
class HV {
  constructor() {
    this.members = [];
  }
  add(t) {
    np(this.members, t), t.scheduleRender();
  }
  remove(t) {
    if (Ql(this.members, t), t === this.prevLead && (this.prevLead = void 0), t === this.lead) {
      const a = this.members[this.members.length - 1];
      a && this.promote(a);
    }
  }
  relegate(t) {
    const a = this.members.findIndex((r) => t === r);
    if (a === 0)
      return !1;
    let n;
    for (let r = a; r >= 0; r--) {
      const s = this.members[r];
      if (s.isPresent !== !1) {
        n = s;
        break;
      }
    }
    return n ? (this.promote(n), !0) : !1;
  }
  promote(t, a) {
    const n = this.lead;
    if (t !== n && (this.prevLead = n, this.lead = t, t.show(), n)) {
      n.instance && n.scheduleRender(), t.scheduleRender(), t.resumeFrom = n, a && (t.resumeFrom.preserveOpacity = !0), n.snapshot && (t.snapshot = n.snapshot, t.snapshot.latestValues = n.animationValues || n.latestValues), t.root && t.root.isUpdating && (t.isLayoutDirty = !0);
      const { crossfade: r } = t.options;
      r === !1 && n.hide();
    }
  }
  exitAnimationComplete() {
    this.members.forEach((t) => {
      const { options: a, resumingFrom: n } = t;
      a.onExitComplete && a.onExitComplete(), n && n.options.onExitComplete && n.options.onExitComplete();
    });
  }
  scheduleRender() {
    this.members.forEach((t) => {
      t.instance && t.scheduleRender(!1);
    });
  }
  /**
   * Clear any leads that have been removed this render to prevent them from being
   * used in future animations and to prevent memory leaks
   */
  removeLeadSnapshot() {
    this.lead && this.lead.snapshot && (this.lead.snapshot = void 0);
  }
}
function jV(e, t, a) {
  let n = "";
  const r = e.x.translate / t.x, s = e.y.translate / t.y, i = a?.z || 0;
  if ((r || s || i) && (n = `translate3d(${r}px, ${s}px, ${i}px) `), (t.x !== 1 || t.y !== 1) && (n += `scale(${1 / t.x}, ${1 / t.y}) `), a) {
    const { transformPerspective: d, rotate: c, rotateX: f, rotateY: p, skewX: g, skewY: v } = a;
    d && (n = `perspective(${d}px) ${n}`), c && (n += `rotate(${c}deg) `), f && (n += `rotateX(${f}deg) `), p && (n += `rotateY(${p}deg) `), g && (n += `skewX(${g}deg) `), v && (n += `skewY(${v}deg) `);
  }
  const o = e.x.scale * t.x, l = e.y.scale * t.y;
  return (o !== 1 || l !== 1) && (n += `scale(${o}, ${l})`), n || "none";
}
function lh(e) {
  return [e("x"), e("y")];
}
const Ko = {
  /**
   * Global flag as to whether the tree has animated since the last time
   * we resized the window
   */
  hasAnimatedSinceResize: !0,
  /**
   * We set this to true once, on the first update. Any nodes added to the tree beyond that
   * update will be given a `data-projection-id` attribute.
   */
  hasEverUpdated: !1
}, Lu = ["", "X", "Y", "Z"], KV = 1e3;
let GV = 0;
function Ou(e, t, a, n) {
  const { latestValues: r } = t;
  r[e] && (a[e] = r[e], t.setStaticValue(e, 0), n && (n[e] = 0));
}
function Ww(e) {
  if (e.hasCheckedOptimisedAppear = !0, e.root === e)
    return;
  const { visualElement: t } = e.options;
  if (!t)
    return;
  const a = fw(t);
  if (window.MotionHasOptimisedAnimation(a, "transform")) {
    const { layout: r, layoutId: s } = e.options;
    window.MotionCancelOptimisedAnimation(a, "transform", st, !(r || s));
  }
  const { parent: n } = e;
  n && !n.hasCheckedOptimisedAppear && Ww(n);
}
function Yw({ attachResizeListener: e, defaultParent: t, measureScroll: a, checkIsScrollRoot: n, resetTransform: r }) {
  return class {
    constructor(i = {}, o = t?.()) {
      this.id = GV++, this.animationId = 0, this.animationCommitId = 0, this.children = /* @__PURE__ */ new Set(), this.options = {}, this.isTreeAnimating = !1, this.isAnimationBlocked = !1, this.isLayoutDirty = !1, this.isProjectionDirty = !1, this.isSharedProjectionDirty = !1, this.isTransformDirty = !1, this.updateManuallyBlocked = !1, this.updateBlockedByResize = !1, this.isUpdating = !1, this.isSVG = !1, this.needsReset = !1, this.shouldResetTransform = !1, this.hasCheckedOptimisedAppear = !1, this.treeScale = { x: 1, y: 1 }, this.eventHandlers = /* @__PURE__ */ new Map(), this.hasTreeAnimated = !1, this.updateScheduled = !1, this.scheduleUpdate = () => this.update(), this.projectionUpdateScheduled = !1, this.checkUpdateFailed = () => {
        this.isUpdating && (this.isUpdating = !1, this.clearAllSnapshots());
      }, this.updateProjection = () => {
        this.projectionUpdateScheduled = !1, this.nodes.forEach(YV), this.nodes.forEach(ZV), this.nodes.forEach(e3), this.nodes.forEach(XV);
      }, this.resolvedRelativeTargetAt = 0, this.hasProjected = !1, this.isVisible = !0, this.animationProgress = 0, this.sharedNodes = /* @__PURE__ */ new Map(), this.latestValues = i, this.root = o ? o.root || o : this, this.path = o ? [...o.path, o] : [], this.parent = o, this.depth = o ? o.depth + 1 : 0;
      for (let l = 0; l < this.path.length; l++)
        this.path[l].shouldResetTransform = !0;
      this.root === this && (this.nodes = new $V());
    }
    addEventListener(i, o) {
      return this.eventHandlers.has(i) || this.eventHandlers.set(i, new rp()), this.eventHandlers.get(i).add(o);
    }
    notifyListeners(i, ...o) {
      const l = this.eventHandlers.get(i);
      l && l.notify(...o);
    }
    hasListeners(i) {
      return this.eventHandlers.has(i);
    }
    /**
     * Lifecycles
     */
    mount(i) {
      if (this.instance)
        return;
      this.isSVG = tu(i) && !Dw(i), this.instance = i;
      const { layoutId: o, layout: l, visualElement: d } = this.options;
      if (d && !d.current && d.mount(i), this.root.nodes.add(this), this.parent && this.parent.children.add(this), this.root.hasTreeAnimated && (l || o) && (this.isLayoutDirty = !0), e) {
        let c, f = 0;
        const p = () => this.root.updateBlockedByResize = !1;
        st.read(() => {
          f = window.innerWidth;
        }), e(i, () => {
          const g = window.innerWidth;
          g !== f && (f = g, this.root.updateBlockedByResize = !0, c && c(), c = qO(p, 250), Ko.hasAnimatedSinceResize && (Ko.hasAnimatedSinceResize = !1, this.nodes.forEach(ch)));
        });
      }
      o && this.root.registerSharedNode(o, this), this.options.animate !== !1 && d && (o || l) && this.addEventListener("didUpdate", ({ delta: c, hasLayoutChanged: f, hasRelativeLayoutChanged: p, layout: g }) => {
        if (this.isTreeAnimationBlocked()) {
          this.target = void 0, this.relativeTarget = void 0;
          return;
        }
        const v = this.options.transition || d.getDefaultTransition() || s3, { onLayoutAnimationStart: m, onLayoutAnimationComplete: y } = d.getProps(), x = !this.targetLayout || !Uw(this.targetLayout, g), b = !f && p;
        if (this.options.layoutRoot || this.resumeFrom || b || f && (x || !this.currentAnimation)) {
          this.resumeFrom && (this.resumingFrom = this.resumeFrom, this.resumingFrom.resumingFrom = void 0);
          const C = {
            ...vp(v, "layout"),
            onPlay: m,
            onComplete: y
          };
          (d.shouldReduceMotion || this.options.layoutRoot) && (C.delay = 0, C.type = !1), this.startAnimation(C), this.setAnimationOrigin(c, b);
        } else
          f || ch(this), this.isLead() && this.options.onExitComplete && this.options.onExitComplete();
        this.targetLayout = g;
      });
    }
    unmount() {
      this.options.layoutId && this.willUpdate(), this.root.nodes.remove(this);
      const i = this.getStack();
      i && i.remove(this), this.parent && this.parent.children.delete(this), this.instance = void 0, this.eventHandlers.clear(), Fa(this.updateProjection);
    }
    // only on the root
    blockUpdate() {
      this.updateManuallyBlocked = !0;
    }
    unblockUpdate() {
      this.updateManuallyBlocked = !1;
    }
    isUpdateBlocked() {
      return this.updateManuallyBlocked || this.updateBlockedByResize;
    }
    isTreeAnimationBlocked() {
      return this.isAnimationBlocked || this.parent && this.parent.isTreeAnimationBlocked() || !1;
    }
    // Note: currently only running on root node
    startUpdate() {
      this.isUpdateBlocked() || (this.isUpdating = !0, this.nodes && this.nodes.forEach(t3), this.animationId++);
    }
    getTransformTemplate() {
      const { visualElement: i } = this.options;
      return i && i.getProps().transformTemplate;
    }
    willUpdate(i = !0) {
      if (this.root.hasTreeAnimated = !0, this.root.isUpdateBlocked()) {
        this.options.onExitComplete && this.options.onExitComplete();
        return;
      }
      if (window.MotionCancelOptimisedAnimation && !this.hasCheckedOptimisedAppear && Ww(this), !this.root.isUpdating && this.root.startUpdate(), this.isLayoutDirty)
        return;
      this.isLayoutDirty = !0;
      for (let c = 0; c < this.path.length; c++) {
        const f = this.path[c];
        f.shouldResetTransform = !0, f.updateScroll("snapshot"), f.options.layoutRoot && f.willUpdate(!1);
      }
      const { layoutId: o, layout: l } = this.options;
      if (o === void 0 && !l)
        return;
      const d = this.getTransformTemplate();
      this.prevTransformTemplateValue = d ? d(this.latestValues, "") : void 0, this.updateSnapshot(), i && this.notifyListeners("willUpdate");
    }
    update() {
      if (this.updateScheduled = !1, this.isUpdateBlocked()) {
        this.unblockUpdate(), this.clearAllSnapshots(), this.nodes.forEach(uh);
        return;
      }
      if (this.animationId <= this.animationCommitId) {
        this.nodes.forEach(dh);
        return;
      }
      this.animationCommitId = this.animationId, this.isUpdating ? (this.isUpdating = !1, this.nodes.forEach(QV), this.nodes.forEach(UV), this.nodes.forEach(WV)) : this.nodes.forEach(dh), this.clearAllSnapshots();
      const o = ya.now();
      Gt.delta = gn(0, 1e3 / 60, o - Gt.timestamp), Gt.timestamp = o, Gt.isProcessing = !0, $u.update.process(Gt), $u.preRender.process(Gt), $u.render.process(Gt), Gt.isProcessing = !1;
    }
    didUpdate() {
      this.updateScheduled || (this.updateScheduled = !0, Y0.read(this.scheduleUpdate));
    }
    clearAllSnapshots() {
      this.nodes.forEach(JV), this.sharedNodes.forEach(a3);
    }
    scheduleUpdateProjection() {
      this.projectionUpdateScheduled || (this.projectionUpdateScheduled = !0, st.preRender(this.updateProjection, !1, !0));
    }
    scheduleCheckAfterUnmount() {
      st.postRender(() => {
        this.isLayoutDirty ? this.root.didUpdate() : this.root.checkUpdateFailed();
      });
    }
    /**
     * Update measurements
     */
    updateSnapshot() {
      this.snapshot || !this.instance || (this.snapshot = this.measure(), this.snapshot && !Ra(this.snapshot.measuredBox.x) && !Ra(this.snapshot.measuredBox.y) && (this.snapshot = void 0));
    }
    updateLayout() {
      if (!this.instance || (this.updateScroll(), !(this.options.alwaysMeasureLayout && this.isLead()) && !this.isLayoutDirty))
        return;
      if (this.resumeFrom && !this.resumeFrom.instance)
        for (let l = 0; l < this.path.length; l++)
          this.path[l].updateScroll();
      const i = this.layout;
      this.layout = this.measure(!1), this.layoutCorrected = Pt(), this.isLayoutDirty = !1, this.projectionDelta = void 0, this.notifyListeners("measure", this.layout.layoutBox);
      const { visualElement: o } = this.options;
      o && o.notify("LayoutMeasure", this.layout.layoutBox, i ? i.layoutBox : void 0);
    }
    updateScroll(i = "measure") {
      let o = !!(this.options.layoutScroll && this.instance);
      if (this.scroll && this.scroll.animationId === this.root.animationId && this.scroll.phase === i && (o = !1), o && this.instance) {
        const l = n(this.instance);
        this.scroll = {
          animationId: this.root.animationId,
          phase: i,
          isRoot: l,
          offset: a(this.instance),
          wasRoot: this.scroll ? this.scroll.isRoot : l
        };
      }
    }
    resetTransform() {
      if (!r)
        return;
      const i = this.isLayoutDirty || this.shouldResetTransform || this.options.alwaysMeasureLayout, o = this.projectionDelta && !Gw(this.projectionDelta), l = this.getTransformTemplate(), d = l ? l(this.latestValues, "") : void 0, c = d !== this.prevTransformTemplateValue;
      i && this.instance && (o || vr(this.latestValues) || c) && (r(this.instance, d), this.shouldResetTransform = !1, this.scheduleRender());
    }
    measure(i = !0) {
      const o = this.measurePageBox();
      let l = this.removeElementScroll(o);
      return i && (l = this.removeTransform(l)), i3(l), {
        animationId: this.root.animationId,
        measuredBox: o,
        layoutBox: l,
        latestValues: {},
        source: this.id
      };
    }
    measurePageBox() {
      var i;
      const { visualElement: o } = this.options;
      if (!o)
        return Pt();
      const l = o.measureViewportBox();
      if (!(((i = this.scroll) == null ? void 0 : i.wasRoot) || this.path.some(o3))) {
        const { scroll: c } = this.root;
        c && (xo(l.x, c.offset.x), xo(l.y, c.offset.y));
      }
      return l;
    }
    removeElementScroll(i) {
      var o;
      const l = Pt();
      if (Ea(l, i), (o = this.scroll) != null && o.wasRoot)
        return l;
      for (let d = 0; d < this.path.length; d++) {
        const c = this.path[d], { scroll: f, options: p } = c;
        c !== this.root && f && p.layoutScroll && (f.wasRoot && Ea(l, i), xo(l.x, f.offset.x), xo(l.y, f.offset.y));
      }
      return l;
    }
    applyTransform(i, o = !1) {
      const l = Pt();
      Ea(l, i);
      for (let d = 0; d < this.path.length; d++) {
        const c = this.path[d];
        !o && c.options.layoutScroll && c.scroll && c !== c.root && ns(l, {
          x: -c.scroll.offset.x,
          y: -c.scroll.offset.y
        }), vr(c.latestValues) && ns(l, c.latestValues);
      }
      return vr(this.latestValues) && ns(l, this.latestValues), l;
    }
    removeTransform(i) {
      const o = Pt();
      Ea(o, i);
      for (let l = 0; l < this.path.length; l++) {
        const d = this.path[l];
        if (!d.instance || !vr(d.latestValues))
          continue;
        cc(d.latestValues) && d.updateSnapshot();
        const c = Pt(), f = d.measurePageBox();
        Ea(c, f), ah(o, d.latestValues, d.snapshot ? d.snapshot.layoutBox : void 0, c);
      }
      return vr(this.latestValues) && ah(o, this.latestValues), o;
    }
    setTargetDelta(i) {
      this.targetDelta = i, this.root.scheduleUpdateProjection(), this.isProjectionDirty = !0;
    }
    setOptions(i) {
      this.options = {
        ...this.options,
        ...i,
        crossfade: i.crossfade !== void 0 ? i.crossfade : !0
      };
    }
    clearMeasurements() {
      this.scroll = void 0, this.layout = void 0, this.snapshot = void 0, this.prevTransformTemplateValue = void 0, this.targetDelta = void 0, this.target = void 0, this.isLayoutDirty = !1;
    }
    forceRelativeParentToResolveTarget() {
      this.relativeParent && this.relativeParent.resolvedRelativeTargetAt !== Gt.timestamp && this.relativeParent.resolveTargetDelta(!0);
    }
    resolveTargetDelta(i = !1) {
      var o;
      const l = this.getLead();
      this.isProjectionDirty || (this.isProjectionDirty = l.isProjectionDirty), this.isTransformDirty || (this.isTransformDirty = l.isTransformDirty), this.isSharedProjectionDirty || (this.isSharedProjectionDirty = l.isSharedProjectionDirty);
      const d = !!this.resumingFrom || this !== l;
      if (!(i || d && this.isSharedProjectionDirty || this.isProjectionDirty || (o = this.parent) != null && o.isProjectionDirty || this.attemptToResolveRelativeTarget || this.root.updateBlockedByResize))
        return;
      const { layout: f, layoutId: p } = this.options;
      if (!(!this.layout || !(f || p))) {
        if (this.resolvedRelativeTargetAt = Gt.timestamp, !this.targetDelta && !this.relativeTarget) {
          const g = this.getClosestProjectingParent();
          g && g.layout && this.animationProgress !== 1 ? (this.relativeParent = g, this.forceRelativeParentToResolveTarget(), this.relativeTarget = Pt(), this.relativeTargetOrigin = Pt(), fi(this.relativeTargetOrigin, this.layout.layoutBox, g.layout.layoutBox), Ea(this.relativeTarget, this.relativeTargetOrigin)) : this.relativeParent = this.relativeTarget = void 0;
        }
        if (!(!this.relativeTarget && !this.targetDelta) && (this.target || (this.target = Pt(), this.targetWithTransforms = Pt()), this.relativeTarget && this.relativeTargetOrigin && this.relativeParent && this.relativeParent.target ? (this.forceRelativeParentToResolveTarget(), FV(this.target, this.relativeTarget, this.relativeParent.target)) : this.targetDelta ? (this.resumingFrom ? this.target = this.applyTransform(this.layout.layoutBox) : Ea(this.target, this.layout.layoutBox), Hw(this.target, this.targetDelta)) : Ea(this.target, this.layout.layoutBox), this.attemptToResolveRelativeTarget)) {
          this.attemptToResolveRelativeTarget = !1;
          const g = this.getClosestProjectingParent();
          g && !!g.resumingFrom == !!this.resumingFrom && !g.options.layoutScroll && g.target && this.animationProgress !== 1 ? (this.relativeParent = g, this.forceRelativeParentToResolveTarget(), this.relativeTarget = Pt(), this.relativeTargetOrigin = Pt(), fi(this.relativeTargetOrigin, this.target, g.target), Ea(this.relativeTarget, this.relativeTargetOrigin)) : this.relativeParent = this.relativeTarget = void 0;
        }
      }
    }
    getClosestProjectingParent() {
      if (!(!this.parent || cc(this.parent.latestValues) || Nw(this.parent.latestValues)))
        return this.parent.isProjecting() ? this.parent : this.parent.getClosestProjectingParent();
    }
    isProjecting() {
      return !!((this.relativeTarget || this.targetDelta || this.options.layoutRoot) && this.layout);
    }
    calcProjection() {
      var i;
      const o = this.getLead(), l = !!this.resumingFrom || this !== o;
      let d = !0;
      if ((this.isProjectionDirty || (i = this.parent) != null && i.isProjectionDirty) && (d = !1), l && (this.isSharedProjectionDirty || this.isTransformDirty) && (d = !1), this.resolvedRelativeTargetAt === Gt.timestamp && (d = !1), d)
        return;
      const { layout: c, layoutId: f } = this.options;
      if (this.isTreeAnimating = !!(this.parent && this.parent.isTreeAnimating || this.currentAnimation || this.pendingAnimation), this.isTreeAnimating || (this.targetDelta = this.relativeTarget = void 0), !this.layout || !(c || f))
        return;
      Ea(this.layoutCorrected, this.layout.layoutBox);
      const p = this.treeScale.x, g = this.treeScale.y;
      PV(this.layoutCorrected, this.treeScale, this.path, l), o.layout && !o.target && (this.treeScale.x !== 1 || this.treeScale.y !== 1) && (o.target = o.layout.layoutBox, o.targetWithTransforms = Pt());
      const { target: v } = o;
      if (!v) {
        this.prevProjectionDelta && (this.createProjectionDeltas(), this.scheduleRender());
        return;
      }
      !this.projectionDelta || !this.prevProjectionDelta ? this.createProjectionDeltas() : (Kv(this.prevProjectionDelta.x, this.projectionDelta.x), Kv(this.prevProjectionDelta.y, this.projectionDelta.y)), ci(this.projectionDelta, this.layoutCorrected, v, this.latestValues), (this.treeScale.x !== p || this.treeScale.y !== g || !oh(this.projectionDelta.x, this.prevProjectionDelta.x) || !oh(this.projectionDelta.y, this.prevProjectionDelta.y)) && (this.hasProjected = !0, this.scheduleRender(), this.notifyListeners("projectionUpdate", v));
    }
    hide() {
      this.isVisible = !1;
    }
    show() {
      this.isVisible = !0;
    }
    scheduleRender(i = !0) {
      var o;
      if ((o = this.options.visualElement) == null || o.scheduleRender(), i) {
        const l = this.getStack();
        l && l.scheduleRender();
      }
      this.resumingFrom && !this.resumingFrom.instance && (this.resumingFrom = void 0);
    }
    createProjectionDeltas() {
      this.prevProjectionDelta = es(), this.projectionDelta = es(), this.projectionDeltaWithTransform = es();
    }
    setAnimationOrigin(i, o = !1) {
      const l = this.snapshot, d = l ? l.latestValues : {}, c = { ...this.latestValues }, f = es();
      (!this.relativeParent || !this.relativeParent.options.layoutRoot) && (this.relativeTarget = this.relativeTargetOrigin = void 0), this.attemptToResolveRelativeTarget = !o;
      const p = Pt(), g = l ? l.source : void 0, v = this.layout ? this.layout.source : void 0, m = g !== v, y = this.getStack(), x = !y || y.members.length <= 1, b = !!(m && !x && this.options.crossfade === !0 && !this.path.some(r3));
      this.animationProgress = 0;
      let C;
      this.mixTargetDelta = (w) => {
        const $ = w / 1e3;
        fh(f.x, i.x, $), fh(f.y, i.y, $), this.setTargetDelta(f), this.relativeTarget && this.relativeTargetOrigin && this.layout && this.relativeParent && this.relativeParent.layout && (fi(p, this.layout.layoutBox, this.relativeParent.layout.layoutBox), n3(this.relativeTarget, this.relativeTargetOrigin, p, $), C && NV(this.relativeTarget, C) && (this.isProjectionDirty = !1), C || (C = Pt()), Ea(C, this.relativeTarget)), m && (this.animationValues = c, EV(c, d, this.latestValues, $, b, x)), this.root.scheduleUpdateProjection(), this.scheduleRender(), this.animationProgress = $;
      }, this.mixTargetDelta(this.options.layoutRoot ? 1e3 : 0);
    }
    startAnimation(i) {
      var o, l, d;
      this.notifyListeners("animationStart"), (o = this.currentAnimation) == null || o.stop(), (d = (l = this.resumingFrom) == null ? void 0 : l.currentAnimation) == null || d.stop(), this.pendingAnimation && (Fa(this.pendingAnimation), this.pendingAnimation = void 0), this.pendingAnimation = st.update(() => {
        Ko.hasAnimatedSinceResize = !0, this.motionValue || (this.motionValue = Ma(0)), this.currentAnimation = Mw(this.motionValue, [0, 1e3], {
          ...i,
          velocity: 0,
          isSync: !0,
          onUpdate: (c) => {
            this.mixTargetDelta(c), i.onUpdate && i.onUpdate(c);
          },
          onStop: () => {
          },
          onComplete: () => {
            i.onComplete && i.onComplete(), this.completeAnimation();
          }
        }), this.resumingFrom && (this.resumingFrom.currentAnimation = this.currentAnimation), this.pendingAnimation = void 0;
      });
    }
    completeAnimation() {
      this.resumingFrom && (this.resumingFrom.currentAnimation = void 0, this.resumingFrom.preserveOpacity = void 0);
      const i = this.getStack();
      i && i.exitAnimationComplete(), this.resumingFrom = this.currentAnimation = this.animationValues = void 0, this.notifyListeners("animationComplete");
    }
    finishAnimation() {
      this.currentAnimation && (this.mixTargetDelta && this.mixTargetDelta(KV), this.currentAnimation.stop()), this.completeAnimation();
    }
    applyTransformsToTarget() {
      const i = this.getLead();
      let { targetWithTransforms: o, target: l, layout: d, latestValues: c } = i;
      if (!(!o || !l || !d)) {
        if (this !== i && this.layout && d && Xw(this.options.animationType, this.layout.layoutBox, d.layoutBox)) {
          l = this.target || Pt();
          const f = Ra(this.layout.layoutBox.x);
          l.x.min = i.target.x.min, l.x.max = l.x.min + f;
          const p = Ra(this.layout.layoutBox.y);
          l.y.min = i.target.y.min, l.y.max = l.y.min + p;
        }
        Ea(o, l), ns(o, c), ci(this.projectionDeltaWithTransform, this.layoutCorrected, o, c);
      }
    }
    registerSharedNode(i, o) {
      this.sharedNodes.has(i) || this.sharedNodes.set(i, new HV()), this.sharedNodes.get(i).add(o);
      const d = o.options.initialPromotionConfig;
      o.promote({
        transition: d ? d.transition : void 0,
        preserveFollowOpacity: d && d.shouldPreserveFollowOpacity ? d.shouldPreserveFollowOpacity(o) : void 0
      });
    }
    isLead() {
      const i = this.getStack();
      return i ? i.lead === this : !0;
    }
    getLead() {
      var i;
      const { layoutId: o } = this.options;
      return o ? ((i = this.getStack()) == null ? void 0 : i.lead) || this : this;
    }
    getPrevLead() {
      var i;
      const { layoutId: o } = this.options;
      return o ? (i = this.getStack()) == null ? void 0 : i.prevLead : void 0;
    }
    getStack() {
      const { layoutId: i } = this.options;
      if (i)
        return this.root.sharedNodes.get(i);
    }
    promote({ needsReset: i, transition: o, preserveFollowOpacity: l } = {}) {
      const d = this.getStack();
      d && d.promote(this, l), i && (this.projectionDelta = void 0, this.needsReset = !0), o && this.setOptions({ transition: o });
    }
    relegate() {
      const i = this.getStack();
      return i ? i.relegate(this) : !1;
    }
    resetSkewAndRotation() {
      const { visualElement: i } = this.options;
      if (!i)
        return;
      let o = !1;
      const { latestValues: l } = i;
      if ((l.z || l.rotate || l.rotateX || l.rotateY || l.rotateZ || l.skewX || l.skewY) && (o = !0), !o)
        return;
      const d = {};
      l.z && Ou("z", i, d, this.animationValues);
      for (let c = 0; c < Lu.length; c++)
        Ou(`rotate${Lu[c]}`, i, d, this.animationValues), Ou(`skew${Lu[c]}`, i, d, this.animationValues);
      i.render();
      for (const c in d)
        i.setStaticValue(c, d[c]), this.animationValues && (this.animationValues[c] = d[c]);
      i.scheduleRender();
    }
    applyProjectionStyles(i, o) {
      if (!this.instance || this.isSVG)
        return;
      if (!this.isVisible) {
        i.visibility = "hidden";
        return;
      }
      const l = this.getTransformTemplate();
      if (this.needsReset) {
        this.needsReset = !1, i.visibility = "", i.opacity = "", i.pointerEvents = Mu(o?.pointerEvents) || "", i.transform = l ? l(this.latestValues, "") : "none";
        return;
      }
      const d = this.getLead();
      if (!this.projectionDelta || !this.layout || !d.target) {
        this.options.layoutId && (i.opacity = this.latestValues.opacity !== void 0 ? this.latestValues.opacity : 1, i.pointerEvents = Mu(o?.pointerEvents) || ""), this.hasProjected && !vr(this.latestValues) && (i.transform = l ? l({}, "") : "none", this.hasProjected = !1);
        return;
      }
      i.visibility = "";
      const c = d.animationValues || d.latestValues;
      this.applyTransformsToTarget();
      let f = jV(this.projectionDeltaWithTransform, this.treeScale, c);
      l && (f = l(c, f)), i.transform = f;
      const { x: p, y: g } = this.projectionDelta;
      i.transformOrigin = `${p.origin * 100}% ${g.origin * 100}% 0`, d.animationValues ? i.opacity = d === this ? c.opacity ?? this.latestValues.opacity ?? 1 : this.preserveOpacity ? this.latestValues.opacity : c.opacityExit : i.opacity = d === this ? c.opacity !== void 0 ? c.opacity : "" : c.opacityExit !== void 0 ? c.opacityExit : 0;
      for (const v in Ai) {
        if (c[v] === void 0)
          continue;
        const { correct: m, applyTo: y, isCSSVariable: x } = Ai[v], b = f === "none" ? c[v] : m(c[v], d);
        if (y) {
          const C = y.length;
          for (let w = 0; w < C; w++)
            i[y[w]] = b;
        } else
          x ? this.options.visualElement.renderState.vars[v] = b : i[v] = b;
      }
      this.options.layoutId && (i.pointerEvents = d === this ? Mu(o?.pointerEvents) || "" : "none");
    }
    clearSnapshot() {
      this.resumeFrom = this.snapshot = void 0;
    }
    // Only run on root
    resetTree() {
      this.root.nodes.forEach((i) => {
        var o;
        return (o = i.currentAnimation) == null ? void 0 : o.stop();
      }), this.root.nodes.forEach(uh), this.root.sharedNodes.clear();
    }
  };
}
function UV(e) {
  e.updateLayout();
}
function WV(e) {
  var t;
  const a = ((t = e.resumeFrom) == null ? void 0 : t.snapshot) || e.snapshot;
  if (e.isLead() && e.layout && a && e.hasListeners("didUpdate")) {
    const { layoutBox: n, measuredBox: r } = e.layout, { animationType: s } = e.options, i = a.source !== e.layout.source;
    s === "size" ? lh((f) => {
      const p = i ? a.measuredBox[f] : a.layoutBox[f], g = Ra(p);
      p.min = n[f].min, p.max = p.min + g;
    }) : Xw(s, a.layoutBox, n) && lh((f) => {
      const p = i ? a.measuredBox[f] : a.layoutBox[f], g = Ra(n[f]);
      p.max = p.min + g, e.relativeTarget && !e.currentAnimation && (e.isProjectionDirty = !0, e.relativeTarget[f].max = e.relativeTarget[f].min + g);
    });
    const o = es();
    ci(o, n, a.layoutBox);
    const l = es();
    i ? ci(l, e.applyTransform(r, !0), a.measuredBox) : ci(l, n, a.layoutBox);
    const d = !Gw(o);
    let c = !1;
    if (!e.resumeFrom) {
      const f = e.getClosestProjectingParent();
      if (f && !f.resumeFrom) {
        const { snapshot: p, layout: g } = f;
        if (p && g) {
          const v = Pt();
          fi(v, a.layoutBox, p.layoutBox);
          const m = Pt();
          fi(m, n, g.layoutBox), Uw(v, m) || (c = !0), f.options.layoutRoot && (e.relativeTarget = m, e.relativeTargetOrigin = v, e.relativeParent = f);
        }
      }
    }
    e.notifyListeners("didUpdate", {
      layout: n,
      snapshot: a,
      delta: l,
      layoutDelta: o,
      hasLayoutChanged: d,
      hasRelativeLayoutChanged: c
    });
  } else if (e.isLead()) {
    const { onExitComplete: n } = e.options;
    n && n();
  }
  e.options.transition = void 0;
}
function YV(e) {
  e.parent && (e.isProjecting() || (e.isProjectionDirty = e.parent.isProjectionDirty), e.isSharedProjectionDirty || (e.isSharedProjectionDirty = !!(e.isProjectionDirty || e.parent.isProjectionDirty || e.parent.isSharedProjectionDirty)), e.isTransformDirty || (e.isTransformDirty = e.parent.isTransformDirty));
}
function XV(e) {
  e.isProjectionDirty = e.isSharedProjectionDirty = e.isTransformDirty = !1;
}
function JV(e) {
  e.clearSnapshot();
}
function uh(e) {
  e.clearMeasurements();
}
function dh(e) {
  e.isLayoutDirty = !1;
}
function QV(e) {
  const { visualElement: t } = e.options;
  t && t.getProps().onBeforeLayoutMeasure && t.notify("BeforeLayoutMeasure"), e.resetTransform();
}
function ch(e) {
  e.finishAnimation(), e.targetDelta = e.relativeTarget = e.target = void 0, e.isProjectionDirty = !0;
}
function ZV(e) {
  e.resolveTargetDelta();
}
function e3(e) {
  e.calcProjection();
}
function t3(e) {
  e.resetSkewAndRotation();
}
function a3(e) {
  e.removeLeadSnapshot();
}
function fh(e, t, a) {
  e.translate = bt(t.translate, 0, a), e.scale = bt(t.scale, 1, a), e.origin = t.origin, e.originPoint = t.originPoint;
}
function ph(e, t, a, n) {
  e.min = bt(t.min, a.min, n), e.max = bt(t.max, a.max, n);
}
function n3(e, t, a, n) {
  ph(e.x, t.x, a.x, n), ph(e.y, t.y, a.y, n);
}
function r3(e) {
  return e.animationValues && e.animationValues.opacityExit !== void 0;
}
const s3 = {
  duration: 0.45,
  ease: [0.4, 0, 0.1, 1]
}, gh = (e) => typeof navigator < "u" && navigator.userAgent && navigator.userAgent.toLowerCase().includes(e), vh = gh("applewebkit/") && !gh("chrome/") ? Math.round : ua;
function hh(e) {
  e.min = vh(e.min), e.max = vh(e.max);
}
function i3(e) {
  hh(e.x), hh(e.y);
}
function Xw(e, t, a) {
  return e === "position" || e === "preserve-aspect" && !OV(ih(t), ih(a), 0.2);
}
function o3(e) {
  var t;
  return e !== e.root && ((t = e.scroll) == null ? void 0 : t.wasRoot);
}
function l3(e, t, a, n = { passive: !0 }) {
  return e.addEventListener(t, a, n), () => e.removeEventListener(t, a);
}
const u3 = Yw({
  attachResizeListener: (e, t) => l3(e, "resize", t),
  measureScroll: () => ({
    x: document.documentElement.scrollLeft || document.body.scrollLeft,
    y: document.documentElement.scrollTop || document.body.scrollTop
  }),
  checkIsScrollRoot: () => !0
}), Fu = {
  current: void 0
}, d3 = Yw({
  measureScroll: (e) => ({
    x: e.scrollLeft,
    y: e.scrollTop
  }),
  defaultParent: () => {
    if (!Fu.current) {
      const e = new u3({});
      e.mount(window), e.setOptions({ layoutScroll: !0 }), Fu.current = e;
    }
    return Fu.current;
  },
  resetTransform: (e, t) => {
    e.style.transform = t !== void 0 ? t : "none";
  },
  checkIsScrollRoot: (e) => window.getComputedStyle(e).position === "fixed"
});
function Jw(e) {
  if (e)
    return e.options.allowProjection !== !1 ? e.projection : Jw(e.parent);
}
function mh(e, t) {
  return t.max === t.min ? 0 : e / (t.max - t.min) * 100;
}
const Ws = {
  correct: (e, t) => {
    if (!t.target)
      return e;
    if (typeof e == "string")
      if (Ve.test(e))
        e = parseFloat(e);
      else
        return e;
    const a = mh(e, t.target.x), n = mh(e, t.target.y);
    return `${a}% ${n}%`;
  }
}, c3 = {
  correct: (e, { treeScale: t, projectionDelta: a }) => {
    const n = e, r = er.parse(e);
    if (r.length > 5)
      return n;
    const s = er.createTransformer(e), i = typeof r[0] != "number" ? 1 : 0, o = a.x.scale * t.x, l = a.y.scale * t.y;
    r[0 + i] /= o, r[1 + i] /= l;
    const d = bt(o, l, 0.5);
    return typeof r[2 + i] == "number" && (r[2 + i] /= d), typeof r[3 + i] == "number" && (r[3 + i] /= d), s(r);
  }
}, Qw = {
  borderRadius: {
    ...Ws,
    applyTo: [
      "borderTopLeftRadius",
      "borderTopRightRadius",
      "borderBottomLeftRadius",
      "borderBottomRightRadius"
    ]
  },
  borderTopLeftRadius: Ws,
  borderTopRightRadius: Ws,
  borderBottomLeftRadius: Ws,
  borderBottomRightRadius: Ws,
  boxShadow: c3
};
function ai(e) {
  return typeof e == "object" && e !== null && "nodeType" in e;
}
class f3 extends zn {
  constructor(t) {
    super(t), T0(Qw);
  }
  initProjection() {
    const t = this.state.options;
    this.state.visualElement.projection = new d3(
      this.state.visualElement.latestValues,
      t["data-framer-portal-id"] ? void 0 : Jw(this.state.visualElement.parent)
    ), this.state.visualElement.projection.isPresent = !0, this.setOptions();
  }
  beforeMount() {
    this.initProjection();
  }
  setOptions() {
    const t = this.state.options;
    this.state.visualElement.projection.setOptions({
      layout: t.layout,
      layoutId: t.layoutId,
      alwaysMeasureLayout: !!t.drag || t.dragConstraints && ai(t.dragConstraints),
      visualElement: this.state.visualElement,
      animationType: typeof t.layout == "string" ? t.layout : "both",
      // initialPromotionConfig
      layoutRoot: t.layoutRoot,
      layoutScroll: t.layoutScroll,
      crossfade: t.crossfade,
      onExitComplete: () => {
        var a;
        if (!((a = this.state.visualElement.projection) != null && a.isPresent)) {
          const n = ep.get(this.state.element);
          this.state.isSafeToRemove = !0, n && n({
            detail: {
              isExit: !0
            }
          }, !0);
        }
      }
    });
  }
  update() {
    this.setOptions();
  }
  mount() {
    var t;
    (t = this.state.visualElement.projection) == null || t.mount(this.state.element);
  }
}
function Zw(e) {
  return e.pointerType === "mouse" ? typeof e.button != "number" || e.button <= 0 : e.isPrimary !== !1;
}
function _p(e, t = "page") {
  return {
    point: {
      x: e[`${t}X`],
      y: e[`${t}Y`]
    }
  };
}
function p3(e) {
  return (t) => Zw(t) && e(t, _p(t));
}
function pi(e, t, a, n) {
  return bl(e, t, p3(a), n);
}
function e1(e) {
  let t = null;
  return () => {
    const a = () => {
      t = null;
    };
    return t === null ? (t = e, a) : !1;
  };
}
const yh = e1("dragHorizontal"), bh = e1("dragVertical");
function g3(e) {
  let t = !1;
  if (e === "y")
    t = bh();
  else if (e === "x")
    t = yh();
  else {
    const a = yh(), n = bh();
    a && n ? t = () => {
      a(), n();
    } : (a && a(), n && n());
  }
  return t;
}
function pc(e) {
  return e.max - e.min;
}
function v3(e, { min: t, max: a }, n) {
  return t !== void 0 && e < t ? e = n ? bt(t, e, n.min) : Math.max(e, t) : a !== void 0 && e > a && (e = n ? bt(a, e, n.max) : Math.min(e, a)), e;
}
const gc = 0.35;
function h3(e, { top: t, left: a, bottom: n, right: r }) {
  return {
    x: wh(e.x, a, r),
    y: wh(e.y, t, n)
  };
}
function wh(e, t, a) {
  return {
    min: t !== void 0 ? e.min + t : void 0,
    max: a !== void 0 ? e.max + a - (e.max - e.min) : void 0
  };
}
function m3(e = gc) {
  return e === !1 ? e = 0 : e === !0 && (e = gc), {
    x: Ch(e, "left", "right"),
    y: Ch(e, "top", "bottom")
  };
}
function Ch(e, t, a) {
  return {
    min: xh(e, t),
    max: xh(e, a)
  };
}
function xh(e, t) {
  return typeof e == "number" ? e : e[t] || 0;
}
function y3(e, t) {
  const a = {};
  return t.min !== void 0 && (a.min = t.min - e.min), t.max !== void 0 && (a.max = t.max - e.min), a;
}
function b3(e, t) {
  return {
    x: Sh(e.x, t.x),
    y: Sh(e.y, t.y)
  };
}
function Sh(e, t) {
  let a = t.min - e.min, n = t.max - e.max;
  return t.max - t.min < e.max - e.min && ([a, n] = [n, a]), { min: a, max: n };
}
function w3(e, t) {
  let a = 0.5;
  const n = pc(e), r = pc(t);
  return r > n ? a = /* @__PURE__ */ Pr(t.min, t.max - n, e.min) : n > r && (a = /* @__PURE__ */ Pr(e.min, e.max - r, t.min)), gn(0, 1, a);
}
const _h = (e, t) => Math.abs(e - t);
function C3(e, t) {
  const a = _h(e.x, t.x), n = _h(e.y, t.y);
  return Math.sqrt(a ** 2 + n ** 2);
}
class t1 {
  constructor(t, a, { transformPagePoint: n, contextWindow: r, dragSnapToOrigin: s = !1 } = {}) {
    if (this.startEvent = null, this.lastMoveEvent = null, this.lastMoveEventInfo = null, this.handlers = {}, this.contextWindow = window, this.updatePoint = () => {
      if (!(this.lastMoveEvent && this.lastMoveEventInfo))
        return;
      const f = qu(this.lastMoveEventInfo, this.history), p = this.startEvent !== null, g = C3(f.offset, { x: 0, y: 0 }) >= 3;
      if (!p && !g)
        return;
      const { point: v } = f, { timestamp: m } = Gt;
      this.history.push({ ...v, timestamp: m });
      const { onStart: y, onMove: x } = this.handlers;
      p || (y && y(this.lastMoveEvent, f), this.startEvent = this.lastMoveEvent), x && x(this.lastMoveEvent, f);
    }, this.handlePointerMove = (f, p) => {
      this.lastMoveEvent = f, this.lastMoveEventInfo = zu(p, this.transformPagePoint), st.update(this.updatePoint, !0);
    }, this.handlePointerUp = (f, p) => {
      this.end();
      const { onEnd: g, onSessionEnd: v, resumeAnimation: m } = this.handlers;
      if (this.dragSnapToOrigin && m && m(), !(this.lastMoveEvent && this.lastMoveEventInfo))
        return;
      const y = qu(
        f.type === "pointercancel" ? this.lastMoveEventInfo : zu(p, this.transformPagePoint),
        this.history
      );
      this.startEvent && g && g(f, y), v && v(f, y);
    }, !Zw(t))
      return;
    this.dragSnapToOrigin = s, this.handlers = a, this.transformPagePoint = n, this.contextWindow = r || window;
    const i = _p(t), o = zu(i, this.transformPagePoint), { point: l } = o, { timestamp: d } = Gt;
    this.history = [{ ...l, timestamp: d }];
    const { onSessionStart: c } = a;
    c && c(t, qu(o, this.history)), this.removeListeners = Qi(
      pi(
        this.contextWindow,
        "pointermove",
        this.handlePointerMove
      ),
      pi(
        this.contextWindow,
        "pointerup",
        this.handlePointerUp
      ),
      pi(
        this.contextWindow,
        "pointercancel",
        this.handlePointerUp
      )
    );
  }
  updateHandlers(t) {
    this.handlers = t;
  }
  end() {
    this.removeListeners && this.removeListeners(), Fa(this.updatePoint);
  }
}
function zu(e, t) {
  return t ? { point: t(e.point) } : e;
}
function kh(e, t) {
  return { x: e.x - t.x, y: e.y - t.y };
}
function qu({ point: e }, t) {
  return {
    point: e,
    delta: kh(e, a1(t)),
    offset: kh(e, x3(t)),
    velocity: S3(t, 0.1)
  };
}
function x3(e) {
  return e[0];
}
function a1(e) {
  return e[e.length - 1];
}
function S3(e, t) {
  if (e.length < 2)
    return { x: 0, y: 0 };
  let a = e.length - 1, n = null;
  const r = a1(e);
  for (; a >= 0 && (n = e[a], !(r.timestamp - n.timestamp > /* @__PURE__ */ La(t))); )
    a--;
  if (!n)
    return { x: 0, y: 0 };
  const s = /* @__PURE__ */ cn(
    r.timestamp - n.timestamp
  );
  if (s === 0)
    return { x: 0, y: 0 };
  const i = {
    x: (r.x - n.x) / s,
    y: (r.y - n.y) / s
  };
  return i.x === 1 / 0 && (i.x = 0), i.y === 1 / 0 && (i.y = 0), i;
}
const Ah = () => ({ min: 0, max: 0 });
function _3() {
  return {
    x: Ah(),
    y: Ah()
  };
}
function an(e) {
  return [e("x"), e("y")];
}
function k3(e) {
  return !!(Tt(e) && e.add);
}
function $h(e, t) {
  const a = e.getValue("willChange");
  if (k3(a))
    return a.add(t);
}
function n1({
  top: e,
  left: t,
  right: a,
  bottom: n
}) {
  return {
    x: { min: t, max: a },
    y: { min: e, max: n }
  };
}
function A3(e, t) {
  if (!t)
    return e;
  const a = t({ x: e.left, y: e.top }), n = t({ x: e.right, y: e.bottom });
  return {
    top: a.y,
    left: a.x,
    bottom: n.y,
    right: n.x
  };
}
function $3({ x: e, y: t }) {
  return { top: t.min, right: e.max, bottom: t.max, left: e.min };
}
function Ih(e, t) {
  e.min = e.min + t, e.max = e.max + t;
}
function I3(e, t) {
  return n1(
    A3(e.getBoundingClientRect(), t)
  );
}
function E3(e, t, a) {
  const n = I3(e, a), { scroll: r } = t;
  return r && (Ih(n.x, r.offset.x), Ih(n.y, r.offset.y)), n;
}
function Eh(e) {
  return !ep.has(e.current);
}
function r1({ current: e }) {
  return e ? e.ownerDocument.defaultView : null;
}
const T3 = /* @__PURE__ */ new WeakMap();
class B3 {
  constructor(t) {
    this.openGlobalLock = null, this.isDragging = !1, this.currentDirection = null, this.originPoint = { x: 0, y: 0 }, this.constraints = !1, this.hasMutatedConstraints = !1, this.elastic = _3(), this.visualElement = t;
  }
  start(t, { snapToCursor: a = !1 } = {}) {
    if (!Eh(this.visualElement))
      return;
    const n = (d) => {
      const { dragSnapToOrigin: c } = this.getProps();
      c ? this.pauseAnimation() : this.stopAnimation(), a && this.snapToCursor(_p(d, "page").point);
    }, r = (d, c) => {
      const { drag: f, dragPropagation: p, onDragStart: g } = this.getProps();
      if (f && !p && (this.openGlobalLock && this.openGlobalLock(), this.openGlobalLock = g3(f), !this.openGlobalLock))
        return;
      this.isDragging = !0, this.currentDirection = null, this.resolveConstraints(), this.visualElement.projection && (this.visualElement.projection.isAnimationBlocked = !0, this.visualElement.projection.target = void 0), an((m) => {
        let y = this.getAxisMotionValue(m).get() || 0;
        if (fn.test(y)) {
          const { projection: x } = this.visualElement;
          if (x && x.layout) {
            const b = x.layout.layoutBox[m];
            b && (y = pc(b) * (parseFloat(y) / 100));
          }
        }
        this.originPoint[m] = y;
      }), g && st.postRender(() => g(d, c)), $h(this.visualElement, "transform"), this.visualElement.state.setActive("whileDrag", !0);
    }, s = (d, c) => {
      const {
        dragPropagation: f,
        dragDirectionLock: p,
        onDirectionLock: g,
        onDrag: v
      } = this.getProps();
      if (!f && !this.openGlobalLock)
        return;
      const { offset: m } = c;
      if (p && this.currentDirection === null) {
        this.currentDirection = P3(m), this.currentDirection !== null && g && g(this.currentDirection);
        return;
      }
      this.updateAxis("x", c.point, m), this.updateAxis("y", c.point, m), this.visualElement.render(), v && v(d, c);
    }, i = (d, c) => this.stop(d, c), o = () => an(
      (d) => {
        var c;
        return this.getAnimationState(d) === "paused" && ((c = this.getAxisMotionValue(d).animation) == null ? void 0 : c.play());
      }
    ), { dragSnapToOrigin: l } = this.getProps();
    this.panSession = new t1(
      t,
      {
        onSessionStart: n,
        onStart: r,
        onMove: s,
        onSessionEnd: i,
        resumeAnimation: o
      },
      {
        transformPagePoint: this.visualElement.getTransformPagePoint(),
        dragSnapToOrigin: l,
        contextWindow: r1(this.visualElement)
      }
    );
  }
  stop(t, a) {
    const n = this.isDragging;
    if (this.cancel(), !n)
      return;
    const { velocity: r } = a;
    this.startAnimation(r);
    const { onDragEnd: s } = this.getProps();
    s && st.postRender(() => s(t, a));
  }
  cancel() {
    this.isDragging = !1;
    const { projection: t, animationState: a } = this.visualElement;
    t && (t.isAnimationBlocked = !1), this.panSession && this.panSession.end(), this.panSession = void 0;
    const { dragPropagation: n } = this.getProps();
    !n && this.openGlobalLock && (this.openGlobalLock(), this.openGlobalLock = null), this.visualElement.state.setActive("whileDrag", !1);
  }
  updateAxis(t, a, n) {
    const { drag: r } = this.getProps();
    if (!n || !So(t, r, this.currentDirection))
      return;
    const s = this.getAxisMotionValue(t);
    let i = this.originPoint[t] + n[t];
    this.constraints && this.constraints[t] && (i = v3(
      i,
      this.constraints[t],
      this.elastic[t]
    )), s.set(i);
  }
  resolveConstraints() {
    var t;
    const { dragConstraints: a, dragElastic: n } = this.getProps(), r = this.visualElement.projection && !this.visualElement.projection.layout ? this.visualElement.projection.measure(!1) : (t = this.visualElement.projection) == null ? void 0 : t.layout, s = this.constraints;
    a && ai(a) ? this.constraints || (this.constraints = this.resolveRefConstraints()) : a && r ? this.constraints = h3(
      r.layoutBox,
      a
    ) : this.constraints = !1, this.elastic = m3(n), s !== this.constraints && r && this.constraints && !this.hasMutatedConstraints && an((i) => {
      this.constraints !== !1 && this.getAxisMotionValue(i) && (this.constraints[i] = y3(
        r.layoutBox[i],
        this.constraints[i]
      ));
    });
  }
  resolveRefConstraints() {
    const { dragConstraints: t, onMeasureDragConstraints: a } = this.getProps();
    if (!t || !ai(t))
      return !1;
    const n = t;
    Jl(
      n !== null,
      "If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop."
    );
    const { projection: r } = this.visualElement;
    if (!r || !r.layout)
      return !1;
    const s = E3(
      n,
      r.root,
      this.visualElement.getTransformPagePoint()
    );
    let i = b3(
      r.layout.layoutBox,
      s
    );
    if (a) {
      const o = a(
        $3(i)
      );
      this.hasMutatedConstraints = !!o, o && (i = n1(o));
    }
    return i;
  }
  startAnimation(t) {
    const {
      drag: a,
      dragMomentum: n,
      dragElastic: r,
      dragTransition: s,
      dragSnapToOrigin: i,
      onDragTransitionEnd: o
    } = this.getProps(), l = this.constraints || {}, d = an((c) => {
      if (!So(c, a, this.currentDirection))
        return;
      let f = l && l[c] || {};
      i && (f = { min: 0, max: 0 });
      const p = r ? 200 : 1e6, g = r ? 40 : 1e7, v = {
        type: "inertia",
        velocity: n ? t[c] : 0,
        bounceStiffness: p,
        bounceDamping: g,
        timeConstant: 750,
        restDelta: 1,
        restSpeed: 10,
        ...s,
        ...f
      };
      return this.startAxisValueAnimation(c, v);
    });
    return Promise.all(d).then(o);
  }
  startAxisValueAnimation(t, a) {
    const n = this.getAxisMotionValue(t);
    return $h(this.visualElement, t), n.start(
      Sp(
        t,
        n,
        0,
        a,
        this.visualElement,
        !1
      )
    );
  }
  stopAnimation() {
    Eh(this.visualElement) && an((t) => this.getAxisMotionValue(t).stop());
  }
  pauseAnimation() {
    an((t) => {
      var a;
      return (a = this.getAxisMotionValue(t).animation) == null ? void 0 : a.pause();
    });
  }
  getAnimationState(t) {
    var a;
    return (a = this.getAxisMotionValue(t).animation) == null ? void 0 : a.state;
  }
  /**
   * Drag works differently depending on which props are provided.
   *
   * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.
   * - Otherwise, we apply the delta to the x/y motion values.
   */
  getAxisMotionValue(t) {
    const a = `_drag${t.toUpperCase()}`, n = this.visualElement.getProps();
    return n[a] || this.visualElement.getValue(
      t,
      (n.initial ? n.initial[t] : void 0) || 0
    );
  }
  snapToCursor(t) {
    an((a) => {
      const { drag: n } = this.getProps();
      if (!So(a, n, this.currentDirection))
        return;
      const { projection: r } = this.visualElement, s = this.getAxisMotionValue(a);
      if (r && r.layout) {
        const { min: i, max: o } = r.layout.layoutBox[a];
        s.set(t[a] - bt(i, o, 0.5));
      }
    });
  }
  /**
   * When the viewport resizes we want to check if the measured constraints
   * have changed and, if so, reposition the element within those new constraints
   * relative to where it was before the resize.
   */
  scalePositionWithinConstraints() {
    if (!this.visualElement.current)
      return;
    const { drag: t, dragConstraints: a } = this.getProps(), { projection: n } = this.visualElement;
    if (!ai(a) || !n || !this.constraints)
      return;
    this.stopAnimation();
    const r = { x: 0, y: 0 };
    an((i) => {
      const o = this.getAxisMotionValue(i);
      if (o && this.constraints !== !1) {
        const l = o.get();
        r[i] = w3(
          { min: l, max: l },
          this.constraints[i]
        );
      }
    });
    const { transformTemplate: s } = this.visualElement.getProps();
    this.visualElement.current.style.transform = s ? s({}, "") : "none", n.root && n.root.updateScroll(), n.updateLayout(), this.resolveConstraints(), an((i) => {
      if (!So(i, t, null))
        return;
      const o = this.getAxisMotionValue(i), { min: l, max: d } = this.constraints[i];
      o.set(bt(l, d, r[i]));
    });
  }
  addListeners() {
    if (!this.visualElement.current)
      return;
    T3.set(this.visualElement, this);
    const t = this.visualElement.current, a = pi(
      t,
      "pointerdown",
      (l) => {
        const { drag: d, dragListener: c = !0 } = this.getProps();
        d && c && this.start(l);
      }
    ), n = () => {
      const { dragConstraints: l } = this.getProps();
      ai(l) && (this.constraints = this.resolveRefConstraints());
    }, { projection: r } = this.visualElement, s = r.addEventListener(
      "measure",
      n
    );
    r && !r.layout && (r.root && r.root.updateScroll(), r.updateLayout()), st.read(n);
    const i = bl(window, "resize", () => this.scalePositionWithinConstraints()), o = r.addEventListener(
      "didUpdate",
      ({ delta: l, hasLayoutChanged: d }) => {
        this.isDragging && d && (an((c) => {
          const f = this.getAxisMotionValue(c);
          f && (this.originPoint[c] += l[c].translate, f.set(
            f.get() + l[c].translate
          ));
        }), this.visualElement.render());
      }
    );
    return () => {
      i(), a(), s(), o && o();
    };
  }
  getProps() {
    const t = this.visualElement.getProps(), {
      drag: a = !1,
      dragDirectionLock: n = !1,
      dragPropagation: r = !1,
      dragConstraints: s = !1,
      dragElastic: i = gc,
      dragMomentum: o = !0
    } = t;
    return {
      ...t,
      drag: a,
      dragDirectionLock: n,
      dragPropagation: r,
      dragConstraints: s,
      dragElastic: i,
      dragMomentum: o
    };
  }
}
function So(e, t, a) {
  return (t === !0 || t === e) && (a === null || a === e);
}
function P3(e, t = 10) {
  let a = null;
  return Math.abs(e.y) > t ? a = "y" : Math.abs(e.x) > t && (a = "x"), a;
}
class D3 extends zn {
  constructor(t) {
    super(t), this.removeGroupControls = ua, this.removeListeners = ua, this.controls = new B3(t.visualElement);
  }
  mount() {
    const { dragControls: t } = this.state.options;
    t && (this.removeGroupControls = t.subscribe(this.controls)), this.removeListeners = this.controls.addListeners() || ua;
  }
  unmount() {
    this.removeGroupControls(), this.removeListeners();
  }
}
class M3 extends zn {
  constructor(t) {
    super(t), T0(Qw);
  }
  beforeUpdate() {
    this.state.willUpdate("beforeUpdate");
  }
  update() {
    this.didUpdate();
  }
  didUpdate() {
    var t, a;
    (this.state.options.layout || this.state.options.layoutId || this.state.options.drag) && ((a = (t = this.state.visualElement.projection) == null ? void 0 : t.root) == null || a.didUpdate());
  }
  mount() {
    var t;
    const a = this.state.options, n = this.state.options.layoutGroup;
    if (a.layout || a.layoutId) {
      const r = this.state.visualElement.projection;
      r && (r.promote(), (t = n?.group) == null || t.add(r)), Ko.hasEverUpdated = !0;
    }
    this.didUpdate();
  }
  beforeUnmount() {
    const t = this.state.visualElement.projection;
    t && (this.state.willUpdate("beforeUnmount"), this.state.options.layoutId ? (t.isPresent = !1, t.relegate()) : this.state.options.layout && (this.state.isSafeToRemove = !0));
  }
  unmount() {
    const t = this.state.options.layoutGroup, a = this.state.visualElement.projection;
    a && (t?.group && (this.state.options.layout || this.state.options.layoutId) && t.group.remove(a), this.didUpdate());
  }
}
function Th(e) {
  return (t, a) => {
    e && st.postRender(() => e(t, a));
  };
}
class R3 extends zn {
  constructor() {
    super(...arguments), this.removePointerDownListener = ua;
  }
  onPointerDown(t) {
    this.session = new t1(
      t,
      this.createPanHandlers(),
      {
        transformPagePoint: this.state.visualElement.getTransformPagePoint(),
        contextWindow: r1(this.state.visualElement)
      }
    );
  }
  createPanHandlers() {
    return {
      onSessionStart: Th((t, a) => {
        const { onPanSessionStart: n } = this.state.options;
        n && n(t, a);
      }),
      onStart: Th((t, a) => {
        const { onPanStart: n } = this.state.options;
        n && n(t, a);
      }),
      onMove: (t, a) => {
        const { onPan: n } = this.state.options;
        n && n(t, a);
      },
      onEnd: (t, a) => {
        const { onPanEnd: n } = this.state.options;
        delete this.session, n && st.postRender(() => n(t, a));
      }
    };
  }
  mount() {
    this.removePointerDownListener = pi(
      this.state.element,
      "pointerdown",
      this.onPointerDown.bind(this)
    );
  }
  update() {
  }
  unmount() {
    this.removePointerDownListener(), this.session && this.session.end();
  }
}
const L3 = [
  dV,
  yV,
  wV,
  SV,
  kV,
  f3,
  R3,
  D3,
  M3
], O3 = {
  reducedMotion: "never",
  transition: void 0,
  nonce: void 0
}, [F3, h4] = Yi("MotionConfig");
function z3() {
  return F3(T(() => O3));
}
const q3 = 50, Bh = () => ({
  current: 0,
  offset: [],
  progress: 0,
  scrollLength: 0,
  targetOffset: 0,
  targetLength: 0,
  containerLength: 0,
  velocity: 0
}), V3 = () => ({
  time: 0,
  x: Bh(),
  y: Bh()
}), N3 = {
  x: {
    length: "Width",
    position: "Left"
  },
  y: {
    length: "Height",
    position: "Top"
  }
};
function Ph(e, t, a, n) {
  const r = a[t], { length: s, position: i } = N3[t], o = r.current, l = a.time;
  r.current = e[`scroll${i}`], r.scrollLength = e[`scroll${s}`] - e[`client${s}`], r.offset.length = 0, r.offset[0] = 0, r.offset[1] = r.scrollLength, r.progress = /* @__PURE__ */ Pr(0, r.scrollLength, r.current);
  const d = n - l;
  r.velocity = d > q3 ? 0 : sp(r.current - o, d);
}
function H3(e, t, a) {
  Ph(e, "x", t, a), Ph(e, "y", t, a), t.time = a;
}
function j3(e, t) {
  const a = { x: 0, y: 0 };
  let n = e;
  for (; n && n !== t; )
    if (Lw(n))
      a.x += n.offsetLeft, a.y += n.offsetTop, n = n.offsetParent;
    else if (n.tagName === "svg") {
      const r = n.getBoundingClientRect();
      n = n.parentElement;
      const s = n.getBoundingClientRect();
      a.x += r.left - s.left, a.y += r.top - s.top;
    } else if (n instanceof SVGGraphicsElement) {
      const { x: r, y: s } = n.getBBox();
      a.x += r, a.y += s;
      let i = null, o = n.parentNode;
      for (; !i; )
        o.tagName === "svg" && (i = o), o = n.parentNode;
      n = i;
    } else
      break;
  return a;
}
const vc = {
  start: 0,
  center: 0.5,
  end: 1
};
function Dh(e, t, a = 0) {
  let n = 0;
  if (e in vc && (e = vc[e]), typeof e == "string") {
    const r = parseFloat(e);
    e.endsWith("px") ? n = r : e.endsWith("%") ? e = r / 100 : e.endsWith("vw") ? n = r / 100 * document.documentElement.clientWidth : e.endsWith("vh") ? n = r / 100 * document.documentElement.clientHeight : e = r;
  }
  return typeof e == "number" && (n = t * e), a + n;
}
const K3 = [0, 0];
function G3(e, t, a, n) {
  let r = Array.isArray(e) ? e : K3, s = 0, i = 0;
  return typeof e == "number" ? r = [e, e] : typeof e == "string" && (e = e.trim(), e.includes(" ") ? r = e.split(" ") : r = [e, vc[e] ? e : "0"]), s = Dh(r[0], a, n), i = Dh(r[1], t), s - i;
}
const U3 = {
  All: [
    [0, 0],
    [1, 1]
  ]
}, W3 = { x: 0, y: 0 };
function Y3(e) {
  return "getBBox" in e && e.tagName !== "svg" ? e.getBBox() : { width: e.clientWidth, height: e.clientHeight };
}
function X3(e, t, a) {
  const { offset: n = U3.All } = a, { target: r = e, axis: s = "y" } = a, i = s === "y" ? "height" : "width", o = r !== e ? j3(r, e) : W3, l = r === e ? { width: e.scrollWidth, height: e.scrollHeight } : Y3(r), d = {
    width: e.clientWidth,
    height: e.clientHeight
  };
  t[s].offset.length = 0;
  let c = !t[s].interpolate;
  const f = n.length;
  for (let p = 0; p < f; p++) {
    const g = G3(n[p], d[i], l[i], o[s]);
    !c && g !== t[s].interpolatorOffsets[p] && (c = !0), t[s].offset[p] = g;
  }
  c && (t[s].interpolate = mp(t[s].offset, fp(n), { clamp: !1 }), t[s].interpolatorOffsets = [...t[s].offset]), t[s].progress = gn(0, 1, t[s].interpolate(t[s].current));
}
function J3(e, t = e, a) {
  if (a.x.targetOffset = 0, a.y.targetOffset = 0, t !== e) {
    let n = t;
    for (; n && n !== e; )
      a.x.targetOffset += n.offsetLeft, a.y.targetOffset += n.offsetTop, n = n.offsetParent;
  }
  a.x.targetLength = t === e ? t.scrollWidth : t.clientWidth, a.y.targetLength = t === e ? t.scrollHeight : t.clientHeight, a.x.containerLength = e.clientWidth, a.y.containerLength = e.clientHeight, process.env.NODE_ENV !== "production" && e && t && t !== e && ap(getComputedStyle(e).position !== "static", "Please ensure that the container has a non-static position, like 'relative', 'fixed', or 'absolute' to ensure scroll offset is calculated correctly.");
}
function Q3(e, t, a, n = {}) {
  return {
    measure: (r) => {
      J3(e, n.target, a), H3(e, a, r), (n.offset || n.target) && X3(e, a, n);
    },
    notify: () => t(a)
  };
}
const Go = /* @__PURE__ */ new WeakMap();
let Qr;
const s1 = (e, t, a) => (n, r) => r && r[0] ? r[0][e + "Size"] : tu(n) && "getBBox" in n ? n.getBBox()[t] : n[a], Z3 = /* @__PURE__ */ s1("inline", "width", "offsetWidth"), e5 = /* @__PURE__ */ s1("block", "height", "offsetHeight");
function t5({ target: e, borderBoxSize: t }) {
  var a;
  (a = Go.get(e)) == null || a.forEach((n) => {
    n(e, {
      get width() {
        return Z3(e, t);
      },
      get height() {
        return e5(e, t);
      }
    });
  });
}
function a5(e) {
  e.forEach(t5);
}
function n5() {
  typeof ResizeObserver > "u" || (Qr = new ResizeObserver(a5));
}
function r5(e, t) {
  Qr || n5();
  const a = Zl(e);
  return a.forEach((n) => {
    let r = Go.get(n);
    r || (r = /* @__PURE__ */ new Set(), Go.set(n, r)), r.add(t), Qr?.observe(n);
  }), () => {
    a.forEach((n) => {
      const r = Go.get(n);
      r?.delete(t), r?.size || Qr?.unobserve(n);
    });
  };
}
const Uo = /* @__PURE__ */ new Set();
let rs;
function s5() {
  rs = () => {
    const e = {
      get width() {
        return window.innerWidth;
      },
      get height() {
        return window.innerHeight;
      }
    };
    Uo.forEach((t) => t(e));
  }, window.addEventListener("resize", rs);
}
function i5(e) {
  return Uo.add(e), rs || s5(), () => {
    Uo.delete(e), !Uo.size && typeof rs == "function" && (window.removeEventListener("resize", rs), rs = void 0);
  };
}
function o5(e, t) {
  return typeof e == "function" ? i5(e) : r5(e, t);
}
const Ys = /* @__PURE__ */ new WeakMap(), Mh = /* @__PURE__ */ new WeakMap(), Vu = /* @__PURE__ */ new WeakMap(), Rh = (e) => e === document.scrollingElement ? window : e;
function i1(e, { container: t = document.scrollingElement, ...a } = {}) {
  if (!t)
    return ua;
  let n = Vu.get(t);
  n || (n = /* @__PURE__ */ new Set(), Vu.set(t, n));
  const r = V3(), s = Q3(t, e, r, a);
  if (n.add(s), !Ys.has(t)) {
    const o = () => {
      for (const f of n)
        f.measure(Gt.timestamp);
      st.preUpdate(l);
    }, l = () => {
      for (const f of n)
        f.notify();
    }, d = () => st.read(o);
    Ys.set(t, d);
    const c = Rh(t);
    window.addEventListener("resize", d, { passive: !0 }), t !== document.documentElement && Mh.set(t, o5(t, d)), c.addEventListener("scroll", d, { passive: !0 }), d();
  }
  const i = Ys.get(t);
  return st.read(i, !1, !0), () => {
    var o;
    Fa(i);
    const l = Vu.get(t);
    if (!l || (l.delete(s), l.size))
      return;
    const d = Ys.get(t);
    Ys.delete(t), d && (Rh(t).removeEventListener("scroll", d), (o = Mh.get(t)) == null || o(), window.removeEventListener("resize", d));
  };
}
const Lh = /* @__PURE__ */ new Map();
function l5(e) {
  const t = { value: 0 }, a = i1((n) => {
    t.value = n[e.axis].progress * 100;
  }, e);
  return { currentTime: t, cancel: a };
}
function o1({ source: e, container: t, ...a }) {
  const { axis: n } = a;
  e && (t = e);
  const r = Lh.get(t) ?? /* @__PURE__ */ new Map();
  Lh.set(t, r);
  const s = a.target ?? "self", i = r.get(s) ?? {}, o = n + (a.offset ?? []).join(",");
  return i[o] || (i[o] = !a.target && Iw() ? new ScrollTimeline({ source: t, axis: n }) : l5({ container: t, ...a })), i[o];
}
function l1(e, t) {
  let a;
  const n = () => {
    const { currentTime: r } = t, i = (r === null ? 0 : r.value) / 100;
    a !== i && e(i), a = i;
  };
  return st.preUpdate(n, !0), () => Fa(n);
}
function u5(e, t) {
  const a = o1(t);
  return e.attachTimeline({
    timeline: t.target ? void 0 : a,
    observe: (n) => (n.pause(), l1((r) => {
      n.time = n.duration * r;
    }, a))
  });
}
function d5(e) {
  return e.length === 2;
}
function c5(e, t) {
  return d5(e) ? i1((a) => {
    e(a[t.axis].progress, a);
  }, t) : l1(e, o1(t));
}
function f5(e, { axis: t = "y", container: a = document.scrollingElement, ...n } = {}) {
  if (!a)
    return ua;
  const r = { axis: t, container: a, ...n };
  return typeof e == "function" ? c5(e, r) : u5(e, r);
}
function Oh(...e) {
  const t = !Array.isArray(e[0]), a = t ? 0 : -1, n = e[0 + a], r = e[1 + a], s = e[2 + a], i = e[3 + a], o = mp(r, s, i);
  return t ? o(n) : o;
}
function Ti(e) {
  if (e)
    return e.nodeType === 3 || e.nodeType === 8 ? Ti(e.nextSibling) : e;
}
function Fh(e) {
  return Ti(Za(e));
}
const [p5, m4] = Yi("LazyMotionContext");
function g5(e) {
  var t;
  const a = HO(null), n = KO({}), r = z3(), s = ZO({}), i = p5({
    features: N([]),
    strict: !1
  });
  if (process.env.NODE_ENV !== "production" && ((t = e.features) != null && t.length) && i.strict) {
    const v = "You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.";
    e.ignoreStrict ? Zr(!1, v) : Jl(!1, v);
  }
  const o = dC();
  function l() {
    return n.id && e.layoutId ? `${n.id}-${e.layoutId}` : e.layoutId || void 0;
  }
  function d() {
    return {
      ...e,
      lazyMotionContext: i,
      layoutId: l(),
      transition: e.transition ?? r.value.transition,
      layoutGroup: n,
      motionConfig: r.value,
      inViewOptions: e.inViewOptions ?? r.value.inViewOptions,
      animatePresenceContext: s,
      initial: s.initial === !1 ? s.initial : e.initial === !0 ? void 0 : e.initial
    };
  }
  function c() {
    return {
      ...o,
      ...d()
    };
  }
  const f = new aF(
    c(),
    a
  );
  jO(f);
  function p() {
    var v;
    const m = f.type === "svg", y = { ...o };
    Object.keys(o).forEach((C) => {
      Tt(o[C]) && (y[C] = o[C].get());
    });
    let x = {
      ...e.style,
      ...m ? {} : ((v = f.visualElement) == null ? void 0 : v.latestValues) || f.baseTarget
    };
    if (m) {
      const { attrs: C, style: w } = yF({
        ...f.isMounted() ? f.target : f.baseTarget,
        ...x
      });
      (w.transform || C.transformOrigin) && (w.transformOrigin = C.transformOrigin ?? "50% 50%", delete C.transformOrigin), w.transform && (w.transformBox = w.transformBox ?? "fill-box", delete C.transformBox), Object.assign(y, C), x = w;
    }
    e.drag && e.dragListener !== !1 && Object.assign(x, {
      userSelect: "none",
      WebkitUserSelect: "none",
      WebkitTouchCallout: "none",
      touchAction: e.drag === !0 ? "none" : `pan-${e.drag === "x" ? "y" : "x"}`
    });
    const b = gF(x);
    return b && (y.style = b), y;
  }
  const g = fa().proxy;
  return um(() => {
    f.beforeMount();
  }), Pe(() => {
    f.mount(Ti(g.$el), c(), h5(g));
  }), Di(() => f.beforeUnmount()), Bt(() => {
    const v = Ti(g.$el);
    v?.isConnected || f.unmount();
  }), cC(() => {
    f.beforeUpdate();
  }), fC(() => {
    f.update(c());
  }), {
    getProps: d,
    getAttrs: p,
    layoutGroup: n,
    state: f
  };
}
const v5 = {
  ignoreStrict: { type: Boolean },
  forwardMotionProps: { type: Boolean, default: !1 },
  asChild: { type: Boolean, default: !1 },
  hover: { type: [String, Array, Object] },
  press: { type: [String, Array, Object] },
  inView: { type: [String, Array, Object] },
  focus: { type: [String, Array, Object] },
  whileDrag: { type: [String, Array, Object] },
  whileHover: { type: [String, Array, Object], default: ({ hover: e }) => (process.env.NODE_ENV === "development" && e && Zr(!0, "hover is deprecated. Use whileHover instead."), e) },
  whilePress: { type: [String, Array, Object], default: ({ press: e }) => (process.env.NODE_ENV === "development" && e && Zr(!0, "press is deprecated. Use whilePress instead."), e) },
  whileInView: { type: [String, Array, Object], default: ({ inView: e }) => (process.env.NODE_ENV === "development" && e && Zr(!0, "inView is deprecated. Use whileInView instead."), e) },
  whileFocus: { type: [String, Array, Object], default: ({ focus: e }) => (process.env.NODE_ENV === "development" && e && Zr(!0, "focus is deprecated. Use whileFocus instead."), e) },
  custom: { type: [String, Number, Object, Array] },
  initial: { type: [String, Array, Object, Boolean], default: void 0 },
  animate: { type: [String, Array, Object], default: void 0 },
  exit: { type: [String, Array, Object] },
  variants: { type: Object },
  inherit: { type: Boolean },
  style: { type: Object },
  transformTemplate: { type: Function },
  transition: { type: Object },
  layoutGroup: { type: Object },
  motionConfig: { type: Object },
  onAnimationComplete: { type: Function },
  onUpdate: { type: Function },
  layout: { type: [Boolean, String], default: !1 },
  layoutId: { type: String, default: void 0 },
  layoutScroll: { type: Boolean, default: !1 },
  layoutRoot: { type: Boolean, default: !1 },
  "data-framer-portal-id": { type: String },
  crossfade: { type: Boolean, default: !0 },
  layoutDependency: { type: null },
  onBeforeLayoutMeasure: { type: Function },
  onLayoutMeasure: { type: Function },
  onLayoutAnimationStart: { type: Function },
  onLayoutAnimationComplete: { type: Function },
  globalPressTarget: { type: Boolean },
  onPressStart: { type: Function },
  onPress: { type: Function },
  onPressCancel: { type: Function },
  onHoverStart: { type: Function },
  onHoverEnd: { type: Function },
  inViewOptions: { type: Object },
  onViewportEnter: { type: Function },
  onViewportLeave: { type: Function },
  drag: { type: [Boolean, String] },
  dragSnapToOrigin: { type: Boolean },
  dragDirectionLock: { type: Boolean },
  dragPropagation: { type: Boolean },
  dragConstraints: { type: [Boolean, Object] },
  dragElastic: { type: [Boolean, Number, Object], default: 0.5 },
  dragMomentum: { type: Boolean, default: !0 },
  dragTransition: { type: Object },
  dragListener: { type: Boolean, default: !0 },
  dragControls: { type: Object },
  onDragStart: { type: Function },
  onDragEnd: { type: Function },
  onDrag: { type: Function },
  onDirectionLock: { type: Function },
  onDragTransitionEnd: { type: Function },
  onMeasureDragConstraints: { type: Function },
  onPanSessionStart: { type: Function },
  onPanStart: { type: Function },
  onPan: { type: Function },
  onPanEnd: { type: Function }
};
function h5(e) {
  var t;
  const a = ((t = Ti(e.$el)) == null ? void 0 : t.style.display) === "none";
  return e.$.vnode.transition && a;
}
const m5 = /* @__PURE__ */ new Map(), y5 = /* @__PURE__ */ new Map();
function b5(e) {
  if (!Array.isArray(e))
    return [e];
  const t = [];
  for (const a of e)
    Array.isArray(a) ? t.push(...a) : t.push(a);
  return t;
}
const w5 = ["area", "img", "input"];
function C5(e, t, a) {
  var n, r;
  if (typeof e == "string" && w5.includes(e))
    return ln(e, t);
  if (e === "template") {
    if (!a.default)
      return null;
    const s = b5(a.default()), i = s.findIndex((c) => c.type !== Fc);
    if (i === -1)
      return s;
    const o = s[i];
    (n = o.props) == null || delete n.ref;
    const l = o.props ? O(t, o.props) : t;
    t.class && ((r = o.props) != null && r.class) && delete o.props.class;
    const d = sm(o, l);
    for (const c in l)
      c.startsWith("on") && (d.props || (d.props = {}), d.props[c] = l[c]);
    return s.length === 1 ? d : (s[i] = d, s);
  }
  return null;
}
function zh(e, t = {}) {
  var a;
  const n = typeof e == "string", r = n ? e : e.name || "", s = ((a = t.features) == null ? void 0 : a.length) > 0 ? m5 : y5;
  if (n && s?.has(e))
    return s.get(e);
  const i = L({
    inheritAttrs: !1,
    props: {
      ...v5,
      features: {
        type: Object,
        default: () => t.features || []
      },
      as: { type: [String, Object], default: e || "div" }
    },
    name: r ? `motion.${r}` : "Motion",
    setup(o, { slots: l }) {
      const { getProps: d, getAttrs: c, state: f } = g5(o);
      function p() {
        const g = f.element;
        if ((!(typeof o.as == "object") || o.asChild) && g) {
          const { style: m } = c();
          if (m)
            for (const [y, x] of Object.entries(m))
              g.style[y] = x;
        }
      }
      return () => {
        const g = d(), v = c(), m = o.asChild ? "template" : o.as, y = {
          ...t.forwardMotionProps || o.forwardMotionProps ? g : {},
          ...v,
          onVnodeUpdated: p
        }, x = C5(m, y, l);
        return x !== null ? x : ln(m, {
          ...y
        }, l);
      };
    }
  });
  return n && s?.set(e, i), i;
}
function x5(e = []) {
  return new Proxy({}, {
    get(t, a) {
      return a === "create" ? (n, r) => zh(n, {
        ...r,
        features: e
      }) : zh(a, {
        features: e
      });
    }
  });
}
const S5 = x5(L3), _5 = S5.create("div");
function u1(e) {
  const t = Ma(e()), a = () => t.set(e()), n = () => st.preRender(a, !1, !0);
  let r;
  const s = (o) => {
    r = o.map((l) => l.on("change", n));
  }, i = () => {
    r.forEach((o) => o()), Fa(a);
  };
  return Bt(() => {
    i();
  }), {
    subscribe: s,
    unsubscribe: i,
    value: t,
    updateValue: a
  };
}
function k5(e) {
  Gn.current = [];
  const { value: t, subscribe: a, unsubscribe: n, updateValue: r } = u1(e);
  return a(Gn.current), Gn.current = void 0, ot(() => {
    n(), Gn.current = [], r(), a(Gn.current), Gn.current = void 0;
  }), t;
}
function A5(e, t, a, n) {
  if (typeof e == "function")
    return k5(e);
  const r = ht(t) ? T(() => Oh(t.value, a, n)) : Oh(t, a, n);
  return Array.isArray(e) ? qh(
    e,
    r
  ) : qh([e], ([s]) => ht(r) ? r.value(s) : r(s));
}
function qh(e, t) {
  const a = [], { value: n, subscribe: r } = u1(() => {
    a.length = 0;
    const s = e.length;
    for (let i = 0; i < s; i++)
      a[i] = e[i].get();
    return ht(t) ? t.value(a) : t(a);
  });
  return r(e), n;
}
function Vh(e) {
  return typeof e == "number" ? e : parseFloat(e);
}
function $5(e, t = {}) {
  let a = null;
  const n = Ma(
    Tt(e) ? Vh(e.get()) : e
  );
  let r = n.get(), s = () => {
  };
  const i = () => {
    a && (a.stop(), a = null);
  }, o = () => {
    const l = a;
    l?.time === 0 && l.sample(Gt.delta), i();
    const d = ht(t) ? t.value : t;
    a = Pq({
      keyframes: [n.get(), r],
      velocity: n.getVelocity(),
      type: "spring",
      restDelta: 1e-3,
      restSpeed: 0.01,
      ...d,
      onUpdate: s
    });
  };
  return ye(() => ht(t) ? t.value : t, () => {
    n.attach((l, d) => (r = l, s = d, st.update(o), n.get()), i);
  }, { immediate: !0 }), Tt(e) && e.on("change", (l) => {
    n.set(Vh(l));
  }), n;
}
const I5 = typeof window > "u";
function E5() {
  return {
    scrollX: Ma(0),
    scrollY: Ma(0),
    scrollXProgress: Ma(0),
    scrollYProgress: Ma(0)
  };
}
function T5(e = {}) {
  const t = E5();
  return ot((a) => {
    if (I5)
      return;
    const n = f5(
      (r, { x: s, y: i }) => {
        t.scrollX.set(s.current), t.scrollXProgress.set(s.progress), t.scrollY.set(i.current), t.scrollYProgress.set(i.progress);
      },
      {
        offset: u(e.offset),
        axis: u(e.axis),
        container: Fh(e.container),
        target: Fh(e.target)
      }
    );
    a(() => {
      n();
    });
  }, {
    flush: "post"
  }), t;
}
const B5 = {
  slots: {
    root: "relative",
    container: "flex flex-col gap-y-8 sm:gap-y-12 lg:gap-y-16",
    indicator: "absolute hidden lg:block overflow-hidden inset-y-3 start-32 h-full w-px bg-border -ms-[8.5px]",
    beam: "absolute start-0 top-0 w-full bg-primary will-change-[height]"
  }
}, y4 = /* @__PURE__ */ L({
  __name: "ChangelogVersions",
  props: {
    as: {},
    versions: {},
    indicator: { type: Boolean, default: !0 },
    indicatorMotion: { type: [Boolean, Object], default: !0 },
    class: {},
    ui: {}
  },
  setup(e) {
    const t = e, a = Se(), n = Mt(a, ["default", "indicator"]), r = ue(), s = T(() => Ct(typeof t.indicatorMotion == "object" ? t.indicatorMotion : {}, { damping: 30, restDelta: 1e-3 })), { scrollYProgress: i } = T5(), o = $5(i, s), l = A5(() => `${o.get() * 100}%`), d = T(() => W({ extend: W(B5), ...r.ui?.changelogVersions || {} })());
    return (c, f) => (h(), k(u(U), {
      as: c.as,
      class: A(d.value.root({ class: [t.ui?.root, t.class] }))
    }, {
      default: _(() => [
        t.indicator || a.indicator ? (h(), M("div", {
          key: 0,
          class: A(d.value.indicator({ class: t.ui?.indicator }))
        }, [
          S(c.$slots, "indicator", {}, () => [
            t.indicatorMotion ? (h(), k(u(_5), {
              key: 0,
              class: A(d.value.beam({ class: t.ui?.beam })),
              style: It({ height: u(l) })
            }, null, 8, ["class", "style"])) : D("", !0)
          ])
        ], 2)) : D("", !0),
        c.versions?.length || a.default ? (h(), M("div", {
          key: 1,
          class: A(d.value.container({ class: t.ui?.container }))
        }, [
          S(c.$slots, "default", {}, () => [
            (h(!0), M(te, null, le(c.versions, (p, g) => (h(), k(LO, O({
              key: g,
              indicator: !!t.indicator
            }, { ref_for: !0 }, p), Ia({ _: 2 }, [
              le(u(n), (v, m) => ({
                name: m,
                fn: _(() => [
                  S(c.$slots, m, O({ ref_for: !0 }, { version: p }))
                ])
              }))
            ]), 1040, ["indicator"]))), 128))
          ])
        ], 2)) : D("", !0)
      ]),
      _: 3
    }, 8, ["as", "class"]));
  }
}), P5 = {
  base: "inline-flex items-center justify-center px-1 rounded-sm font-medium font-sans",
  variants: {
    color: {
      primary: "",
      secondary: "",
      success: "",
      info: "",
      warning: "",
      error: "",
      neutral: ""
    },
    variant: {
      solid: "",
      outline: "",
      soft: "",
      subtle: ""
    },
    size: {
      sm: "h-4 min-w-[16px] text-[10px]",
      md: "h-5 min-w-[20px] text-[11px]",
      lg: "h-6 min-w-[24px] text-[12px]"
    }
  },
  compoundVariants: [
    {
      color: "primary",
      variant: "solid",
      class: "text-inverted bg-primary"
    },
    {
      color: "secondary",
      variant: "solid",
      class: "text-inverted bg-secondary"
    },
    {
      color: "success",
      variant: "solid",
      class: "text-inverted bg-success"
    },
    {
      color: "info",
      variant: "solid",
      class: "text-inverted bg-info"
    },
    {
      color: "warning",
      variant: "solid",
      class: "text-inverted bg-warning"
    },
    {
      color: "error",
      variant: "solid",
      class: "text-inverted bg-error"
    },
    {
      color: "primary",
      variant: "outline",
      class: "ring ring-inset ring-primary/50 text-primary"
    },
    {
      color: "secondary",
      variant: "outline",
      class: "ring ring-inset ring-secondary/50 text-secondary"
    },
    {
      color: "success",
      variant: "outline",
      class: "ring ring-inset ring-success/50 text-success"
    },
    {
      color: "info",
      variant: "outline",
      class: "ring ring-inset ring-info/50 text-info"
    },
    {
      color: "warning",
      variant: "outline",
      class: "ring ring-inset ring-warning/50 text-warning"
    },
    {
      color: "error",
      variant: "outline",
      class: "ring ring-inset ring-error/50 text-error"
    },
    {
      color: "primary",
      variant: "soft",
      class: "text-primary bg-primary/10"
    },
    {
      color: "secondary",
      variant: "soft",
      class: "text-secondary bg-secondary/10"
    },
    {
      color: "success",
      variant: "soft",
      class: "text-success bg-success/10"
    },
    {
      color: "info",
      variant: "soft",
      class: "text-info bg-info/10"
    },
    {
      color: "warning",
      variant: "soft",
      class: "text-warning bg-warning/10"
    },
    {
      color: "error",
      variant: "soft",
      class: "text-error bg-error/10"
    },
    {
      color: "primary",
      variant: "subtle",
      class: "text-primary ring ring-inset ring-primary/25 bg-primary/10"
    },
    {
      color: "secondary",
      variant: "subtle",
      class: "text-secondary ring ring-inset ring-secondary/25 bg-secondary/10"
    },
    {
      color: "success",
      variant: "subtle",
      class: "text-success ring ring-inset ring-success/25 bg-success/10"
    },
    {
      color: "info",
      variant: "subtle",
      class: "text-info ring ring-inset ring-info/25 bg-info/10"
    },
    {
      color: "warning",
      variant: "subtle",
      class: "text-warning ring ring-inset ring-warning/25 bg-warning/10"
    },
    {
      color: "error",
      variant: "subtle",
      class: "text-error ring ring-inset ring-error/25 bg-error/10"
    },
    {
      color: "neutral",
      variant: "solid",
      class: "text-inverted bg-inverted"
    },
    {
      color: "neutral",
      variant: "outline",
      class: "ring ring-inset ring-accented text-default bg-default"
    },
    {
      color: "neutral",
      variant: "soft",
      class: "text-default bg-elevated"
    },
    {
      color: "neutral",
      variant: "subtle",
      class: "ring ring-inset ring-accented text-default bg-elevated"
    }
  ],
  defaultVariants: {
    variant: "outline",
    color: "neutral",
    size: "md"
  }
}, eo = /* @__PURE__ */ L({
  __name: "Kbd",
  props: {
    as: { default: "kbd" },
    value: {},
    color: {},
    variant: {},
    size: {},
    class: {}
  },
  setup(e) {
    const t = e, { getKbdKey: a } = Qb(), n = ue(), r = T(() => W({ extend: W(P5), ...n.ui?.kbd || {} }));
    return (s, i) => (h(), k(u(U), {
      as: s.as,
      class: A(r.value({ class: t.class, color: t.color, variant: t.variant, size: t.size }))
    }, {
      default: _(() => [
        S(s.$slots, "default", {}, () => [
          ee(X(u(a)(s.value)), 1)
        ])
      ]),
      _: 3
    }, 8, ["as", "class"]));
  }
}), D5 = {
  slots: {
    content: "flex items-center gap-1 bg-default text-highlighted shadow-sm rounded-sm ring ring-default h-6 px-2.5 py-1 text-xs select-none data-[state=delayed-open]:animate-[scale-in_100ms_ease-out] data-[state=closed]:animate-[scale-out_100ms_ease-in] origin-(--reka-tooltip-content-transform-origin) pointer-events-auto",
    arrow: "fill-default",
    text: "truncate",
    kbds: "hidden lg:inline-flex items-center shrink-0 gap-0.5 not-first-of-type:before:content-['·'] not-first-of-type:before:me-0.5",
    kbdsSize: "sm"
  }
}, au = /* @__PURE__ */ L({
  __name: "Tooltip",
  props: {
    text: {},
    kbds: {},
    content: {},
    arrow: { type: [Boolean, Object] },
    portal: { type: [Boolean, String], default: !0 },
    reference: {},
    class: {},
    ui: {},
    defaultOpen: { type: Boolean },
    open: { type: Boolean },
    delayDuration: {},
    disableHoverableContent: { type: Boolean },
    disableClosingTrigger: { type: Boolean },
    disabled: { type: Boolean },
    ignoreNonKeyboardFocus: { type: Boolean }
  },
  emits: ["update:open"],
  setup(e, { emit: t }) {
    const a = e, n = t, r = Se(), s = ue(), i = Xe(tt(a, "defaultOpen", "open", "delayDuration", "disableHoverableContent", "disableClosingTrigger", "ignoreNonKeyboardFocus"), n), o = tn(Ge(() => a.portal)), l = Ge(() => Ct(a.content, { side: "bottom", sideOffset: 8, collisionPadding: 8 })), d = Ge(() => a.arrow), c = T(() => W({ extend: W(D5), ...s.ui?.tooltip || {} })({
      side: l.value.side
    }));
    return (f, p) => (h(), k(u(CD), O(u(i), {
      disabled: !(f.text || f.kbds?.length || r.content) || a.disabled
    }), {
      default: _(({ open: g }) => [
        r.default || f.reference ? (h(), k(u(TD), O({ key: 0 }, f.$attrs, {
          "as-child": "",
          reference: f.reference,
          class: a.class
        }), {
          default: _(() => [
            S(f.$slots, "default", { open: g })
          ]),
          _: 2
        }, 1040, ["reference", "class"])) : D("", !0),
        V(u(ID), pe(me(u(o))), {
          default: _(() => [
            V(u(AD), O(l.value, {
              class: c.value.content({ class: [!r.default && a.class, a.ui?.content] })
            }), {
              default: _(() => [
                S(f.$slots, "content", {}, () => [
                  f.text ? (h(), M("span", {
                    key: 0,
                    class: A(c.value.text({ class: a.ui?.text }))
                  }, X(f.text), 3)) : D("", !0),
                  f.kbds?.length ? (h(), M("span", {
                    key: 1,
                    class: A(c.value.kbds({ class: a.ui?.kbds }))
                  }, [
                    (h(!0), M(te, null, le(f.kbds, (v, m) => (h(), k(eo, O({
                      key: m,
                      size: a.ui?.kbdsSize || c.value.kbdsSize()
                    }, { ref_for: !0 }, typeof v == "string" ? { value: v } : v), null, 16, ["size"]))), 128))
                  ], 2)) : D("", !0)
                ]),
                f.arrow ? (h(), k(u(vD), O({ key: 0 }, d.value, {
                  class: c.value.arrow({ class: a.ui?.arrow })
                }), null, 16, ["class"])) : D("", !0)
              ]),
              _: 3
            }, 16, ["class"])
          ]),
          _: 3
        }, 16)
      ]),
      _: 3
    }, 16, ["disabled"]));
  }
}), M5 = {
  slots: {
    root: "group/message relative w-full",
    container: "relative flex items-start group-data-[role=user]/message:max-w-[75%]",
    leading: "inline-flex items-center justify-center min-h-6",
    leadingIcon: "shrink-0",
    leadingAvatar: "shrink-0",
    leadingAvatarSize: "",
    content: "relative text-pretty min-w-0",
    actions: [
      "opacity-0 group-hover/message:opacity-100 absolute bottom-0 flex items-center",
      "transition-opacity"
    ]
  },
  variants: {
    variant: {
      solid: {
        content: "bg-inverted text-inverted"
      },
      outline: {
        content: "bg-default ring ring-default"
      },
      soft: {
        content: "bg-elevated/50"
      },
      subtle: {
        content: "bg-elevated/50 ring ring-default"
      },
      naked: {
        content: ""
      }
    },
    side: {
      left: {
        container: "rtl:justify-end"
      },
      right: {
        container: "ltr:justify-end ms-auto"
      }
    },
    leading: {
      true: ""
    },
    actions: {
      true: ""
    },
    compact: {
      true: {
        root: "scroll-mt-3",
        container: "gap-1.5 pb-3",
        leadingIcon: "size-5",
        leadingAvatarSize: "2xs"
      },
      false: {
        root: "scroll-mt-4 sm:scroll-mt-6",
        container: "gap-3 pb-8",
        leadingIcon: "size-8",
        leadingAvatarSize: "md"
      }
    }
  },
  compoundVariants: [
    {
      compact: !0,
      actions: !0,
      class: {
        container: "pb-8"
      }
    },
    {
      leading: !0,
      compact: !1,
      side: "left",
      class: {
        actions: "left-11"
      }
    },
    {
      leading: !0,
      compact: !0,
      side: "left",
      class: {
        actions: "left-6.5"
      }
    },
    {
      variant: [
        "solid",
        "outline",
        "soft",
        "subtle"
      ],
      compact: !1,
      class: {
        content: "px-4 py-3 rounded-lg min-h-12",
        leading: "mt-2"
      }
    },
    {
      variant: [
        "solid",
        "outline",
        "soft",
        "subtle"
      ],
      compact: !0,
      class: {
        content: "px-2 py-1 rounded-lg min-h-8",
        leading: "mt-1"
      }
    }
  ],
  defaultVariants: {
    variant: "naked"
  }
}, Nh = /* @__PURE__ */ L({
  __name: "ChatMessage",
  props: {
    as: { default: "article" },
    icon: {},
    avatar: {},
    variant: {},
    side: {},
    actions: {},
    compact: { type: Boolean },
    content: {},
    class: {},
    ui: {},
    id: {},
    role: {},
    metadata: {},
    parts: {}
  },
  setup(e) {
    const t = e, a = Se(), n = ue(), r = T(() => W({ extend: W(M5), ...n.ui?.chatMessage || {} })({
      variant: t.variant,
      side: t.side,
      leading: !!t.icon || !!t.avatar || !!a.leading,
      actions: !!t.actions || !!a.actions,
      compact: t.compact
    }));
    return (s, i) => (h(), k(u(U), {
      as: s.as,
      "data-role": s.role,
      class: A(r.value.root({ class: [t.ui?.root, t.class] }))
    }, {
      default: _(() => [
        J("div", {
          class: A(r.value.container({ class: t.ui?.container }))
        }, [
          s.icon || s.avatar || a.leading ? (h(), M("div", {
            key: 0,
            class: A(r.value.leading({ class: t.ui?.leading }))
          }, [
            S(s.$slots, "leading", { avatar: s.avatar }, () => [
              s.icon ? (h(), k(he, {
                key: 0,
                name: s.icon,
                class: A(r.value.leadingIcon({ class: t.ui?.leadingIcon }))
              }, null, 8, ["name", "class"])) : s.avatar ? (h(), k(ft, O({
                key: 1,
                size: t.ui?.leadingAvatarSize || r.value.leadingAvatarSize()
              }, s.avatar, {
                class: r.value.leadingAvatar({ class: t.ui?.leadingAvatar })
              }), null, 16, ["size", "class"])) : D("", !0)
            ])
          ], 2)) : D("", !0),
          s.content || s.parts.length || a.content ? (h(), M("div", {
            key: 1,
            class: A(r.value.content({ class: t.ui?.content }))
          }, [
            S(s.$slots, "content", {
              id: s.id,
              role: s.role,
              content: s.content,
              parts: s.parts
            }, () => [
              s.content ? (h(), M(te, { key: 0 }, [
                ee(X(s.content), 1)
              ], 64)) : (h(!0), M(te, { key: 1 }, le(s.parts, (o, l) => (h(), M(te, {
                key: `${s.id}-${o.type}-${l}`
              }, [
                o.type === "text" ? (h(), M(te, { key: 0 }, [
                  ee(X(o.text), 1)
                ], 64)) : D("", !0)
              ], 64))), 128))
            ])
          ], 2)) : D("", !0),
          s.actions || a.actions ? (h(), M("div", {
            key: 2,
            class: A(r.value.actions({ class: t.ui?.actions }))
          }, [
            S(s.$slots, "actions", { actions: s.actions }, () => [
              (h(!0), M(te, null, le(s.actions, (o, l) => (h(), k(au, {
                key: l,
                text: o.label
              }, {
                default: _(() => [
                  V(Je, O({
                    size: "sm",
                    color: "neutral",
                    variant: "ghost"
                  }, { ref_for: !0 }, u(Mt)(o, ["onClick"]), {
                    label: void 0,
                    onClick: (d) => typeof o.onClick == "function" ? o.onClick(d, t) : void 0
                  }), null, 16, ["onClick"])
                ]),
                _: 2
              }, 1032, ["text"]))), 128))
            ])
          ], 2)) : D("", !0)
        ], 2)
      ]),
      _: 3
    }, 8, ["as", "data-role", "class"]));
  }
}), R5 = {
  slots: {
    root: "w-full flex flex-col gap-1 flex-1 px-2.5 [&>article]:last-of-type:min-h-(--last-message-height)",
    indicator: "h-6 flex items-center gap-1 py-3 *:size-2 *:rounded-full *:bg-elevated [&>*:nth-child(1)]:animate-[bounce_1s_infinite] [&>*:nth-child(2)]:animate-[bounce_1s_0.15s_infinite] [&>*:nth-child(3)]:animate-[bounce_1s_0.3s_infinite]",
    viewport: "absolute inset-x-0 top-[86%] data-[state=open]:animate-[fade-in_200ms_ease-out] data-[state=closed]:animate-[fade-out_200ms_ease-in]",
    autoScroll: "rounded-full absolute right-1/2 translate-x-1/2 bottom-0"
  },
  variants: {
    compact: {
      true: "",
      false: ""
    }
  }
}, L5 = ["data-status"], O5 = ["data-state"], b4 = /* @__PURE__ */ L({
  __name: "ChatMessages",
  props: {
    messages: {},
    status: {},
    shouldAutoScroll: { type: Boolean, default: !1 },
    shouldScrollToBottom: { type: Boolean, default: !0 },
    autoScroll: { type: [Boolean, Object], default: !0 },
    autoScrollIcon: {},
    user: {},
    assistant: {},
    compact: { type: Boolean },
    spacingOffset: { default: 0 },
    class: {},
    ui: {}
  },
  setup(e) {
    const t = e, a = Se(), n = Mt(a, ["default", "indicator", "viewport"]), r = ue(), s = Ge(() => Ct(t.user, { side: "right", variant: "soft" })), i = Ge(() => Ct(t.assistant, { side: "left", variant: "naked" })), o = T(() => W({ extend: W(R5), ...r.ui?.chatMessages || {} })({
      compact: t.compact
    })), l = N(null), d = N(null), c = N(/* @__PURE__ */ new Map()), f = N(!1), p = N(0), g = N(!1);
    function v($, B) {
      const I = B?.$el;
      I && c.value.set($, I);
    }
    function m($) {
      const B = c.value.get($);
      B && B.scrollIntoView({ behavior: "smooth", block: "start" });
    }
    function y($ = !0) {
      d.value && ($ ? d.value.scrollTo({ top: d.value.scrollHeight, behavior: "smooth" }) : d.value.scrollTop = d.value.scrollHeight);
    }
    Ub([() => t.messages, () => t.status], ([$, B]) => {
      B === "streaming" && (t.shouldAutoScroll ? requestAnimationFrame(() => Be(y)) : x());
    }, { throttle: 100, leading: !0 }), ye(() => t.status, ($) => {
      if ($ !== "submitted")
        return;
      const B = t.messages?.[t.messages.length - 1];
      !B || B.role !== "user" || Be(() => {
        g.value = !0, w(), Be(() => {
          m(B.id);
        });
      });
    });
    function x() {
      if (!d.value)
        return;
      const $ = d.value.scrollTop + d.value.clientHeight, B = d.value.scrollHeight, I = 100;
      f.value = B - $ >= I;
    }
    function b() {
      y();
    }
    function C($) {
      if (!$)
        return document.documentElement;
      const B = /auto|scroll/;
      let I = $;
      for (; I && I !== document.body && I !== document.documentElement; ) {
        const E = window.getComputedStyle(I);
        if (B.test(E.overflowY))
          return I;
        I = I.parentElement;
      }
      return document.documentElement;
    }
    function w() {
      if (!l.value || !d.value || !t.messages?.length || !g.value)
        return;
      const { height: $ } = Pd(d.value), B = t.messages.findLast((F) => F.role === "user");
      if (!B)
        return;
      const I = c.value.get(B.id);
      if (!I)
        return;
      let E = t.spacingOffset || 0;
      const P = window.getComputedStyle(l.value), R = window.getComputedStyle(d.value);
      E += Number.parseFloat(P.rowGap) || Number.parseFloat(P.gap) || 0, E += Number.parseFloat(R.paddingTop) || 0, E += Number.parseFloat(R.paddingBottom) || 0, p.value = Math.max($.value - I.offsetHeight - E, 0);
    }
    return Pe(() => {
      d.value = C(l.value), d.value && (t.shouldScrollToBottom ? Be(() => y(!1)) : x(), wt(d, "scroll", x), wt(window, "resize", () => Be(w)));
    }), ($, B) => (h(), M("div", {
      ref_key: "el",
      ref: l,
      "data-status": $.status,
      class: A(o.value.root({ class: [t.ui?.root, t.class] })),
      style: It({ "--last-message-height": `${p.value}px` })
    }, [
      S($.$slots, "default", {}, () => [
        (h(!0), M(te, null, le($.messages, (I) => (h(), k(Nh, O({
          key: I.id
        }, { ref_for: !0 }, { ...I, ...I.role === "user" ? s.value : i.value }, {
          ref_for: !0,
          ref: (E) => v(I.id, E),
          compact: $.compact
        }), Ia({ _: 2 }, [
          le(u(n), (E, P) => ({
            name: P,
            fn: _(() => [
              S($.$slots, P, O({ ref_for: !0 }, { message: I }))
            ])
          }))
        ]), 1040, ["compact"]))), 128))
      ]),
      $.status === "submitted" ? (h(), k(Nh, O({
        key: 0,
        id: "indicator",
        role: "assistant"
      }, { ...i.value, actions: void 0, parts: [] }, { compact: $.compact }), {
        content: _(() => [
          J("div", {
            class: A(o.value.indicator({ class: t.ui?.indicator }))
          }, [
            S($.$slots, "indicator", {}, () => [
              B[0] || (B[0] = J("span", null, null, -1)),
              B[1] || (B[1] = J("span", null, null, -1)),
              B[2] || (B[2] = J("span", null, null, -1))
            ])
          ], 2)
        ]),
        _: 3
      }, 16, ["compact"])) : D("", !0),
      V(u(Xt), { present: f.value }, {
        default: _(() => [
          J("div", {
            "data-state": f.value ? "open" : "closed",
            class: A(o.value.viewport({ class: t.ui?.viewport }))
          }, [
            S($.$slots, "viewport", { onClick: b }, () => [
              $.autoScroll ? (h(), k(Je, O({
                key: 0,
                icon: $.autoScrollIcon || u(r).ui.icons.arrowDown,
                color: "neutral",
                variant: "outline"
              }, typeof $.autoScroll == "object" ? $.autoScroll : {}, {
                class: o.value.autoScroll({ class: t.ui?.autoScroll }),
                onClick: b
              }), null, 16, ["icon", "class"])) : D("", !0)
            ])
          ], 10, O5)
        ]),
        _: 3
      }, 8, ["present"])
    ], 14, L5));
  }
}), F5 = {
  slots: {
    root: "relative flex-1 flex flex-col min-h-0 min-w-0",
    prompt: "px-0 rounded-t-none border-t border-default",
    close: "",
    content: "overflow-y-auto flex-1 flex flex-col py-3"
  }
}, w4 = /* @__PURE__ */ L({
  __name: "ChatPalette",
  props: {
    as: {},
    class: {},
    ui: {}
  },
  setup(e) {
    const t = e, a = Se(), n = ue(), r = T(() => W({ extend: W(F5), ...n.ui?.chatPalette || {} })());
    return (s, i) => (h(), k(u(U), {
      as: s.as,
      class: A(r.value.root({ class: [t.ui?.root, t.class] }))
    }, {
      default: _(() => [
        J("div", {
          class: A(r.value.content({ class: t.ui?.content }))
        }, [
          V(u(Tn), { compact: "" }, {
            default: _(() => [
              S(s.$slots, "default")
            ]),
            _: 3
          })
        ], 2),
        a.prompt ? (h(), k(u(Tn), {
          key: 0,
          class: A(r.value.prompt({ class: t.ui?.prompt }))
        }, {
          default: _(() => [
            S(s.$slots, "prompt")
          ]),
          _: 3
        }, 8, ["class"])) : D("", !0)
      ]),
      _: 3
    }, 8, ["as", "class"]));
  }
}), z5 = {
  slots: {
    root: "relative inline-flex items-center",
    base: [
      "w-full rounded-md border-0 appearance-none placeholder:text-dimmed focus:outline-none disabled:cursor-not-allowed disabled:opacity-75",
      "transition-colors"
    ],
    leading: "absolute start-0 flex items-start",
    leadingIcon: "shrink-0 text-dimmed",
    leadingAvatar: "shrink-0",
    leadingAvatarSize: "",
    trailing: "absolute end-0 flex items-start",
    trailingIcon: "shrink-0 text-dimmed"
  },
  variants: {
    fieldGroup: {
      horizontal: {
        root: "group has-focus-visible:z-[1]",
        base: "group-not-only:group-first:rounded-e-none group-not-only:group-last:rounded-s-none group-not-last:group-not-first:rounded-none"
      },
      vertical: {
        root: "group has-focus-visible:z-[1]",
        base: "group-not-only:group-first:rounded-b-none group-not-only:group-last:rounded-t-none group-not-last:group-not-first:rounded-none"
      }
    },
    size: {
      xs: {
        base: "px-2 py-1 text-xs gap-1",
        leading: "ps-2 inset-y-1",
        trailing: "pe-2 inset-y-1",
        leadingIcon: "size-4",
        leadingAvatarSize: "3xs",
        trailingIcon: "size-4"
      },
      sm: {
        base: "px-2.5 py-1.5 text-xs gap-1.5",
        leading: "ps-2.5 inset-y-1.5",
        trailing: "pe-2.5 inset-y-1.5",
        leadingIcon: "size-4",
        leadingAvatarSize: "3xs",
        trailingIcon: "size-4"
      },
      md: {
        base: "px-2.5 py-1.5 text-sm gap-1.5",
        leading: "ps-2.5 inset-y-1.5",
        trailing: "pe-2.5 inset-y-1.5",
        leadingIcon: "size-5",
        leadingAvatarSize: "2xs",
        trailingIcon: "size-5"
      },
      lg: {
        base: "px-3 py-2 text-sm gap-2",
        leading: "ps-3 inset-y-2",
        trailing: "pe-3 inset-y-2",
        leadingIcon: "size-5",
        leadingAvatarSize: "2xs",
        trailingIcon: "size-5"
      },
      xl: {
        base: "px-3 py-2 text-base gap-2",
        leading: "ps-3 inset-y-2",
        trailing: "pe-3 inset-y-2",
        leadingIcon: "size-6",
        leadingAvatarSize: "xs",
        trailingIcon: "size-6"
      }
    },
    variant: {
      outline: "text-highlighted bg-default ring ring-inset ring-accented",
      soft: "text-highlighted bg-elevated/50 hover:bg-elevated focus:bg-elevated disabled:bg-elevated/50",
      subtle: "text-highlighted bg-elevated ring ring-inset ring-accented",
      ghost: "text-highlighted bg-transparent hover:bg-elevated focus:bg-elevated disabled:bg-transparent dark:disabled:bg-transparent",
      none: "text-highlighted bg-transparent"
    },
    color: {
      primary: "",
      secondary: "",
      success: "",
      info: "",
      warning: "",
      error: "",
      neutral: ""
    },
    leading: {
      true: ""
    },
    trailing: {
      true: ""
    },
    loading: {
      true: ""
    },
    highlight: {
      true: ""
    },
    type: {
      file: "file:me-1.5 file:font-medium file:text-muted file:outline-none"
    },
    autoresize: {
      true: {
        base: "resize-none"
      }
    }
  },
  compoundVariants: [
    {
      color: "primary",
      variant: [
        "outline",
        "subtle"
      ],
      class: "focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-primary"
    },
    {
      color: "secondary",
      variant: [
        "outline",
        "subtle"
      ],
      class: "focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-secondary"
    },
    {
      color: "success",
      variant: [
        "outline",
        "subtle"
      ],
      class: "focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-success"
    },
    {
      color: "info",
      variant: [
        "outline",
        "subtle"
      ],
      class: "focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-info"
    },
    {
      color: "warning",
      variant: [
        "outline",
        "subtle"
      ],
      class: "focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-warning"
    },
    {
      color: "error",
      variant: [
        "outline",
        "subtle"
      ],
      class: "focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-error"
    },
    {
      color: "primary",
      highlight: !0,
      class: "ring ring-inset ring-primary"
    },
    {
      color: "secondary",
      highlight: !0,
      class: "ring ring-inset ring-secondary"
    },
    {
      color: "success",
      highlight: !0,
      class: "ring ring-inset ring-success"
    },
    {
      color: "info",
      highlight: !0,
      class: "ring ring-inset ring-info"
    },
    {
      color: "warning",
      highlight: !0,
      class: "ring ring-inset ring-warning"
    },
    {
      color: "error",
      highlight: !0,
      class: "ring ring-inset ring-error"
    },
    {
      color: "neutral",
      variant: [
        "outline",
        "subtle"
      ],
      class: "focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-inverted"
    },
    {
      color: "neutral",
      highlight: !0,
      class: "ring ring-inset ring-inverted"
    },
    {
      leading: !0,
      size: "xs",
      class: "ps-7"
    },
    {
      leading: !0,
      size: "sm",
      class: "ps-8"
    },
    {
      leading: !0,
      size: "md",
      class: "ps-9"
    },
    {
      leading: !0,
      size: "lg",
      class: "ps-10"
    },
    {
      leading: !0,
      size: "xl",
      class: "ps-11"
    },
    {
      trailing: !0,
      size: "xs",
      class: "pe-7"
    },
    {
      trailing: !0,
      size: "sm",
      class: "pe-8"
    },
    {
      trailing: !0,
      size: "md",
      class: "pe-9"
    },
    {
      trailing: !0,
      size: "lg",
      class: "pe-10"
    },
    {
      trailing: !0,
      size: "xl",
      class: "pe-11"
    },
    {
      loading: !0,
      leading: !0,
      class: {
        leadingIcon: "animate-spin"
      }
    },
    {
      loading: !0,
      leading: !1,
      trailing: !0,
      class: {
        trailingIcon: "animate-spin"
      }
    }
  ],
  defaultVariants: {
    size: "md",
    color: "primary",
    variant: "outline"
  }
}, q5 = ["id", "value", "name", "rows", "placeholder", "disabled", "required"], V5 = /* @__PURE__ */ L({
  inheritAttrs: !1,
  __name: "Textarea",
  props: {
    as: {},
    id: {},
    name: {},
    placeholder: {},
    color: {},
    variant: {},
    size: {},
    required: { type: Boolean },
    autofocus: { type: Boolean },
    autofocusDelay: { default: 0 },
    autoresize: { type: Boolean },
    autoresizeDelay: { default: 0 },
    disabled: { type: Boolean },
    rows: { default: 3 },
    maxrows: { default: 0 },
    highlight: { type: Boolean },
    modelValue: {},
    defaultValue: {},
    modelModifiers: {},
    class: {},
    ui: {},
    icon: {},
    avatar: {},
    leading: { type: Boolean },
    leadingIcon: {},
    trailing: { type: Boolean },
    trailingIcon: {},
    loading: { type: Boolean },
    loadingIcon: {}
  },
  emits: ["update:modelValue", "blur", "change"],
  setup(e, { expose: t, emit: a }) {
    const n = e, r = a, s = Se(), i = /* @__PURE__ */ qf(n, "modelValue", r, { defaultValue: n.defaultValue }), o = ue(), { emitFormFocus: l, emitFormBlur: d, emitFormInput: c, emitFormChange: f, size: p, color: g, id: v, name: m, highlight: y, disabled: x, ariaAttrs: b } = Ca(n, { deferInputValidation: !0 }), { isLeading: C, isTrailing: w, leadingIconName: $, trailingIconName: B } = lr(n), I = T(() => W({ extend: W(z5), ...o.ui?.textarea || {} })({
      color: g.value,
      variant: n.variant,
      size: p?.value,
      loading: n.loading,
      highlight: y.value,
      autoresize: n.autoresize,
      leading: C.value || !!n.avatar || !!s.leading,
      trailing: w.value || !!s.trailing
    })), E = N(null);
    function P(z) {
      n.modelModifiers?.trim && (z = z?.trim() ?? null), n.modelModifiers?.number && (z = Hf(z)), n.modelModifiers?.nullable && (z ||= null), n.modelModifiers?.optional && (z ||= void 0), i.value = z, c();
    }
    function R(z) {
      K(), n.modelModifiers?.lazy || P(z.target.value);
    }
    function F(z) {
      const G = z.target.value;
      n.modelModifiers?.lazy && P(G), n.modelModifiers?.trim && (z.target.value = G.trim()), f(), r("change", z);
    }
    function H(z) {
      d(), r("blur", z);
    }
    function j() {
      n.autofocus && E.value?.focus();
    }
    function K() {
      if (n.autoresize && E.value) {
        E.value.rows = n.rows;
        const z = E.value.style.overflow;
        E.value.style.overflow = "hidden";
        const G = window.getComputedStyle(E.value), Y = Number.parseInt(G.paddingTop), q = Number.parseInt(G.paddingBottom), Q = Y + q, se = Number.parseInt(G.lineHeight), { scrollHeight: ce } = E.value, oe = (ce - Q) / se;
        oe > n.rows && (E.value.rows = n.maxrows ? Math.min(oe, n.maxrows) : oe), E.value.style.overflow = z;
      }
    }
    return ye(i, () => {
      Be(K);
    }), Pe(() => {
      setTimeout(() => {
        j();
      }, n.autofocusDelay), setTimeout(() => {
        K();
      }, n.autoresizeDelay);
    }), t({
      textareaRef: E
    }), (z, G) => (h(), k(u(U), {
      as: z.as,
      class: A(I.value.root({ class: [n.ui?.root, n.class] }))
    }, {
      default: _(() => [
        J("textarea", O({
          id: u(v),
          ref_key: "textareaRef",
          ref: E,
          value: u(i),
          name: u(m),
          rows: z.rows,
          placeholder: z.placeholder,
          class: I.value.base({ class: n.ui?.base }),
          disabled: u(x),
          required: z.required
        }, { ...z.$attrs, ...u(b) }, {
          onInput: R,
          onBlur: H,
          onChange: F,
          onFocus: G[0] || (G[0] = //@ts-ignore
          (...Y) => u(l) && u(l)(...Y))
        }), null, 16, q5),
        S(z.$slots, "default"),
        u(C) || z.avatar || s.leading ? (h(), M("span", {
          key: 0,
          class: A(I.value.leading({ class: n.ui?.leading }))
        }, [
          S(z.$slots, "leading", {}, () => [
            u(C) && u($) ? (h(), k(he, {
              key: 0,
              name: u($),
              class: A(I.value.leadingIcon({ class: n.ui?.leadingIcon }))
            }, null, 8, ["name", "class"])) : z.avatar ? (h(), k(ft, O({
              key: 1,
              size: n.ui?.leadingAvatarSize || I.value.leadingAvatarSize()
            }, z.avatar, {
              class: I.value.leadingAvatar({ class: n.ui?.leadingAvatar })
            }), null, 16, ["size", "class"])) : D("", !0)
          ])
        ], 2)) : D("", !0),
        u(w) || s.trailing ? (h(), M("span", {
          key: 1,
          class: A(I.value.trailing({ class: n.ui?.trailing }))
        }, [
          S(z.$slots, "trailing", {}, () => [
            u(B) ? (h(), k(he, {
              key: 0,
              name: u(B),
              class: A(I.value.trailingIcon({ class: n.ui?.trailingIcon }))
            }, null, 8, ["name", "class"])) : D("", !0)
          ])
        ], 2)) : D("", !0)
      ]),
      _: 3
    }, 8, ["as", "class"]));
  }
}), N5 = {
  slots: {
    root: "relative flex flex-col items-stretch gap-2 px-2.5 py-2 w-full rounded-lg backdrop-blur",
    header: "flex items-center gap-1.5",
    body: "items-start",
    footer: "flex items-center justify-between gap-1.5",
    base: "text-base/5"
  },
  variants: {
    variant: {
      outline: {
        root: "bg-default/75 ring ring-default"
      },
      soft: {
        root: "bg-elevated/50"
      },
      subtle: {
        root: "bg-elevated/50 ring ring-default"
      },
      naked: {
        root: ""
      }
    }
  },
  defaultVariants: {
    variant: "outline"
  }
}, C4 = /* @__PURE__ */ L({
  inheritAttrs: !1,
  __name: "ChatPrompt",
  props: /* @__PURE__ */ mt({
    as: { default: "form" },
    placeholder: {},
    autofocus: { type: Boolean, default: !0 },
    autoresize: { type: Boolean, default: !0 },
    rows: { default: 1 },
    variant: {},
    error: {},
    class: {},
    ui: {}
  }, {
    modelValue: { default: "" },
    modelModifiers: {}
  }),
  emits: /* @__PURE__ */ mt(["submit", "close"], ["update:modelValue"]),
  setup(e, { expose: t, emit: a }) {
    const n = e, r = a, s = Se(), i = lt(e, "modelValue"), { t: o } = it(), l = ue(), d = xt(tt(n, "autofocus", "autoresize", "rows")), c = Mt(s, ["header", "footer"]), f = T(() => W({ extend: W(N5), ...l.ui?.chatPrompt || {} })({
      variant: n.variant
    }));
    function p(m) {
      i.value.trim() !== "" && r("submit", m);
    }
    function g(m) {
      v.value?.textareaRef?.blur(), r("close", m);
    }
    const v = Bl("textarea");
    return t({
      textareaRef: v.value?.textareaRef
    }), (m, y) => (h(), k(u(U), {
      as: m.as,
      class: A(f.value.root({ class: [n.ui?.root, n.class] })),
      onSubmit: ze(p, ["prevent"])
    }, {
      default: _(() => [
        s.header ? (h(), M("div", {
          key: 0,
          class: A(f.value.header({ class: n.ui?.header }))
        }, [
          S(m.$slots, "header")
        ], 2)) : D("", !0),
        V(V5, O({
          ref_key: "textarea",
          ref: v,
          modelValue: i.value,
          "onUpdate:modelValue": y[0] || (y[0] = (x) => i.value = x),
          placeholder: m.placeholder || u(o)("chatPrompt.placeholder"),
          disabled: !!m.error,
          variant: "none"
        }, { ...u(d), ...m.$attrs }, {
          ui: u(Yl)(u(Mt)(f.value, ["root", "body", "header", "footer"]), n.ui),
          class: f.value.body({ class: n.ui?.body }),
          onKeydown: [
            nt(ze(p, ["exact", "prevent"]), ["enter"]),
            nt(g, ["esc"])
          ]
        }), Ia({ _: 2 }, [
          le(u(c), (x, b) => ({
            name: b,
            fn: _((C) => [
              S(m.$slots, b, pe(me(C)))
            ])
          }))
        ]), 1040, ["modelValue", "placeholder", "disabled", "ui", "class", "onKeydown"]),
        s.footer ? (h(), M("div", {
          key: 1,
          class: A(f.value.footer({ class: n.ui?.footer }))
        }, [
          S(m.$slots, "footer")
        ], 2)) : D("", !0)
      ]),
      _: 3
    }, 8, ["as", "class"]));
  }
}), H5 = {
  slots: {
    base: ""
  }
}, x4 = /* @__PURE__ */ L({
  __name: "ChatPromptSubmit",
  props: {
    status: { default: "ready" },
    icon: {},
    color: {},
    variant: {},
    streamingIcon: {},
    streamingColor: { default: "neutral" },
    streamingVariant: { default: "subtle" },
    submittedIcon: {},
    submittedColor: { default: "neutral" },
    submittedVariant: { default: "subtle" },
    errorIcon: {},
    errorColor: { default: "error" },
    errorVariant: { default: "soft" },
    ui: {},
    class: {}
  },
  emits: ["stop", "reload"],
  setup(e, { emit: t }) {
    const a = e, n = t, r = Se(), { t: s } = it(), i = ue(), o = T(() => ({
      ready: {
        icon: a.icon || i.ui.icons.arrowUp,
        color: a.color,
        variant: a.variant,
        type: "submit"
      },
      submitted: {
        icon: a.submittedIcon || i.ui.icons.stop,
        color: a.submittedColor,
        variant: a.submittedVariant,
        onClick() {
          n("stop");
        }
      },
      streaming: {
        icon: a.streamingIcon || i.ui.icons.stop,
        color: a.streamingColor,
        variant: a.streamingVariant,
        onClick() {
          n("stop");
        }
      },
      error: {
        icon: a.errorIcon || i.ui.icons.reload,
        color: a.errorColor,
        variant: a.errorVariant,
        onClick() {
          n("reload");
        }
      }
    })[a.status]), l = T(() => W({ extend: W(H5), ...i.ui?.chatPromptSubmit || {} })());
    return (d, c) => (h(), k(Je, O({
      "aria-label": u(s)("chatPromptSubmit.label")
    }, o.value, {
      class: l.value.base({ class: [a.ui?.base, a.class] }),
      ui: u(Yl)(l.value, a.ui)
    }), Ia({ _: 2 }, [
      le(r, (f, p) => ({
        name: p,
        fn: _((g) => [
          S(d.$slots, p, pe(me(g)))
        ])
      }))
    ]), 1040, ["aria-label", "class", "ui"]));
  }
}), j5 = {
  slots: {
    root: "relative",
    fieldset: "flex gap-x-2",
    legend: "mb-1 block font-medium text-default",
    item: ""
  },
  variants: {
    orientation: {
      horizontal: {
        fieldset: "flex-row"
      },
      vertical: {
        fieldset: "flex-col"
      }
    },
    color: {
      primary: {},
      secondary: {},
      success: {},
      info: {},
      warning: {},
      error: {},
      neutral: {}
    },
    variant: {
      list: {},
      card: {},
      table: {
        item: "border border-muted"
      }
    },
    size: {
      xs: {
        fieldset: "gap-y-0.5",
        legend: "text-xs"
      },
      sm: {
        fieldset: "gap-y-0.5",
        legend: "text-xs"
      },
      md: {
        fieldset: "gap-y-1",
        legend: "text-sm"
      },
      lg: {
        fieldset: "gap-y-1",
        legend: "text-sm"
      },
      xl: {
        fieldset: "gap-y-1.5",
        legend: "text-base"
      }
    },
    required: {
      true: {
        legend: "after:content-['*'] after:ms-0.5 after:text-error"
      }
    }
  },
  compoundVariants: [
    {
      size: "xs",
      variant: "table",
      class: {
        item: "p-2.5"
      }
    },
    {
      size: "sm",
      variant: "table",
      class: {
        item: "p-3"
      }
    },
    {
      size: "md",
      variant: "table",
      class: {
        item: "p-3.5"
      }
    },
    {
      size: "lg",
      variant: "table",
      class: {
        item: "p-4"
      }
    },
    {
      size: "xl",
      variant: "table",
      class: {
        item: "p-4.5"
      }
    },
    {
      orientation: "horizontal",
      variant: "table",
      class: {
        item: "first-of-type:rounded-s-lg last-of-type:rounded-e-lg",
        fieldset: "gap-0 -space-x-px"
      }
    },
    {
      orientation: "vertical",
      variant: "table",
      class: {
        item: "first-of-type:rounded-t-lg last-of-type:rounded-b-lg",
        fieldset: "gap-0 -space-y-px"
      }
    },
    {
      color: "primary",
      variant: "table",
      class: {
        item: "has-data-[state=checked]:bg-primary/10 has-data-[state=checked]:border-primary/50 has-data-[state=checked]:z-[1]"
      }
    },
    {
      color: "secondary",
      variant: "table",
      class: {
        item: "has-data-[state=checked]:bg-secondary/10 has-data-[state=checked]:border-secondary/50 has-data-[state=checked]:z-[1]"
      }
    },
    {
      color: "success",
      variant: "table",
      class: {
        item: "has-data-[state=checked]:bg-success/10 has-data-[state=checked]:border-success/50 has-data-[state=checked]:z-[1]"
      }
    },
    {
      color: "info",
      variant: "table",
      class: {
        item: "has-data-[state=checked]:bg-info/10 has-data-[state=checked]:border-info/50 has-data-[state=checked]:z-[1]"
      }
    },
    {
      color: "warning",
      variant: "table",
      class: {
        item: "has-data-[state=checked]:bg-warning/10 has-data-[state=checked]:border-warning/50 has-data-[state=checked]:z-[1]"
      }
    },
    {
      color: "error",
      variant: "table",
      class: {
        item: "has-data-[state=checked]:bg-error/10 has-data-[state=checked]:border-error/50 has-data-[state=checked]:z-[1]"
      }
    },
    {
      color: "neutral",
      variant: "table",
      class: {
        item: "has-data-[state=checked]:bg-elevated has-data-[state=checked]:border-inverted/50 has-data-[state=checked]:z-[1]"
      }
    },
    {
      variant: "table",
      disabled: !0,
      class: {
        item: "cursor-not-allowed opacity-75"
      }
    }
  ],
  defaultVariants: {
    size: "md",
    variant: "list",
    color: "primary"
  }
}, S4 = /* @__PURE__ */ L({
  __name: "CheckboxGroup",
  props: {
    as: {},
    legend: {},
    valueKey: { default: "value" },
    labelKey: { default: "label" },
    descriptionKey: { default: "description" },
    items: {},
    size: {},
    variant: {},
    orientation: { default: "vertical" },
    class: {},
    ui: {},
    defaultValue: {},
    disabled: { type: Boolean },
    loop: { type: Boolean },
    modelValue: {},
    name: {},
    required: { type: Boolean },
    color: {},
    indicator: {},
    icon: {}
  },
  emits: ["update:modelValue", "change"],
  setup(e, { emit: t }) {
    const a = e, n = t, r = Se(), s = ue(), i = Xe(tt(a, "as", "modelValue", "defaultValue", "orientation", "loop", "required"), n), o = xt(tt(a, "variant", "indicator", "icon")), l = Mt(r, ["legend"]), { emitFormChange: d, emitFormInput: c, color: f, name: p, size: g, id: v, disabled: m, ariaAttrs: y } = Ca(a, { bind: !1 }), x = v.value ?? Rn(), b = T(() => W({ extend: j5, ...s.ui?.checkboxGroup || {} })({
      size: g.value,
      required: a.required,
      orientation: a.orientation,
      color: a.color,
      variant: a.variant
    }));
    function C(B) {
      if (B === null)
        return {
          id: `${x}:null`,
          value: void 0,
          label: void 0
        };
      if (typeof B == "string" || typeof B == "number")
        return {
          id: `${x}:${B}`,
          value: String(B),
          label: String(B)
        };
      const I = qe(B, a.valueKey), E = qe(B, a.labelKey), P = qe(B, a.descriptionKey);
      return {
        ...B,
        value: I,
        label: E,
        description: P,
        id: `${x}:${I}`
      };
    }
    const w = T(() => a.items ? a.items.map(C) : []);
    function $(B) {
      const I = new Event("change", { target: { value: B } });
      n("change", I), d(), c();
    }
    return (B, I) => (h(), k(u(pk), O({ id: u(x) }, u(i), {
      name: u(p),
      disabled: u(m),
      class: b.value.root({ class: [a.ui?.root, a.class] }),
      "onUpdate:modelValue": $
    }), {
      default: _(() => [
        J("fieldset", O({
          class: b.value.fieldset({ class: a.ui?.fieldset })
        }, u(y)), [
          B.legend || r.legend ? (h(), M("legend", {
            key: 0,
            class: A(b.value.legend({ class: a.ui?.legend }))
          }, [
            S(B.$slots, "legend", {}, () => [
              ee(X(B.legend), 1)
            ])
          ], 2)) : D("", !0),
          (h(!0), M(te, null, le(w.value, (E) => (h(), k(x0, O({
            key: E.value
          }, { ref_for: !0 }, { ...E, ...u(o) }, {
            color: u(f),
            size: u(g),
            name: u(p),
            disabled: E.disabled || u(m),
            ui: { ...a.ui ? u(Mt)(a.ui, ["root"]) : void 0, ...E.ui || {} },
            class: b.value.item({ class: [a.ui?.item, E.ui?.item, E.class] })
          }), Ia({ _: 2 }, [
            le(u(l), (P, R) => ({
              name: R,
              fn: _(() => [
                S(B.$slots, R, { item: E })
              ])
            }))
          ]), 1040, ["color", "size", "name", "disabled", "ui", "class"]))), 128))
        ], 16)
      ]),
      _: 3
    }, 16, ["id", "name", "disabled", "class"]));
  }
}), K5 = {
  slots: {
    root: "",
    content: "data-[state=open]:animate-[collapsible-down_200ms_ease-out] data-[state=closed]:animate-[collapsible-up_200ms_ease-out] overflow-hidden"
  }
}, _4 = /* @__PURE__ */ L({
  __name: "Collapsible",
  props: {
    as: {},
    class: {},
    ui: {},
    defaultOpen: { type: Boolean },
    open: { type: Boolean },
    disabled: { type: Boolean },
    unmountOnHide: { type: Boolean, default: !0 }
  },
  emits: ["update:open"],
  setup(e, { emit: t }) {
    const a = e, n = t, r = Se(), s = ue(), i = Xe(tt(a, "as", "defaultOpen", "open", "disabled", "unmountOnHide"), n), o = T(() => W({ extend: W(K5), ...s.ui?.collapsible || {} })());
    return (l, d) => (h(), k(u(Ym), O(u(i), {
      class: o.value.root({ class: [a.ui?.root, a.class] })
    }), {
      default: _(({ open: c }) => [
        r.default ? (h(), k(u(Jm), {
          key: 0,
          "as-child": ""
        }, {
          default: _(() => [
            S(l.$slots, "default", { open: c })
          ]),
          _: 2
        }, 1024)) : D("", !0),
        V(u(Xm), {
          class: A(o.value.content({ class: a.ui?.content }))
        }, {
          default: _(() => [
            S(l.$slots, "content")
          ]),
          _: 3
        }, 8, ["class"])
      ]),
      _: 3
    }, 16, ["class"]));
  }
}), Te = 255, Pa = 100, Jn = 125, cs = 150;
var Ce, ja, da, Cl;
(function(e) {
  e.HEX = "HEX", e.RGB = "RGB", e.HWB = "HWB", e.HSL = "HSL", e.CIELab = "CIELab", e.LCH = "LCH", e.CMYK = "CMYK";
})(Ce || (Ce = {})), function(e) {
  e.ANALOGOUS = "ANALOGOUS", e.COMPLEMENTARY = "COMPLEMENTARY", e.SPLIT_COMPLEMENTARY = "SPLIT_COMPLEMENTARY", e.TRIADIC = "TRIADIC", e.TETRADIC = "TETRADIC", e.SQUARE = "SQUARE";
}(ja || (ja = {})), function(e) {
  e.ADDITIVE = "ADDITIVE", e.SUBTRACTIVE = "SUBTRACTIVE";
}(da || (da = {})), function(e) {
  e.black = "#000000", e.silver = "#C0C0C0", e.gray = "#808080", e.white = "#FFFFFF", e.maroon = "#800000", e.red = "#FF0000", e.purple = "#800080", e.fuchsia = "#FF00FF", e.green = "#008000", e.lime = "#00FF00", e.olive = "#808000", e.yellow = "#FFFF00", e.navy = "#000080", e.blue = "#0000FF", e.teal = "#008080", e.aqua = "#00FFFF", e.orange = "#FFA500", e.aliceblue = "#F0F8FF", e.antiquewhite = "#FAEBD7", e.aquamarine = "#7FFFD4", e.azure = "#F0FFFF", e.beige = "#F5F5DC", e.bisque = "#FFE4C4", e.blanchedalmond = "#FFEBCD", e.blueviolet = "#8A2BE2", e.brown = "#A52A2A", e.burlywood = "#DEB887", e.cadetblue = "#5F9EA0", e.chartreuse = "#7FFF00", e.chocolate = "#D2691E", e.coral = "#FF7F50", e.cornflowerblue = "#6495ED", e.cornsilk = "#FFF8DC", e.crimson = "#DC143C", e.cyan = "#00FFFF", e.darkblue = "#00008B", e.darkcyan = "#008B8B", e.darkgoldenrod = "#B8860B", e.darkgray = "#A9A9A9", e.darkgreen = "#006400", e.darkgrey = "#A9A9A9", e.darkkhaki = "#BDB76B", e.darkmagenta = "#8B008B", e.darkolivegreen = "#556B2F", e.darkorange = "#FF8C00", e.darkorchid = "#9932CC", e.darkred = "#8B0000", e.darksalmon = "#E9967A", e.darkseagreen = "#8FBC8F", e.darkslateblue = "#483D8B", e.darkslategray = "#2F4F4F", e.darkslategrey = "#2F4F4F", e.darkturquoise = "#00CED1", e.darkviolet = "#9400D3", e.deeppink = "#FF1493", e.deepskyblue = "#00BFFF", e.dimgray = "#696969", e.dimgrey = "#696969", e.dodgerblue = "#1E90FF", e.firebrick = "#B22222", e.floralwhite = "#FFFAF0", e.forestgreen = "#228B22", e.gainsboro = "#DCDCDC", e.ghostwhite = "#F8F8FF", e.gold = "#FFD700", e.goldenrod = "#DAA520", e.greenyellow = "#ADFF2F", e.grey = "#808080", e.honeydew = "#F0FFF0", e.hotpink = "#FF69B4", e.indianred = "#CD5C5C", e.indigo = "#4B0082", e.ivory = "#FFFFF0", e.khaki = "#F0E68C", e.lavender = "#E6E6FA", e.lavenderblush = "#FFF0F5", e.lawngreen = "#7CFC00", e.lemonchiffon = "#FFFACD", e.lightblue = "#ADD8E6", e.lightcoral = "#F08080", e.lightcyan = "#E0FFFF", e.lightgoldenrodyellow = "#FAFAD2", e.lightgray = "#D3D3D3", e.lightgreen = "#90EE90", e.lightgrey = "#D3D3D3", e.lightpink = "#FFB6C1", e.lightsalmon = "#FFA07A", e.lightseagreen = "#20B2AA", e.lightskyblue = "#87CEFA", e.lightslategray = "#778899", e.lightslategrey = "#778899", e.lightsteelblue = "#B0C4DE", e.lightyellow = "#FFFFE0", e.limegreen = "#32CD32", e.linen = "#FAF0E6", e.magenta = "#FF00FF", e.mediumaquamarine = "#66CDAA", e.mediumblue = "#0000CD", e.mediumorchid = "#BA55D3", e.mediumpurple = "#9370DB", e.mediumseagreen = "#3CB371", e.mediumslateblue = "#7B68EE", e.mediumspringgreen = "#00FA9A", e.mediumturquoise = "#48D1CC", e.mediumvioletred = "#C71585", e.midnightblue = "#191970", e.mintcream = "#F5FFFA", e.mistyrose = "#FFE4E1", e.moccasin = "#FFE4B5", e.navajowhite = "#FFDEAD", e.oldlace = "#FDF5E6", e.olivedrab = "#6B8E23", e.orangered = "#FF4500", e.orchid = "#DA70D6", e.palegoldenrod = "#EEE8AA", e.palegreen = "#98FB98", e.paleturquoise = "#AFEEEE", e.palevioletred = "#DB7093", e.papayawhip = "#FFEFD5", e.peachpuff = "#FFDAB9", e.peru = "#CD853F", e.pink = "#FFC0CB", e.plum = "#DDA0DD", e.powderblue = "#B0E0E6", e.rosybrown = "#BC8F8F", e.royalblue = "#4169E1", e.saddlebrown = "#8B4513", e.salmon = "#FA8072", e.sandybrown = "#F4A460", e.seagreen = "#2E8B57", e.seashell = "#FFF5EE", e.sienna = "#A0522D", e.skyblue = "#87CEEB", e.slateblue = "#6A5ACD", e.slategray = "#708090", e.slategrey = "#708090", e.snow = "#FFFAFA", e.springgreen = "#00FF7F", e.steelblue = "#4682B4", e.tan = "#D2B48C", e.thistle = "#D8BFD8", e.tomato = "#FF6347", e.turquoise = "#40E0D0", e.violet = "#EE82EE", e.wheat = "#F5DEB3", e.whitesmoke = "#F5F5F5", e.yellowgreen = "#9ACD32", e.rebeccapurple = "#663399";
}(Cl || (Cl = {}));
const d1 = Object.keys(Cl), G5 = { HEX: ["R", "G", "B", "A"], RGB: ["R", "G", "B", "A"], HSL: ["H", "S", "L", "A"], HWB: ["H", "W", "B", "A"], CIELab: ["L", "a", "b", "A"], LCH: ["L", "C", "H", "A"], CMYK: ["C", "M", "Y", "K", "A"] }, hc = { ABGR: Ce.RGB, ABHW: Ce.HWB, ACHL: Ce.LCH, ACKMY: Ce.CMYK, AHLS: Ce.HSL, ALAB: Ce.CIELab, BGR: Ce.RGB, BHW: Ce.HWB, CHL: Ce.LCH, CKMY: Ce.CMYK, HLS: Ce.HSL, LAB: Ce.CIELab };
var gi;
(function(e) {
  e.NUMBER = "number", e.BOOLEAN = "boolean";
})(gi || (gi = {}));
const wa = { [Ce.HEX]: /^#(?:(?<r>[a-f\d])(?<g>[a-f\d])(?<b>[a-f\d])(?<a>[a-f\d])?|(?<rr>[a-f\d]{2})(?<gg>[a-f\d]{2})(?<bb>[a-f\d]{2})(?<aa>[a-f\d]{2})?)$/i, [Ce.RGB]: /^rgba?\s*\(\s*(?:(?<r_legacy>(?:\d*\.)?\d+%?)\s*,\s*(?<g_legacy>(?:\d*\.)?\d+%?)\s*,\s*(?<b_legacy>(?:\d*\.)?\d+%?)(?:\s*,\s*(?<a_legacy>(?:\d*\.)?\d+))?|(?<r>(?:\d*\.)?\d+%?)\s+(?<g>(?:\d*\.)?\d+%?)\s+(?<b>(?:\d*\.)?\d+%?)(?:\s*\/\s*(?<a>(?:\d*\.)?\d+%?))?|from\s+(?<from>(?:\w+|\w+\(\s*[^())]+\s*\)|\w+\(from\s+\w+\(.*\)\s*\)|#[a-fA-F\d]+))\s+(?<relative_r>(?:[rgb]|(?:\d*\.)?\d+|calc\([rgb()/*\-+\d.\s]+\)))\s+(?<relative_g>(?:[rgb]|(?:\d*\.)?\d+|calc\([rgb()/*\-+\d.\s]+\)))\s+(?<relative_b>(?:[rgb]|(?:\d*\.)?\d+|calc\([rgb()/*\-+\d.\s]+\)))(?:\s*\/\s*(?<relative_a>(?:(?:\d*\.)?\d+%?|calc\([()/*\-+\d.\s\w]*(?:alpha)?[()/*\-+\d.\s\w]*\)|alpha)))?)\s*\)$/, [Ce.HWB]: /^hwb\s*\(\s*(?:(?<h>(?:\d*\.)?\d+(?:deg|grad|rad|turn)?)\s+(?<w>(?:\d*\.)?\d+)%\s+(?<b>(?:\d*\.)?\d+)%(?:\s*\/\s*(?<a>(?:\d*\.)?\d+%?))?|from\s+(?<from>(?:\w+|\w+\(\s*[^())]+\s*\)|\w+\(from\s+\w+\(.*\)\s*\)|#[a-fA-F\d]+))\s+(?<relative_h>(?:[hwb]|(?:\d*\.)?\d+|calc\([hwb()/*\-+\d.\s]+\)))\s+(?<relative_w>(?:[hwb]|(?:\d*\.)?\d+|calc\([hwb()/*\-+\d.\s]+\)))%?\s+(?<relative_b>(?:[hwb]|(?:\d*\.)?\d+|calc\([hwb()/*\-+\d.\s]+\)))%?(?:\s*\/\s*(?<relative_a>(?:(?:\d*\.)?\d+%?|calc\([()/*\-+\d.\s\w]*(?:alpha)?[()/*\-+\d.\s\w]*\)|alpha)))?)\s*\)$/, [Ce.HSL]: /^hsla?\s*\(\s*(?:(?<h_legacy>-?(?:\d*\.)?\d+(?:deg|grad|rad|turn)?)\s*,\s*(?<s_legacy>(?:\d*\.)?\d+)%\s*,\s*(?<l_legacy>(?:\d*\.)?\d+)%(?:\s*,\s*(?<a_legacy>(?:\d*\.)?\d+))?|(?<h>-?(?:\d*\.)?\d+(?:deg|grad|rad|turn)?)\s+(?<s>(?:\d*\.)?\d+)%?\s+(?<l>(?:\d*\.)?\d+)%?(?:\s*\/\s*(?<a>(?:\d*\.)?\d+%?))?|from\s+(?<from>(?:\w+|\w+\(\s*[^())]+\s*\)|\w+\(from\s+\w+\(.*\)\s*\)|#[a-fA-F\d]+))\s+(?<relative_h>(?:[hsl]|(?:\d*\.)?\d+|calc\([hsl()/*\-+\d.\s]+\)))\s+(?<relative_s>(?:[hsl]|(?:\d*\.)?\d+|calc\([hsl()/*\-+\d.\s]+\)))%?\s+(?<relative_l>(?:[hsl]|(?:\d*\.)?\d+|calc\([hsl()/*\-+\d.\s]+\)))%?(?:\s*\/\s*(?<relative_a>(?:(?:\d*\.)?\d+%?|calc\([()/*\-+\d.\s\w]*(?:alpha)?[()/*\-+\d.\s\w]*\)|alpha)))?)\s*\)$/, [Ce.CIELab]: /^lab\s*\(\s*(?:(?<L>(?:\d*\.)?\d+%?)\s+(?<a>-?(?:\d*\.)?\d+%?)\s+(?<b>-?(?:\d*\.)?\d+%?)(?:\s*\/\s*(?<A>(?:\d*\.)?\d+%?))?|from\s+(?<from>(?:\w+|\w+\(\s*[^())]+\s*\)|\w+\(from\s+\w+\(.*\)\s*\)|#[a-fA-F\d]+))\s+(?<relative_L>(?:[lab]|(?:\d*\.)?\d+|calc\([lab()/*\-+\d.\s]+\)))\s+(?<relative_a>(?:[lab]|(?:\d*\.)?\d+|calc\([lab()/*\-+\d.\s]+\)))\s+(?<relative_b>(?:[lab]|(?:\d*\.)?\d+|calc\([lab()/*\-+\d.\s]+\)))(?:\s*\/\s*(?<relative_A>(?:(?:\d*\.)?\d+%?|calc\([()/*\-+\d.\s\w]*(?:alpha)?[()/*\-+\d.\s\w]*\)|alpha)))?)\s*\)$/, [Ce.LCH]: /^lch\s*\(\s*(?:(?<l>(?:\d*\.)?\d+%?)\s+(?<c>-?(?:\d*\.)?\d+%?)\s+(?<h>-?(?:\d*\.)?\d+(?:deg|grad|rad|turn)?)(?:\s*\/\s*(?<a>(?:\d*\.)?\d+%?))?|from\s+(?<from>(?:\w+|\w+\(\s*[^())]+\s*\)|\w+\(from\s+\w+\(.*\)\s*\)|#[a-fA-F\d]+))\s+(?<relative_l>(?:[lch]|(?:\d*\.)?\d+|calc\([lch()/*\-+\d.\s]+\)))\s+(?<relative_c>(?:[lch]|(?:\d*\.)?\d+|calc\([lch()/*\-+\d.\s]+\)))\s+(?<relative_h>(?:[lch]|(?:\d*\.)?\d+|calc\([lch()/*\-+\d.\s]+\)))(?:\s*\/\s*(?<relative_a>(?:(?:\d*\.)?\d+%?|calc\([()/*\-+\d.\s\w]*(?:alpha)?[()/*\-+\d.\s\w]*\)|alpha)))?)\s*\)$/, [Ce.CMYK]: /^(?:device-cmyk|cmyk)\s*\(\s*(?:(?<c_legacy>(?:\d*\.)?\d+%?)\s*,\s*(?<m_legacy>(?:\d*\.)?\d+%?)\s*,\s*(?<y_legacy>(?:\d*\.)?\d+%?)\s*,\s*(?<k_legacy>(?:\d*\.)?\d+%?)(?:\s*,\s*(?<a_legacy>(?:\d*\.)?\d+))?|(?<c>(?:\d*\.)?\d+%?)\s+(?<m>(?:\d*\.)?\d+%?)\s+(?<y>(?:\d*\.)?\d+%?)\s+(?<k>(?:\d*\.)?\d+%?)(?:\s*\/\s*(?<a>(?:\d*\.)?\d+%?))?)\s*\)$/ }, Ta = { REGEXP: /^calc\(\s*(?<operation>[\d./*+-\w\s]+)\s*\)$/, SCOPED: /\(\s*([^()]+)\s*\)/g, DIVISION: /\s*(?<left>(?:(?:\d*\.)?\d+|\w+))\s*\/\s*(?<right>(?:(?:\d*\.)?\d+|\w+))\s*/, MULTIPLICATION: /\s*(?<left>(?:(?:\d*\.)?\d+|\w+))\s*\*\s*(?<right>(?:(?:\d*\.)?\d+|\w+))\s*/, SUM: /\s*(?<left>(?:(?:\d*\.)?\d+|\w+))\s*\+\s*(?<right>(?:(?:\d*\.)?\d+|\w+))\s*/, REST: /\s*(?<left>(?:(?:\d*\.)?\d+|\w+))\s*-\s*(?<right>(?:(?:\d*\.)?\d+|\w+))\s*/ }, c1 = /^(?<number>-?(?:\d*\.)?\d+)(?<units>(?:deg|grad|rad|turn)?)$/, Rt = /^(-?\d+(?:\.\d+)?|-?\.\d+)%$/, mc = /^0x([a-f\d]{1,2})$/i, U5 = /\{(\d+)\}/g, W5 = /,( +|\d+)/g, Y5 = / +/, X5 = "The provided string color doesn't have a correct format", J5 = "The provided color object doesn't have the proper keys or format", Q5 = "is not a valid operation for a relative color";
var aa, Nt, Bi;
(function(e) {
  e.NONE = "none", e.DEGREES = "deg", e.GRADIANS = "grad", e.RADIANS = "rad", e.TURNS = "turn";
})(aa || (aa = {})), function(e) {
  e.NONE = "none", e.PERCENT = "percent";
}(Nt || (Nt = {})), function(e) {
  e.DEVICE_CMYK = "device-cmyk", e.CMYK = "cmyk";
}(Bi || (Bi = {}));
const nn = { decimals: 6, legacyCSS: !1, spacesAfterCommas: !1, anglesUnit: aa.NONE, rgbUnit: Nt.NONE, labUnit: Nt.NONE, lchUnit: Nt.NONE, cmykUnit: Nt.PERCENT, alphaUnit: Nt.NONE, cmykFunction: Bi.DEVICE_CMYK }, At = (e, t) => Object.prototype.hasOwnProperty.call(e, t), Vs = (e) => +`${e}`.replace(Rt, "$1"), va = (e) => Rt.test(`${e}`) ? Vs(e) : Math.min(+e, 100), _o = (e) => (e.length === 1 && (e += e), parseInt(e, 16)), ko = (e) => {
  const t = fe(e, 0).toString(16).toUpperCase();
  return t.length === 1 ? `0x0${t}` : `0x${t}`;
}, Cr = (e, t = !1) => !t && Rt.test(e) ? Math.min(Te * Vs(e) / 100, Te) : mc.test(e) ? (e.length === 3 && (e += e.slice(-1)), t ? fe(e) / Te : fe(e)) : Math.min(+e, t ? 1 : Te), xl = (e) => Rt.test(e) ? Qe(Jn * Vs(e) / 100, -125, Jn) : Qe(+e, -125, Jn), f1 = (e) => Rt.test(e) ? Qe(cs * Vs(e) / 100, -150, cs) : Qe(+e, -150, cs), Yn = (e) => Math.min(Rt.test(e) ? Vs(e) / 100 : +e, 1), p1 = (e) => [...e].sort().join("").toUpperCase(), fe = (e, t = 6) => {
  const a = Math.pow(10, t);
  return Math.round(+e * a) / a;
}, Qe = (e, t, a) => Math.max(t, Math.min(e, a)), g1 = (e) => 180 * e / Math.PI, v1 = (e) => e * Math.PI / 180, Wo = 360, Oa = (e) => {
  if (typeof e == "string") {
    const t = e.match(c1).groups, a = +t.number;
    switch (t.units) {
      case aa.RADIANS:
        e = fe(g1(a));
        break;
      case aa.TURNS:
        e = fe(a * Wo);
        break;
      case aa.GRADIANS:
        e = fe(0.9 * a);
        break;
      case aa.DEGREES:
      default:
        e = a;
    }
  }
  return (e > 360 || e < 0) && (e -= Math.floor(e / Wo) * Wo), e;
}, vt = (e) => (typeof e == "string" && (e = Rt.test(e) ? Vs(e) / 100 : +e), isNaN(+e) || e > 1 ? 1 : fe(e)), h1 = (e, t) => {
  let a;
  switch (t) {
    case aa.RADIANS:
      a = fe(v1(e));
      break;
    case aa.TURNS:
      a = fe(e / Wo);
      break;
    case aa.GRADIANS:
      a = fe(10 / 9 * e);
      break;
    case aa.DEGREES:
    case aa.NONE:
    default:
      a = e;
  }
  return a;
}, Nu = (e) => `${e}` in da, m1 = [[0.4360747, 0.3850649, 0.1430804], [0.2225045, 0.7168786, 0.0606169], [0.0139322, 0.0971045, 0.7141733]], Z5 = [[3.1338561, -1.6168667, -0.4906146], [-0.9787684, 1.9161415, 0.033454], [0.0719453, -0.2289914, 1.4052427]], fs = m1.map((e) => e.reduce((t, a) => t + a, 0)), Hu = (e, t, a) => (a < 0 && (a += 6), a >= 6 && (a -= 6), fe(a < 1 ? ((t - e) * a + e) * Te : a < 3 ? t * Te : a < 4 ? ((t - e) * (4 - a) + e) * Te : e * Te)), eN = (e) => e <= 0.04045 ? e / 12.92 : ((e + 0.055) / 1.055) ** 2.4, tN = (e) => e <= 31308e-7 ? 12.92 * e : 1.055 * e ** (1 / 2.4) - 0.055, y1 = (e, t, a, n) => {
  const r = [0, 0, 0], s = [e, t, a];
  return n.forEach((i, o) => {
    i.forEach((l, d) => {
      r[o] += l * s[d];
    });
  }), r;
}, gt = (e, t, a) => {
  t /= 100;
  const n = (a /= 100) <= 0.5 ? a * (t + 1) : a + t - a * t, r = 2 * a - n;
  return { R: Hu(r, n, (e /= 60) + 2), G: Hu(r, n, e), B: Hu(r, n, e - 2) };
}, tr = (e, t, a, n = 1) => {
  e /= Te, t /= Te, a /= Te, n = Math.min(n, 1);
  const r = Math.max(e, t, a), s = Math.min(e, t, a), i = r - s;
  let o = 0, l = 0;
  const d = (r + s) / 2;
  if (i !== 0) {
    switch (r) {
      case e:
        o = (t - a) / i % 6;
        break;
      case t:
        o = (a - e) / i + 2;
        break;
      case a:
        o = (e - t) / i + 4;
    }
    o = fe(60 * o), o < 0 && (o += 360), l = i / (1 - Math.abs(2 * d - 1));
  }
  return { H: o, S: fe(100 * l), L: fe(100 * d), A: n };
}, ar = (e, t, a) => {
  const n = [e / Te, t / Te, a / Te].map(eN), r = y1(n[0], n[1], n[2], m1), s = ((i, o, l) => {
    const d = (p) => p > 0.008856451679035631 ? Math.cbrt(p) : p / 0.12841854934601665 + 0.13793103448275862, c = d(i / fs[0]), f = d(o / fs[1]);
    return [116 * f - 16, 500 * (c - f), 200 * (f - d(l / fs[2]))];
  })(r[0], r[1], r[2]);
  return { L: s[0], a: s[1], b: s[2] };
}, Pi = (e, t, a) => {
  const n = ((s, i, o) => {
    const l = (p) => p > 0.20689655172413793 ? p ** 3 : 0.12841854934601665 * (p - 0.13793103448275862), d = (s + 16) / 116, c = i / 500, f = o / 200;
    return [fs[0] * l(d + c), fs[1] * l(d), fs[2] * l(d - f)];
  })(e, t, a), r = y1(n[0], n[1], n[2], Z5).map(tN);
  return { R: Qe(r[0] * Te, 0, Te), G: Qe(r[1] * Te, 0, Te), B: Qe(r[2] * Te, 0, Te) };
}, b1 = (e, t, a) => {
  const n = Math.sqrt(t ** 2 + a ** 2), r = g1(Math.atan2(a, t));
  return { L: e, C: n, H: Oa(r) };
}, w1 = (e, t, a) => {
  const n = v1(a);
  return { L: e, a: t * Math.cos(n), b: t * Math.sin(n) };
}, nr = (e, t, a) => {
  const n = ar(e, t, a);
  return b1(n.L, n.a, n.b);
}, Sl = (e, t, a) => {
  const n = w1(e, t, a);
  return Pi(n.L, n.a, n.b);
}, Dr = (e, t, a, n = 1) => ({ H: tr(e, t, a, n).H, W: fe(Math.min(e, t, a) / Te * 100), B: fe(100 * (1 - Math.max(e, t, a) / Te)), A: n }), _l = (e, t, a) => {
  const n = 1 - (a /= 100) - (t /= 100), r = n * (1 - Math.abs(e / 60 % 2 - 1));
  let s = 0, i = 0, o = 0;
  return e < 60 ? (s = n, i = r, o = 0) : e >= 60 && e < 120 ? (s = r, i = n, o = 0) : e >= 120 && e < 180 ? (s = 0, i = n, o = r) : e >= 180 && e < 240 ? (s = 0, i = r, o = n) : e >= 240 && e < 300 ? (s = r, i = 0, o = n) : e >= 300 && (s = n, i = 0, o = r), s += t, i += t, o += t, { R: Qe(s * Te, 0, Te), G: Qe(i * Te, 0, Te), B: Qe(o * Te, 0, Te) };
}, kp = (e, t, a, n) => ({ R: fe(Te * (1 - e) * (n = 1 - n)), G: fe(Te * (1 - t) * n), B: fe(Te * (1 - a) * n) }), C1 = (e, t, a) => {
  e /= Te, t /= Te, a /= Te;
  const n = 1 - Math.max(e, t, a), r = 1 - n, s = r && (r - t) / r, i = r && (r - a) / r;
  return { C: fe(100 * (r && (r - e) / r)), M: fe(100 * s), Y: fe(100 * i), K: fe(100 * n) };
}, Hh = (e, t) => {
  if (e < 0 && (e += 360), e > 360 && (e -= 360), e === 360 || e === 0) return e;
  const a = [[0, 120], [120, 180], [180, 240], [240, 360]], n = [[0, 60], [60, 120], [120, 240], [240, 360]], r = t ? n : a;
  let s = 0, i = 0, o = 0, l = 0;
  return (t ? a : n).find((d, c) => e >= d[0] && e < d[1] && (s = d[0], i = d[1], o = r[c][0], l = r[c][1], !0)), o + (l - o) / (i - s) * (e - s);
};
let x1 = class {
  get rgb() {
    return this._rgb;
  }
};
class aN extends x1 {
  constructor(t) {
    super();
    const a = t.match(wa.HEX).groups;
    this._r = a.r ?? a.rr, this._g = a.g ?? a.gg, this._b = a.b ?? a.bb, this._a = a.a ?? a.aa;
    const n = { R: _o(this._r), G: _o(this._g), B: _o(this._b) };
    this._a !== void 0 && (n.A = _o(this._a) / Te), this._rgb = n;
  }
}
let Ht = class {
  constructor(t, a, n) {
    this._operations = /* @__PURE__ */ new Map([[Ta.DIVISION, this._division], [Ta.MULTIPLICATION, this._multiplication], [Ta.SUM, this._sum], [Ta.REST, this._rest]]), this._colorIndex = t;
    let r = a, s = 0;
    if (Number.isNaN(+a)) if (a in n) this._result = n[a];
    else if (Ta.REGEXP.test(r)) Ta.REGEXP.lastIndex = 0, this._result = this._getCalcValue(r, n);
    else {
      for (; Ta.SCOPED.test(r) && s < 100; ) {
        if (Ta.SCOPED.lastIndex = 0, r = r.replace(Ta.SCOPED, (i, o) => this._calculate(o, n).toString()), Ta.REGEXP.test(r)) {
          Ta.REGEXP.lastIndex = 0;
          break;
        }
        s++;
      }
      this._result = this._getCalcValue(r, n);
    }
    else this._result = +a;
  }
  _division(t, a) {
    return t / a;
  }
  _multiplication(t, a) {
    return t * a;
  }
  _sum(t, a) {
    return t + a;
  }
  _rest(t, a) {
    return t - a;
  }
  _getCalcValue(t, a) {
    const n = t.match(Ta.REGEXP).groups.operation, r = this._calculate(n, a);
    if (Number.isNaN(r)) throw new Error(`Invalid value for ${this._colorIndex}. ${n} ${Q5}`);
    return r;
  }
  _calculate(t, a) {
    return this._operations.forEach((n, r) => {
      let s = 0;
      for (; r.test(t) && s < 100; ) t = t.replace(r, (i, o, l) => n(a[o] ?? +o, a[l] ?? +l).toString()), s++;
    }), +t;
  }
  get result() {
    return this._result;
  }
}, nu = class extends x1 {
  get hasPercentageAlpha() {
    return Rt.test(this._a);
  }
}, yc = class extends nu {
  constructor(t, a) {
    super();
    const n = t.match(wa.RGB).groups, { r_legacy: r, g_legacy: s, b_legacy: i, a_legacy: o, r: l, g: d, b: c, a: f, from: p, relative_r: g, relative_g: v, relative_b: m, relative_a: y } = n;
    if (p) {
      const x = a(p), b = { r: x.R, g: x.G, b: x.B, alpha: x.A ?? 1 }, C = new Ht("r", g, b).result, w = new Ht("g", v, b).result, $ = new Ht("b", m, b).result, B = { R: Math.min(C, Te), G: Math.min(w, Te), B: Math.min($, Te) };
      if (y) {
        const I = new Ht("alpha", y, b).result;
        B.A = Math.min(I, 1);
      }
      this._rgb = B;
    } else {
      this._r = r ?? l, this._g = s ?? d, this._b = i ?? c, this._a = o ?? f;
      const x = { R: Math.min(Cr(this._r), Te), G: Math.min(Cr(this._g), Te), B: Math.min(Cr(this._b), Te) };
      this._a !== void 0 && (x.A = vt(this._a)), this._rgb = x;
    }
  }
  get hasPercentageValues() {
    return Rt.test(this._r) && Rt.test(this._g) && Rt.test(this._b);
  }
  static test(t) {
    return wa.RGB.test(t);
  }
};
class Ap extends nu {
  get angleUnit() {
    if (this._h) {
      const t = this._h.match(c1).groups.units;
      return t === "" ? aa.NONE : t;
    }
    return aa.NONE;
  }
}
let bc = class extends Ap {
  constructor(t, a) {
    super();
    const n = t.match(wa.HSL).groups, { h_legacy: r, s_legacy: s, l_legacy: i, a_legacy: o, h: l, s: d, l: c, a: f, from: p, relative_h: g, relative_s: v, relative_l: m, relative_a: y } = n;
    if (p) {
      const x = a(p), b = tr(x.R, x.G, x.B, x.A), C = { h: b.H, s: b.S, l: b.L, alpha: b.A }, w = new Ht("h", g, C).result, $ = new Ht("s", v, C).result, B = new Ht("l", m, C).result, I = gt(Qe(w, 0, 360), Qe($, 0, Pa), Qe(B, 0, Pa));
      if (y) {
        const E = new Ht("alpha", y, C).result;
        I.A = Qe(E, 0, 1);
      }
      this._rgb = I;
    } else {
      this._h = r ?? l, this._s = s ?? d, this._l = i ?? c, this._a = o ?? f;
      const x = gt(Oa(this._h), va(this._s), va(this._l));
      this._a !== void 0 && (x.A = vt(this._a)), this._rgb = x;
    }
  }
  static test(t) {
    return wa.HSL.test(t);
  }
};
class wc extends Ap {
  constructor(t, a) {
    super();
    const n = t.match(wa.HWB).groups, { h: r, w: s, b: i, a: o, from: l, relative_h: d, relative_w: c, relative_b: f, relative_a: p } = n;
    if (l) {
      const g = a(l), v = Dr(g.R, g.G, g.B, g.A), m = { h: v.H, w: v.W, b: v.B, alpha: v.A }, y = new Ht("h", d, m).result, x = new Ht("w", c, m).result, b = new Ht("b", f, m).result, C = _l(Qe(y, 0, 360), Qe(x, 0, Pa), Qe(b, 0, Pa));
      if (p) {
        const w = new Ht("alpha", p, m).result;
        C.A = Qe(w, 0, 1);
      }
      this._rgb = C;
    } else {
      this._h = r, this._w = s, this._b = i, this._a = o;
      const g = _l(Oa(this._h), va(this._w), va(this._b));
      this._a !== void 0 && (g.A = vt(this._a)), this._rgb = g;
    }
  }
  static test(t) {
    return wa.HWB.test(t);
  }
}
let Cc = class extends nu {
  constructor(t, a) {
    super();
    const n = t.match(wa.CIELab).groups, { L: r, a: s, b: i, A: o, from: l, relative_L: d, relative_a: c, relative_b: f, relative_A: p } = n;
    if (l) {
      const g = a(l), v = ar(g.R, g.G, g.B), m = { l: v.L, a: v.a, b: v.b, alpha: g.A ?? 1 }, y = new Ht("l", d, m).result, x = new Ht("a", c, m).result, b = new Ht("b", f, m).result, C = Pi(Qe(y, 0, Pa), Qe(x, -125, Jn), Qe(b, -125, Jn));
      if (p) {
        const w = new Ht("alpha", p, m).result;
        C.A = Qe(w, 0, 1);
      }
      this._rgb = C;
    } else {
      this._L = r, this._A = s, this._B = i, this._a = o;
      const g = Pi(va(this._L), xl(this._A), xl(this._B));
      this._a !== void 0 && (g.A = vt(this._a)), this._rgb = g;
    }
  }
  get hasPercentageValues() {
    return Rt.test(this._L) && Rt.test(this._A) && Rt.test(this._B);
  }
  static test(t) {
    return wa.CIELab.test(t);
  }
};
class xc extends Ap {
  constructor(t, a) {
    super();
    const n = t.match(wa.LCH).groups, { l: r, c: s, h: i, a: o, from: l, relative_l: d, relative_c: c, relative_h: f, relative_a: p } = n;
    if (l) {
      const g = a(l), v = nr(g.R, g.G, g.B), m = { l: v.L, c: v.C, h: v.H, alpha: g.A ?? 1 }, y = new Ht("l", d, m).result, x = new Ht("c", c, m).result, b = new Ht("h", f, m).result, C = Sl(Qe(y, 0, Pa), Qe(x, -150, cs), Oa(b));
      if (p) {
        const w = new Ht("alpha", p, m).result;
        C.A = Qe(w, 0, 1);
      }
      this._rgb = C;
    } else {
      this._l = r, this._c = s, this._h = i, this._a = o;
      const g = Sl(va(this._l), f1(this._c), Oa(this._h));
      this._a !== void 0 && (g.A = vt(this._a)), this._rgb = g;
    }
  }
  get hasPercentageValues() {
    return Rt.test(this._l) && Rt.test(this._c);
  }
  static test(t) {
    return wa.LCH.test(t);
  }
}
let Sc = class extends nu {
  constructor(t) {
    super();
    const a = t.match(wa.CMYK).groups;
    this._c = a.c_legacy ?? a.c, this._m = a.m_legacy ?? a.m, this._y = a.y_legacy ?? a.y, this._k = a.k_legacy ?? a.k, this._a = a.a_legacy ?? a.a;
    const n = kp(Yn(this._c), Yn(this._m), Yn(this._y), Yn(this._k));
    this._a !== void 0 && (n.A = vt(this._a)), this._rgb = n;
  }
  get hasPercentageValues() {
    return Rt.test(this._c) && Rt.test(this._m) && Rt.test(this._y) && Rt.test(this._k);
  }
  static test(t) {
    return wa.CMYK.test(t);
  }
};
const Jt = (e) => typeof e == "string" ? ((t) => {
  let a;
  if (Object.keys(Ce).some((n) => {
    if (wa[n].test(t)) return a = n, !0;
  }), !a && ~d1.indexOf(t) && (a = Ce.HEX), !a) throw new Error(X5);
  return a;
})(e) : ((t) => {
  let a, n = !1;
  const r = p1(Object.keys(t));
  if (hc[r] && (a = hc[r]), a && a === Ce.RGB) {
    const s = Object.entries(t).some((o) => !mc.test(`${o[1]}`)), i = Object.entries(t).some((o) => !(Rt.test(`${o[1]}`) || !mc.test(`${o[1]}`) && !isNaN(+o[1]) && +o[1] <= Te));
    s && i && (n = !0), s || (a = Ce.HEX);
  }
  if (!a || n) throw new Error(J5);
  return a;
})(e), nN = { [Ce.HEX](e) {
  const t = ~d1.indexOf(e) ? Cl[e] : e;
  return new aN(t).rgb;
}, [Ce.RGB]: (e) => new yc(e, na).rgb, [Ce.HSL]: (e) => new bc(e, na).rgb, [Ce.HWB]: (e) => new wc(e, na).rgb, [Ce.CIELab]: (e) => new Cc(e, na).rgb, [Ce.LCH]: (e) => new xc(e, na).rgb, [Ce.CMYK]: (e) => new Sc(e).rgb }, rN = { [Ce.HEX](e) {
  const t = { R: Cr(`${e.R}`), G: Cr(`${e.G}`), B: Cr(`${e.B}`) };
  return At(e, "A") && (t.A = Math.min(Cr(`${e.A}`, !0), 1)), t;
}, [Ce.RGB](e) {
  return this.HEX(e);
}, [Ce.HSL](e) {
  const t = va(`${e.S}`), a = va(`${e.L}`), n = gt(Oa(e.H), t, a);
  return At(e, "A") && (n.A = vt(e.A)), n;
}, [Ce.HWB](e) {
  const t = va(`${e.W}`), a = va(`${e.B}`), n = _l(Oa(e.H), t, a);
  return At(e, "A") && (n.A = vt(e.A)), n;
}, [Ce.CIELab](e) {
  const t = va(`${e.L}`), a = xl(`${e.a}`), n = xl(`${e.b}`), r = Pi(t, a, n);
  return At(e, "A") && (r.A = vt(e.A)), r;
}, [Ce.LCH](e) {
  const t = va(`${e.L}`), a = f1(`${e.C}`), n = Oa(`${e.H}`), r = Sl(t, a, n);
  return At(e, "A") && (r.A = vt(e.A)), r;
}, [Ce.CMYK](e) {
  const t = Yn(`${e.C}`), a = Yn(`${e.M}`), n = Yn(`${e.Y}`), r = Yn(`${e.K}`), s = kp(t, a, n, r);
  return At(e, "A") && (s.A = vt(e.A)), s;
} }, na = (e, t = Jt(e)) => typeof e == "string" ? nN[t](e) : rN[t](e), Et = (e, ...t) => {
  const a = [], n = [], r = [], s = [], i = [], o = [], l = [], d = Object.values(aa), c = Object.values(Nt), f = Object.values(Bi), p = { legacyCSS: 0, spacesAfterCommas: 0, cmykFunction: 0 };
  for (const g of t) if (typeof g == "string") {
    if (a.push(g), g.includes(",")) {
      p.legacyCSS++;
      const v = g.match(W5);
      new Set(v).size === 1 && Y5.test(v[0].slice(1)) && p.spacesAfterCommas++;
    }
    if (bc.test(g)) {
      const v = new bc(g, na);
      n.push(v.angleUnit), l.push(v.hasPercentageAlpha);
      continue;
    }
    if (wc.test(g)) {
      const v = new wc(g, na);
      n.push(v.angleUnit), l.push(v.hasPercentageAlpha);
      continue;
    }
    if (yc.test(g)) {
      const v = new yc(g, na);
      r.push(v.hasPercentageValues), l.push(v.hasPercentageAlpha);
      continue;
    }
    if (Cc.test(g)) {
      const v = new Cc(g, na);
      s.push(v.hasPercentageValues), l.push(v.hasPercentageAlpha);
      continue;
    }
    if (xc.test(g)) {
      const v = new xc(g, na);
      n.push(v.angleUnit), i.push(v.hasPercentageValues), l.push(v.hasPercentageAlpha);
      continue;
    }
    if (Sc.test(g)) {
      const v = new Sc(g);
      o.push(v.hasPercentageValues), g.startsWith("cmyk") && p.cmykFunction++, l.push(v.hasPercentageAlpha);
    }
  }
  return { decimals: typeof e.decimals === gi.NUMBER ? e.decimals : nn.decimals, legacyCSS: typeof e.legacyCSS === gi.BOOLEAN ? e.legacyCSS : !!(a.length && p.legacyCSS === a.length) || nn.legacyCSS, spacesAfterCommas: typeof e.spacesAfterCommas === gi.BOOLEAN ? e.spacesAfterCommas : !!(a.length && p.spacesAfterCommas === a.length) || nn.spacesAfterCommas, anglesUnit: e.anglesUnit && d.includes(e.anglesUnit) ? e.anglesUnit : new Set(n).size === 1 ? n[0] : nn.anglesUnit, rgbUnit: e.rgbUnit && c.includes(e.rgbUnit) ? e.rgbUnit : new Set(r).size === 1 && r[0] ? Nt.PERCENT : nn.rgbUnit, labUnit: e.labUnit && c.includes(e.labUnit) ? e.labUnit : new Set(s).size === 1 && s[0] ? Nt.PERCENT : nn.labUnit, lchUnit: e.lchUnit && c.includes(e.lchUnit) ? e.lchUnit : new Set(i).size === 1 && i[0] ? Nt.PERCENT : nn.lchUnit, cmykUnit: e.cmykUnit && c.includes(e.cmykUnit) ? e.cmykUnit : new Set(o).size !== 1 || o[0] ? nn.cmykUnit : Nt.NONE, alphaUnit: e.alphaUnit && c.includes(e.alphaUnit) ? e.alphaUnit : new Set(l).size === 1 && l[0] ? Nt.PERCENT : nn.alphaUnit, cmykFunction: e.cmykFunction && f.includes(e.cmykFunction) ? e.cmykFunction : o.length && o.length === p.cmykFunction ? Bi.CMYK : nn.cmykFunction };
}, _c = (e, t) => ({ H: fe(e.H, t), S: fe(e.S, t), L: fe(e.L, t) }), ju = (e) => e ? ", " : ",", pr = (e, t) => {
  const a = p1(Object.keys(e));
  return G5[hc[a]].reduce((n, r, s) => {
    const i = e[r];
    return i !== void 0 && n.push(t(i, s)), n;
  }, []);
}, gr = (e, t) => e.replace(U5, (a, n) => `${t[+n - 1]}`), ni = (e, t, a = !1) => {
  const { alphaUnit: n, legacyCSS: r, decimals: s } = t;
  return n !== Nt.PERCENT || r && !a ? fe(e, s) : `${fe(100 * e, s)}%`;
}, jh = (e) => {
  const { anglesUnit: t, decimals: a } = e;
  return (n, r) => r === 0 && t !== aa.NONE ? `${fe(h1(n, t), a)}${t}` : r === 3 ? ni(n, e) : fe(n, a);
}, ke = { [Ce.HEX]: (e) => {
  const t = pr(e, (n) => ((r) => {
    let s = fe(r, 0).toString(16).toUpperCase();
    return s.length === 1 && (s = `0${s}`), s;
  })(fe(n))), a = t.length === 4 ? "#{1}{2}{3}{4}" : "#{1}{2}{3}";
  return gr(a, t);
}, [Ce.RGB]: (e, t) => {
  const { decimals: a, legacyCSS: n, spacesAfterCommas: r, rgbUnit: s } = t, i = ju(r), o = pr(e, (d, c) => s === Nt.PERCENT && c < 3 ? `${((f, p) => fe(f / Te * 100, p))(d, a)}%` : c === 3 ? ni(d, t) : fe(d, a)), l = n ? o.length === 4 ? `rgba({1}${i}{2}${i}{3}${i}{4})` : `rgb({1}${i}{2}${i}{3})` : o.length === 4 ? "rgb({1} {2} {3} / {4})" : "rgb({1} {2} {3})";
  return gr(l, o);
}, [Ce.HSL]: (e, t) => {
  const { legacyCSS: a, spacesAfterCommas: n } = t, r = ju(n), s = jh(t), i = pr(e, s), o = a ? i.length === 4 ? `hsla({1}${r}{2}%${r}{3}%${r}{4})` : `hsl({1}${r}{2}%${r}{3}%)` : i.length === 4 ? "hsl({1} {2}% {3}% / {4})" : "hsl({1} {2}% {3}%)";
  return gr(o, i);
}, [Ce.HWB]: (e, t) => {
  const a = jh(t), n = pr(e, a), r = n.length === 4 ? "hwb({1} {2}% {3}% / {4})" : "hwb({1} {2}% {3}%)";
  return gr(r, n);
}, [Ce.CIELab]: (e, t) => {
  const { decimals: a, labUnit: n } = t, r = pr(e, (i, o) => {
    if (o === 0) {
      const l = fe(va(i), a);
      return n === Nt.PERCENT ? `${l}%` : `${l}`;
    }
    return o < 3 ? n === Nt.PERCENT ? `${((l, d) => fe(l / Jn * 100, d))(i, a)}%` : fe(i, a) : ni(i, t, !0);
  }), s = r.length === 4 ? "lab({1} {2} {3} / {4})" : "lab({1} {2} {3})";
  return gr(s, r);
}, [Ce.LCH]: (e, t) => {
  const { decimals: a, lchUnit: n, anglesUnit: r } = t, s = pr(e, (o, l) => {
    if (l === 0) {
      const d = fe(va(o), a);
      return n === Nt.PERCENT ? `${d}%` : `${d}`;
    }
    return l === 1 ? n === Nt.PERCENT ? `${((d, c) => fe(d / cs * 100, c))(o, a)}%` : fe(o, a) : l === 2 ? r !== aa.NONE ? `${fe(h1(o, r), a)}${r}` : fe(o, a) : ni(o, t, !0);
  }), i = s.length === 4 ? "lch({1} {2} {3} / {4})" : "lch({1} {2} {3})";
  return gr(i, s);
}, [Ce.CMYK]: (e, t) => {
  const { decimals: a, legacyCSS: n, spacesAfterCommas: r, cmykUnit: s, cmykFunction: i } = t, o = ju(r), l = pr(e, (c, f) => s === Nt.PERCENT && f < 4 ? `${fe(c, a)}%` : f === 4 ? ni(c, t) : fe(c / 100, a)), d = n ? l.length === 5 ? `${i}({1}${o}{2}${o}{3}${o}{4}${o}{5})` : `${i}({1}${o}{2}${o}{3}${o}{4})` : l.length === 5 ? `${i}({1} {2} {3} {4} / {5})` : `${i}({1} {2} {3} {4})`;
  return gr(d, l);
} }, Ns = (e, t, a) => t.reduce((n, r) => [...n, { ...e, H: a === da.ADDITIVE ? Oa(e.H + r) : Oa(Hh(Hh(e.H, !1) + r, !0)) }], [{ ...e }]), sN = (e, t) => Ns(e, [30, -30], t), iN = (e, t) => Ns(e, [180], t), oN = (e, t) => Ns(e, [150, -150], t), lN = (e, t) => Ns(e, [120, -120], t), uN = (e, t) => Ns(e, [60, -120, 180], t), dN = (e, t) => Ns(e, [90, -90, 180], t), we = { [Ce.HEX]: (e) => ({ R: ko(e.R), G: ko(e.G), B: ko(e.B) }), HEXA(e) {
  const t = we.HEX(e);
  return t.A = At(e, "A") ? ko(e.A * Te) : "0xFF", t;
}, [Ce.RGB](e, t) {
  const a = cN(e, t);
  return At(a, "A") && delete a.A, a;
}, RGBA(e, t) {
  const a = we.RGB(e, t);
  return a.A = At(e, "A") ? fe(e.A) : 1, a;
}, [Ce.HSL](e, t) {
  const a = tr(e.R, e.G, e.B);
  return delete a.A, _c(a, t);
}, HSLA(e, t) {
  const a = we.HSL(e, t);
  return a.A = At(e, "A") ? fe(e.A, t) : 1, a;
}, [Ce.HWB](e, t) {
  const a = Dr(e.R, e.G, e.B);
  return delete a.A, ((n, r) => ({ H: fe(n.H, r), W: fe(n.W, r), B: fe(n.B, r) }))(a, t);
}, HWBA(e, t) {
  const a = we.HWB(e, t);
  return a.A = At(e, "A") ? fe(e.A, t) : 1, a;
}, [Ce.CIELab]: (e, t) => ((a, n) => ({ L: fe(a.L, n), a: fe(a.a, n), b: fe(a.b, n) }))(ar(e.R, e.G, e.B), t), CIELabA(e, t) {
  const a = we.CIELab(e, t);
  return a.A = At(e, "A") ? fe(e.A, t) : 1, a;
}, [Ce.LCH]: (e, t) => ((a, n) => ({ L: fe(a.L, n), C: fe(a.C, n), H: fe(a.H, n) }))(nr(e.R, e.G, e.B), t), LCHA(e, t) {
  const a = we.LCH(e, t);
  return a.A = At(e, "A") ? fe(e.A, t) : 1, a;
}, [Ce.CMYK]: (e, t) => ((a, n) => ({ C: fe(a.C, n), M: fe(a.M, n), Y: fe(a.Y, n), K: fe(a.K, n) }))(C1(e.R, e.G, e.B), t), CMYKA(e, t) {
  const a = we.CMYK(e, t);
  return a.A = At(e, "A") ? fe(e.A, t) : 1, a;
} }, Ao = (e, t, a, n) => {
  const r = Jt(e), s = typeof e == "string", i = na(e, r), o = typeof e == "string" && At(i, "A") || typeof e != "string" && At(e, "A"), l = tr(i.R, i.G, i.B, i.A);
  o || delete l.A;
  const d = a ? l.L / (t + 1) : (100 - l.L) / (t + 1), c = Array(t).fill(null).map((f, p) => ({ ...l, L: l.L + d * (p + 1) * (1 - 2 * +a) }));
  switch (r) {
    case Ce.HEX:
    default:
      return c.map((f) => {
        const p = gt(f.H, f.S, f.L);
        return o && (p.A = f.A), s ? o ? ke.HEX({ ...p, A: fe(p.A * Te) }) : ke.HEX(p) : o ? we.HEXA(p) : we.HEX(p);
      });
    case Ce.RGB:
      return c.map((f) => {
        const p = gt(f.H, f.S, f.L);
        return o && (p.A = f.A), s ? ke.RGB(p, n) : o ? we.RGBA(p, n.decimals) : we.RGB(p, n.decimals);
      });
    case Ce.HSL:
      return c.map((f) => s ? ke.HSL(f, n) : o ? we.HSLA({ ...gt(f.H, f.S, f.L), A: f.A }, n.decimals) : we.HSL(gt(f.H, f.S, f.L), n.decimals));
    case Ce.HWB:
      return c.map((f) => {
        const p = gt(f.H, f.S, f.L);
        o && (p.A = f.A);
        const g = o ? we.HWBA(p, n.decimals) : we.HWB(p, n.decimals);
        return s ? ke.HWB(g, n) : g;
      });
    case Ce.CIELab:
      return c.map((f) => {
        const p = gt(f.H, f.S, f.L);
        o && (p.A = f.A);
        const g = o ? we.CIELabA(p, n.decimals) : we.CIELab(p, n.decimals);
        return s ? ke.CIELab(g, n) : g;
      });
    case Ce.LCH:
      return c.map((f) => {
        const p = gt(f.H, f.S, f.L), g = nr(p.R, p.G, p.B);
        return o && (g.A = f.A), s ? ke.LCH(g, n) : o ? we.LCHA({ ...p, A: f.A }, n.decimals) : we.LCH(p, n.decimals);
      });
  }
}, Xr = { buildHarmony(e, t, a, n) {
  const r = Jt(e), s = na(e, r), i = tr(s.R, s.G, s.B, s.A), o = typeof e == "string" && At(s, "A") || typeof e != "string" && At(e, "A"), l = typeof e == "string";
  switch (r) {
    case Ce.HEX:
    default:
      return o ? this.HEXA(_c(i, 0), t, a, l) : this.HEX(_c(i, 0), t, a, l);
    case Ce.HSL:
      return o ? this.HSLA(i, t, a, l, n) : this.HSL(i, t, a, l, n);
    case Ce.HWB:
      return o ? this.HWBA(i, t, a, l, n) : this.HWB(i, t, a, l, n);
    case Ce.RGB:
      return o ? this.RGBA(i, t, a, l, n) : this.RGB(i, t, a, l, n);
    case Ce.CIELab:
      return o ? this.CIELabA(i, t, a, l, n) : this.CIELab(i, t, a, l, n);
    case Ce.LCH:
      return o ? this.LCHA(i, t, a, l, n) : this.LCH(i, t, a, l, n);
  }
}, [Ce.HEX]: (e, t, a, n) => t(e, a).map((r) => n ? ke.HEX(gt(r.H, r.S, r.L)) : we.HEX(gt(r.H, r.S, r.L))), HEXA: (e, t, a, n) => t(e, a).map((r) => n ? ke.HEX({ ...gt(r.H, r.S, r.L), A: vt(r.A) * Te }) : we.HEXA({ ...gt(r.H, r.S, r.L), A: vt(r.A) })), [Ce.RGB]: (e, t, a, n, r) => t(e, a).map((s) => n ? ke.RGB(gt(s.H, s.S, s.L), r) : we.RGB(gt(s.H, s.S, s.L), r.decimals)), RGBA: (e, t, a, n, r) => t(e, a).map((s) => n ? ke.RGB({ ...gt(s.H, s.S, s.L), A: vt(s.A) }, r) : we.RGBA({ ...gt(s.H, s.S, s.L), A: vt(s.A) }, r.decimals)), [Ce.HSL]: (e, t, a, n, r) => t(e, a).map((s) => n ? ke.HSL({ H: s.H, S: s.S, L: s.L }, r) : we.HSL(gt(s.H, s.S, s.L), r.decimals)), HSLA: (e, t, a, n, r) => t(e, a).map((s) => n ? ke.HSL({ ...s, A: vt(s.A) }, r) : we.HSLA({ ...gt(s.H, s.S, s.L), A: vt(s.A) }, r.decimals)), [Ce.HWB]: (e, t, a, n, r) => t(e, a).map((s) => {
  const i = gt(s.H, s.S, s.L), o = Dr(i.R, i.G, i.B);
  return n ? ke.HWB({ H: o.H, W: o.W, B: o.B }, r) : we.HWB(i, r.decimals);
}), HWBA: (e, t, a, n, r) => t(e, a).map((s) => {
  const i = gt(s.H, s.S, s.L), o = Dr(i.R, i.G, i.B);
  return n ? ke.HWB({ ...o, A: vt(s.A) }, r) : we.HWBA({ ...i, A: vt(s.A) }, r.decimals);
}), [Ce.CIELab]: (e, t, a, n, r) => t(e, a).map((s) => {
  const i = gt(s.H, s.S, s.L);
  return n ? ke.CIELab(ar(i.R, i.G, i.B), r) : we.CIELab(i, r.decimals);
}), CIELabA: (e, t, a, n, r) => t(e, a).map((s) => {
  const i = gt(s.H, s.S, s.L);
  return n ? ke.CIELab({ ...ar(i.R, i.G, i.B), A: vt(s.A) }, r) : we.CIELabA({ ...i, A: vt(s.A) }, r.decimals);
}), [Ce.LCH]: (e, t, a, n, r) => t(e, a).map((s) => {
  const i = gt(s.H, s.S, s.L);
  return n ? ke.LCH(nr(i.R, i.G, i.B), r) : we.LCH(i, r.decimals);
}), LCHA: (e, t, a, n, r) => t(e, a).map((s) => {
  const i = gt(s.H, s.S, s.L);
  return n ? ke.LCH({ ...nr(i.R, i.G, i.B), A: vt(s.A) }, r) : we.LCHA({ ...i, A: vt(s.A) }, r.decimals);
}) }, ss = { mix(e, t) {
  const a = e.map((i) => {
    const o = Jt(i);
    return na(i, o);
  }), n = t === da.SUBTRACTIVE ? a.map((i) => {
    const o = ((l, d, c) => {
      const f = Math.min(l, d, c), p = Math.min(Te - l, Te - d, Te - c), g = l - f, v = d - f, m = c - f, y = Math.min(g, v), x = g - y, b = (v + y) / 2, C = (m + v - y) / 2, w = Math.max(x, b, C) / Math.max(g, v, m), $ = isNaN(w) || w === 1 / 0 || w <= 0 ? 1 : w;
      return { R: x / $ + p, Y: b / $ + p, B: C / $ + p };
    })(i.R, i.G, i.B);
    return At(i, "A") && (o.A = i.A), o;
  }) : null;
  function r(i) {
    const o = t === da.ADDITIVE ? { R: 0, G: 0, B: 0, A: 0 } : { R: 0, Y: 0, B: 0, A: 0 };
    return i.reduce((l, d) => {
      const c = At(d, "A") ? d.A : 1, f = { R: Math.min(l.R + d.R * c, Te), B: Math.min(l.B + d.B * c, Te), A: 1 - (1 - c) * (1 - l.A) }, p = "G" in l ? l.G : l.Y, g = "G" in d ? d.G : d.Y;
      return { ...f, ...t === da.ADDITIVE ? { G: Math.min(p + g * c, Te) } : { Y: Math.min(p + g * c, Te) } };
    }, o);
  }
  let s;
  if (t === da.ADDITIVE) s = r(a);
  else {
    const i = r(n);
    s = ((o, l, d) => {
      const c = Math.min(o, l, d), f = Math.min(Te - o, Te - l, Te - d), p = o - c, g = l - c, v = d - c, m = Math.min(g, v), y = p + g - m, x = g + m, b = 2 * (v - m), C = Math.max(y, x, b) / Math.max(p, g, v), w = isNaN(C) || C === 1 / 0 || C <= 0 ? 1 : C;
      return { R: y / w + f, G: x / w + f, B: b / w + f };
    })(i.R, i.Y, i.B), s.A = i.A;
  }
  return { R: fe(s.R), G: fe(s.G), B: fe(s.B), A: Qe(s.A, 0, 1) };
}, [Ce.HEX](e, t, a) {
  const n = this.mix(e, t);
  return delete n.A, a ? ke.HEX(n) : we.HEX(n);
}, HEXA(e, t, a) {
  const n = this.mix(e, t);
  return n.A = a ? vt(n.A) * Te : vt(n.A), a ? ke.HEX(n) : we.HEXA(n);
}, [Ce.RGB](e, t, a, n) {
  const r = this.mix(e, t);
  return delete r.A, a ? ke.RGB(r, n) : we.RGB(r, n.decimals);
}, RGBA(e, t, a, n) {
  const r = this.mix(e, t);
  return a ? ke.RGB(r, n) : we.RGBA(r, n.decimals);
}, [Ce.HSL](e, t, a, n) {
  const r = this.mix(e, t), s = tr(r.R, r.G, r.B);
  return delete r.A, delete s.A, a ? ke.HSL(s, n) : we.HSL(r, n.decimals);
}, HSLA(e, t, a, n) {
  const r = this.mix(e, t), s = tr(r.R, r.G, r.B, r.A);
  return a ? ke.HSL(s, n) : we.HSLA(r, n.decimals);
}, [Ce.HWB](e, t, a, n) {
  const r = this.mix(e, t), s = Dr(r.R, r.G, r.B);
  return delete r.A, delete s.A, a ? ke.HWB(s, n) : we.HWB(r, n.decimals);
}, HWBA(e, t, a, n) {
  const r = this.mix(e, t), s = Dr(r.R, r.G, r.B, r.A);
  return a ? ke.HWB(s, n) : we.HWBA(r, n.decimals);
}, [Ce.CIELab](e, t, a, n) {
  const r = this.mix(e, t), s = ar(r.R, r.G, r.B);
  return delete r.A, a ? ke.CIELab(s, n) : we.CIELab(r, n.decimals);
}, CIELabA(e, t, a, n) {
  const r = this.mix(e, t), s = ar(r.R, r.G, r.B);
  return At(r, "A") && (s.A = r.A), a ? ke.CIELab(s, n) : we.CIELabA(r, n.decimals);
}, [Ce.LCH](e, t, a, n) {
  const r = this.mix(e, t), s = nr(r.R, r.G, r.B);
  return delete r.A, a ? ke.LCH(s, n) : we.LCH(r, n.decimals);
}, LCHA(e, t, a, n) {
  const r = this.mix(e, t), s = nr(r.R, r.G, r.B);
  return At(r, "A") && (s.A = r.A), a ? ke.LCH(s, n) : we.LCHA(r, n.decimals);
} }, cN = (e, t) => ({ R: fe(e.R, t), G: fe(e.G, t), B: fe(e.B, t), ...At(e, "A") ? { A: fe(e.A, t) } : {} }), pa = (e, t, a, n) => n(na(e, t), a), kl = (e, t, a, n, r) => (a < 1 && (a = 5), ((i, o, l) => {
  const d = l - 1, c = (o.R - i.R) / d, f = (o.G - i.G) / d, p = (o.B - i.B) / d, g = vt(i.A), v = (vt(o.A) - g) / d;
  return Array(l).fill(null).map((m, y) => y === 0 ? i : y === d ? o : { R: fe(i.R + c * y), G: fe(i.G + f * y), B: fe(i.B + p * y), A: fe(g + v * y) });
})(na(e), na(t), a).map((i) => r(i, n)));
function Ot(e) {
  const { from: t, to: a, thirdParameter: n, fourthParameter: r, translateFunction: s, cssFunction: i } = e, o = typeof n == "number" ? kl(t, a, n, r?.decimals, s) : kl(t, a, 5, n?.decimals, s);
  return i ? o.map((l) => i(l, Et((typeof n == "number" ? r : n) ?? {}, t, a))) : o;
}
function Ft(e) {
  const { colors: t, secondParameter: a, thirdParameter: n, colorMixerFunction: r, css: s } = e, i = Et((typeof a == "string" ? n : a) ?? {}, ...t);
  return r(t, typeof a == "string" ? a : da.ADDITIVE, s, i);
}
const Ku = (e, t, a, n) => ({ [ja.ANALOGOUS]: Xr.buildHarmony(t, sN, a, n), [ja.COMPLEMENTARY]: Xr.buildHarmony(t, iN, a, n), [ja.SPLIT_COMPLEMENTARY]: Xr.buildHarmony(t, oN, a, n), [ja.TRIADIC]: Xr.buildHarmony(t, lN, a, n), [ja.TETRADIC]: Xr.buildHarmony(t, uN, a, n), [ja.SQUARE]: Xr.buildHarmony(t, dN, a, n) })[e], zt = Object.fromEntries(Object.entries(ss).map((e) => {
  const [t, a] = e;
  return [t, a.bind(ss)];
}));
class Dt {
  constructor(t, a = {}) {
    this._options = Et(a, t), this.rgb = na(t), this.update("rgb");
  }
  update(...t) {
    t.includes("rgb") || this.updateRGB(), t.includes("hsl") || this.updateHSL(), t.includes("hwb") || this.updateHWB(), t.includes("lab") || this.updateLAB(), t.includes("lch") || this.updateLCH(), t.includes("cmyk") || this.updateCMYK();
  }
  updateRGB() {
    this.rgb = { ...gt(this.hsl.H, this.hsl.S, this.hsl.L), A: this.hsl.A };
  }
  updateHSL() {
    this.hsl = tr(this.rgb.R, this.rgb.G, this.rgb.B, this.rgb.A);
  }
  updateHWB() {
    this.hwb = Dr(this.rgb.R, this.rgb.G, this.rgb.B, this.rgb.A);
  }
  updateLAB() {
    this.lab = { ...ar(this.rgb.R, this.rgb.G, this.rgb.B), A: this.rgb.A };
  }
  updateLCH() {
    this.lch = { ...nr(this.rgb.R, this.rgb.G, this.rgb.B), A: this.rgb.A };
  }
  updateCMYK() {
    this.cmyk = C1(this.rgb.R, this.rgb.G, this.rgb.B);
  }
  updateRGBFromHWB() {
    this.rgb = { ..._l(this.hwb.H, this.hwb.W, this.hwb.B), A: this.rgb.A };
  }
  updateRGBFromLCH() {
    this.rgb = { ...Sl(this.lch.L, this.lch.C, this.lch.H), A: this.rgb.A };
  }
  updateRGBFromCMYK() {
    this.rgb = { ...kp(this.cmyk.C, this.cmyk.M, this.cmyk.Y, this.cmyk.K), A: this.rgb.A };
  }
  updateRGBFromLAB() {
    this.rgb = { ...Pi(this.lab.L, this.lab.a, this.lab.b), A: this.rgb.A };
  }
  updateLCHFromLAB() {
    this.lch = { ...b1(this.lab.L, this.lab.a, this.lab.b), A: this.lab.A };
  }
  updateLABromLCH() {
    this.lab = { ...w1(this.lch.L, this.lch.C, this.lch.H), A: this.lch.A };
  }
  setOptions(t = {}) {
    return this._options = { ...this._options, ...t }, this;
  }
  setR(t) {
    this.rgb.R = Qe(t, 0, Te), this.update("rgb");
  }
  setG(t) {
    return this.rgb.G = Qe(t, 0, Te), this.update("rgb"), this;
  }
  setB(t) {
    return this.rgb.B = Qe(t, 0, Te), this.update("rgb"), this;
  }
  setH(t) {
    return this.hsl.H = Oa(t), this.update("hsl"), this;
  }
  setS(t) {
    return this.hsl.S = Qe(t, 0, Pa), this.update("hsl"), this;
  }
  setL(t) {
    return this.hsl.L = Qe(t, 0, Pa), this.update("hsl"), this;
  }
  setWhiteness(t) {
    return this.hwb.W = Qe(t, 0, Pa), this.updateRGBFromHWB(), this.update("rgb", "hwb"), this;
  }
  setBlackness(t) {
    return this.hwb.B = Qe(t, 0, Pa), this.updateRGBFromHWB(), this.update("rgb", "hwb"), this;
  }
  setCIEL(t) {
    return this.lab.L = Qe(t, 0, Pa), this.updateRGBFromLAB(), this.updateLCHFromLAB(), this.update("rgb", "lab", "lch"), this;
  }
  setCIEa(t) {
    return this.lab.a = Qe(t, -125, Jn), this.updateRGBFromLAB(), this.updateLCHFromLAB(), this.update("rgb", "lab", "lch"), this;
  }
  setCIEb(t) {
    return this.lab.b = Qe(t, -125, Jn), this.updateRGBFromLAB(), this.updateLCHFromLAB(), this.update("rgb", "lab", "lch"), this;
  }
  setLCHL(t) {
    return this.lch.L = Qe(t, 0, Pa), this.updateRGBFromLCH(), this.updateLABromLCH(), this.update("rgb", "lab", "lch"), this;
  }
  setLCHC(t) {
    return this.lch.C = Qe(t, 0, cs), this.updateRGBFromLCH(), this.updateLABromLCH(), this.update("rgb", "lab", "lch"), this;
  }
  setLCHH(t) {
    return this.lch.H = Oa(t), this.updateRGBFromLCH(), this.updateLABromLCH(), this.update("rgb", "lab", "lch"), this;
  }
  setA(t) {
    const a = Qe(t, 0, 1);
    return this.rgb.A = a, this.hsl.A = a, this.hwb.A = a, this.lab.A = a, this.lch.A = a, this.cmyk.A = a, this;
  }
  setC(t) {
    return this.cmyk.C = Qe(t, 0, 100), this.updateRGBFromCMYK(), this.update("cmyk"), this;
  }
  setM(t) {
    return this.cmyk.M = Qe(t, 0, 100), this.updateRGBFromCMYK(), this.update("cmyk"), this;
  }
  setY(t) {
    return this.cmyk.Y = Qe(t, 0, 100), this.updateRGBFromCMYK(), this.update("cmyk"), this;
  }
  setK(t) {
    return this.cmyk.K = Qe(t, 0, 100), this.updateRGBFromCMYK(), this.update("cmyk"), this;
  }
  get options() {
    return this._options;
  }
  get R() {
    return fe(this.rgb.R, this.options.decimals);
  }
  get G() {
    return fe(this.rgb.G, this.options.decimals);
  }
  get B() {
    return fe(this.rgb.B, this.options.decimals);
  }
  get H() {
    return fe(this.hsl.H, this.options.decimals);
  }
  get S() {
    return fe(this.hsl.S, this.options.decimals);
  }
  get L() {
    return fe(this.hsl.L, this.options.decimals);
  }
  get Whiteness() {
    return fe(this.hwb.W, this.options.decimals);
  }
  get Blackness() {
    return fe(this.hwb.B, this.options.decimals);
  }
  get CIEL() {
    return fe(this.lab.L, this.options.decimals);
  }
  get CIEa() {
    return fe(this.lab.a, this.options.decimals);
  }
  get CIEb() {
    return fe(this.lab.b, this.options.decimals);
  }
  get LCHL() {
    return fe(this.lch.L, this.options.decimals);
  }
  get LCHC() {
    return fe(this.lch.C, this.options.decimals);
  }
  get LCHH() {
    return fe(this.lch.H, this.options.decimals);
  }
  get A() {
    return fe(this.hsl.A, this.options.decimals);
  }
  get C() {
    return fe(this.cmyk.C, this.options.decimals);
  }
  get M() {
    return fe(this.cmyk.M, this.options.decimals);
  }
  get Y() {
    return fe(this.cmyk.Y, this.options.decimals);
  }
  get K() {
    return fe(this.cmyk.K, this.options.decimals);
  }
  get HEXObject() {
    return we.HEX(this.rgb);
  }
  get HEXAObject() {
    return we.HEXA(this.rgb);
  }
  get RGBObject() {
    return { R: this.R, G: this.G, B: this.B };
  }
  get RGBAObject() {
    return { ...this.RGBObject, A: this.A };
  }
  get HSLObject() {
    return { H: this.H, S: this.S, L: this.L };
  }
  get HSLAObject() {
    return { ...this.HSLObject, A: this.A };
  }
  get HWBObject() {
    return { H: this.H, W: this.Whiteness, B: this.Blackness };
  }
  get HWBAObject() {
    return { ...this.HWBObject, A: this.A };
  }
  get CIELabObject() {
    return { L: this.CIEL, a: this.CIEa, b: this.CIEb };
  }
  get CIELabAObject() {
    return { ...this.CIELabObject, A: this.A };
  }
  get LCHObject() {
    return { L: this.LCHL, C: this.LCHC, H: this.LCHH };
  }
  get LCHAObject() {
    return { ...this.LCHObject, A: this.A };
  }
  get CMYKObject() {
    return { C: this.C, M: this.M, Y: this.Y, K: this.K };
  }
  get CMYKAObject() {
    return { ...this.CMYKObject, A: this.A };
  }
  get HEX() {
    return ke.HEX({ R: this.R, G: this.G, B: this.B });
  }
  get HEXA() {
    return ke.HEX({ R: this.R, G: this.G, B: this.B, A: this.A * Te });
  }
  get RGB() {
    return ke.RGB({ R: this.R, G: this.G, B: this.B }, this.options);
  }
  get RGBA() {
    return ke.RGB({ R: this.R, G: this.G, B: this.B, A: this.A }, this.options);
  }
  get HSL() {
    return ke.HSL({ H: this.H, S: this.S, L: this.L }, this.options);
  }
  get HSLA() {
    return ke.HSL({ H: this.H, S: this.S, L: this.L, A: this.A }, this.options);
  }
  get HWB() {
    return ke.HWB({ H: this.H, W: this.Whiteness, B: this.Blackness }, this.options);
  }
  get HWBA() {
    return ke.HWB({ H: this.H, W: this.Whiteness, B: this.Blackness, A: this.A }, this.options);
  }
  get CIELab() {
    return ke.CIELab({ L: this.CIEL, a: this.CIEa, b: this.CIEb }, this.options);
  }
  get CIELabA() {
    return ke.CIELab({ L: this.CIEL, a: this.CIEa, b: this.CIEb, A: this.A }, this.options);
  }
  get LCH() {
    return ke.LCH({ L: this.LCHL, C: this.LCHC, H: this.LCHH }, this.options);
  }
  get LCHA() {
    return ke.LCH({ L: this.LCHL, C: this.LCHC, H: this.LCHH, A: this.A }, this.options);
  }
  get CMYK() {
    return ke.CMYK({ C: this.C, M: this.M, Y: this.Y, K: this.K }, this.options);
  }
  get CMYKA() {
    return ke.CMYK({ C: this.C, M: this.M, Y: this.Y, K: this.K, A: this.A }, this.options);
  }
  static toHEXObject(t) {
    const a = Jt(t);
    return pa(t, a, 0, we.HEX);
  }
  static toHEX(t) {
    return ke.HEX(Dt.toHEXObject(t));
  }
  static toHEXAObject(t) {
    const a = Jt(t);
    return pa(t, a, 0, we.HEXA);
  }
  static toHEXA(t) {
    return ke.HEX(Dt.toHEXAObject(t));
  }
  static toRGBObject(t, a = {}) {
    const n = Jt(t);
    return pa(t, n, a.decimals, we.RGB);
  }
  static toRGB(t, a = {}) {
    const n = Dt.toRGBObject(t, a), r = Et(a, t);
    return ke.RGB(n, r);
  }
  static toRGBAObject(t, a = {}) {
    const n = Jt(t);
    return pa(t, n, a.decimals, we.RGBA);
  }
  static toRGBA(t, a = {}) {
    const n = Dt.toRGBAObject(t, a), r = Et(a, t);
    return ke.RGB(n, r);
  }
  static toHSLObject(t, a = {}) {
    const n = Jt(t);
    return pa(t, n, a.decimals, we.HSL);
  }
  static toHSL(t, a = {}) {
    const n = Dt.toHSLObject(t, a), r = Et(a, t);
    return ke.HSL(n, r);
  }
  static toHSLAObject(t, a = {}) {
    const n = Jt(t);
    return pa(t, n, a.decimals, we.HSLA);
  }
  static toHSLA(t, a = {}) {
    const n = Dt.toHSLAObject(t, a), r = Et(a, t);
    return ke.HSL(n, r);
  }
  static toHWBObject(t, a = {}) {
    const n = Jt(t);
    return pa(t, n, a.decimals, we.HWB);
  }
  static toHWB(t, a = {}) {
    const n = Dt.toHWBObject(t, a), r = Et(a, t);
    return ke.HWB(n, r);
  }
  static toHWBAObject(t, a = {}) {
    const n = Jt(t);
    return pa(t, n, a.decimals, we.HWBA);
  }
  static toHWBA(t, a = {}) {
    const n = Dt.toHWBAObject(t, a), r = Et(a, t);
    return ke.HWB(n, r);
  }
  static toCIELabObject(t, a = {}) {
    const n = Jt(t);
    return pa(t, n, a.decimals, we.CIELab);
  }
  static toCIELab(t, a = {}) {
    const n = Dt.toCIELabObject(t, a), r = Et(a, t);
    return ke.CIELab(n, r);
  }
  static toCIELabAObject(t, a = {}) {
    const n = Jt(t);
    return pa(t, n, a.decimals, we.CIELabA);
  }
  static toCIELabA(t, a = {}) {
    const n = Dt.toCIELabAObject(t, a), r = Et(a, t);
    return ke.CIELab(n, r);
  }
  static toLCHObject(t, a = {}) {
    const n = Jt(t);
    return pa(t, n, a.decimals, we.LCH);
  }
  static toLCH(t, a = {}) {
    const n = Dt.toLCHObject(t, a), r = Et(a, t);
    return ke.LCH(n, r);
  }
  static toLCHAObject(t, a = {}) {
    const n = Jt(t);
    return pa(t, n, a.decimals, we.LCHA);
  }
  static toLCHA(t, a = {}) {
    const n = Dt.toLCHAObject(t, a), r = Et(a, t);
    return ke.LCH(n, r);
  }
  static toCMYKObject(t, a = {}) {
    const n = Jt(t);
    return pa(t, n, a.decimals, we.CMYK);
  }
  static toCMYK(t, a = {}) {
    const n = Dt.toCMYKObject(t, a), r = Et(a, t);
    return ke.CMYK(n, r);
  }
  static toCMYKAObject(t, a = {}) {
    const n = Jt(t);
    return pa(t, n, a.decimals, we.CMYKA);
  }
  static toCMYKA(t, a = {}) {
    const n = Dt.toCMYKAObject(t, a), r = Et(a, t);
    return ke.CMYK(n, r);
  }
  static getBlendHEXObject(t, a, n = 5) {
    return kl(t, a, n, 0, we.HEX);
  }
  static getBlendHEX(t, a, n = 5) {
    return Dt.getBlendHEXObject(t, a, n).map((r) => ke.HEX(r));
  }
  static getBlendHEXAObject(t, a, n = 5) {
    return kl(t, a, n, 0, we.HEXA);
  }
  static getBlendHEXA(t, a, n = 5) {
    return Dt.getBlendHEXAObject(t, a, n).map((r) => ke.HEX(r));
  }
  static getBlendRGBObject(t, a, n, r) {
    return Ot({ from: t, to: a, thirdParameter: n, fourthParameter: r, translateFunction: we.RGB });
  }
  static getBlendRGB(t, a, n, r) {
    return Ot({ from: t, to: a, thirdParameter: n, fourthParameter: r, translateFunction: we.RGB, cssFunction: ke.RGB });
  }
  static getBlendRGBAObject(t, a, n, r) {
    return Ot({ from: t, to: a, thirdParameter: n, fourthParameter: r, translateFunction: we.RGBA });
  }
  static getBlendRGBA(t, a, n, r) {
    return Ot({ from: t, to: a, thirdParameter: n, fourthParameter: r, translateFunction: we.RGBA, cssFunction: ke.RGB });
  }
  static getBlendHSLObject(t, a, n, r) {
    return Ot({ from: t, to: a, thirdParameter: n, fourthParameter: r, translateFunction: we.HSL });
  }
  static getBlendHSL(t, a, n, r) {
    return Ot({ from: t, to: a, thirdParameter: n, fourthParameter: r, translateFunction: we.HSL, cssFunction: ke.HSL });
  }
  static getBlendHSLAObject(t, a, n, r) {
    return Ot({ from: t, to: a, thirdParameter: n, fourthParameter: r, translateFunction: we.HSLA });
  }
  static getBlendHSLA(t, a, n, r) {
    return Ot({ from: t, to: a, thirdParameter: n, fourthParameter: r, translateFunction: we.HSLA, cssFunction: ke.HSL });
  }
  static getBlendHWBObject(t, a, n, r) {
    return Ot({ from: t, to: a, thirdParameter: n, fourthParameter: r, translateFunction: we.HWB });
  }
  static getBlendHWB(t, a, n, r) {
    return Ot({ from: t, to: a, thirdParameter: n, fourthParameter: r, translateFunction: we.HWB, cssFunction: ke.HWB });
  }
  static getBlendHWBAObject(t, a, n, r) {
    return Ot({ from: t, to: a, thirdParameter: n, fourthParameter: r, translateFunction: we.HWBA });
  }
  static getBlendHWBA(t, a, n, r) {
    return Ot({ from: t, to: a, thirdParameter: n, fourthParameter: r, translateFunction: we.HWBA, cssFunction: ke.HWB });
  }
  static getBlendCIELabObject(t, a, n, r) {
    return Ot({ from: t, to: a, thirdParameter: n, fourthParameter: r, translateFunction: we.CIELab });
  }
  static getBlendCIELab(t, a, n, r) {
    return Ot({ from: t, to: a, thirdParameter: n, fourthParameter: r, translateFunction: we.CIELab, cssFunction: ke.CIELab });
  }
  static getBlendCIELabAObject(t, a, n, r) {
    return Ot({ from: t, to: a, thirdParameter: n, fourthParameter: r, translateFunction: we.CIELabA });
  }
  static getBlendCIELabA(t, a, n, r) {
    return Ot({ from: t, to: a, thirdParameter: n, fourthParameter: r, translateFunction: we.CIELabA, cssFunction: ke.CIELab });
  }
  static getBlendLCHObject(t, a, n, r) {
    return Ot({ from: t, to: a, thirdParameter: n, fourthParameter: r, translateFunction: we.LCH });
  }
  static getBlendLCH(t, a, n, r) {
    return Ot({ from: t, to: a, thirdParameter: n, fourthParameter: r, translateFunction: we.LCH, cssFunction: ke.LCH });
  }
  static getBlendLCHAObject(t, a, n, r) {
    return Ot({ from: t, to: a, thirdParameter: n, fourthParameter: r, translateFunction: we.LCHA });
  }
  static getBlendLCHA(t, a, n, r) {
    return Ot({ from: t, to: a, thirdParameter: n, fourthParameter: r, translateFunction: we.LCHA, cssFunction: ke.LCH });
  }
  static getMixHEXObject(t, a = da.ADDITIVE) {
    return ss.HEX(t, a, !1);
  }
  static getMixHEX(t, a = da.ADDITIVE) {
    return ss.HEX(t, a, !0);
  }
  static getMixHEXAObject(t, a = da.ADDITIVE) {
    return ss.HEXA(t, a, !1);
  }
  static getMixHEXA(t, a = da.ADDITIVE) {
    return ss.HEXA(t, a, !0);
  }
  static getMixRGBObject(t, a, n) {
    return Ft({ colors: t, secondParameter: a, thirdParameter: n, colorMixerFunction: zt.RGB, css: !1 });
  }
  static getMixRGB(t, a, n) {
    return Ft({ colors: t, secondParameter: a, thirdParameter: n, colorMixerFunction: zt.RGB, css: !0 });
  }
  static getMixRGBAObject(t, a, n) {
    return Ft({ colors: t, secondParameter: a, thirdParameter: n, colorMixerFunction: zt.RGBA, css: !1 });
  }
  static getMixRGBA(t, a, n) {
    return Ft({ colors: t, secondParameter: a, thirdParameter: n, colorMixerFunction: zt.RGBA, css: !0 });
  }
  static getMixHSLObject(t, a, n) {
    return Ft({ colors: t, secondParameter: a, thirdParameter: n, colorMixerFunction: zt.HSL, css: !1 });
  }
  static getMixHSL(t, a, n) {
    return Ft({ colors: t, secondParameter: a, thirdParameter: n, colorMixerFunction: zt.HSL, css: !0 });
  }
  static getMixHSLAObject(t, a, n) {
    return Ft({ colors: t, secondParameter: a, thirdParameter: n, colorMixerFunction: zt.HSLA, css: !1 });
  }
  static getMixHSLA(t, a, n) {
    return Ft({ colors: t, secondParameter: a, thirdParameter: n, colorMixerFunction: zt.HSLA, css: !0 });
  }
  static getMixHWBObject(t, a, n) {
    return Ft({ colors: t, secondParameter: a, thirdParameter: n, colorMixerFunction: zt.HWB, css: !1 });
  }
  static getMixHWB(t, a, n) {
    return Ft({ colors: t, secondParameter: a, thirdParameter: n, colorMixerFunction: zt.HWB, css: !0 });
  }
  static getMixHWBAObject(t, a, n) {
    return Ft({ colors: t, secondParameter: a, thirdParameter: n, colorMixerFunction: zt.HWBA, css: !1 });
  }
  static getMixHWBA(t, a, n) {
    return Ft({ colors: t, secondParameter: a, thirdParameter: n, colorMixerFunction: zt.HWBA, css: !0 });
  }
  static getMixCIELabObject(t, a, n) {
    return Ft({ colors: t, secondParameter: a, thirdParameter: n, colorMixerFunction: zt.CIELab, css: !1 });
  }
  static getMixCIELab(t, a, n) {
    return Ft({ colors: t, secondParameter: a, thirdParameter: n, colorMixerFunction: zt.CIELab, css: !0 });
  }
  static getMixCIELabAObject(t, a, n) {
    return Ft({ colors: t, secondParameter: a, thirdParameter: n, colorMixerFunction: zt.CIELabA, css: !1 });
  }
  static getMixCIELabA(t, a, n) {
    return Ft({ colors: t, secondParameter: a, thirdParameter: n, colorMixerFunction: zt.CIELabA, css: !0 });
  }
  static getMixLCHObject(t, a, n) {
    return Ft({ colors: t, secondParameter: a, thirdParameter: n, colorMixerFunction: zt.LCH, css: !1 });
  }
  static getMixLCH(t, a, n) {
    return Ft({ colors: t, secondParameter: a, thirdParameter: n, colorMixerFunction: zt.LCH, css: !0 });
  }
  static getMixLCHAObject(t, a, n) {
    return Ft({ colors: t, secondParameter: a, thirdParameter: n, colorMixerFunction: zt.LCHA, css: !1 });
  }
  static getMixLCHA(t, a, n) {
    return Ft({ colors: t, secondParameter: a, thirdParameter: n, colorMixerFunction: zt.LCHA, css: !0 });
  }
  static getShades(t, a, n) {
    return typeof a == "number" ? Ao(t, a, !0, Et(n || {}, t)) : Ao(t, 5, !0, Et(a || {}, t));
  }
  static getTints(t, a, n) {
    return typeof a == "number" ? Ao(t, a, !1, Et(n || {}, t)) : Ao(t, 5, !1, Et(a || {}, t));
  }
  static getHarmony(t, a, n, r) {
    return `${a}` in ja ? Ku(a, t, Nu(n) ? n : da.ADDITIVE, Et(Nu(n) ? r || {} : n || {}, t)) : Nu(a) ? Ku(ja.COMPLEMENTARY, t, a, Et(n || {}, t)) : Ku(ja.COMPLEMENTARY, t, da.ADDITIVE, Et(a || {}, t));
  }
}
const fN = {
  slots: {
    root: "data-[disabled]:opacity-75",
    picker: "flex gap-4",
    selector: "rounded-md touch-none",
    selectorBackground: "w-full h-full relative rounded-md",
    selectorThumb: "-translate-y-1/2 -translate-x-1/2 absolute size-4 ring-2 ring-(--color-white) rounded-full cursor-pointer data-[disabled]:cursor-not-allowed",
    track: "w-[8px] relative rounded-md touch-none",
    trackThumb: "absolute transform -translate-y-1/2 -translate-x-[4px] rtl:translate-x-[4px] size-4 rounded-full ring-2 ring-(--color-white) cursor-pointer data-[disabled]:cursor-not-allowed"
  },
  variants: {
    size: {
      xs: {
        selector: "w-38 h-38",
        track: "h-38"
      },
      sm: {
        selector: "w-40 h-40",
        track: "h-40"
      },
      md: {
        selector: "w-42 h-42",
        track: "h-42"
      },
      lg: {
        selector: "w-44 h-44",
        track: "h-44"
      },
      xl: {
        selector: "w-46 h-46",
        track: "h-46"
      }
    }
  },
  compoundVariants: [],
  defaultVariants: {
    size: "md"
  }
}, pN = ["data-disabled"], gN = ["data-disabled"];
function vN(e) {
  const t = e.S * (e.L < 50 ? e.L : 100 - e.L), a = e.L + t / 100;
  return {
    h: e.H,
    s: e.L === 0 ? e.S : 2 * t / a,
    v: a
  };
}
function Kh(e) {
  const t = (200 - e.s) * e.v / 100;
  return {
    H: e.h,
    S: t === 0 || t === 200 ? 0 : Math.round(e.s * e.v / (t <= 100 ? t : 200 - t)),
    L: t / 2
  };
}
const hN = /* @__PURE__ */ L({
  __name: "ColorPicker",
  props: /* @__PURE__ */ mt({
    as: {},
    throttle: { default: 50 },
    disabled: { type: Boolean },
    defaultValue: { default: "#FFFFFF" },
    format: { default: "hex" },
    size: {},
    class: {},
    ui: {}
  }, {
    modelValue: void 0,
    modelModifiers: {}
  }),
  emits: ["update:modelValue"],
  setup(e) {
    const t = e, a = lt(e, "modelValue", void 0), n = ue(), r = T(() => W({ extend: W(fN), ...n.ui?.colorPicker || {} })({
      size: t.size
    })), s = T({
      get() {
        try {
          const B = new Dt(a.value || t.defaultValue);
          return vN(B.HSLObject);
        } catch {
          return { h: 0, s: 0, v: 100 };
        }
      },
      set(B) {
        const I = new Dt(Kh(B), {
          labUnit: "percent",
          cmykUnit: "percent",
          cmykFunction: "cmyk"
        });
        switch (t.format) {
          case "rgb":
            a.value = I.RGB;
            break;
          case "hsl":
            a.value = I.HSL;
            break;
          case "cmyk":
            a.value = I.CMYK;
            break;
          case "lab":
            a.value = I.CIELab;
            break;
          case "hex":
          default:
            a.value = I.HEX;
        }
      }
    });
    function i(B, I, E = "both", P = { x: 0, y: 0 }, R) {
      const F = N(P), H = N(), j = Pd(B), K = Pd(I);
      function z(q) {
        if (Re(R)) return q.preventDefault();
        const Q = Re(I);
        H.value = {
          x: q.clientX - (Q ? q.clientX - K.left.value + Q.scrollLeft : j.left.value),
          y: q.clientY - (Q ? q.clientY - K.top.value + Q.scrollTop : j.top.value)
        }, G(q);
      }
      function G(q) {
        if (!H.value) return;
        const Q = Re(I);
        let { x: se, y: ce } = F.value;
        Q && (E === "x" || E === "both") && (se = Math.min(Math.max(0, (q.clientX - H.value.x) / Q.scrollWidth * 100), 100)), Q && (E === "y" || E === "both") && (ce = Math.min(Math.max(0, (q.clientY - H.value.y) / Q.scrollHeight * 100), 100)), F.value = { x: se, y: ce };
      }
      function Y() {
        H.value && (H.value = void 0);
      }
      return Ul && (wt(I, "pointerdown", z), wt(window, "pointermove", G), wt(window, "pointerup", Y)), {
        position: F
      };
    }
    function o(B, I = "left") {
      return I === "right" ? B * 100 / 360 : B / 100 * 360;
    }
    function l(B) {
      return 100 - B;
    }
    const d = N(null), c = N(null), f = N(null), p = N(null), g = T(() => t.disabled), { position: v } = i(c, d, "both", {
      x: s.value.s,
      y: l(s.value.v)
    }, g), { position: m } = i(p, f, "y", {
      x: 0,
      y: o(s.value.h, "right")
    }, g), { pause: y, resume: x } = Gb(s, (B) => {
      v.value = {
        x: B.s,
        y: l(B.v)
      }, m.value = {
        x: 0,
        y: o(B.h, "right")
      };
    });
    Ub([v, m], () => {
      y(), s.value = {
        h: o(m.value.y),
        s: v.value.x,
        v: l(v.value.y)
      }, Be(x);
    }, { throttle: () => t.throttle });
    const b = T(() => new Dt(Kh({
      h: o(m.value.y),
      s: 100,
      v: 100
    })).HEX), C = T(() => ({
      backgroundColor: b.value
    })), w = T(() => ({
      backgroundColor: new Dt(a.value || t.defaultValue).HEX,
      left: `${v.value.x}%`,
      top: `${v.value.y}%`
    })), $ = T(() => ({
      backgroundColor: b.value,
      top: `${m.value.y}%`
    }));
    return (B, I) => (h(), k(u(U), {
      as: B.as,
      class: A(r.value.root({ class: [t.ui?.root, t.class] })),
      "data-disabled": g.value ? !0 : void 0
    }, {
      default: _(() => [
        J("div", {
          class: A(r.value.picker({ class: t.ui?.picker }))
        }, [
          J("div", {
            ref_key: "selectorRef",
            ref: d,
            class: A(r.value.selector({ class: t.ui?.selector })),
            style: It(C.value)
          }, [
            J("div", {
              class: A(r.value.selectorBackground({ class: t.ui?.selectorBackground })),
              "data-color-picker-background": ""
            }, [
              J("div", {
                ref_key: "selectorThumbRef",
                ref: c,
                class: A(r.value.selectorThumb({ class: t.ui?.selectorThumb })),
                style: It(w.value),
                "data-disabled": g.value ? !0 : void 0
              }, null, 14, pN)
            ], 2)
          ], 6),
          J("div", {
            ref_key: "trackRef",
            ref: f,
            class: A(r.value.track({ class: t.ui?.track })),
            "data-color-picker-track": ""
          }, [
            J("div", {
              ref_key: "trackThumbRef",
              ref: p,
              class: A(r.value.trackThumb({ class: t.ui?.trackThumb })),
              style: It($.value),
              "data-disabled": g.value ? !0 : void 0
            }, null, 14, gN)
          ], 2)
        ], 2)
      ]),
      _: 1
    }, 8, ["as", "class", "data-disabled"]));
  }
}), P4 = /* @__PURE__ */ S0(hN, [["__scopeId", "data-v-82d45e44"]]);
function Mn(e) {
  return Array.isArray ? Array.isArray(e) : k1(e) === "[object Array]";
}
function mN(e) {
  if (typeof e == "string")
    return e;
  let t = e + "";
  return t == "0" && 1 / e == -1 / 0 ? "-0" : t;
}
function yN(e) {
  return e == null ? "" : mN(e);
}
function on(e) {
  return typeof e == "string";
}
function S1(e) {
  return typeof e == "number";
}
function bN(e) {
  return e === !0 || e === !1 || wN(e) && k1(e) == "[object Boolean]";
}
function _1(e) {
  return typeof e == "object";
}
function wN(e) {
  return _1(e) && e !== null;
}
function _a(e) {
  return e != null;
}
function Gu(e) {
  return !e.trim().length;
}
function k1(e) {
  return e == null ? e === void 0 ? "[object Undefined]" : "[object Null]" : Object.prototype.toString.call(e);
}
const CN = "Incorrect 'index' type", xN = (e) => `Invalid value for key ${e}`, SN = (e) => `Pattern length exceeds max of ${e}.`, _N = (e) => `Missing ${e} property in key`, kN = (e) => `Property 'weight' in key '${e}' must be a positive integer`, Gh = Object.prototype.hasOwnProperty;
class AN {
  constructor(t) {
    this._keys = [], this._keyMap = {};
    let a = 0;
    t.forEach((n) => {
      let r = A1(n);
      this._keys.push(r), this._keyMap[r.id] = r, a += r.weight;
    }), this._keys.forEach((n) => {
      n.weight /= a;
    });
  }
  get(t) {
    return this._keyMap[t];
  }
  keys() {
    return this._keys;
  }
  toJSON() {
    return JSON.stringify(this._keys);
  }
}
function A1(e) {
  let t = null, a = null, n = null, r = 1, s = null;
  if (on(e) || Mn(e))
    n = e, t = Uh(e), a = kc(e);
  else {
    if (!Gh.call(e, "name"))
      throw new Error(_N("name"));
    const i = e.name;
    if (n = i, Gh.call(e, "weight") && (r = e.weight, r <= 0))
      throw new Error(kN(i));
    t = Uh(i), a = kc(i), s = e.getFn;
  }
  return { path: t, id: a, weight: r, src: n, getFn: s };
}
function Uh(e) {
  return Mn(e) ? e : e.split(".");
}
function kc(e) {
  return Mn(e) ? e.join(".") : e;
}
function $N(e, t) {
  let a = [], n = !1;
  const r = (s, i, o) => {
    if (_a(s))
      if (!i[o])
        a.push(s);
      else {
        let l = i[o];
        const d = s[l];
        if (!_a(d))
          return;
        if (o === i.length - 1 && (on(d) || S1(d) || bN(d)))
          a.push(yN(d));
        else if (Mn(d)) {
          n = !0;
          for (let c = 0, f = d.length; c < f; c += 1)
            r(d[c], i, o + 1);
        } else i.length && r(d, i, o + 1);
      }
  };
  return r(e, on(t) ? t.split(".") : t, 0), n ? a : a[0];
}
const IN = {
  // Whether the matches should be included in the result set. When `true`, each record in the result
  // set will include the indices of the matched characters.
  // These can consequently be used for highlighting purposes.
  includeMatches: !1,
  // When `true`, the matching function will continue to the end of a search pattern even if
  // a perfect match has already been located in the string.
  findAllMatches: !1,
  // Minimum number of characters that must be matched before a result is considered a match
  minMatchCharLength: 1
}, EN = {
  // When `true`, the algorithm continues searching to the end of the input even if a perfect
  // match is found before the end of the same input.
  isCaseSensitive: !1,
  // When `true`, the algorithm will ignore diacritics (accents) in comparisons
  ignoreDiacritics: !1,
  // When true, the matching function will continue to the end of a search pattern even if
  includeScore: !1,
  // List of properties that will be searched. This also supports nested properties.
  keys: [],
  // Whether to sort the result list, by score
  shouldSort: !0,
  // Default sort function: sort by ascending score, ascending index
  sortFn: (e, t) => e.score === t.score ? e.idx < t.idx ? -1 : 1 : e.score < t.score ? -1 : 1
}, TN = {
  // Approximately where in the text is the pattern expected to be found?
  location: 0,
  // At what point does the match algorithm give up. A threshold of '0.0' requires a perfect match
  // (of both letters and location), a threshold of '1.0' would match anything.
  threshold: 0.6,
  // Determines how close the match must be to the fuzzy location (specified above).
  // An exact letter match which is 'distance' characters away from the fuzzy location
  // would score as a complete mismatch. A distance of '0' requires the match be at
  // the exact location specified, a threshold of '1000' would require a perfect match
  // to be within 800 characters of the fuzzy location to be found using a 0.8 threshold.
  distance: 100
}, BN = {
  // When `true`, it enables the use of unix-like search commands
  useExtendedSearch: !1,
  // The get function to use when fetching an object's properties.
  // The default will search nested paths *ie foo.bar.baz*
  getFn: $N,
  // When `true`, search will ignore `location` and `distance`, so it won't matter
  // where in the string the pattern appears.
  // More info: https://fusejs.io/concepts/scoring-theory.html#fuzziness-score
  ignoreLocation: !1,
  // When `true`, the calculation for the relevance score (used for sorting) will
  // ignore the field-length norm.
  // More info: https://fusejs.io/concepts/scoring-theory.html#field-length-norm
  ignoreFieldNorm: !1,
  // The weight to determine how much field length norm effects scoring.
  fieldNormWeight: 1
};
var Ue = {
  ...EN,
  ...IN,
  ...TN,
  ...BN
};
const PN = /[^ ]+/g;
function DN(e = 1, t = 3) {
  const a = /* @__PURE__ */ new Map(), n = Math.pow(10, t);
  return {
    get(r) {
      const s = r.match(PN).length;
      if (a.has(s))
        return a.get(s);
      const i = 1 / Math.pow(s, 0.5 * e), o = parseFloat(Math.round(i * n) / n);
      return a.set(s, o), o;
    },
    clear() {
      a.clear();
    }
  };
}
class $p {
  constructor({
    getFn: t = Ue.getFn,
    fieldNormWeight: a = Ue.fieldNormWeight
  } = {}) {
    this.norm = DN(a, 3), this.getFn = t, this.isCreated = !1, this.setIndexRecords();
  }
  setSources(t = []) {
    this.docs = t;
  }
  setIndexRecords(t = []) {
    this.records = t;
  }
  setKeys(t = []) {
    this.keys = t, this._keysMap = {}, t.forEach((a, n) => {
      this._keysMap[a.id] = n;
    });
  }
  create() {
    this.isCreated || !this.docs.length || (this.isCreated = !0, on(this.docs[0]) ? this.docs.forEach((t, a) => {
      this._addString(t, a);
    }) : this.docs.forEach((t, a) => {
      this._addObject(t, a);
    }), this.norm.clear());
  }
  // Adds a doc to the end of the index
  add(t) {
    const a = this.size();
    on(t) ? this._addString(t, a) : this._addObject(t, a);
  }
  // Removes the doc at the specified index of the index
  removeAt(t) {
    this.records.splice(t, 1);
    for (let a = t, n = this.size(); a < n; a += 1)
      this.records[a].i -= 1;
  }
  getValueForItemAtKeyId(t, a) {
    return t[this._keysMap[a]];
  }
  size() {
    return this.records.length;
  }
  _addString(t, a) {
    if (!_a(t) || Gu(t))
      return;
    let n = {
      v: t,
      i: a,
      n: this.norm.get(t)
    };
    this.records.push(n);
  }
  _addObject(t, a) {
    let n = { i: a, $: {} };
    this.keys.forEach((r, s) => {
      let i = r.getFn ? r.getFn(t) : this.getFn(t, r.path);
      if (_a(i)) {
        if (Mn(i)) {
          let o = [];
          const l = [{ nestedArrIndex: -1, value: i }];
          for (; l.length; ) {
            const { nestedArrIndex: d, value: c } = l.pop();
            if (_a(c))
              if (on(c) && !Gu(c)) {
                let f = {
                  v: c,
                  i: d,
                  n: this.norm.get(c)
                };
                o.push(f);
              } else Mn(c) && c.forEach((f, p) => {
                l.push({
                  nestedArrIndex: p,
                  value: f
                });
              });
          }
          n.$[s] = o;
        } else if (on(i) && !Gu(i)) {
          let o = {
            v: i,
            n: this.norm.get(i)
          };
          n.$[s] = o;
        }
      }
    }), this.records.push(n);
  }
  toJSON() {
    return {
      keys: this.keys,
      records: this.records
    };
  }
}
function $1(e, t, { getFn: a = Ue.getFn, fieldNormWeight: n = Ue.fieldNormWeight } = {}) {
  const r = new $p({ getFn: a, fieldNormWeight: n });
  return r.setKeys(e.map(A1)), r.setSources(t), r.create(), r;
}
function MN(e, { getFn: t = Ue.getFn, fieldNormWeight: a = Ue.fieldNormWeight } = {}) {
  const { keys: n, records: r } = e, s = new $p({ getFn: t, fieldNormWeight: a });
  return s.setKeys(n), s.setIndexRecords(r), s;
}
function $o(e, {
  errors: t = 0,
  currentLocation: a = 0,
  expectedLocation: n = 0,
  distance: r = Ue.distance,
  ignoreLocation: s = Ue.ignoreLocation
} = {}) {
  const i = t / e.length;
  if (s)
    return i;
  const o = Math.abs(n - a);
  return r ? i + o / r : o ? 1 : i;
}
function RN(e = [], t = Ue.minMatchCharLength) {
  let a = [], n = -1, r = -1, s = 0;
  for (let i = e.length; s < i; s += 1) {
    let o = e[s];
    o && n === -1 ? n = s : !o && n !== -1 && (r = s - 1, r - n + 1 >= t && a.push([n, r]), n = -1);
  }
  return e[s - 1] && s - n >= t && a.push([n, s - 1]), a;
}
const mr = 32;
function LN(e, t, a, {
  location: n = Ue.location,
  distance: r = Ue.distance,
  threshold: s = Ue.threshold,
  findAllMatches: i = Ue.findAllMatches,
  minMatchCharLength: o = Ue.minMatchCharLength,
  includeMatches: l = Ue.includeMatches,
  ignoreLocation: d = Ue.ignoreLocation
} = {}) {
  if (t.length > mr)
    throw new Error(SN(mr));
  const c = t.length, f = e.length, p = Math.max(0, Math.min(n, f));
  let g = s, v = p;
  const m = o > 1 || l, y = m ? Array(f) : [];
  let x;
  for (; (x = e.indexOf(t, v)) > -1; ) {
    let I = $o(t, {
      currentLocation: x,
      expectedLocation: p,
      distance: r,
      ignoreLocation: d
    });
    if (g = Math.min(I, g), v = x + c, m) {
      let E = 0;
      for (; E < c; )
        y[x + E] = 1, E += 1;
    }
  }
  v = -1;
  let b = [], C = 1, w = c + f;
  const $ = 1 << c - 1;
  for (let I = 0; I < c; I += 1) {
    let E = 0, P = w;
    for (; E < P; )
      $o(t, {
        errors: I,
        currentLocation: p + P,
        expectedLocation: p,
        distance: r,
        ignoreLocation: d
      }) <= g ? E = P : w = P, P = Math.floor((w - E) / 2 + E);
    w = P;
    let R = Math.max(1, p - P + 1), F = i ? f : Math.min(p + P, f) + c, H = Array(F + 2);
    H[F + 1] = (1 << I) - 1;
    for (let K = F; K >= R; K -= 1) {
      let z = K - 1, G = a[e.charAt(z)];
      if (m && (y[z] = +!!G), H[K] = (H[K + 1] << 1 | 1) & G, I && (H[K] |= (b[K + 1] | b[K]) << 1 | 1 | b[K + 1]), H[K] & $ && (C = $o(t, {
        errors: I,
        currentLocation: z,
        expectedLocation: p,
        distance: r,
        ignoreLocation: d
      }), C <= g)) {
        if (g = C, v = z, v <= p)
          break;
        R = Math.max(1, 2 * p - v);
      }
    }
    if ($o(t, {
      errors: I + 1,
      currentLocation: p,
      expectedLocation: p,
      distance: r,
      ignoreLocation: d
    }) > g)
      break;
    b = H;
  }
  const B = {
    isMatch: v >= 0,
    // Count exact matches (those with a score of 0) to be "almost" exact
    score: Math.max(1e-3, C)
  };
  if (m) {
    const I = RN(y, o);
    I.length ? l && (B.indices = I) : B.isMatch = !1;
  }
  return B;
}
function ON(e) {
  let t = {};
  for (let a = 0, n = e.length; a < n; a += 1) {
    const r = e.charAt(a);
    t[r] = (t[r] || 0) | 1 << n - a - 1;
  }
  return t;
}
const Al = String.prototype.normalize ? (e) => e.normalize("NFD").replace(/[\u0300-\u036F\u0483-\u0489\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u065F\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u0711\u0730-\u074A\u07A6-\u07B0\u07EB-\u07F3\u07FD\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u08D3-\u08E1\u08E3-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962\u0963\u0981-\u0983\u09BC\u09BE-\u09C4\u09C7\u09C8\u09CB-\u09CD\u09D7\u09E2\u09E3\u09FE\u0A01-\u0A03\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A70\u0A71\u0A75\u0A81-\u0A83\u0ABC\u0ABE-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AE2\u0AE3\u0AFA-\u0AFF\u0B01-\u0B03\u0B3C\u0B3E-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B62\u0B63\u0B82\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD7\u0C00-\u0C04\u0C3E-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C81-\u0C83\u0CBC\u0CBE-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CE2\u0CE3\u0D00-\u0D03\u0D3B\u0D3C\u0D3E-\u0D44\u0D46-\u0D48\u0D4A-\u0D4D\u0D57\u0D62\u0D63\u0D82\u0D83\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DF2\u0DF3\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0EB1\u0EB4-\u0EB9\u0EBB\u0EBC\u0EC8-\u0ECD\u0F18\u0F19\u0F35\u0F37\u0F39\u0F3E\u0F3F\u0F71-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102B-\u103E\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F\u109A-\u109D\u135D-\u135F\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4-\u17D3\u17DD\u180B-\u180D\u1885\u1886\u18A9\u1920-\u192B\u1930-\u193B\u1A17-\u1A1B\u1A55-\u1A5E\u1A60-\u1A7C\u1A7F\u1AB0-\u1ABE\u1B00-\u1B04\u1B34-\u1B44\u1B6B-\u1B73\u1B80-\u1B82\u1BA1-\u1BAD\u1BE6-\u1BF3\u1C24-\u1C37\u1CD0-\u1CD2\u1CD4-\u1CE8\u1CED\u1CF2-\u1CF4\u1CF7-\u1CF9\u1DC0-\u1DF9\u1DFB-\u1DFF\u20D0-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302F\u3099\u309A\uA66F-\uA672\uA674-\uA67D\uA69E\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA823-\uA827\uA880\uA881\uA8B4-\uA8C5\uA8E0-\uA8F1\uA8FF\uA926-\uA92D\uA947-\uA953\uA980-\uA983\uA9B3-\uA9C0\uA9E5\uAA29-\uAA36\uAA43\uAA4C\uAA4D\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEB-\uAAEF\uAAF5\uAAF6\uABE3-\uABEA\uABEC\uABED\uFB1E\uFE00-\uFE0F\uFE20-\uFE2F]/g, "") : (e) => e;
class I1 {
  constructor(t, {
    location: a = Ue.location,
    threshold: n = Ue.threshold,
    distance: r = Ue.distance,
    includeMatches: s = Ue.includeMatches,
    findAllMatches: i = Ue.findAllMatches,
    minMatchCharLength: o = Ue.minMatchCharLength,
    isCaseSensitive: l = Ue.isCaseSensitive,
    ignoreDiacritics: d = Ue.ignoreDiacritics,
    ignoreLocation: c = Ue.ignoreLocation
  } = {}) {
    if (this.options = {
      location: a,
      threshold: n,
      distance: r,
      includeMatches: s,
      findAllMatches: i,
      minMatchCharLength: o,
      isCaseSensitive: l,
      ignoreDiacritics: d,
      ignoreLocation: c
    }, t = l ? t : t.toLowerCase(), t = d ? Al(t) : t, this.pattern = t, this.chunks = [], !this.pattern.length)
      return;
    const f = (g, v) => {
      this.chunks.push({
        pattern: g,
        alphabet: ON(g),
        startIndex: v
      });
    }, p = this.pattern.length;
    if (p > mr) {
      let g = 0;
      const v = p % mr, m = p - v;
      for (; g < m; )
        f(this.pattern.substr(g, mr), g), g += mr;
      if (v) {
        const y = p - mr;
        f(this.pattern.substr(y), y);
      }
    } else
      f(this.pattern, 0);
  }
  searchIn(t) {
    const { isCaseSensitive: a, ignoreDiacritics: n, includeMatches: r } = this.options;
    if (t = a ? t : t.toLowerCase(), t = n ? Al(t) : t, this.pattern === t) {
      let m = {
        isMatch: !0,
        score: 0
      };
      return r && (m.indices = [[0, t.length - 1]]), m;
    }
    const {
      location: s,
      distance: i,
      threshold: o,
      findAllMatches: l,
      minMatchCharLength: d,
      ignoreLocation: c
    } = this.options;
    let f = [], p = 0, g = !1;
    this.chunks.forEach(({ pattern: m, alphabet: y, startIndex: x }) => {
      const { isMatch: b, score: C, indices: w } = LN(t, m, y, {
        location: s + x,
        distance: i,
        threshold: o,
        findAllMatches: l,
        minMatchCharLength: d,
        includeMatches: r,
        ignoreLocation: c
      });
      b && (g = !0), p += C, b && w && (f = [...f, ...w]);
    });
    let v = {
      isMatch: g,
      score: g ? p / this.chunks.length : 1
    };
    return g && r && (v.indices = f), v;
  }
}
class dr {
  constructor(t) {
    this.pattern = t;
  }
  static isMultiMatch(t) {
    return Wh(t, this.multiRegex);
  }
  static isSingleMatch(t) {
    return Wh(t, this.singleRegex);
  }
  search() {
  }
}
function Wh(e, t) {
  const a = e.match(t);
  return a ? a[1] : null;
}
class FN extends dr {
  constructor(t) {
    super(t);
  }
  static get type() {
    return "exact";
  }
  static get multiRegex() {
    return /^="(.*)"$/;
  }
  static get singleRegex() {
    return /^=(.*)$/;
  }
  search(t) {
    const a = t === this.pattern;
    return {
      isMatch: a,
      score: a ? 0 : 1,
      indices: [0, this.pattern.length - 1]
    };
  }
}
class zN extends dr {
  constructor(t) {
    super(t);
  }
  static get type() {
    return "inverse-exact";
  }
  static get multiRegex() {
    return /^!"(.*)"$/;
  }
  static get singleRegex() {
    return /^!(.*)$/;
  }
  search(t) {
    const n = t.indexOf(this.pattern) === -1;
    return {
      isMatch: n,
      score: n ? 0 : 1,
      indices: [0, t.length - 1]
    };
  }
}
class qN extends dr {
  constructor(t) {
    super(t);
  }
  static get type() {
    return "prefix-exact";
  }
  static get multiRegex() {
    return /^\^"(.*)"$/;
  }
  static get singleRegex() {
    return /^\^(.*)$/;
  }
  search(t) {
    const a = t.startsWith(this.pattern);
    return {
      isMatch: a,
      score: a ? 0 : 1,
      indices: [0, this.pattern.length - 1]
    };
  }
}
class VN extends dr {
  constructor(t) {
    super(t);
  }
  static get type() {
    return "inverse-prefix-exact";
  }
  static get multiRegex() {
    return /^!\^"(.*)"$/;
  }
  static get singleRegex() {
    return /^!\^(.*)$/;
  }
  search(t) {
    const a = !t.startsWith(this.pattern);
    return {
      isMatch: a,
      score: a ? 0 : 1,
      indices: [0, t.length - 1]
    };
  }
}
class NN extends dr {
  constructor(t) {
    super(t);
  }
  static get type() {
    return "suffix-exact";
  }
  static get multiRegex() {
    return /^"(.*)"\$$/;
  }
  static get singleRegex() {
    return /^(.*)\$$/;
  }
  search(t) {
    const a = t.endsWith(this.pattern);
    return {
      isMatch: a,
      score: a ? 0 : 1,
      indices: [t.length - this.pattern.length, t.length - 1]
    };
  }
}
class HN extends dr {
  constructor(t) {
    super(t);
  }
  static get type() {
    return "inverse-suffix-exact";
  }
  static get multiRegex() {
    return /^!"(.*)"\$$/;
  }
  static get singleRegex() {
    return /^!(.*)\$$/;
  }
  search(t) {
    const a = !t.endsWith(this.pattern);
    return {
      isMatch: a,
      score: a ? 0 : 1,
      indices: [0, t.length - 1]
    };
  }
}
class E1 extends dr {
  constructor(t, {
    location: a = Ue.location,
    threshold: n = Ue.threshold,
    distance: r = Ue.distance,
    includeMatches: s = Ue.includeMatches,
    findAllMatches: i = Ue.findAllMatches,
    minMatchCharLength: o = Ue.minMatchCharLength,
    isCaseSensitive: l = Ue.isCaseSensitive,
    ignoreDiacritics: d = Ue.ignoreDiacritics,
    ignoreLocation: c = Ue.ignoreLocation
  } = {}) {
    super(t), this._bitapSearch = new I1(t, {
      location: a,
      threshold: n,
      distance: r,
      includeMatches: s,
      findAllMatches: i,
      minMatchCharLength: o,
      isCaseSensitive: l,
      ignoreDiacritics: d,
      ignoreLocation: c
    });
  }
  static get type() {
    return "fuzzy";
  }
  static get multiRegex() {
    return /^"(.*)"$/;
  }
  static get singleRegex() {
    return /^(.*)$/;
  }
  search(t) {
    return this._bitapSearch.searchIn(t);
  }
}
class T1 extends dr {
  constructor(t) {
    super(t);
  }
  static get type() {
    return "include";
  }
  static get multiRegex() {
    return /^'"(.*)"$/;
  }
  static get singleRegex() {
    return /^'(.*)$/;
  }
  search(t) {
    let a = 0, n;
    const r = [], s = this.pattern.length;
    for (; (n = t.indexOf(this.pattern, a)) > -1; )
      a = n + s, r.push([n, a - 1]);
    const i = !!r.length;
    return {
      isMatch: i,
      score: i ? 0 : 1,
      indices: r
    };
  }
}
const Ac = [
  FN,
  T1,
  qN,
  VN,
  HN,
  NN,
  zN,
  E1
], Yh = Ac.length, jN = / +(?=(?:[^\"]*\"[^\"]*\")*[^\"]*$)/, KN = "|";
function GN(e, t = {}) {
  return e.split(KN).map((a) => {
    let n = a.trim().split(jN).filter((s) => s && !!s.trim()), r = [];
    for (let s = 0, i = n.length; s < i; s += 1) {
      const o = n[s];
      let l = !1, d = -1;
      for (; !l && ++d < Yh; ) {
        const c = Ac[d];
        let f = c.isMultiMatch(o);
        f && (r.push(new c(f, t)), l = !0);
      }
      if (!l)
        for (d = -1; ++d < Yh; ) {
          const c = Ac[d];
          let f = c.isSingleMatch(o);
          if (f) {
            r.push(new c(f, t));
            break;
          }
        }
    }
    return r;
  });
}
const UN = /* @__PURE__ */ new Set([E1.type, T1.type]);
class WN {
  constructor(t, {
    isCaseSensitive: a = Ue.isCaseSensitive,
    ignoreDiacritics: n = Ue.ignoreDiacritics,
    includeMatches: r = Ue.includeMatches,
    minMatchCharLength: s = Ue.minMatchCharLength,
    ignoreLocation: i = Ue.ignoreLocation,
    findAllMatches: o = Ue.findAllMatches,
    location: l = Ue.location,
    threshold: d = Ue.threshold,
    distance: c = Ue.distance
  } = {}) {
    this.query = null, this.options = {
      isCaseSensitive: a,
      ignoreDiacritics: n,
      includeMatches: r,
      minMatchCharLength: s,
      findAllMatches: o,
      ignoreLocation: i,
      location: l,
      threshold: d,
      distance: c
    }, t = a ? t : t.toLowerCase(), t = n ? Al(t) : t, this.pattern = t, this.query = GN(this.pattern, this.options);
  }
  static condition(t, a) {
    return a.useExtendedSearch;
  }
  searchIn(t) {
    const a = this.query;
    if (!a)
      return {
        isMatch: !1,
        score: 1
      };
    const { includeMatches: n, isCaseSensitive: r, ignoreDiacritics: s } = this.options;
    t = r ? t : t.toLowerCase(), t = s ? Al(t) : t;
    let i = 0, o = [], l = 0;
    for (let d = 0, c = a.length; d < c; d += 1) {
      const f = a[d];
      o.length = 0, i = 0;
      for (let p = 0, g = f.length; p < g; p += 1) {
        const v = f[p], { isMatch: m, indices: y, score: x } = v.search(t);
        if (m) {
          if (i += 1, l += x, n) {
            const b = v.constructor.type;
            UN.has(b) ? o = [...o, ...y] : o.push(y);
          }
        } else {
          l = 0, i = 0, o.length = 0;
          break;
        }
      }
      if (i) {
        let p = {
          isMatch: !0,
          score: l / i
        };
        return n && (p.indices = o), p;
      }
    }
    return {
      isMatch: !1,
      score: 1
    };
  }
}
const $c = [];
function YN(...e) {
  $c.push(...e);
}
function Ic(e, t) {
  for (let a = 0, n = $c.length; a < n; a += 1) {
    let r = $c[a];
    if (r.condition(e, t))
      return new r(e, t);
  }
  return new I1(e, t);
}
const $l = {
  AND: "$and",
  OR: "$or"
}, Ec = {
  PATH: "$path",
  PATTERN: "$val"
}, Tc = (e) => !!(e[$l.AND] || e[$l.OR]), XN = (e) => !!e[Ec.PATH], JN = (e) => !Mn(e) && _1(e) && !Tc(e), Xh = (e) => ({
  [$l.AND]: Object.keys(e).map((t) => ({
    [t]: e[t]
  }))
});
function B1(e, t, { auto: a = !0 } = {}) {
  const n = (r) => {
    let s = Object.keys(r);
    const i = XN(r);
    if (!i && s.length > 1 && !Tc(r))
      return n(Xh(r));
    if (JN(r)) {
      const l = i ? r[Ec.PATH] : s[0], d = i ? r[Ec.PATTERN] : r[l];
      if (!on(d))
        throw new Error(xN(l));
      const c = {
        keyId: kc(l),
        pattern: d
      };
      return a && (c.searcher = Ic(d, t)), c;
    }
    let o = {
      children: [],
      operator: s[0]
    };
    return s.forEach((l) => {
      const d = r[l];
      Mn(d) && d.forEach((c) => {
        o.children.push(n(c));
      });
    }), o;
  };
  return Tc(e) || (e = Xh(e)), n(e);
}
function QN(e, { ignoreFieldNorm: t = Ue.ignoreFieldNorm }) {
  e.forEach((a) => {
    let n = 1;
    a.matches.forEach(({ key: r, norm: s, score: i }) => {
      const o = r ? r.weight : null;
      n *= Math.pow(
        i === 0 && o ? Number.EPSILON : i,
        (o || 1) * (t ? 1 : s)
      );
    }), a.score = n;
  });
}
function ZN(e, t) {
  const a = e.matches;
  t.matches = [], _a(a) && a.forEach((n) => {
    if (!_a(n.indices) || !n.indices.length)
      return;
    const { indices: r, value: s } = n;
    let i = {
      indices: r,
      value: s
    };
    n.key && (i.key = n.key.src), n.idx > -1 && (i.refIndex = n.idx), t.matches.push(i);
  });
}
function eH(e, t) {
  t.score = e.score;
}
function tH(e, t, {
  includeMatches: a = Ue.includeMatches,
  includeScore: n = Ue.includeScore
} = {}) {
  const r = [];
  return a && r.push(ZN), n && r.push(eH), e.map((s) => {
    const { idx: i } = s, o = {
      item: t[i],
      refIndex: i
    };
    return r.length && r.forEach((l) => {
      l(s, o);
    }), o;
  });
}
class Hs {
  constructor(t, a = {}, n) {
    this.options = { ...Ue, ...a }, this.options.useExtendedSearch, this._keyStore = new AN(this.options.keys), this.setCollection(t, n);
  }
  setCollection(t, a) {
    if (this._docs = t, a && !(a instanceof $p))
      throw new Error(CN);
    this._myIndex = a || $1(this.options.keys, this._docs, {
      getFn: this.options.getFn,
      fieldNormWeight: this.options.fieldNormWeight
    });
  }
  add(t) {
    _a(t) && (this._docs.push(t), this._myIndex.add(t));
  }
  remove(t = () => !1) {
    const a = [];
    for (let n = 0, r = this._docs.length; n < r; n += 1) {
      const s = this._docs[n];
      t(s, n) && (this.removeAt(n), n -= 1, r -= 1, a.push(s));
    }
    return a;
  }
  removeAt(t) {
    this._docs.splice(t, 1), this._myIndex.removeAt(t);
  }
  getIndex() {
    return this._myIndex;
  }
  search(t, { limit: a = -1 } = {}) {
    const {
      includeMatches: n,
      includeScore: r,
      shouldSort: s,
      sortFn: i,
      ignoreFieldNorm: o
    } = this.options;
    let l = on(t) ? on(this._docs[0]) ? this._searchStringList(t) : this._searchObjectList(t) : this._searchLogical(t);
    return QN(l, { ignoreFieldNorm: o }), s && l.sort(i), S1(a) && a > -1 && (l = l.slice(0, a)), tH(l, this._docs, {
      includeMatches: n,
      includeScore: r
    });
  }
  _searchStringList(t) {
    const a = Ic(t, this.options), { records: n } = this._myIndex, r = [];
    return n.forEach(({ v: s, i, n: o }) => {
      if (!_a(s))
        return;
      const { isMatch: l, score: d, indices: c } = a.searchIn(s);
      l && r.push({
        item: s,
        idx: i,
        matches: [{ score: d, value: s, norm: o, indices: c }]
      });
    }), r;
  }
  _searchLogical(t) {
    const a = B1(t, this.options), n = (o, l, d) => {
      if (!o.children) {
        const { keyId: f, searcher: p } = o, g = this._findMatches({
          key: this._keyStore.get(f),
          value: this._myIndex.getValueForItemAtKeyId(l, f),
          searcher: p
        });
        return g && g.length ? [
          {
            idx: d,
            item: l,
            matches: g
          }
        ] : [];
      }
      const c = [];
      for (let f = 0, p = o.children.length; f < p; f += 1) {
        const g = o.children[f], v = n(g, l, d);
        if (v.length)
          c.push(...v);
        else if (o.operator === $l.AND)
          return [];
      }
      return c;
    }, r = this._myIndex.records, s = {}, i = [];
    return r.forEach(({ $: o, i: l }) => {
      if (_a(o)) {
        let d = n(a, o, l);
        d.length && (s[l] || (s[l] = { idx: l, item: o, matches: [] }, i.push(s[l])), d.forEach(({ matches: c }) => {
          s[l].matches.push(...c);
        }));
      }
    }), i;
  }
  _searchObjectList(t) {
    const a = Ic(t, this.options), { keys: n, records: r } = this._myIndex, s = [];
    return r.forEach(({ $: i, i: o }) => {
      if (!_a(i))
        return;
      let l = [];
      n.forEach((d, c) => {
        l.push(
          ...this._findMatches({
            key: d,
            value: i[c],
            searcher: a
          })
        );
      }), l.length && s.push({
        idx: o,
        item: i,
        matches: l
      });
    }), s;
  }
  _findMatches({ key: t, value: a, searcher: n }) {
    if (!_a(a))
      return [];
    let r = [];
    if (Mn(a))
      a.forEach(({ v: s, i, n: o }) => {
        if (!_a(s))
          return;
        const { isMatch: l, score: d, indices: c } = n.searchIn(s);
        l && r.push({
          score: d,
          key: t,
          value: s,
          idx: i,
          norm: o,
          indices: c
        });
      });
    else {
      const { v: s, n: i } = a, { isMatch: o, score: l, indices: d } = n.searchIn(s);
      o && r.push({ score: l, key: t, value: s, norm: i, indices: d });
    }
    return r;
  }
}
Hs.version = "7.1.0";
Hs.createIndex = $1;
Hs.parseIndex = MN;
Hs.config = Ue;
Hs.parseQuery = B1;
YN(WN);
function aH(e, t, a) {
  const n = () => {
    var i, o;
    return new Hs(
      (i = Re(t)) != null ? i : [],
      (o = Re(a)) == null ? void 0 : o.fuseOptions
    );
  }, r = N(n());
  ye(
    () => {
      var i;
      return (i = Re(a)) == null ? void 0 : i.fuseOptions;
    },
    () => {
      r.value = n();
    },
    { deep: !0 }
  ), ye(
    () => Re(t),
    (i) => {
      r.value.setCollection(i);
    },
    { deep: !0 }
  );
  const s = T(() => {
    const i = Re(a);
    if (i?.matchAllWhenSearchEmpty && !Re(e))
      return Re(t).map((l, d) => ({ item: l, refIndex: d }));
    const o = i?.resultLimit;
    return r.value.search(Re(e), o ? { limit: o } : void 0);
  });
  return {
    fuse: r,
    results: s
  };
}
function nH(e, t) {
  let a = "", n = 0, r = !1;
  for (let s = e.length - 1; s >= 0; s--) {
    if (e[s] === ">")
      r = !0;
    else if (e[s] === "<") {
      r = !1, a = e[s] + a;
      continue;
    }
    if (r || n++, n <= t)
      a = e[s] + a;
    else {
      a = "..." + a;
      break;
    }
  }
  return a;
}
function Jh(e, t, a, n) {
  function r(s, i = []) {
    s = s || "";
    let o = "", l = 0;
    i.forEach((c) => {
      if (c.length === 2 && c[0] === c[1])
        return;
      const f = c[1] + 1, p = f - c[0] >= t.length;
      o += [
        s.substring(l, c[0]),
        p && "<mark>",
        s.substring(c[0], f),
        p && "</mark>"
      ].filter(Boolean).join(""), l = f;
    }), o += s.substring(l);
    const d = o.indexOf("<mark>");
    return d !== -1 && (o = nH(o, o.length - d)), o;
  }
  if (e.matches?.length) {
    for (const s of e.matches)
      if (!(a && s.key !== a) && !n?.includes(s.key))
        return r(s.value, s.indices);
  }
}
const rH = {
  slots: {
    root: "flex flex-col min-h-0 min-w-0 divide-y divide-default",
    input: "[&>input]:h-12",
    close: "",
    back: "p-0",
    content: "relative overflow-hidden flex flex-col",
    footer: "p-1",
    viewport: "relative divide-y divide-default scroll-py-1 overflow-y-auto flex-1 focus:outline-none",
    group: "p-1 isolate",
    empty: "py-6 text-center text-sm text-muted",
    label: "p-1.5 text-xs font-semibold text-highlighted",
    item: "group relative w-full flex items-center gap-1.5 p-1.5 text-sm select-none outline-none before:absolute before:z-[-1] before:inset-px before:rounded-md data-disabled:cursor-not-allowed data-disabled:opacity-75",
    itemLeadingIcon: "shrink-0 size-5",
    itemLeadingAvatar: "shrink-0",
    itemLeadingAvatarSize: "2xs",
    itemLeadingChip: "shrink-0 size-5",
    itemLeadingChipSize: "md",
    itemTrailing: "ms-auto inline-flex gap-1.5 items-center",
    itemTrailingIcon: "shrink-0 size-5",
    itemTrailingHighlightedIcon: "shrink-0 size-5 text-dimmed hidden group-data-highlighted:inline-flex",
    itemTrailingKbds: "hidden lg:inline-flex items-center shrink-0 gap-0.5",
    itemTrailingKbdsSize: "md",
    itemLabel: "truncate space-x-1 text-dimmed",
    itemLabelBase: "text-highlighted [&>mark]:text-inverted [&>mark]:bg-primary",
    itemLabelPrefix: "text-default",
    itemLabelSuffix: "text-dimmed [&>mark]:text-inverted [&>mark]:bg-primary"
  },
  variants: {
    active: {
      true: {
        item: "text-highlighted before:bg-elevated",
        itemLeadingIcon: "text-default"
      },
      false: {
        item: [
          "text-default data-highlighted:not-data-disabled:text-highlighted data-highlighted:not-data-disabled:before:bg-elevated/50",
          "transition-colors before:transition-colors"
        ],
        itemLeadingIcon: [
          "text-dimmed group-data-highlighted:not-group-data-disabled:text-default",
          "transition-colors"
        ]
      }
    },
    loading: {
      true: {
        itemLeadingIcon: "animate-spin"
      }
    }
  }
}, sH = ["innerHTML"], iH = ["innerHTML"], oH = /* @__PURE__ */ L({
  __name: "CommandPalette",
  props: /* @__PURE__ */ mt({
    as: {},
    icon: {},
    selectedIcon: {},
    trailingIcon: {},
    placeholder: {},
    autofocus: { type: Boolean, default: !0 },
    close: { type: [Boolean, Object] },
    closeIcon: {},
    back: { type: [Boolean, Object], default: !0 },
    backIcon: {},
    groups: {},
    fuse: {},
    labelKey: { default: "label" },
    class: {},
    ui: {},
    multiple: { type: Boolean },
    disabled: { type: Boolean },
    modelValue: { default: "" },
    defaultValue: {},
    highlightOnHover: { type: Boolean },
    selectionBehavior: {},
    loading: { type: Boolean },
    loadingIcon: {}
  }, {
    searchTerm: { default: "" },
    searchTermModifiers: {}
  }),
  emits: /* @__PURE__ */ mt(["update:modelValue", "highlight", "entryFocus", "leave", "update:open"], ["update:searchTerm"]),
  setup(e, { emit: t }) {
    const a = e, n = t, r = Se(), s = lt(e, "searchTerm"), { t: i } = it(), o = ue(), l = Xe(tt(a, "as", "disabled", "multiple", "modelValue", "defaultValue", "highlightOnHover", "selectionBehavior"), n), d = xt(tt(a, "loading", "loadingIcon")), c = T(() => W({ extend: W(rH), ...o.ui?.commandPalette || {} })()), f = T(() => Ct({}, a.fuse, {
      fuseOptions: {
        ignoreLocation: !0,
        threshold: 0.1,
        keys: [a.labelKey, "suffix"]
      },
      resultLimit: 12,
      matchAllWhenSearchEmpty: !0
    })), p = N([]), g = T(() => p.value[p.value.length - 1]?.placeholder || a.placeholder || i("commandPalette.placeholder")), v = T(() => p.value?.length ? [p.value[p.value.length - 1]] : a.groups), m = T(() => v.value?.filter((E) => E.id ? !E.ignoreFilter : (console.warn("[@nuxt/ui] CommandPalette group is missing an `id` property"), !1))?.flatMap((E) => E.items?.map((P) => ({ ...P, group: E.id })) || []) || []), { results: y } = aH(s, m, f);
    function x(E, P) {
      return E?.postFilter && typeof E.postFilter == "function" && (P = E.postFilter(s.value, P)), {
        ...E,
        items: P.slice(0, f.value.resultLimit).map((R) => ({
          ...R,
          labelHtml: Jh(R, s.value, a.labelKey),
          suffixHtml: Jh(R, s.value, void 0, [a.labelKey])
        }))
      };
    }
    const b = T(() => {
      const E = y.value.reduce((F, H) => {
        const { item: j, matches: K } = H;
        return j.group && (F[j.group] ||= [], F[j.group]?.push({ ...j, matches: K })), F;
      }, {}), P = Object.entries(E).map(([F, H]) => {
        const j = v.value?.find((K) => K.id === F);
        if (j)
          return x(j, H);
      }).filter((F) => !!F);
      return (v.value?.map((F, H) => ({ ...F, index: H }))?.filter((F) => F.ignoreFilter && F.items?.length)?.map((F) => ({ ...x(F, F.items || []), index: F.index })) || []).reduce((F, H) => (F.splice(H.index, 0, H), F), [...P]);
    }), C = Bl("listboxRootRef");
    function w(E) {
      E.children?.length && (p.value.push({
        id: `history-${p.value.length}`,
        label: E.label,
        slot: E.slot,
        placeholder: E.placeholder,
        items: E.children
      }), s.value = "", C.value?.highlightFirstItem());
    }
    function $() {
      p.value.length && (p.value.pop(), s.value = "", C.value?.highlightFirstItem());
    }
    function B() {
      s.value || $();
    }
    function I(E, P) {
      P.children?.length ? (E.preventDefault(), w(P)) : P.onSelect?.(E);
    }
    return (E, P) => (h(), k(u(xy), O(u(l), {
      ref_key: "listboxRootRef",
      ref: C,
      class: c.value.root({ class: [a.ui?.root, a.class] })
    }), {
      default: _(() => [
        V(u(_y), {
          modelValue: s.value,
          "onUpdate:modelValue": P[1] || (P[1] = (R) => s.value = R),
          "as-child": ""
        }, {
          default: _(() => [
            V(pl, O({
              placeholder: g.value,
              variant: "none",
              autofocus: E.autofocus
            }, u(d), {
              icon: E.icon || u(o).ui.icons.search,
              class: c.value.input({ class: a.ui?.input }),
              onKeydown: nt(B, ["backspace"])
            }), Ia({ _: 2 }, [
              p.value?.length && (E.back || r.back) ? {
                name: "leading",
                fn: _(() => [
                  S(E.$slots, "back", { ui: c.value }, () => [
                    V(Je, O({
                      icon: E.backIcon || u(o).ui.icons.arrowLeft,
                      color: "neutral",
                      variant: "link",
                      "aria-label": u(i)("commandPalette.back")
                    }, typeof E.back == "object" ? E.back : {}, {
                      class: c.value.back({ class: a.ui?.back }),
                      onClick: $
                    }), null, 16, ["icon", "aria-label", "class"])
                  ])
                ]),
                key: "0"
              } : void 0,
              E.close || r.close ? {
                name: "trailing",
                fn: _(() => [
                  S(E.$slots, "close", { ui: c.value }, () => [
                    E.close ? (h(), k(Je, O({
                      key: 0,
                      icon: E.closeIcon || u(o).ui.icons.close,
                      color: "neutral",
                      variant: "ghost",
                      "aria-label": u(i)("commandPalette.close")
                    }, typeof E.close == "object" ? E.close : {}, {
                      class: c.value.close({ class: a.ui?.close }),
                      onClick: P[0] || (P[0] = (R) => n("update:open", !1))
                    }), null, 16, ["icon", "aria-label", "class"])) : D("", !0)
                  ])
                ]),
                key: "1"
              } : void 0
            ]), 1040, ["placeholder", "autofocus", "icon", "class"])
          ]),
          _: 3
        }, 8, ["modelValue"]),
        V(u(Sy), {
          class: A(c.value.content({ class: a.ui?.content }))
        }, {
          default: _(() => [
            b.value?.length ? (h(), M("div", {
              key: 0,
              role: "presentation",
              class: A(c.value.viewport({ class: a.ui?.viewport }))
            }, [
              (h(!0), M(te, null, le(b.value, (R) => (h(), k(u(ky), {
                key: `group-${R.id}`,
                class: A(c.value.group({ class: a.ui?.group }))
              }, {
                default: _(() => [
                  u(qe)(R, a.labelKey) ? (h(), k(u(GA), {
                    key: 0,
                    class: A(c.value.label({ class: a.ui?.label }))
                  }, {
                    default: _(() => [
                      ee(X(u(qe)(R, a.labelKey)), 1)
                    ]),
                    _: 2
                  }, 1032, ["class"])) : D("", !0),
                  (h(!0), M(te, null, le(R.items, (F, H) => (h(), k(u(Ay), {
                    key: `group-${R.id}-${H}`,
                    value: u(Mt)(F, ["matches", "group", "onSelect", "labelHtml", "suffixHtml", "children"]),
                    disabled: F.disabled,
                    "as-child": "",
                    onSelect: (j) => I(j, F)
                  }, {
                    default: _(() => [
                      V(Wt, O({ ref_for: !0 }, u(Ga)(F), { custom: "" }), {
                        default: _(({ active: j, ...K }) => [
                          V(ha, O({ ref_for: !0 }, K, {
                            class: c.value.item({ class: [a.ui?.item, F.ui?.item, F.class], active: j || F.active })
                          }), {
                            default: _(() => [
                              S(E.$slots, F.slot || R.slot || "item", {
                                item: F,
                                index: H
                              }, () => [
                                S(E.$slots, F.slot ? `${F.slot}-leading` : R.slot ? `${R.slot}-leading` : "item-leading", {
                                  item: F,
                                  index: H
                                }, () => [
                                  F.loading ? (h(), k(he, {
                                    key: 0,
                                    name: E.loadingIcon || u(o).ui.icons.loading,
                                    class: A(c.value.itemLeadingIcon({ class: [a.ui?.itemLeadingIcon, F.ui?.itemLeadingIcon], loading: !0 }))
                                  }, null, 8, ["name", "class"])) : F.icon ? (h(), k(he, {
                                    key: 1,
                                    name: F.icon,
                                    class: A(c.value.itemLeadingIcon({ class: [a.ui?.itemLeadingIcon, F.ui?.itemLeadingIcon], active: j || F.active }))
                                  }, null, 8, ["name", "class"])) : F.avatar ? (h(), k(ft, O({
                                    key: 2,
                                    size: F.ui?.itemLeadingAvatarSize || a.ui?.itemLeadingAvatarSize || c.value.itemLeadingAvatarSize()
                                  }, { ref_for: !0 }, F.avatar, {
                                    class: c.value.itemLeadingAvatar({ class: [a.ui?.itemLeadingAvatar, F.ui?.itemLeadingAvatar], active: j || F.active })
                                  }), null, 16, ["size", "class"])) : F.chip ? (h(), k(Rs, O({
                                    key: 3,
                                    size: F.ui?.itemLeadingChipSize || a.ui?.itemLeadingChipSize || c.value.itemLeadingChipSize(),
                                    inset: "",
                                    standalone: ""
                                  }, { ref_for: !0 }, F.chip, {
                                    class: c.value.itemLeadingChip({ class: [a.ui?.itemLeadingChip, F.ui?.itemLeadingChip], active: j || F.active })
                                  }), null, 16, ["size", "class"])) : D("", !0)
                                ]),
                                F.labelHtml || u(qe)(F, a.labelKey) || r[F.slot ? `${F.slot}-label` : R.slot ? `${R.slot}-label` : "item-label"] ? (h(), M("span", {
                                  key: 0,
                                  class: A(c.value.itemLabel({ class: [a.ui?.itemLabel, F.ui?.itemLabel], active: j || F.active }))
                                }, [
                                  S(E.$slots, F.slot ? `${F.slot}-label` : R.slot ? `${R.slot}-label` : "item-label", {
                                    item: F,
                                    index: H
                                  }, () => [
                                    F.prefix ? (h(), M("span", {
                                      key: 0,
                                      class: A(c.value.itemLabelPrefix({ class: [a.ui?.itemLabelPrefix, F.ui?.itemLabelPrefix] }))
                                    }, X(F.prefix), 3)) : D("", !0),
                                    J("span", {
                                      class: A(c.value.itemLabelBase({ class: [a.ui?.itemLabelBase, F.ui?.itemLabelBase], active: j || F.active })),
                                      innerHTML: F.labelHtml || u(qe)(F, a.labelKey)
                                    }, null, 10, sH),
                                    J("span", {
                                      class: A(c.value.itemLabelSuffix({ class: [a.ui?.itemLabelSuffix, F.ui?.itemLabelSuffix], active: j || F.active })),
                                      innerHTML: F.suffixHtml || F.suffix
                                    }, null, 10, iH)
                                  ])
                                ], 2)) : D("", !0),
                                J("span", {
                                  class: A(c.value.itemTrailing({ class: [a.ui?.itemTrailing, F.ui?.itemTrailing] }))
                                }, [
                                  S(E.$slots, F.slot ? `${F.slot}-trailing` : R.slot ? `${R.slot}-trailing` : "item-trailing", {
                                    item: F,
                                    index: H
                                  }, () => [
                                    F.children && F.children.length > 0 ? (h(), k(he, {
                                      key: 0,
                                      name: E.trailingIcon || u(o).ui.icons.chevronRight,
                                      class: A(c.value.itemTrailingIcon({ class: [a.ui?.itemTrailingIcon, F.ui?.itemTrailingIcon] }))
                                    }, null, 8, ["name", "class"])) : F.kbds?.length ? (h(), M("span", {
                                      key: 1,
                                      class: A(c.value.itemTrailingKbds({ class: [a.ui?.itemTrailingKbds, F.ui?.itemTrailingKbds] }))
                                    }, [
                                      (h(!0), M(te, null, le(F.kbds, (z, G) => (h(), k(eo, O({
                                        key: G,
                                        size: F.ui?.itemTrailingKbdsSize || a.ui?.itemTrailingKbdsSize || c.value.itemTrailingKbdsSize()
                                      }, { ref_for: !0 }, typeof z == "string" ? { value: z } : z), null, 16, ["size"]))), 128))
                                    ], 2)) : R.highlightedIcon ? (h(), k(he, {
                                      key: 2,
                                      name: R.highlightedIcon,
                                      class: A(c.value.itemTrailingHighlightedIcon({ class: [a.ui?.itemTrailingHighlightedIcon, F.ui?.itemTrailingHighlightedIcon] }))
                                    }, null, 8, ["name", "class"])) : D("", !0)
                                  ]),
                                  F.children?.length ? D("", !0) : (h(), k(u($y), {
                                    key: 0,
                                    "as-child": ""
                                  }, {
                                    default: _(() => [
                                      V(he, {
                                        name: E.selectedIcon || u(o).ui.icons.check,
                                        class: A(c.value.itemTrailingIcon({ class: [a.ui?.itemTrailingIcon, F.ui?.itemTrailingIcon] }))
                                      }, null, 8, ["name", "class"])
                                    ]),
                                    _: 2
                                  }, 1024))
                                ], 2)
                              ])
                            ]),
                            _: 2
                          }, 1040, ["class"])
                        ]),
                        _: 2
                      }, 1040)
                    ]),
                    _: 2
                  }, 1032, ["value", "disabled", "onSelect"]))), 128))
                ]),
                _: 2
              }, 1032, ["class"]))), 128))
            ], 2)) : (h(), M("div", {
              key: 1,
              class: A(c.value.empty({ class: a.ui?.empty }))
            }, [
              S(E.$slots, "empty", { searchTerm: s.value }, () => [
                ee(X(s.value ? u(i)("commandPalette.noMatch", { searchTerm: s.value }) : u(i)("commandPalette.noData")), 1)
              ])
            ], 2))
          ]),
          _: 3
        }, 8, ["class"]),
        r.footer ? (h(), M("div", {
          key: 0,
          class: A(c.value.footer({ class: a.ui?.footer }))
        }, [
          S(E.$slots, "footer", { ui: c.value })
        ], 2)) : D("", !0)
      ]),
      _: 3
    }, 16, ["class"]));
  }
}), P1 = /* @__PURE__ */ L({
  __name: "ContextMenuContent",
  props: {
    items: {},
    portal: { type: [Boolean, String] },
    sub: { type: Boolean },
    labelKey: {},
    checkedIcon: {},
    loadingIcon: {},
    externalIcon: { type: [Boolean, String, Object] },
    class: {},
    ui: {},
    uiOverride: {},
    loop: { type: Boolean },
    sideFlip: { type: Boolean },
    alignOffset: {},
    alignFlip: { type: Boolean },
    avoidCollisions: { type: Boolean },
    collisionBoundary: {},
    collisionPadding: {},
    sticky: {},
    hideWhenDetached: { type: Boolean },
    positionStrategy: {},
    disableUpdateOnLayoutShift: { type: Boolean },
    prioritizePosition: { type: Boolean },
    reference: {}
  },
  emits: ["escapeKeyDown", "pointerDownOutside", "focusOutside", "interactOutside", "closeAutoFocus"],
  setup(e, { emit: t }) {
    const a = e, n = t, r = Se(), { dir: s } = it(), i = ue(), o = tn(Ge(() => a.portal)), l = Xe(Ui(a, "sub", "items", "portal", "labelKey", "checkedIcon", "loadingIcon", "externalIcon", "class", "ui", "uiOverride"), n), d = Mt(r, ["default"]), [c, f] = /* @__PURE__ */ Lt(), p = T(() => s.value === "rtl" ? i.ui.icons.chevronLeft : i.ui.icons.chevronRight), g = T(
      () => a.items?.length ? Ps(a.items) ? a.items : [a.items] : []
    );
    return (v, m) => (h(), M(te, null, [
      V(u(c), null, {
        default: _(({ item: y, active: x, index: b }) => [
          S(v.$slots, y.slot || "item", {
            item: y,
            index: b
          }, () => [
            S(v.$slots, y.slot ? `${y.slot}-leading` : "item-leading", {
              item: y,
              active: x,
              index: b
            }, () => [
              y.loading ? (h(), k(he, {
                key: 0,
                name: v.loadingIcon || u(i).ui.icons.loading,
                class: A(v.ui.itemLeadingIcon({ class: [v.uiOverride?.itemLeadingIcon, y.ui?.itemLeadingIcon], color: y?.color, loading: !0 }))
              }, null, 8, ["name", "class"])) : y.icon ? (h(), k(he, {
                key: 1,
                name: y.icon,
                class: A(v.ui.itemLeadingIcon({ class: [v.uiOverride?.itemLeadingIcon, y.ui?.itemLeadingIcon], color: y?.color, active: x }))
              }, null, 8, ["name", "class"])) : y.avatar ? (h(), k(ft, O({
                key: 2,
                size: y.ui?.itemLeadingAvatarSize || v.uiOverride?.itemLeadingAvatarSize || v.ui.itemLeadingAvatarSize()
              }, y.avatar, {
                class: v.ui.itemLeadingAvatar({ class: [v.uiOverride?.itemLeadingAvatar, y.ui?.itemLeadingAvatar], active: x })
              }), null, 16, ["size", "class"])) : D("", !0)
            ]),
            u(qe)(y, a.labelKey) || r[y.slot ? `${y.slot}-label` : "item-label"] ? (h(), M("span", {
              key: 0,
              class: A(v.ui.itemLabel({ class: [v.uiOverride?.itemLabel, y.ui?.itemLabel], active: x }))
            }, [
              S(v.$slots, y.slot ? `${y.slot}-label` : "item-label", {
                item: y,
                active: x,
                index: b
              }, () => [
                ee(X(u(qe)(y, a.labelKey)), 1)
              ]),
              y.target === "_blank" && v.externalIcon !== !1 ? (h(), k(he, {
                key: 0,
                name: typeof v.externalIcon == "string" ? v.externalIcon : u(i).ui.icons.external,
                class: A(v.ui.itemLabelExternalIcon({ class: [v.uiOverride?.itemLabelExternalIcon, y.ui?.itemLabelExternalIcon], color: y?.color, active: x }))
              }, null, 8, ["name", "class"])) : D("", !0)
            ], 2)) : D("", !0),
            J("span", {
              class: A(v.ui.itemTrailing({ class: [v.uiOverride?.itemTrailing, y.ui?.itemTrailing] }))
            }, [
              S(v.$slots, y.slot ? `${y.slot}-trailing` : "item-trailing", {
                item: y,
                active: x,
                index: b
              }, () => [
                y.children?.length ? (h(), k(he, {
                  key: 0,
                  name: p.value,
                  class: A(v.ui.itemTrailingIcon({ class: [v.uiOverride?.itemTrailingIcon, y.ui?.itemTrailingIcon], color: y?.color, active: x }))
                }, null, 8, ["name", "class"])) : y.kbds?.length ? (h(), M("span", {
                  key: 1,
                  class: A(v.ui.itemTrailingKbds({ class: [v.uiOverride?.itemTrailingKbds, y.ui?.itemTrailingKbds] }))
                }, [
                  (h(!0), M(te, null, le(y.kbds, (C, w) => (h(), k(eo, O({
                    key: w,
                    size: y.ui?.itemTrailingKbdsSize || v.uiOverride?.itemTrailingKbdsSize || v.ui.itemTrailingKbdsSize()
                  }, { ref_for: !0 }, typeof C == "string" ? { value: C } : C), null, 16, ["size"]))), 128))
                ], 2)) : D("", !0)
              ]),
              V(u(Va).ItemIndicator, { "as-child": "" }, {
                default: _(() => [
                  V(he, {
                    name: v.checkedIcon || u(i).ui.icons.check,
                    class: A(v.ui.itemTrailingIcon({ class: [v.uiOverride?.itemTrailingIcon, y.ui?.itemTrailingIcon], color: y?.color }))
                  }, null, 8, ["name", "class"])
                ]),
                _: 2
              }, 1024)
            ], 2)
          ])
        ]),
        _: 3
      }),
      V(u(Va).Portal, pe(me(u(o))), {
        default: _(() => [
          (h(), k(ut(v.sub ? u(Va).SubContent : u(Va).Content), O({
            class: a.class
          }, u(l)), {
            default: _(() => [
              S(v.$slots, "content-top"),
              J("div", {
                role: "presentation",
                class: A(v.ui.viewport({ class: v.uiOverride?.viewport }))
              }, [
                (h(!0), M(te, null, le(g.value, (y, x) => (h(), k(u(Va).Group, {
                  key: `group-${x}`,
                  class: A(v.ui.group({ class: v.uiOverride?.group }))
                }, {
                  default: _(() => [
                    (h(!0), M(te, null, le(y, (b, C) => (h(), M(te, {
                      key: `group-${x}-${C}`
                    }, [
                      b.type === "label" ? (h(), k(u(Va).Label, {
                        key: 0,
                        class: A(v.ui.label({ class: [v.uiOverride?.label, b.ui?.label, b.class] }))
                      }, {
                        default: _(() => [
                          V(u(f), {
                            item: b,
                            index: C
                          }, null, 8, ["item", "index"])
                        ]),
                        _: 2
                      }, 1032, ["class"])) : b.type === "separator" ? (h(), k(u(Va).Separator, {
                        key: 1,
                        class: A(v.ui.separator({ class: [v.uiOverride?.separator, b.ui?.separator, b.class] }))
                      }, null, 8, ["class"])) : b?.children?.length ? (h(), k(u(Va).Sub, {
                        key: 2,
                        open: b.open,
                        "default-open": b.defaultOpen
                      }, {
                        default: _(() => [
                          V(u(Va).SubTrigger, {
                            as: "button",
                            type: "button",
                            disabled: b.disabled,
                            "text-value": u(qe)(b, a.labelKey),
                            class: A(v.ui.item({ class: [v.uiOverride?.item, b.ui?.item, b.class], color: b?.color }))
                          }, {
                            default: _(() => [
                              V(u(f), {
                                item: b,
                                index: C
                              }, null, 8, ["item", "index"])
                            ]),
                            _: 2
                          }, 1032, ["disabled", "text-value", "class"]),
                          V(P1, O({
                            sub: "",
                            class: a.class,
                            ui: v.ui,
                            "ui-override": v.uiOverride,
                            portal: v.portal,
                            items: b.children,
                            "align-offset": -4,
                            "label-key": v.labelKey,
                            "checked-icon": v.checkedIcon,
                            "loading-icon": v.loadingIcon,
                            "external-icon": v.externalIcon
                          }, { ref_for: !0 }, b.content), Ia({ _: 2 }, [
                            le(u(d), (w, $) => ({
                              name: $,
                              fn: _((B) => [
                                S(v.$slots, $, O({ ref_for: !0 }, B))
                              ])
                            }))
                          ]), 1040, ["class", "ui", "ui-override", "portal", "items", "label-key", "checked-icon", "loading-icon", "external-icon"])
                        ]),
                        _: 2
                      }, 1032, ["open", "default-open"])) : b.type === "checkbox" ? (h(), k(u(Va).CheckboxItem, {
                        key: 3,
                        "model-value": b.checked,
                        disabled: b.disabled,
                        "text-value": u(qe)(b, a.labelKey),
                        class: A(v.ui.item({ class: [v.uiOverride?.item, b.ui?.item, b.class], color: b?.color })),
                        "onUpdate:modelValue": b.onUpdateChecked,
                        onSelect: b.onSelect
                      }, {
                        default: _(() => [
                          V(u(f), {
                            item: b,
                            index: C
                          }, null, 8, ["item", "index"])
                        ]),
                        _: 2
                      }, 1032, ["model-value", "disabled", "text-value", "class", "onUpdate:modelValue", "onSelect"])) : (h(), k(u(Va).Item, {
                        key: 4,
                        "as-child": "",
                        disabled: b.disabled,
                        "text-value": u(qe)(b, a.labelKey),
                        onSelect: b.onSelect
                      }, {
                        default: _(() => [
                          V(Wt, O({ ref_for: !0 }, u(Ga)(b), { custom: "" }), {
                            default: _(({ active: w, ...$ }) => [
                              V(ha, O({ ref_for: !0 }, $, {
                                class: v.ui.item({ class: [v.uiOverride?.item, b.ui?.item, b.class], active: w, color: b?.color })
                              }), {
                                default: _(() => [
                                  V(u(f), {
                                    item: b,
                                    active: w,
                                    index: C
                                  }, null, 8, ["item", "active", "index"])
                                ]),
                                _: 2
                              }, 1040, ["class"])
                            ]),
                            _: 2
                          }, 1040)
                        ]),
                        _: 2
                      }, 1032, ["disabled", "text-value", "onSelect"]))
                    ], 64))), 128))
                  ]),
                  _: 2
                }, 1032, ["class"]))), 128))
              ], 2),
              S(v.$slots, "default"),
              S(v.$slots, "content-bottom")
            ]),
            _: 3
          }, 16, ["class"]))
        ]),
        _: 3
      }, 16)
    ], 64));
  }
}), lH = {
  slots: {
    content: "min-w-32 bg-default shadow-lg rounded-md ring ring-default overflow-hidden data-[state=open]:animate-[scale-in_100ms_ease-out] data-[state=closed]:animate-[scale-out_100ms_ease-in] origin-(--reka-context-menu-content-transform-origin) flex flex-col",
    viewport: "relative divide-y divide-default scroll-py-1 overflow-y-auto flex-1",
    group: "p-1 isolate",
    label: "w-full flex items-center font-semibold text-highlighted",
    separator: "-mx-1 my-1 h-px bg-border",
    item: "group relative w-full flex items-center select-none outline-none before:absolute before:z-[-1] before:inset-px before:rounded-md data-disabled:cursor-not-allowed data-disabled:opacity-75",
    itemLeadingIcon: "shrink-0",
    itemLeadingAvatar: "shrink-0",
    itemLeadingAvatarSize: "",
    itemTrailing: "ms-auto inline-flex gap-1.5 items-center",
    itemTrailingIcon: "shrink-0",
    itemTrailingKbds: "hidden lg:inline-flex items-center shrink-0",
    itemTrailingKbdsSize: "",
    itemLabel: "truncate",
    itemLabelExternalIcon: "inline-block size-3 align-top text-dimmed"
  },
  variants: {
    color: {
      primary: "",
      secondary: "",
      success: "",
      info: "",
      warning: "",
      error: "",
      neutral: ""
    },
    active: {
      true: {
        item: "text-highlighted before:bg-elevated",
        itemLeadingIcon: "text-default"
      },
      false: {
        item: [
          "text-default data-highlighted:text-highlighted data-[state=open]:text-highlighted data-highlighted:before:bg-elevated/50 data-[state=open]:before:bg-elevated/50",
          "transition-colors before:transition-colors"
        ],
        itemLeadingIcon: [
          "text-dimmed group-data-highlighted:text-default group-data-[state=open]:text-default",
          "transition-colors"
        ]
      }
    },
    loading: {
      true: {
        itemLeadingIcon: "animate-spin"
      }
    },
    size: {
      xs: {
        label: "p-1 text-xs gap-1",
        item: "p-1 text-xs gap-1",
        itemLeadingIcon: "size-4",
        itemLeadingAvatarSize: "3xs",
        itemTrailingIcon: "size-4",
        itemTrailingKbds: "gap-0.5",
        itemTrailingKbdsSize: "sm"
      },
      sm: {
        label: "p-1.5 text-xs gap-1.5",
        item: "p-1.5 text-xs gap-1.5",
        itemLeadingIcon: "size-4",
        itemLeadingAvatarSize: "3xs",
        itemTrailingIcon: "size-4",
        itemTrailingKbds: "gap-0.5",
        itemTrailingKbdsSize: "sm"
      },
      md: {
        label: "p-1.5 text-sm gap-1.5",
        item: "p-1.5 text-sm gap-1.5",
        itemLeadingIcon: "size-5",
        itemLeadingAvatarSize: "2xs",
        itemTrailingIcon: "size-5",
        itemTrailingKbds: "gap-0.5",
        itemTrailingKbdsSize: "md"
      },
      lg: {
        label: "p-2 text-sm gap-2",
        item: "p-2 text-sm gap-2",
        itemLeadingIcon: "size-5",
        itemLeadingAvatarSize: "2xs",
        itemTrailingIcon: "size-5",
        itemTrailingKbds: "gap-1",
        itemTrailingKbdsSize: "md"
      },
      xl: {
        label: "p-2 text-base gap-2",
        item: "p-2 text-base gap-2",
        itemLeadingIcon: "size-6",
        itemLeadingAvatarSize: "xs",
        itemTrailingIcon: "size-6",
        itemTrailingKbds: "gap-1",
        itemTrailingKbdsSize: "lg"
      }
    }
  },
  compoundVariants: [
    {
      color: "primary",
      active: !1,
      class: {
        item: "text-primary data-highlighted:text-primary data-highlighted:before:bg-primary/10 data-[state=open]:before:bg-primary/10",
        itemLeadingIcon: "text-primary/75 group-data-highlighted:text-primary group-data-[state=open]:text-primary"
      }
    },
    {
      color: "secondary",
      active: !1,
      class: {
        item: "text-secondary data-highlighted:text-secondary data-highlighted:before:bg-secondary/10 data-[state=open]:before:bg-secondary/10",
        itemLeadingIcon: "text-secondary/75 group-data-highlighted:text-secondary group-data-[state=open]:text-secondary"
      }
    },
    {
      color: "success",
      active: !1,
      class: {
        item: "text-success data-highlighted:text-success data-highlighted:before:bg-success/10 data-[state=open]:before:bg-success/10",
        itemLeadingIcon: "text-success/75 group-data-highlighted:text-success group-data-[state=open]:text-success"
      }
    },
    {
      color: "info",
      active: !1,
      class: {
        item: "text-info data-highlighted:text-info data-highlighted:before:bg-info/10 data-[state=open]:before:bg-info/10",
        itemLeadingIcon: "text-info/75 group-data-highlighted:text-info group-data-[state=open]:text-info"
      }
    },
    {
      color: "warning",
      active: !1,
      class: {
        item: "text-warning data-highlighted:text-warning data-highlighted:before:bg-warning/10 data-[state=open]:before:bg-warning/10",
        itemLeadingIcon: "text-warning/75 group-data-highlighted:text-warning group-data-[state=open]:text-warning"
      }
    },
    {
      color: "error",
      active: !1,
      class: {
        item: "text-error data-highlighted:text-error data-highlighted:before:bg-error/10 data-[state=open]:before:bg-error/10",
        itemLeadingIcon: "text-error/75 group-data-highlighted:text-error group-data-[state=open]:text-error"
      }
    },
    {
      color: "primary",
      active: !0,
      class: {
        item: "text-primary before:bg-primary/10",
        itemLeadingIcon: "text-primary"
      }
    },
    {
      color: "secondary",
      active: !0,
      class: {
        item: "text-secondary before:bg-secondary/10",
        itemLeadingIcon: "text-secondary"
      }
    },
    {
      color: "success",
      active: !0,
      class: {
        item: "text-success before:bg-success/10",
        itemLeadingIcon: "text-success"
      }
    },
    {
      color: "info",
      active: !0,
      class: {
        item: "text-info before:bg-info/10",
        itemLeadingIcon: "text-info"
      }
    },
    {
      color: "warning",
      active: !0,
      class: {
        item: "text-warning before:bg-warning/10",
        itemLeadingIcon: "text-warning"
      }
    },
    {
      color: "error",
      active: !0,
      class: {
        item: "text-error before:bg-error/10",
        itemLeadingIcon: "text-error"
      }
    }
  ],
  defaultVariants: {
    size: "md"
  }
}, D4 = /* @__PURE__ */ L({
  __name: "ContextMenu",
  props: {
    size: {},
    items: {},
    checkedIcon: {},
    loadingIcon: {},
    externalIcon: { type: [Boolean, String, Object], default: !0 },
    content: {},
    portal: { type: [Boolean, String], default: !0 },
    labelKey: { default: "label" },
    disabled: { type: Boolean },
    class: {},
    ui: {},
    pressOpenDelay: {},
    modal: { type: Boolean, default: !0 }
  },
  emits: ["update:open"],
  setup(e, { emit: t }) {
    const a = e, n = t, r = Se(), s = ue(), i = Xe(tt(a, "modal"), n), o = Ge(() => a.content), l = Mt(r, ["default"]), d = T(() => W({ extend: W(lH), ...s.ui?.contextMenu || {} })({
      size: a.size
    }));
    return (c, f) => (h(), k(u(ab), pe(me(u(i))), {
      default: _(() => [
        r.default ? (h(), k(u(nb), {
          key: 0,
          "as-child": "",
          disabled: c.disabled,
          class: A(a.class)
        }, {
          default: _(() => [
            S(c.$slots, "default")
          ]),
          _: 3
        }, 8, ["disabled", "class"])) : D("", !0),
        V(P1, O({
          class: d.value.content({ class: [!r.default && a.class, a.ui?.content] }),
          ui: d.value,
          "ui-override": a.ui
        }, o.value, {
          items: c.items,
          portal: c.portal,
          "label-key": c.labelKey,
          "checked-icon": c.checkedIcon,
          "loading-icon": c.loadingIcon,
          "external-icon": c.externalIcon
        }), Ia({ _: 2 }, [
          le(u(l), (p, g) => ({
            name: g,
            fn: _((v) => [
              S(c.$slots, g, pe(me(v)))
            ])
          }))
        ]), 1040, ["class", "ui", "ui-override", "items", "portal", "label-key", "checked-icon", "loading-icon", "external-icon"])
      ]),
      _: 3
    }, 16));
  }
}), [js, uH] = Me("DashboardGroup"), dH = {
  base: "fixed inset-0 flex overflow-hidden"
}, M4 = /* @__PURE__ */ L({
  __name: "DashboardGroup",
  props: {
    as: {},
    class: {},
    storage: { default: "cookie" },
    storageKey: { default: "dashboard" },
    persistent: { type: Boolean, default: !0 },
    unit: { default: "%" }
  },
  setup(e) {
    const t = e, a = t0(), n = ue(), r = T(() => W({ extend: W(dH), ...n.ui?.dashboardGroup || {} })), s = N(!1), i = N(!1);
    return uH({
      storage: t.storage,
      storageKey: t.storageKey,
      persistent: t.persistent,
      unit: t.unit,
      sidebarOpen: s,
      toggleSidebar: () => {
        a.hooks.callHook("dashboard:sidebar:toggle");
      },
      sidebarCollapsed: i,
      collapseSidebar: (o) => {
        a.hooks.callHook("dashboard:sidebar:collapse", o);
      },
      toggleSearch: () => {
        a.hooks.callHook("dashboard:search:toggle");
      }
    }), (o, l) => (h(), k(u(U), {
      as: o.as,
      class: A(r.value({ class: t.class }))
    }, {
      default: _(() => [
        S(o.$slots, "default")
      ]),
      _: 3
    }, 8, ["as", "class"]));
  }
}), cH = {
  base: "lg:hidden",
  variants: {
    side: {
      left: "",
      right: ""
    }
  }
}, D1 = /* @__PURE__ */ L({
  __name: "DashboardSidebarToggle",
  props: {
    side: { default: "left" },
    color: { default: "neutral" },
    variant: { default: "ghost" },
    class: {}
  },
  setup(e) {
    const t = e, a = xt(tt(t, "color", "variant", "size")), { t: n } = it(), r = ue(), { sidebarOpen: s, toggleSidebar: i } = js({ sidebarOpen: N(!1), toggleSidebar: () => {
    } }), o = T(() => W({ extend: W(cH), ...r.ui?.dashboardSidebarToggle || {} }));
    return (l, d) => (h(), k(Je, O(u(a), {
      "aria-label": u(s) ? u(n)("dashboardSidebarToggle.close") : u(n)("dashboardSidebarToggle.open"),
      icon: u(s) ? u(r).ui.icons.close : u(r).ui.icons.menu,
      class: o.value({ class: t.class, side: t.side }),
      onClick: u(i)
    }), null, 16, ["aria-label", "icon", "class", "onClick"]));
  }
}), fH = {
  slots: {
    root: "h-(--ui-header-height) shrink-0 flex items-center justify-between border-b border-default px-4 sm:px-6 gap-1.5",
    left: "flex items-center gap-1.5 min-w-0",
    icon: "shrink-0 size-5 self-center me-1.5",
    title: "flex items-center gap-1.5 font-semibold text-highlighted truncate",
    center: "hidden lg:flex",
    right: "flex items-center shrink-0 gap-1.5",
    toggle: ""
  },
  variants: {
    toggleSide: {
      left: {
        toggle: ""
      },
      right: {
        toggle: ""
      }
    }
  }
}, R4 = /* @__PURE__ */ L({
  inheritAttrs: !1,
  __name: "DashboardNavbar",
  props: {
    as: {},
    icon: {},
    title: {},
    toggle: { type: [Boolean, Object], default: !0 },
    toggleSide: { default: "left" },
    class: {},
    ui: {}
  },
  setup(e) {
    const t = e, a = Se(), n = ue(), r = js({}), [s, i] = /* @__PURE__ */ Lt(), o = T(() => W({ extend: W(fH), ...n.ui?.dashboardNavbar || {} })());
    return (l, d) => (h(), M(te, null, [
      V(u(s), null, {
        default: _(() => [
          S(l.$slots, "toggle", pe(me(u(r))), () => [
            l.toggle ? (h(), k(D1, O({ key: 0 }, typeof l.toggle == "object" ? l.toggle : {}, {
              side: l.toggleSide,
              class: o.value.toggle({ class: t.ui?.toggle, toggleSide: l.toggleSide })
            }), null, 16, ["side", "class"])) : D("", !0)
          ])
        ]),
        _: 3
      }),
      V(u(U), O({ as: l.as }, l.$attrs, {
        class: o.value.root({ class: [t.ui?.root, t.class] })
      }), {
        default: _(() => [
          J("div", {
            class: A(o.value.left({ class: t.ui?.left }))
          }, [
            l.toggleSide === "left" ? (h(), k(u(i), { key: 0 })) : D("", !0),
            S(l.$slots, "left", pe(me(u(r))), () => [
              S(l.$slots, "leading", pe(me(u(r))), () => [
                l.icon ? (h(), k(he, {
                  key: 0,
                  name: l.icon,
                  class: A(o.value.icon({ class: t.ui?.icon }))
                }, null, 8, ["name", "class"])) : D("", !0)
              ]),
              J("h1", {
                class: A(o.value.title({ class: t.ui?.title }))
              }, [
                S(l.$slots, "title", {}, () => [
                  ee(X(l.title), 1)
                ])
              ], 2),
              S(l.$slots, "trailing", pe(me(u(r))))
            ])
          ], 2),
          a.default ? (h(), M("div", {
            key: 0,
            class: A(o.value.center({ class: t.ui?.center }))
          }, [
            S(l.$slots, "default", pe(me(u(r))))
          ], 2)) : D("", !0),
          J("div", {
            class: A(o.value.right({ class: t.ui?.right }))
          }, [
            S(l.$slots, "right", pe(me(u(r)))),
            l.toggleSide === "right" ? (h(), k(u(i), { key: 0 })) : D("", !0)
          ], 2)
        ]),
        _: 3
      }, 16, ["as", "class"])
    ], 64));
  }
}), M1 = (e, t = {}, { collapsed: a = N(!1) } = {}) => {
  const n = N(null), r = T(() => ({
    side: "left",
    minSize: 0,
    maxSize: 100,
    defaultSize: 0,
    storage: "cookie",
    persistent: !0,
    collapsible: !1,
    collapsedSize: 0,
    resizable: !0,
    unit: "%",
    ...ht(t) ? t.value : t
  })), { dir: s } = it(), i = {
    size: r.value.defaultSize,
    collapsed: u(a) ?? !1
  }, o = r.value.persistent && (r.value.resizable || r.value.collapsible) ? r.value.storage === "cookie" ? WM(e, {}) : Yb(e, i) : N(i), l = T({
    get: () => o.value.collapsed,
    set: (C) => {
      r.value.collapsible && (ht(a) && (a.value = C), o.value.collapsed = C);
    }
  }), d = N(r.value.defaultSize), c = T({
    get: () => o.value.size,
    set: (C) => {
      o.value.size = C;
    }
  }), f = T(() => l.value ? r.value.collapsedSize : c.value), p = N(!1), g = (C, w, $) => {
    if (!n.value || !r.value.resizable)
      return;
    const B = n.value.parentElement?.offsetWidth || 1, I = s.value === "rtl";
    let E;
    I ? E = r.value.side === "left" ? w - C.clientX : C.clientX - w : E = r.value.side === "left" ? C.clientX - w : w - C.clientX;
    const P = $ + E;
    let R;
    if (r.value.unit === "rem") {
      const F = Number.parseFloat(getComputedStyle(document.documentElement).fontSize);
      R = P / F;
    } else r.value.unit === "px" ? R = P : R = P / B * 100;
    if (r.value.collapsible && R < r.value.collapsedSize + 4) {
      b(!0);
      return;
    } else l.value && b(!1);
    c.value = Math.min(r.value.maxSize, Math.max(r.value.minSize, R));
  }, v = (C) => {
    if (!n.value || !r.value.resizable)
      return;
    C.preventDefault(), C.stopPropagation();
    const w = n.value.getBoundingClientRect().width;
    if (!w)
      return;
    const $ = C.clientX, B = w;
    p.value = !0;
    const I = (P) => {
      g(P, $, B);
    }, E = () => {
      p.value = !1, document.removeEventListener("mousemove", I), document.removeEventListener("mouseup", E);
    };
    document.addEventListener("mousemove", I), document.addEventListener("mouseup", E);
  }, m = (C, w, $) => {
    if (!n.value || !r.value.resizable || !C.touches[0])
      return;
    const B = n.value.parentElement?.offsetWidth || 1, I = s.value === "rtl";
    let E;
    I ? E = r.value.side === "left" ? w - C.touches[0].clientX : C.touches[0].clientX - w : E = r.value.side === "left" ? C.touches[0].clientX - w : w - C.touches[0].clientX;
    const P = $ + E;
    let R;
    if (r.value.unit === "rem") {
      const F = Number.parseFloat(getComputedStyle(document.documentElement).fontSize);
      R = P / F;
    } else r.value.unit === "px" ? R = P : R = P / B * 100;
    if (r.value.collapsible && R < r.value.collapsedSize + 4) {
      b(!0);
      return;
    } else l.value && b(!1);
    c.value = Math.min(r.value.maxSize, Math.max(r.value.minSize, R));
  }, y = (C) => {
    if (!n.value || !r.value.resizable || !C.touches[0])
      return;
    C.preventDefault(), C.stopPropagation();
    const w = n.value.getBoundingClientRect().width;
    if (!w)
      return;
    const $ = C.touches[0].clientX, B = w;
    p.value = !0;
    const I = (P) => {
      m(P, $, B);
    }, E = () => {
      p.value = !1, document.removeEventListener("touchmove", I), document.removeEventListener("touchend", E), document.removeEventListener("touchcancel", E);
    };
    document.addEventListener("touchmove", I, { passive: !1 }), document.addEventListener("touchend", E), document.addEventListener("touchcancel", E);
  }, x = (C) => {
    !n.value || !r.value.resizable || (C.preventDefault(), C.stopPropagation(), l.value && b(!1), c.value = r.value.defaultSize);
  }, b = (C) => {
    if (!r.value.collapsible)
      return;
    const w = C ?? !l.value;
    w && !l.value ? d.value = c.value : !w && l.value && (c.value = d.value), l.value = w;
  };
  return ht(a) && o.value.collapsed && (a.value = o.value.collapsed), ht(a) && ye(a, (C) => {
    r.value.collapsible && o.value.collapsed !== C && (o.value.collapsed = C);
  }), {
    el: n,
    size: f,
    isDragging: p,
    isCollapsed: l,
    onMouseDown: v,
    onTouchStart: y,
    onDoubleClick: x,
    collapse: b
  };
}, pH = {
  base: "hidden lg:block touch-none select-none cursor-ew-resize relative before:absolute before:inset-y-0 before:-left-1.5 before:-right-1.5"
}, R1 = /* @__PURE__ */ L({
  __name: "DashboardResizeHandle",
  props: {
    as: {},
    class: {}
  },
  setup(e) {
    const t = e, a = ue(), n = T(() => W({ extend: W(pH), ...a.ui?.dashboardResizeHandle || {} }));
    return (r, s) => (h(), k(u(U), {
      as: r.as,
      role: "separator",
      class: A(n.value({ class: t.class }))
    }, {
      default: _(() => [
        S(r.$slots, "default")
      ]),
      _: 3
    }, 8, ["as", "class"]));
  }
}), gH = {
  slots: {
    root: "relative flex flex-col min-w-0 min-h-svh lg:not-last:border-r lg:not-last:border-default shrink-0",
    body: "flex flex-col gap-4 sm:gap-6 flex-1 overflow-y-auto p-4 sm:p-6",
    handle: ""
  },
  variants: {
    size: {
      true: {
        root: "w-full lg:w-(--width)"
      },
      false: {
        root: "flex-1"
      }
    }
  }
}, vH = ["data-dragging"], L4 = /* @__PURE__ */ L({
  inheritAttrs: !1,
  __name: "DashboardPanel",
  props: {
    class: {},
    ui: {},
    id: {},
    minSize: { default: 15 },
    maxSize: {},
    defaultSize: {},
    resizable: { type: Boolean, default: !1 }
  },
  setup(e) {
    const t = e, a = ue(), n = js({ storageKey: "dashboard", unit: "%" }), r = `${n.storageKey}-panel-${t.id || Rn()}`, { el: s, size: i, isDragging: o, onMouseDown: l, onTouchStart: d, onDoubleClick: c } = M1(r, Ge(() => ({ ...n, ...t }))), f = T(() => W({ extend: W(gH), ...a.ui?.dashboardPanel || {} })({
      size: !!i.value
    }));
    return (p, g) => (h(), M(te, null, [
      J("div", O({
        id: r,
        ref_key: "el",
        ref: s
      }, p.$attrs, {
        "data-dragging": u(o),
        class: f.value.root({ class: [t.ui?.root, t.class] }),
        style: [u(i) ? { "--width": `${u(i)}${u(n).unit}` } : void 0]
      }), [
        S(p.$slots, "default", {}, () => [
          S(p.$slots, "header"),
          J("div", {
            class: A(f.value.body({ class: t.ui?.body }))
          }, [
            S(p.$slots, "body")
          ], 2),
          S(p.$slots, "footer")
        ])
      ], 16, vH),
      S(p.$slots, "resize-handle", {
        onMouseDown: u(l),
        onTouchStart: u(d),
        onDoubleClick: u(c)
      }, () => [
        p.resizable ? (h(), k(R1, {
          key: 0,
          "aria-controls": r,
          class: A(f.value.handle({ class: t.ui?.handle })),
          onMousedown: u(l),
          onTouchstart: u(d),
          onDblclick: u(c)
        }, null, 8, ["class", "onMousedown", "onTouchstart", "onDblclick"])) : D("", !0)
      ])
    ], 64));
  }
}), hH = {
  slots: {
    overlay: "fixed inset-0 bg-elevated/75",
    content: "fixed bg-default divide-y divide-default flex flex-col focus:outline-none",
    header: "flex items-center gap-1.5 p-4 sm:px-6 min-h-16",
    wrapper: "",
    body: "flex-1 overflow-y-auto p-4 sm:p-6",
    footer: "flex items-center gap-1.5 p-4 sm:px-6",
    title: "text-highlighted font-semibold",
    description: "mt-1 text-muted text-sm",
    close: "absolute top-4 end-4"
  },
  variants: {
    transition: {
      true: {
        overlay: "data-[state=open]:animate-[fade-in_200ms_ease-out] data-[state=closed]:animate-[fade-out_200ms_ease-in]",
        content: "data-[state=open]:animate-[scale-in_200ms_ease-out] data-[state=closed]:animate-[scale-out_200ms_ease-in]"
      }
    },
    fullscreen: {
      true: {
        content: "inset-0"
      },
      false: {
        content: "top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 w-[calc(100vw-2rem)] max-w-lg max-h-[calc(100dvh-2rem)] sm:max-h-[calc(100dvh-4rem)] rounded-lg shadow-lg ring ring-default overflow-hidden"
      }
    }
  }
}, Ip = /* @__PURE__ */ L({
  __name: "Modal",
  props: {
    title: {},
    description: {},
    content: {},
    overlay: { type: Boolean, default: !0 },
    transition: { type: Boolean, default: !0 },
    fullscreen: { type: Boolean },
    portal: { type: [Boolean, String], default: !0 },
    close: { type: [Boolean, Object], default: !0 },
    closeIcon: {},
    dismissible: { type: Boolean, default: !0 },
    class: {},
    ui: {},
    open: { type: Boolean },
    defaultOpen: { type: Boolean },
    modal: { type: Boolean, default: !0 }
  },
  emits: ["after:leave", "after:enter", "close:prevent", "update:open"],
  setup(e, { emit: t }) {
    const a = e, n = t, r = Se(), { t: s } = it(), i = ue(), o = Xe(tt(a, "open", "defaultOpen", "modal"), n), l = tn(Ge(() => a.portal)), d = Ge(() => a.content), c = T(() => {
      const p = {
        closeAutoFocus: (g) => g.preventDefault()
      };
      return a.dismissible ? p : ["pointerDownOutside", "interactOutside", "escapeKeyDown"].reduce((v, m) => (v[m] = (y) => {
        y.preventDefault(), n("close:prevent");
      }, v), p);
    }), f = T(() => W({ extend: W(hH), ...i.ui?.modal || {} })({
      transition: a.transition,
      fullscreen: a.fullscreen
    }));
    return (p, g) => (h(), k(u(of), pe(me(u(o))), {
      default: _(({ open: v, close: m }) => [
        r.default ? (h(), k(u(gf), {
          key: 0,
          "as-child": "",
          class: A(a.class)
        }, {
          default: _(() => [
            S(p.$slots, "default", { open: v })
          ]),
          _: 2
        }, 1032, ["class"])) : D("", !0),
        V(u(pf), pe(me(u(l))), {
          default: _(() => [
            p.overlay ? (h(), k(u(ff), {
              key: 0,
              class: A(f.value.overlay({ class: a.ui?.overlay }))
            }, null, 8, ["class"])) : D("", !0),
            V(u(cf), O({
              class: f.value.content({ class: [!r.default && a.class, a.ui?.content] })
            }, d.value, {
              onAfterEnter: g[0] || (g[0] = (y) => n("after:enter")),
              onAfterLeave: g[1] || (g[1] = (y) => n("after:leave"))
            }, Ri(c.value)), {
              default: _(() => [
                r.content && (p.title || r.title || p.description || r.description) ? (h(), k(u(Fn), { key: 0 }, {
                  default: _(() => [
                    p.title || r.title ? (h(), k(u(bs), { key: 0 }, {
                      default: _(() => [
                        S(p.$slots, "title", {}, () => [
                          ee(X(p.title), 1)
                        ])
                      ]),
                      _: 3
                    })) : D("", !0),
                    p.description || r.description ? (h(), k(u(ys), { key: 1 }, {
                      default: _(() => [
                        S(p.$slots, "description", {}, () => [
                          ee(X(p.description), 1)
                        ])
                      ]),
                      _: 3
                    })) : D("", !0)
                  ]),
                  _: 3
                })) : D("", !0),
                S(p.$slots, "content", { close: m }, () => [
                  r.header || p.title || r.title || p.description || r.description || a.close || r.close ? (h(), M("div", {
                    key: 0,
                    class: A(f.value.header({ class: a.ui?.header }))
                  }, [
                    S(p.$slots, "header", { close: m }, () => [
                      J("div", {
                        class: A(f.value.wrapper({ class: a.ui?.wrapper }))
                      }, [
                        p.title || r.title ? (h(), k(u(bs), {
                          key: 0,
                          class: A(f.value.title({ class: a.ui?.title }))
                        }, {
                          default: _(() => [
                            S(p.$slots, "title", {}, () => [
                              ee(X(p.title), 1)
                            ])
                          ]),
                          _: 3
                        }, 8, ["class"])) : D("", !0),
                        p.description || r.description ? (h(), k(u(ys), {
                          key: 1,
                          class: A(f.value.description({ class: a.ui?.description }))
                        }, {
                          default: _(() => [
                            S(p.$slots, "description", {}, () => [
                              ee(X(p.description), 1)
                            ])
                          ]),
                          _: 3
                        }, 8, ["class"])) : D("", !0)
                      ], 2),
                      S(p.$slots, "actions"),
                      a.close || r.close ? (h(), k(u(ey), {
                        key: 0,
                        "as-child": ""
                      }, {
                        default: _(() => [
                          S(p.$slots, "close", {
                            close: m,
                            ui: f.value
                          }, () => [
                            a.close ? (h(), k(Je, O({
                              key: 0,
                              icon: p.closeIcon || u(i).ui.icons.close,
                              color: "neutral",
                              variant: "ghost",
                              "aria-label": u(s)("modal.close")
                            }, typeof a.close == "object" ? a.close : {}, {
                              class: f.value.close({ class: a.ui?.close })
                            }), null, 16, ["icon", "aria-label", "class"])) : D("", !0)
                          ])
                        ]),
                        _: 2
                      }, 1024)) : D("", !0)
                    ])
                  ], 2)) : D("", !0),
                  r.body ? (h(), M("div", {
                    key: 1,
                    class: A(f.value.body({ class: a.ui?.body }))
                  }, [
                    S(p.$slots, "body", { close: m })
                  ], 2)) : D("", !0),
                  r.footer ? (h(), M("div", {
                    key: 2,
                    class: A(f.value.footer({ class: a.ui?.footer }))
                  }, [
                    S(p.$slots, "footer", { close: m })
                  ], 2)) : D("", !0)
                ])
              ]),
              _: 2
            }, 1040, ["class"])
          ]),
          _: 2
        }, 1040)
      ]),
      _: 3
    }, 16));
  }
}), mH = {
  slots: {
    modal: "sm:max-w-3xl sm:h-[28rem]",
    input: "[&>input]:text-base/5"
  }
}, O4 = /* @__PURE__ */ L({
  __name: "DashboardSearch",
  props: /* @__PURE__ */ mt({
    icon: {},
    placeholder: {},
    autofocus: { type: Boolean },
    loading: { type: Boolean },
    loadingIcon: {},
    close: { type: [Boolean, Object], default: !0 },
    closeIcon: {},
    shortcut: { default: "meta_k" },
    groups: {},
    fuse: {},
    colorMode: { type: Boolean, default: !0 },
    class: {},
    ui: {}
  }, {
    open: { type: Boolean, default: !1 },
    openModifiers: {},
    searchTerm: { default: "" },
    searchTermModifiers: {}
  }),
  emits: ["update:open", "update:searchTerm"],
  setup(e, { expose: t }) {
    const a = e, n = Se(), r = lt(e, "open"), s = lt(e, "searchTerm");
    Ld("dashboard:search:toggle", () => {
      r.value = !r.value;
    });
    const { t: i } = it(), o = UM(), l = ue(), d = xt(tt(a, "icon", "placeholder", "autofocus", "loading", "loadingIcon", "close", "closeIcon")), c = Mt(n, ["content"]), f = T(() => Ct({}, a.fuse, {
      fuseOptions: {}
    })), p = T(() => W({ extend: W(mH), ...l.ui?.dashboardSearch || {} })()), g = T(() => {
      const y = [];
      return y.push(...a.groups || []), a.colorMode && !o?.forced && y.push({
        id: "theme",
        label: i("dashboardSearch.theme"),
        items: [{
          label: i("colorMode.system"),
          icon: l.ui.icons.system,
          active: o.preference === "system",
          onSelect: () => {
            o.preference = "system";
          }
        }, {
          label: i("colorMode.light"),
          icon: l.ui.icons.light,
          active: o.preference === "light",
          onSelect: () => {
            o.preference = "light";
          }
        }, {
          label: i("colorMode.dark"),
          icon: l.ui.icons.dark,
          active: o.preference === "dark",
          onSelect: () => {
            o.preference = "dark";
          }
        }]
      }), y;
    });
    function v(y) {
      y.disabled || (r.value = !1, s.value = "");
    }
    qM({
      [a.shortcut]: {
        usingInput: !0,
        handler: () => r.value = !r.value
      }
    });
    const m = Bl("commandPaletteRef");
    return t({
      commandPaletteRef: m
    }), (y, x) => (h(), k(Ip, {
      open: r.value,
      "onUpdate:open": x[2] || (x[2] = (b) => r.value = b),
      title: u(i)("dashboardSearch.title"),
      description: u(i)("dashboardSearch.description"),
      class: A(p.value.modal({ class: [a.ui?.modal, a.class] }))
    }, {
      content: _(() => [
        S(y.$slots, "content", {}, () => [
          V(oH, O({
            ref_key: "commandPaletteRef",
            ref: m,
            "search-term": s.value,
            "onUpdate:searchTerm": x[0] || (x[0] = (b) => s.value = b)
          }, u(d), {
            groups: g.value,
            fuse: f.value,
            ui: u(Yl)(u(Mt)(p.value, ["modal"]), a.ui),
            "onUpdate:modelValue": v,
            "onUpdate:open": x[1] || (x[1] = (b) => r.value = b)
          }), Ia({ _: 2 }, [
            le(u(c), (b, C) => ({
              name: C,
              fn: _((w) => [
                S(y.$slots, C, pe(me(w)))
              ])
            }))
          ]), 1040, ["search-term", "groups", "fuse", "ui"])
        ])
      ]),
      _: 3
    }, 8, ["open", "title", "description", "class"]));
  }
}), yH = {
  slots: {
    base: "",
    trailing: "hidden lg:flex items-center gap-0.5 ms-auto"
  }
}, F4 = /* @__PURE__ */ L({
  inheritAttrs: !1,
  __name: "DashboardSearchButton",
  props: {
    icon: {},
    label: {},
    color: { default: "neutral" },
    variant: {},
    size: {},
    collapsed: { type: Boolean, default: !1 },
    tooltip: { type: [Boolean, Object], default: !1 },
    kbds: { default: () => ["meta", "k"] },
    ui: {},
    class: {}
  },
  setup(e) {
    const t = e, a = Se(), [n, r] = /* @__PURE__ */ Lt(), s = Mt(a, ["trailing"]), i = xt(tt(t, "color", "size")), o = Ge(() => Ct(typeof t.tooltip == "boolean" ? {} : t.tooltip, { delayDuration: 0, content: { side: "right" } })), { t: l } = it(), d = ue(), { toggleSearch: c } = js({ toggleSearch: () => {
    } }), f = T(() => W({ extend: W(yH), ...d.ui?.dashboardSearchButton || {} })());
    return (p, g) => (h(), M(te, null, [
      V(u(n), null, {
        default: _(() => [
          V(Je, O({
            icon: p.icon || u(d).ui.icons.search,
            label: p.label || u(l)("dashboardSearchButton.label"),
            variant: p.variant || (p.collapsed ? "ghost" : "outline")
          }, {
            ...u(i),
            ...p.collapsed ? {
              square: !0,
              label: void 0,
              "aria-label": p.label || u(l)("dashboardSearchButton.label")
            } : {},
            ...p.$attrs
          }, {
            class: f.value.base({ class: [t.ui?.base, t.class] }),
            ui: u(Yl)(f.value, t.ui),
            onClick: u(c)
          }), Ia({ _: 2 }, [
            le(u(s), (v, m) => ({
              name: m,
              fn: _((y) => [
                S(p.$slots, m, pe(me(y)))
              ])
            })),
            p.collapsed ? void 0 : {
              name: "trailing",
              fn: _(() => [
                J("div", {
                  class: A(f.value.trailing({ class: t.ui?.trailing }))
                }, [
                  S(p.$slots, "trailing", {}, () => [
                    p.kbds?.length ? (h(!0), M(te, { key: 0 }, le(p.kbds, (v, m) => (h(), k(eo, O({
                      key: m,
                      variant: "subtle"
                    }, { ref_for: !0 }, typeof v == "string" ? { value: v } : v), null, 16))), 128)) : D("", !0)
                  ])
                ], 2)
              ]),
              key: "0"
            }
          ]), 1040, ["icon", "label", "variant", "class", "ui", "onClick"])
        ]),
        _: 3
      }),
      p.collapsed && p.tooltip ? (h(), k(au, O({
        key: 0,
        text: p.label || u(l)("dashboardSearchButton.label")
      }, o.value), {
        default: _(() => [
          V(u(r))
        ]),
        _: 1
      }, 16, ["text"])) : (h(), k(u(r), { key: 1 }))
    ], 64));
  }
}), bH = {
  slots: {
    overlay: "fixed inset-0 bg-elevated/75",
    content: "fixed bg-default divide-y divide-default sm:ring ring-default sm:shadow-lg flex flex-col focus:outline-none",
    header: "flex items-center gap-1.5 p-4 sm:px-6 min-h-16",
    wrapper: "",
    body: "flex-1 overflow-y-auto p-4 sm:p-6",
    footer: "flex items-center gap-1.5 p-4 sm:px-6",
    title: "text-highlighted font-semibold",
    description: "mt-1 text-muted text-sm",
    close: "absolute top-4 end-4"
  },
  variants: {
    side: {
      top: {
        content: "inset-x-0 top-0 max-h-full"
      },
      right: {
        content: "right-0 inset-y-0 w-full max-w-md"
      },
      bottom: {
        content: "inset-x-0 bottom-0 max-h-full"
      },
      left: {
        content: "left-0 inset-y-0 w-full max-w-md"
      }
    },
    transition: {
      true: {
        overlay: "data-[state=open]:animate-[fade-in_200ms_ease-out] data-[state=closed]:animate-[fade-out_200ms_ease-in]"
      }
    }
  },
  compoundVariants: [
    {
      transition: !0,
      side: "top",
      class: {
        content: "data-[state=open]:animate-[slide-in-from-top_200ms_ease-in-out] data-[state=closed]:animate-[slide-out-to-top_200ms_ease-in-out]"
      }
    },
    {
      transition: !0,
      side: "right",
      class: {
        content: "data-[state=open]:animate-[slide-in-from-right_200ms_ease-in-out] data-[state=closed]:animate-[slide-out-to-right_200ms_ease-in-out]"
      }
    },
    {
      transition: !0,
      side: "bottom",
      class: {
        content: "data-[state=open]:animate-[slide-in-from-bottom_200ms_ease-in-out] data-[state=closed]:animate-[slide-out-to-bottom_200ms_ease-in-out]"
      }
    },
    {
      transition: !0,
      side: "left",
      class: {
        content: "data-[state=open]:animate-[slide-in-from-left_200ms_ease-in-out] data-[state=closed]:animate-[slide-out-to-left_200ms_ease-in-out]"
      }
    }
  ]
}, L1 = /* @__PURE__ */ L({
  __name: "Slideover",
  props: {
    title: {},
    description: {},
    content: {},
    overlay: { type: Boolean, default: !0 },
    transition: { type: Boolean, default: !0 },
    side: { default: "right" },
    portal: { type: [Boolean, String], default: !0 },
    close: { type: [Boolean, Object], default: !0 },
    closeIcon: {},
    dismissible: { type: Boolean, default: !0 },
    class: {},
    ui: {},
    open: { type: Boolean },
    defaultOpen: { type: Boolean },
    modal: { type: Boolean, default: !0 }
  },
  emits: ["after:leave", "after:enter", "close:prevent", "update:open"],
  setup(e, { emit: t }) {
    const a = e, n = t, r = Se(), { t: s } = it(), i = ue(), o = Xe(tt(a, "open", "defaultOpen", "modal"), n), l = tn(Ge(() => a.portal)), d = Ge(() => a.content), c = T(() => {
      const p = {
        closeAutoFocus: (g) => g.preventDefault()
      };
      return a.dismissible ? p : ["pointerDownOutside", "interactOutside", "escapeKeyDown"].reduce((v, m) => (v[m] = (y) => {
        y.preventDefault(), n("close:prevent");
      }, v), p);
    }), f = T(() => W({ extend: W(bH), ...i.ui?.slideover || {} })({
      transition: a.transition,
      side: a.side
    }));
    return (p, g) => (h(), k(u(of), pe(me(u(o))), {
      default: _(({ open: v, close: m }) => [
        r.default ? (h(), k(u(gf), {
          key: 0,
          "as-child": "",
          class: A(a.class)
        }, {
          default: _(() => [
            S(p.$slots, "default", { open: v })
          ]),
          _: 2
        }, 1032, ["class"])) : D("", !0),
        V(u(pf), pe(me(u(l))), {
          default: _(() => [
            p.overlay ? (h(), k(u(ff), {
              key: 0,
              class: A(f.value.overlay({ class: a.ui?.overlay }))
            }, null, 8, ["class"])) : D("", !0),
            V(u(cf), O({
              "data-side": p.side,
              class: f.value.content({ class: [!r.default && a.class, a.ui?.content] })
            }, d.value, {
              onAfterEnter: g[0] || (g[0] = (y) => n("after:enter")),
              onAfterLeave: g[1] || (g[1] = (y) => n("after:leave"))
            }, Ri(c.value)), {
              default: _(() => [
                r.content && (p.title || r.title || p.description || r.description) ? (h(), k(u(Fn), { key: 0 }, {
                  default: _(() => [
                    p.title || r.title ? (h(), k(u(bs), { key: 0 }, {
                      default: _(() => [
                        S(p.$slots, "title", {}, () => [
                          ee(X(p.title), 1)
                        ])
                      ]),
                      _: 3
                    })) : D("", !0),
                    p.description || r.description ? (h(), k(u(ys), { key: 1 }, {
                      default: _(() => [
                        S(p.$slots, "description", {}, () => [
                          ee(X(p.description), 1)
                        ])
                      ]),
                      _: 3
                    })) : D("", !0)
                  ]),
                  _: 3
                })) : D("", !0),
                S(p.$slots, "content", { close: m }, () => [
                  r.header || p.title || r.title || p.description || r.description || a.close || r.close ? (h(), M("div", {
                    key: 0,
                    class: A(f.value.header({ class: a.ui?.header }))
                  }, [
                    S(p.$slots, "header", { close: m }, () => [
                      J("div", {
                        class: A(f.value.wrapper({ class: a.ui?.wrapper }))
                      }, [
                        p.title || r.title ? (h(), k(u(bs), {
                          key: 0,
                          class: A(f.value.title({ class: a.ui?.title }))
                        }, {
                          default: _(() => [
                            S(p.$slots, "title", {}, () => [
                              ee(X(p.title), 1)
                            ])
                          ]),
                          _: 3
                        }, 8, ["class"])) : D("", !0),
                        p.description || r.description ? (h(), k(u(ys), {
                          key: 1,
                          class: A(f.value.description({ class: a.ui?.description }))
                        }, {
                          default: _(() => [
                            S(p.$slots, "description", {}, () => [
                              ee(X(p.description), 1)
                            ])
                          ]),
                          _: 3
                        }, 8, ["class"])) : D("", !0)
                      ], 2),
                      S(p.$slots, "actions"),
                      a.close || r.close ? (h(), k(u(ey), {
                        key: 0,
                        "as-child": ""
                      }, {
                        default: _(() => [
                          S(p.$slots, "close", {
                            close: m,
                            ui: f.value
                          }, () => [
                            a.close ? (h(), k(Je, O({
                              key: 0,
                              icon: p.closeIcon || u(i).ui.icons.close,
                              color: "neutral",
                              variant: "ghost",
                              "aria-label": u(s)("slideover.close")
                            }, typeof a.close == "object" ? a.close : {}, {
                              class: f.value.close({ class: a.ui?.close })
                            }), null, 16, ["icon", "aria-label", "class"])) : D("", !0)
                          ])
                        ]),
                        _: 2
                      }, 1024)) : D("", !0)
                    ])
                  ], 2)) : D("", !0),
                  J("div", {
                    class: A(f.value.body({ class: a.ui?.body }))
                  }, [
                    S(p.$slots, "body", { close: m })
                  ], 2),
                  r.footer ? (h(), M("div", {
                    key: 1,
                    class: A(f.value.footer({ class: a.ui?.footer }))
                  }, [
                    S(p.$slots, "footer", { close: m })
                  ], 2)) : D("", !0)
                ])
              ]),
              _: 2
            }, 1040, ["data-side", "class"])
          ]),
          _: 2
        }, 1040)
      ]),
      _: 3
    }, 16));
  }
});
(function() {
  var e;
  try {
    if (typeof document < "u") {
      var t = document.createElement("style");
      t.nonce = (e = document.head.querySelector("meta[property=csp-nonce]")) == null ? void 0 : e.content, t.appendChild(document.createTextNode('[data-vaul-drawer]{touch-action:none;will-change:transform;transition:transform .5s cubic-bezier(.32,.72,0,1);animation-duration:.5s;animation-timing-function:cubic-bezier(.32,.72,0,1)}[data-vaul-drawer][data-vaul-snap-points=false][data-vaul-drawer-direction=bottom][data-state=open]{animation-name:slideFromBottom}[data-vaul-drawer][data-vaul-snap-points=false][data-vaul-drawer-direction=bottom][data-state=closed]{animation-name:slideToBottom}[data-vaul-drawer][data-vaul-snap-points=false][data-vaul-drawer-direction=top][data-state=open]{animation-name:slideFromTop}[data-vaul-drawer][data-vaul-snap-points=false][data-vaul-drawer-direction=top][data-state=closed]{animation-name:slideToTop}[data-vaul-drawer][data-vaul-snap-points=false][data-vaul-drawer-direction=left][data-state=open]{animation-name:slideFromLeft}[data-vaul-drawer][data-vaul-snap-points=false][data-vaul-drawer-direction=left][data-state=closed]{animation-name:slideToLeft}[data-vaul-drawer][data-vaul-snap-points=false][data-vaul-drawer-direction=right][data-state=open]{animation-name:slideFromRight}[data-vaul-drawer][data-vaul-snap-points=false][data-vaul-drawer-direction=right][data-state=closed]{animation-name:slideToRight}[data-vaul-drawer][data-vaul-snap-points=true][data-vaul-drawer-direction=bottom]{transform:translate3d(0,var(--initial-transform, 100%),0)}[data-vaul-drawer][data-vaul-snap-points=true][data-vaul-drawer-direction=top]{transform:translate3d(0,calc(var(--initial-transform, 100%) * -1),0)}[data-vaul-drawer][data-vaul-snap-points=true][data-vaul-drawer-direction=left]{transform:translate3d(calc(var(--initial-transform, 100%) * -1),0,0)}[data-vaul-drawer][data-vaul-snap-points=true][data-vaul-drawer-direction=right]{transform:translate3d(var(--initial-transform, 100%),0,0)}[data-vaul-drawer][data-vaul-delayed-snap-points=true][data-vaul-drawer-direction=top],[data-vaul-drawer][data-vaul-delayed-snap-points=true][data-vaul-drawer-direction=bottom]{transform:translate3d(0,var(--snap-point-height, 0),0)}[data-vaul-drawer][data-vaul-delayed-snap-points=true][data-vaul-drawer-direction=left],[data-vaul-drawer][data-vaul-delayed-snap-points=true][data-vaul-drawer-direction=right]{transform:translate3d(var(--snap-point-height, 0),0,0)}[data-vaul-overlay][data-vaul-snap-points=false]{animation-duration:.5s;animation-timing-function:cubic-bezier(.32,.72,0,1)}[data-vaul-overlay][data-vaul-snap-points=false][data-state=open]{animation-name:fadeIn}[data-vaul-overlay][data-state=closed]{animation-name:fadeOut}[data-vaul-animate=false]{animation:none!important}[data-vaul-overlay][data-vaul-snap-points=true]{opacity:0;transition:opacity .5s cubic-bezier(.32,.72,0,1)}[data-vaul-overlay][data-vaul-snap-points=true]{opacity:1}[data-vaul-drawer]:not([data-vaul-custom-container=true]):after{content:"";position:absolute;background:inherit;background-color:inherit}[data-vaul-drawer][data-vaul-drawer-direction=top]:after{top:initial;bottom:100%;left:0;right:0;height:200%}[data-vaul-drawer][data-vaul-drawer-direction=bottom]:after{top:100%;bottom:initial;left:0;right:0;height:200%}[data-vaul-drawer][data-vaul-drawer-direction=left]:after{left:initial;right:100%;top:0;bottom:0;width:200%}[data-vaul-drawer][data-vaul-drawer-direction=right]:after{left:100%;right:initial;top:0;bottom:0;width:200%}[data-vaul-overlay][data-vaul-snap-points=true]:not([data-vaul-snap-points-overlay=true]):not([data-state=closed]){opacity:0}[data-vaul-overlay][data-vaul-snap-points-overlay=true]{opacity:1}[data-vaul-handle]{display:block;position:relative;opacity:.7;background:#e2e2e4;margin-left:auto;margin-right:auto;height:5px;width:32px;border-radius:1rem;touch-action:pan-y}[data-vaul-handle]:hover,[data-vaul-handle]:active{opacity:1}[data-vaul-handle-hitarea]{position:absolute;left:50%;top:50%;transform:translate(-50%,-50%);width:max(100%,2.75rem);height:max(100%,2.75rem);touch-action:inherit}@media (hover: hover) and (pointer: fine){[data-vaul-drawer]{-webkit-user-select:none;user-select:none}}@media (pointer: fine){[data-vaul-handle-hitarea]:{width:100%;height:100%}}@keyframes fadeIn{0%{opacity:0}to{opacity:1}}@keyframes fadeOut{to{opacity:0}}@keyframes slideFromBottom{0%{transform:translate3d(0,var(--initial-transform, 100%),0)}to{transform:translateZ(0)}}@keyframes slideToBottom{to{transform:translate3d(0,var(--initial-transform, 100%),0)}}@keyframes slideFromTop{0%{transform:translate3d(0,calc(var(--initial-transform, 100%) * -1),0)}to{transform:translateZ(0)}}@keyframes slideToTop{to{transform:translate3d(0,calc(var(--initial-transform, 100%) * -1),0)}}@keyframes slideFromLeft{0%{transform:translate3d(calc(var(--initial-transform, 100%) * -1),0,0)}to{transform:translateZ(0)}}@keyframes slideToLeft{to{transform:translate3d(calc(var(--initial-transform, 100%) * -1),0,0)}}@keyframes slideFromRight{0%{transform:translate3d(var(--initial-transform, 100%),0,0)}to{transform:translateZ(0)}}@keyframes slideToRight{to{transform:translate3d(var(--initial-transform, 100%),0,0)}}')), document.head.appendChild(t);
    }
  } catch (a) {
    console.error("vite-plugin-css-injected-by-js", a);
  }
})();
const wH = typeof window < "u" && typeof document < "u";
typeof WorkerGlobalScope < "u" && globalThis instanceof WorkerGlobalScope;
const CH = (e) => typeof e < "u";
function xH(e) {
  return JSON.parse(JSON.stringify(e));
}
function Qh(e, t, a, n = {}) {
  var r, s, i;
  const {
    clone: o = !1,
    passive: l = !1,
    eventName: d,
    deep: c = !1,
    defaultValue: f,
    shouldEmit: p
  } = n, g = fa(), v = a || g?.emit || ((r = g?.$emit) == null ? void 0 : r.bind(g)) || ((i = (s = g?.proxy) == null ? void 0 : s.$emit) == null ? void 0 : i.bind(g?.proxy));
  let m = d;
  t || (t = "modelValue"), m = m || `update:${t.toString()}`;
  const y = (C) => o ? typeof o == "function" ? o(C) : xH(C) : C, x = () => CH(e[t]) ? y(e[t]) : f, b = (C) => {
    p ? p(C) && v(m, C) : v(m, C);
  };
  if (l) {
    const C = x(), w = N(C);
    let $ = !1;
    return ye(
      () => e[t],
      (B) => {
        $ || ($ = !0, w.value = y(B), Be(() => $ = !1));
      }
    ), ye(
      w,
      (B) => {
        !$ && (B !== e[t] || c) && b(B);
      },
      { deep: c }
    ), w;
  } else
    return T({
      get() {
        return x();
      },
      set(C) {
        b(C);
      }
    });
}
const [to, SH] = Me("DrawerRoot"), O1 = /* @__PURE__ */ new WeakMap();
function Qt(e, t, a = !1) {
  if (!e || !(e instanceof HTMLElement) || !t)
    return;
  const n = {};
  Object.entries(t).forEach(([r, s]) => {
    if (r.startsWith("--")) {
      e.style.setProperty(r, s);
      return;
    }
    n[r] = e.style[r], e.style[r] = s;
  }), !a && O1.set(e, n);
}
function _H(e, t) {
  if (!e || !(e instanceof HTMLElement))
    return;
  const a = O1.get(e);
  a && Object.entries(a).forEach(([n, r]) => {
    e.style[n] = r;
  });
}
function Io(e, t) {
  const a = window.getComputedStyle(e), n = a.transform || a.webkitTransform || a.mozTransform;
  let r = n.match(/^matrix3d\((.+)\)$/);
  return r ? Number.parseFloat(r[1].split(", ")[qt(t) ? 13 : 12]) : (r = n.match(/^matrix\((.+)\)$/), r ? Number.parseFloat(r[1].split(", ")[qt(t) ? 5 : 4]) : null);
}
function kH(e) {
  return 8 * (Math.log(e + 1) - 2);
}
function qt(e) {
  switch (e) {
    case "top":
    case "bottom":
      return !0;
    case "left":
    case "right":
      return !1;
    default:
      return e;
  }
}
function Uu(e, t) {
  if (!e)
    return () => {
    };
  const a = e.style.cssText;
  return Object.assign(e.style, t), () => {
    e.style.cssText = a;
  };
}
function AH(...e) {
  return (...t) => {
    for (const a of e)
      typeof a == "function" && a(...t);
  };
}
const kt = {
  DURATION: 0.5,
  EASE: [0.32, 0.72, 0, 1]
}, F1 = 0.4, $H = 0.25, IH = 100, z1 = 8, Eo = 16, q1 = 26, Zh = "vaul-dragging";
function EH({
  activeSnapPoint: e,
  snapPoints: t,
  drawerRef: a,
  overlayRef: n,
  fadeFromIndex: r,
  onSnapPointChange: s,
  direction: i
}) {
  const o = N(typeof window < "u" ? {
    innerWidth: window.innerWidth,
    innerHeight: window.innerHeight
  } : void 0);
  function l() {
    o.value = {
      innerWidth: window.innerWidth,
      innerHeight: window.innerHeight
    };
  }
  Pe(() => {
    typeof window < "u" && window.addEventListener("resize", l);
  }), Di(() => {
    typeof window < "u" && window.removeEventListener("resize", l);
  });
  const d = T(
    () => (t.value && e.value === t.value[t.value.length - 1]) ?? null
  ), c = T(
    () => t.value && t.value.length > 0 && (r?.value || r?.value === 0) && !Number.isNaN(r?.value) && t.value[r?.value ?? -1] === e.value || !t.value
  ), f = T(
    () => {
      var b;
      return ((b = t.value) == null ? void 0 : b.findIndex((C) => C === e.value)) ?? null;
    }
  ), p = T(
    () => {
      var b;
      return ((b = t.value) == null ? void 0 : b.map((C) => {
        const w = typeof C == "string";
        let $ = 0;
        if (w && ($ = Number.parseInt(C, 10)), qt(i.value)) {
          const I = w ? $ : o.value ? C * o.value.innerHeight : 0;
          return o.value ? i.value === "bottom" ? o.value.innerHeight - I : -o.value.innerHeight + I : I;
        }
        const B = w ? $ : o.value ? C * o.value.innerWidth : 0;
        return o.value ? i.value === "right" ? o.value.innerWidth - B : -o.value.innerWidth + B : B;
      })) ?? [];
    }
  ), g = T(
    () => {
      var b;
      return f.value !== null ? (b = p.value) == null ? void 0 : b[f.value] : null;
    }
  ), v = (b) => {
    var C, w, $, B;
    const I = ((C = p.value) == null ? void 0 : C.findIndex((E) => E === b)) ?? null;
    Be(() => {
      var E;
      s(I, p.value), Qt((E = a.value) == null ? void 0 : E.$el, {
        transition: `transform ${kt.DURATION}s cubic-bezier(${kt.EASE.join(",")})`,
        transform: qt(i.value) ? `translate3d(0, ${b}px, 0)` : `translate3d(${b}px, 0, 0)`
      });
    }), p.value && I !== p.value.length - 1 && I !== r?.value ? Qt((w = n.value) == null ? void 0 : w.$el, {
      transition: `opacity ${kt.DURATION}s cubic-bezier(${kt.EASE.join(",")})`,
      opacity: "0"
    }) : Qt(($ = n.value) == null ? void 0 : $.$el, {
      transition: `opacity ${kt.DURATION}s cubic-bezier(${kt.EASE.join(",")})`,
      opacity: "1"
    }), e.value = I !== null ? ((B = t.value) == null ? void 0 : B[I]) ?? null : null;
  };
  ye(
    [e, p, t],
    () => {
      var b;
      if (e.value) {
        const C = ((b = t.value) == null ? void 0 : b.findIndex((w) => w === e.value)) ?? -1;
        p.value && C !== -1 && typeof p.value[C] == "number" && v(p.value[C]);
      }
    },
    {
      immediate: !0
      // if you want to run the effect immediately as well
    }
  );
  function m({
    draggedDistance: b,
    closeDrawer: C,
    velocity: w,
    dismissible: $
  }) {
    var B, I, E;
    if (r.value === void 0)
      return;
    const P = i.value === "bottom" || i.value === "right" ? (g.value ?? 0) - b : (g.value ?? 0) + b, R = f.value === r.value - 1, F = f.value === 0, H = b > 0;
    if (R && Qt((B = n.value) == null ? void 0 : B.$el, {
      transition: `opacity ${kt.DURATION}s cubic-bezier(${kt.EASE.join(",")})`
    }), w > 2 && !H) {
      $ ? C() : v(p.value[0]);
      return;
    }
    if (w > 2 && H && p && t.value) {
      v(p.value[t.value.length - 1]);
      return;
    }
    const j = (I = p.value) == null ? void 0 : I.reduce((z, G) => typeof z != "number" || typeof G != "number" ? z : Math.abs(G - P) < Math.abs(z - P) ? G : z), K = qt(i.value) ? window.innerHeight : window.innerWidth;
    if (w > F1 && Math.abs(b) < K * 0.4) {
      const z = H ? 1 : -1;
      if (z > 0 && d) {
        v(p.value[(((E = t.value) == null ? void 0 : E.length) ?? 0) - 1]);
        return;
      }
      if (F && z < 0 && $ && C(), f.value === null)
        return;
      v(p.value[f.value + z]);
      return;
    }
    v(j);
  }
  function y({ draggedDistance: b }) {
    var C;
    if (g.value === null)
      return;
    const w = i.value === "bottom" || i.value === "right" ? g.value - b : g.value + b;
    (i.value === "bottom" || i.value === "right") && w < p.value[p.value.length - 1] || (i.value === "top" || i.value === "left") && w > p.value[p.value.length - 1] || Qt((C = a.value) == null ? void 0 : C.$el, {
      transform: qt(i.value) ? `translate3d(0, ${w}px, 0)` : `translate3d(${w}px, 0, 0)`
    });
  }
  function x(b, C) {
    if (!t.value || typeof f.value != "number" || !p.value || r.value === void 0)
      return null;
    const w = f.value === r.value - 1;
    if (f.value >= r.value && C)
      return 0;
    if (w && !C)
      return 1;
    if (!c.value && !w)
      return null;
    const $ = w ? f.value + 1 : f.value - 1, B = w ? p.value[$] - p.value[$ - 1] : p.value[$ + 1] - p.value[$], I = b / Math.abs(B);
    return w ? 1 - I : I;
  }
  return {
    isLastSnapPoint: d,
    shouldFade: c,
    getPercentageDragged: x,
    activeSnapPointIndex: f,
    onRelease: m,
    onDrag: y,
    snapPointsOffset: p
  };
}
function em() {
  return /^((?!chrome|android).)*safari/i.test(navigator.userAgent);
}
let Xs = null;
function TH(e) {
  const { isOpen: t, modal: a, nested: n, hasBeenOpened: r, preventScrollRestoration: s, noBodyStyles: i } = e, o = N(typeof window < "u" ? window.location.href : ""), l = N(0);
  function d() {
    if (em() && Xs === null && t.value && !i.value) {
      Xs = {
        position: document.body.style.position,
        top: document.body.style.top,
        left: document.body.style.left,
        height: document.body.style.height
      };
      const { scrollX: f, innerHeight: p } = window;
      document.body.style.setProperty("position", "fixed", "important"), Object.assign(document.body.style, {
        top: `${-l.value}px`,
        left: `${-f}px`,
        right: "0px",
        height: "auto"
      }), setTimeout(() => {
        requestAnimationFrame(() => {
          const g = p - window.innerHeight;
          g && l.value >= p && (document.body.style.top = `-${l.value + g}px`);
        });
      }, 300);
    }
  }
  function c() {
    if (em() && Xs !== null && !i.value) {
      const f = -Number.parseInt(document.body.style.top, 10), p = -Number.parseInt(document.body.style.left, 10);
      Object.assign(document.body.style, Xs), window.requestAnimationFrame(() => {
        if (s.value && o.value !== window.location.href) {
          o.value = window.location.href;
          return;
        }
        window.scrollTo(p, f);
      }), Xs = null;
    }
  }
  return Pe(() => {
    function f() {
      l.value = window.scrollY;
    }
    f(), window.addEventListener("scroll", f), Bt(() => {
      window.removeEventListener("scroll", f);
    });
  }), ye([t, r, o], () => {
    n.value || !r.value || (t.value ? (window.matchMedia("(display-mode: standalone)").matches || d(), a.value || setTimeout(() => {
      c();
    }, 500)) : c());
  }), { restorePositionSetting: c };
}
function BH(e, t) {
  return e && e.value ? e : t;
}
function PH(e) {
  const {
    emitDrag: t,
    emitRelease: a,
    emitClose: n,
    emitOpenChange: r,
    open: s,
    dismissible: i,
    nested: o,
    modal: l,
    shouldScaleBackground: d,
    setBackgroundColorOnScale: c,
    scrollLockTimeout: f,
    closeThreshold: p,
    activeSnapPoint: g,
    fadeFromIndex: v,
    direction: m,
    noBodyStyles: y,
    handleOnly: x,
    preventScrollRestoration: b
  } = e, C = N(s.value ?? !1), w = N(!1), $ = N(!1), B = N(!1), I = N(null), E = N(null), P = N(null), R = N(null), F = N(null), H = N(!1), j = N(null), K = N(0), z = N(!1);
  N(0);
  const G = N(null);
  N(0);
  const Y = T(() => {
    var Ae;
    return ((Ae = G.value) == null ? void 0 : Ae.$el.getBoundingClientRect().height) || 0;
  }), q = BH(
    e.snapPoints,
    N(void 0)
  ), Q = T(() => {
    var Ae;
    return q && (((Ae = q.value) == null ? void 0 : Ae.length) ?? 0) > 0;
  }), se = N(null), {
    activeSnapPointIndex: ce,
    onRelease: oe,
    snapPointsOffset: xe,
    onDrag: $e,
    shouldFade: Le,
    getPercentageDragged: Ye
  } = EH({
    snapPoints: q,
    activeSnapPoint: g,
    drawerRef: G,
    fadeFromIndex: v,
    overlayRef: I,
    onSnapPointChange: ne,
    direction: m
  });
  function ne(Ae, ge) {
    q.value && Ae === ge.length - 1 && (E.value = /* @__PURE__ */ new Date());
  }
  TH({
    isOpen: C,
    modal: l,
    nested: o,
    hasBeenOpened: w,
    noBodyStyles: y,
    preventScrollRestoration: b
  });
  function ae() {
    return (window.innerWidth - q1) / window.innerWidth;
  }
  function be(Ae, ge) {
    var Fe;
    if (!Ae)
      return !1;
    let ve = Ae;
    const ct = (Fe = window.getSelection()) == null ? void 0 : Fe.toString(), St = G.value ? Io(G.value.$el, m.value) : null, ia = /* @__PURE__ */ new Date();
    if (ve.hasAttribute("data-vaul-no-drag") || ve.closest("[data-vaul-no-drag]"))
      return !1;
    if (m.value === "right" || m.value === "left")
      return !0;
    if (E.value && ia.getTime() - E.value.getTime() < 500)
      return !1;
    if (St !== null && (m.value === "bottom" ? St > 0 : St < 0))
      return !0;
    if (ct && ct.length > 0)
      return !1;
    if (F.value && ia.getTime() - F.value.getTime() < f.value && St === 0 || ge)
      return F.value = ia, !1;
    for (; ve; ) {
      if (ve.scrollHeight > ve.clientHeight) {
        if (ve.scrollTop !== 0)
          return F.value = /* @__PURE__ */ new Date(), !1;
        if (ve.getAttribute("role") === "dialog")
          return !0;
      }
      ve = ve.parentNode;
    }
    return !0;
  }
  function De(Ae) {
    !i.value && !q.value || G.value && !G.value.$el.contains(Ae.target) || ($.value = !0, P.value = /* @__PURE__ */ new Date(), Ae.target.setPointerCapture(Ae.pointerId), K.value = qt(m.value) ? Ae.clientY : Ae.clientX);
  }
  function Ke(Ae) {
    var ge, Fe, ve, ct, St, ia;
    if (G.value && $.value) {
      const za = m.value === "bottom" || m.value === "right" ? 1 : -1, qn = (K.value - (qt(m.value) ? Ae.clientY : Ae.clientX)) * za, et = qn > 0, oa = q.value && !i.value && !et;
      if (oa && ce.value === 0)
        return;
      const xa = Math.abs(qn), wn = document.querySelector("[data-vaul-drawer-wrapper]") || document.querySelector("[vaul-drawer-wrapper]");
      let qa = xa / Y.value;
      const Nr = Ye(xa, et);
      if (Nr !== null && (qa = Nr), oa && qa >= 1 || !H.value && !be(Ae.target, et))
        return;
      if ((ge = G?.value) == null || ge.$el.classList.add(Zh), H.value = !0, Qt((Fe = G.value) == null ? void 0 : Fe.$el, {
        transition: "none"
      }), Qt((ve = I.value) == null ? void 0 : ve.$el, {
        transition: "none"
      }), q.value && $e({ draggedDistance: qn }), et && !q.value) {
        const Cn = kH(qn), jr = Math.min(Cn * -1, 0) * za;
        Qt((ct = G.value) == null ? void 0 : ct.$el, {
          transform: qt(m.value) ? `translate3d(0, ${jr}px, 0)` : `translate3d(${jr}px, 0, 0)`
        });
        return;
      }
      const Hr = 1 - qa;
      if ((Le.value || v.value && ce.value === v.value - 1) && (t(qa), Qt(
        (St = I.value) == null ? void 0 : St.$el,
        {
          opacity: `${Hr}`,
          transition: "none"
        },
        !0
      )), wn && I.value && d.value) {
        const Cn = Math.min(ae() + qa * (1 - ae()), 1), jr = 8 - qa * 8, ao = Math.max(0, 14 - qa * 14);
        Qt(
          wn,
          {
            borderRadius: `${jr}px`,
            transform: qt(m.value) ? `scale(${Cn}) translate3d(0, ${ao}px, 0)` : `scale(${Cn}) translate3d(${ao}px, 0, 0)`,
            transition: "none"
          },
          !0
        );
      }
      if (!q.value) {
        const Cn = xa * za;
        Qt((ia = G.value) == null ? void 0 : ia.$el, {
          transform: qt(m.value) ? `translate3d(0, ${Cn}px, 0)` : `translate3d(${Cn}px, 0, 0)`
        });
      }
    }
  }
  function re() {
    var Ae;
    if (!G.value)
      return;
    const ge = document.querySelector("[data-vaul-drawer-wrapper]") || document.querySelector("[vaul-drawer-wrapper]"), Fe = Io(G.value.$el, m.value);
    Qt(G.value.$el, {
      transform: "translate3d(0, 0, 0)",
      transition: `transform ${kt.DURATION}s cubic-bezier(${kt.EASE.join(",")})`
    }), Qt((Ae = I.value) == null ? void 0 : Ae.$el, {
      transition: `opacity ${kt.DURATION}s cubic-bezier(${kt.EASE.join(",")})`,
      opacity: "1"
    }), d.value && Fe && Fe > 0 && C.value && Qt(
      ge,
      {
        borderRadius: `${z1}px`,
        overflow: "hidden",
        ...qt(m.value) ? {
          transform: `scale(${ae()}) translate3d(0, calc(env(safe-area-inset-top) + 14px), 0)`,
          transformOrigin: "top"
        } : {
          transform: `scale(${ae()}) translate3d(calc(env(safe-area-inset-top) + 14px), 0, 0)`,
          transformOrigin: "left"
        },
        transitionProperty: "transform, border-radius",
        transitionDuration: `${kt.DURATION}s`,
        transitionTimingFunction: `cubic-bezier(${kt.EASE.join(",")})`
      },
      !0
    );
  }
  function de(Ae) {
    G.value && (n(), Ae || (C.value = !1), window.setTimeout(() => {
      q.value && (g.value = q.value[0]);
    }, kt.DURATION * 1e3));
  }
  ot(() => {
    if (!C.value && d.value && wH) {
      const Ae = setTimeout(() => {
        _H(document.body);
      }, 200);
      return () => clearTimeout(Ae);
    }
  }), ye(s, () => {
    C.value = s.value, s.value || de();
  });
  function _e(Ae) {
    if (!$.value || !G.value)
      return;
    G.value.$el.classList.remove(Zh), H.value = !1, $.value = !1, R.value = /* @__PURE__ */ new Date();
    const ge = Io(G.value.$el, m.value);
    if (!be(Ae.target, !1) || !ge || Number.isNaN(ge) || P.value === null)
      return;
    const Fe = R.value.getTime() - P.value.getTime(), ve = K.value - (qt(m.value) ? Ae.clientY : Ae.clientX), ct = Math.abs(ve) / Fe;
    if (ct > 0.05 && (B.value = !0, window.setTimeout(() => {
      B.value = !1;
    }, 200)), q.value) {
      const ia = m.value === "bottom" || m.value === "right" ? 1 : -1;
      oe({
        draggedDistance: ve * ia,
        closeDrawer: de,
        velocity: ct,
        dismissible: i.value
      }), a(!0);
      return;
    }
    if (m.value === "bottom" || m.value === "right" ? ve > 0 : ve < 0) {
      re(), a(!0);
      return;
    }
    if (ct > F1) {
      de(), a(!1);
      return;
    }
    const St = Math.min(
      G.value.$el.getBoundingClientRect().height ?? 0,
      window.innerHeight
    );
    if (ge >= St * p.value) {
      de(), a(!1);
      return;
    }
    a(!0), re();
  }
  ye(C, (Ae) => {
    Ae && (E.value = /* @__PURE__ */ new Date()), r(Ae);
  }, { immediate: !0 });
  function ie(Ae) {
    var ge, Fe;
    const ve = Ae ? (window.innerWidth - Eo) / window.innerWidth : 1, ct = Ae ? -16 : 0;
    j.value && window.clearTimeout(j.value), Qt((ge = G.value) == null ? void 0 : ge.$el, {
      transition: `transform ${kt.DURATION}s cubic-bezier(${kt.EASE.join(",")})`,
      transform: `scale(${ve}) translate3d(0, ${ct}px, 0)`
    }), !Ae && (Fe = G.value) != null && Fe.$el && (j.value = window.setTimeout(() => {
      var St, ia;
      const za = Io((St = G.value) == null ? void 0 : St.$el, m.value);
      Qt((ia = G.value) == null ? void 0 : ia.$el, {
        transition: "none",
        transform: qt(m.value) ? `translate3d(0, ${za}px, 0)` : `translate3d(${za}px, 0, 0)`
      });
    }, 500));
  }
  function Ne(Ae) {
    var ge;
    if (Ae < 0)
      return;
    const Fe = qt(m.value) ? window.innerHeight : window.innerWidth, ve = (Fe - Eo) / Fe, ct = ve + Ae * (1 - ve), St = -16 + Ae * Eo;
    Qt((ge = G.value) == null ? void 0 : ge.$el, {
      transform: qt(m.value) ? `scale(${ct}) translate3d(0, ${St}px, 0)` : `scale(${ct}) translate3d(${St}px, 0, 0)`,
      transition: "none"
    });
  }
  function Oe(Ae) {
    var ge;
    const Fe = qt(m.value) ? window.innerHeight : window.innerWidth, ve = Ae ? (Fe - Eo) / Fe : 1, ct = Ae ? -16 : 0;
    Ae && Qt((ge = G.value) == null ? void 0 : ge.$el, {
      transition: `transform ${kt.DURATION}s cubic-bezier(${kt.EASE.join(",")})`,
      transform: qt(m.value) ? `scale(${ve}) translate3d(0, ${ct}px, 0)` : `scale(${ve}) translate3d(${ct}px, 0, 0)`
    });
  }
  return {
    open: s,
    isOpen: C,
    modal: l,
    keyboardIsOpen: z,
    hasBeenOpened: w,
    drawerRef: G,
    drawerHeightRef: Y,
    overlayRef: I,
    handleRef: se,
    isDragging: $,
    dragStartTime: P,
    isAllowedToDrag: H,
    snapPoints: q,
    activeSnapPoint: g,
    hasSnapPoints: Q,
    pointerStart: K,
    dismissible: i,
    snapPointsOffset: xe,
    direction: m,
    shouldFade: Le,
    fadeFromIndex: v,
    shouldScaleBackground: d,
    setBackgroundColorOnScale: c,
    onPress: De,
    onDrag: Ke,
    onRelease: _e,
    closeDrawer: de,
    onNestedDrag: Ne,
    onNestedRelease: Oe,
    onNestedOpenChange: ie,
    emitClose: n,
    emitDrag: t,
    emitRelease: a,
    emitOpenChange: r,
    nested: o,
    handleOnly: x,
    noBodyStyles: y
  };
}
const V1 = /* @__PURE__ */ L({
  __name: "DrawerRoot",
  props: {
    activeSnapPoint: { default: void 0 },
    closeThreshold: { default: $H },
    shouldScaleBackground: { type: Boolean, default: void 0 },
    setBackgroundColorOnScale: { type: Boolean, default: !0 },
    scrollLockTimeout: { default: IH },
    fixed: { type: Boolean, default: void 0 },
    dismissible: { type: Boolean, default: !0 },
    modal: { type: Boolean, default: !0 },
    open: { type: Boolean, default: void 0 },
    defaultOpen: { type: Boolean, default: void 0 },
    nested: { type: Boolean, default: !1 },
    direction: { default: "bottom" },
    noBodyStyles: { type: Boolean },
    handleOnly: { type: Boolean, default: !1 },
    preventScrollRestoration: { type: Boolean },
    snapPoints: { default: void 0 },
    fadeFromIndex: { default: void 0 }
  },
  emits: ["drag", "release", "close", "update:open", "update:activeSnapPoint", "animationEnd"],
  setup(e, { expose: t, emit: a }) {
    const n = e, r = a;
    Se();
    const s = T(() => n.fadeFromIndex ?? (n.snapPoints && n.snapPoints.length - 1)), i = Qh(n, "open", r, {
      defaultValue: n.defaultOpen,
      passive: n.open === void 0
    }), o = Qh(n, "activeSnapPoint", r, {
      passive: n.activeSnapPoint === void 0
    }), l = {
      emitDrag: (v) => r("drag", v),
      emitRelease: (v) => r("release", v),
      emitClose: () => r("close"),
      emitOpenChange: (v) => {
        r("update:open", v), setTimeout(() => {
          r("animationEnd", v);
        }, kt.DURATION * 1e3);
      }
    }, { closeDrawer: d, hasBeenOpened: c, modal: f, isOpen: p } = SH(
      PH({
        ...l,
        ...We(n),
        activeSnapPoint: o,
        fadeFromIndex: s,
        open: i
      })
    );
    function g(v) {
      if (i.value !== void 0) {
        l.emitOpenChange(v);
        return;
      }
      p.value = v, v ? c.value = !0 : d();
    }
    return t({
      open: p
    }), (v, m) => (h(), k(u(of), {
      open: u(p),
      modal: u(f),
      "onUpdate:open": g
    }, {
      default: _(() => [
        S(v.$slots, "default", { open: u(p) })
      ]),
      _: 3
    }, 8, ["open", "modal"]));
  }
}), DH = /* @__PURE__ */ L({
  __name: "DrawerRootNested",
  props: {
    activeSnapPoint: {},
    closeThreshold: {},
    shouldScaleBackground: { type: Boolean },
    setBackgroundColorOnScale: { type: Boolean },
    scrollLockTimeout: {},
    fixed: { type: Boolean },
    dismissible: { type: Boolean },
    modal: { type: Boolean },
    open: { type: Boolean },
    defaultOpen: { type: Boolean },
    nested: { type: Boolean },
    direction: {},
    noBodyStyles: { type: Boolean },
    handleOnly: { type: Boolean },
    preventScrollRestoration: { type: Boolean },
    snapPoints: {},
    fadeFromIndex: {}
  },
  emits: ["drag", "release", "close", "update:open", "update:activeSnapPoint", "animationEnd"],
  setup(e, { emit: t }) {
    const a = e, n = t, { onNestedDrag: r, onNestedOpenChange: s, onNestedRelease: i } = to();
    function o() {
      s(!1);
    }
    function l(f) {
      r(f);
    }
    function d(f) {
      f && s(f), n("update:open", f);
    }
    const c = Xe(a, n);
    return (f, p) => (h(), k(V1, O(u(c), {
      nested: "",
      onClose: o,
      onDrag: l,
      onRelease: u(i),
      "onUpdate:open": d
    }), {
      default: _(() => [
        S(f.$slots, "default")
      ]),
      _: 3
    }, 16, ["onRelease"]));
  }
}), MH = /* @__PURE__ */ L({
  __name: "DrawerOverlay",
  setup(e) {
    const { overlayRef: t, hasSnapPoints: a, isOpen: n, shouldFade: r } = to();
    return (s, i) => (h(), k(u(ff), {
      ref_key: "overlayRef",
      ref: t,
      "data-vaul-overlay": "",
      "data-vaul-snap-points": u(n) && u(a) ? "true" : "false",
      "data-vaul-snap-points-overlay": u(n) && u(r) ? "true" : "false"
    }, null, 8, ["data-vaul-snap-points", "data-vaul-snap-points-overlay"]));
  }
}), RH = () => () => {
};
function LH() {
  const { direction: e, isOpen: t, shouldScaleBackground: a, setBackgroundColorOnScale: n, noBodyStyles: r } = to(), s = N(null), i = N(document.body.style.backgroundColor);
  function o() {
    return (window.innerWidth - q1) / window.innerWidth;
  }
  ot((l) => {
    if (t.value && a.value) {
      s.value && clearTimeout(s.value);
      const d = document.querySelector("[data-vaul-drawer-wrapper]") || document.querySelector("[vaul-drawer-wrapper]");
      if (!d)
        return;
      AH(
        n.value && !r.value ? Uu(document.body, { background: "black" }) : RH,
        Uu(d, {
          transformOrigin: qt(e.value) ? "top" : "left",
          transitionProperty: "transform, border-radius",
          transitionDuration: `${kt.DURATION}s`,
          transitionTimingFunction: `cubic-bezier(${kt.EASE.join(",")})`
        })
      );
      const c = Uu(d, {
        borderRadius: `${z1}px`,
        overflow: "hidden",
        ...qt(e.value) ? {
          transform: `scale(${o()}) translate3d(0, calc(env(safe-area-inset-top) + 14px), 0)`
        } : {
          transform: `scale(${o()}) translate3d(calc(env(safe-area-inset-top) + 14px), 0, 0)`
        }
      });
      l(() => {
        c(), s.value = window.setTimeout(() => {
          i.value ? document.body.style.background = i.value : document.body.style.removeProperty("background");
        }, kt.DURATION * 1e3);
      });
    }
  }, { flush: "pre" });
}
const OH = /* @__PURE__ */ L({
  __name: "DrawerContent",
  setup(e) {
    const {
      open: t,
      isOpen: a,
      snapPointsOffset: n,
      hasSnapPoints: r,
      drawerRef: s,
      onPress: i,
      onDrag: o,
      onRelease: l,
      modal: d,
      emitOpenChange: c,
      dismissible: f,
      keyboardIsOpen: p,
      closeDrawer: g,
      direction: v,
      handleOnly: m
    } = to();
    LH();
    const y = N(!1), x = T(() => n.value && n.value.length > 0 ? `${n.value[0]}px` : "0");
    function b($) {
      if (!d.value || $.defaultPrevented) {
        $.preventDefault();
        return;
      }
      p.value && (p.value = !1), f.value ? c(!1) : $.preventDefault();
    }
    function C($) {
      m.value || i($);
    }
    function w($) {
      m.value || o($);
    }
    return ot(() => {
      r.value && window.requestAnimationFrame(() => {
        y.value = !0;
      });
    }), ($, B) => (h(), k(u(cf), {
      ref_key: "drawerRef",
      ref: s,
      "data-vaul-drawer": "",
      "data-vaul-drawer-direction": u(v),
      "data-vaul-delayed-snap-points": y.value ? "true" : "false",
      "data-vaul-snap-points": u(a) && u(r) ? "true" : "false",
      style: It({ "--snap-point-height": x.value }),
      onPointerdown: C,
      onPointermove: w,
      onPointerup: u(l),
      onPointerDownOutside: b,
      onOpenAutoFocus: B[0] || (B[0] = ze(() => {
      }, ["prevent"])),
      onEscapeKeyDown: B[1] || (B[1] = (I) => {
        u(f) || I.preventDefault();
      })
    }, {
      default: _(() => [
        S($.$slots, "default")
      ]),
      _: 3
    }, 8, ["data-vaul-drawer-direction", "data-vaul-delayed-snap-points", "data-vaul-snap-points", "style", "onPointerup"]));
  }
}), FH = ["data-vaul-drawer-visible"], zH = {
  "data-vaul-handle-hitarea": "",
  "aria-hidden": "true"
}, qH = 250, VH = 120, NH = /* @__PURE__ */ L({
  __name: "DrawerHandle",
  props: {
    preventCycle: { type: Boolean, default: !1 }
  },
  setup(e) {
    const t = e, { onPress: a, onDrag: n, handleRef: r, handleOnly: s, isOpen: i, snapPoints: o, activeSnapPoint: l, isDragging: d, dismissible: c, closeDrawer: f } = to(), p = N(null), g = N(!1);
    function v() {
      if (g.value) {
        x();
        return;
      }
      window.setTimeout(() => {
        m();
      }, VH);
    }
    function m() {
      if (d.value || t.preventCycle || g.value) {
        x();
        return;
      }
      if (x(), !o.value || o.value.length === 0) {
        c.value || f();
        return;
      }
      const w = l.value === o.value[o.value.length - 1];
      if (w && c.value) {
        f();
        return;
      }
      const $ = o.value.findIndex((I) => I === l.value);
      if ($ === -1)
        return;
      const B = w ? 0 : $ + 1;
      l.value = o.value[B];
    }
    function y() {
      p.value = window.setTimeout(() => {
        g.value = !0;
      }, qH);
    }
    function x() {
      p.value && window.clearTimeout(p.value), g.value = !1;
    }
    function b(w) {
      s.value && a(w), y();
    }
    function C(w) {
      s.value && n(w);
    }
    return (w, $) => (h(), M("div", {
      ref_key: "handleRef",
      ref: r,
      "data-vaul-drawer-visible": u(i) ? "true" : "false",
      "data-vaul-handle": "",
      "aria-hidden": "true",
      onClick: v,
      onPointercancel: x,
      onPointerdown: b,
      onPointermove: C
    }, [
      J("span", zH, [
        S(w.$slots, "default")
      ])
    ], 40, FH));
  }
}), HH = {
  slots: {
    overlay: "fixed inset-0 bg-elevated/75",
    content: "fixed bg-default ring ring-default flex focus:outline-none",
    handle: [
      "shrink-0 !bg-accented",
      "transition-opacity"
    ],
    container: "w-full flex flex-col gap-4 p-4 overflow-y-auto",
    header: "",
    title: "text-highlighted font-semibold",
    description: "mt-1 text-muted text-sm",
    body: "flex-1",
    footer: "flex flex-col gap-1.5"
  },
  variants: {
    direction: {
      top: {
        content: "mb-24 flex-col-reverse",
        handle: "mb-4"
      },
      right: {
        content: "flex-row",
        handle: "!ml-4"
      },
      bottom: {
        content: "mt-24 flex-col",
        handle: "mt-4"
      },
      left: {
        content: "flex-row-reverse",
        handle: "!mr-4"
      }
    },
    inset: {
      true: {
        content: "rounded-lg after:hidden overflow-hidden [--initial-transform:calc(100%+1.5rem)]"
      }
    }
  },
  compoundVariants: [
    {
      direction: [
        "top",
        "bottom"
      ],
      class: {
        content: "h-auto max-h-[96%]",
        handle: "!w-12 !h-1.5 mx-auto"
      }
    },
    {
      direction: [
        "right",
        "left"
      ],
      class: {
        content: "w-auto max-w-[calc(100%-2rem)]",
        handle: "!h-12 !w-1.5 mt-auto mb-auto"
      }
    },
    {
      direction: "top",
      inset: !0,
      class: {
        content: "inset-x-4 top-4"
      }
    },
    {
      direction: "top",
      inset: !1,
      class: {
        content: "inset-x-0 top-0 rounded-b-lg"
      }
    },
    {
      direction: "bottom",
      inset: !0,
      class: {
        content: "inset-x-4 bottom-4"
      }
    },
    {
      direction: "bottom",
      inset: !1,
      class: {
        content: "inset-x-0 bottom-0 rounded-t-lg"
      }
    },
    {
      direction: "left",
      inset: !0,
      class: {
        content: "inset-y-4 left-4"
      }
    },
    {
      direction: "left",
      inset: !1,
      class: {
        content: "inset-y-0 left-0 rounded-r-lg"
      }
    },
    {
      direction: "right",
      inset: !0,
      class: {
        content: "inset-y-4 right-4"
      }
    },
    {
      direction: "right",
      inset: !1,
      class: {
        content: "inset-y-0 right-0 rounded-l-lg"
      }
    }
  ]
}, N1 = /* @__PURE__ */ L({
  __name: "Drawer",
  props: {
    as: {},
    title: {},
    description: {},
    inset: { type: Boolean },
    content: {},
    overlay: { type: Boolean, default: !0 },
    handle: { type: Boolean, default: !0 },
    portal: { type: [Boolean, String], default: !0 },
    nested: { type: Boolean },
    class: {},
    ui: {},
    activeSnapPoint: {},
    closeThreshold: {},
    shouldScaleBackground: { type: Boolean },
    setBackgroundColorOnScale: { type: Boolean },
    scrollLockTimeout: {},
    fixed: { type: Boolean },
    dismissible: { type: Boolean, default: !0 },
    modal: { type: Boolean, default: !0 },
    open: { type: Boolean },
    defaultOpen: { type: Boolean },
    direction: { default: "bottom" },
    noBodyStyles: { type: Boolean },
    handleOnly: { type: Boolean },
    preventScrollRestoration: { type: Boolean },
    snapPoints: {}
  },
  emits: ["drag", "release", "close", "update:open", "update:activeSnapPoint", "animationEnd"],
  setup(e, { emit: t }) {
    const a = e, n = t, r = Se(), s = ue(), i = Xe(tt(a, "activeSnapPoint", "closeThreshold", "shouldScaleBackground", "setBackgroundColorOnScale", "scrollLockTimeout", "fixed", "dismissible", "modal", "open", "defaultOpen", "nested", "direction", "noBodyStyles", "handleOnly", "preventScrollRestoration", "snapPoints"), n), o = tn(Ge(() => a.portal)), l = Ge(() => a.content), d = {
      closeAutoFocus: (f) => f.preventDefault()
    }, c = T(() => W({ extend: W(HH), ...s.ui?.drawer || {} })({
      direction: a.direction,
      inset: a.inset
    }));
    return (f, p) => (h(), k(ut(f.nested ? u(DH) : u(V1)), pe(me(u(i))), {
      default: _(() => [
        r.default ? (h(), k(u(gf), {
          key: 0,
          "as-child": "",
          class: A(a.class)
        }, {
          default: _(() => [
            S(f.$slots, "default")
          ]),
          _: 3
        }, 8, ["class"])) : D("", !0),
        V(u(pf), pe(me(u(o))), {
          default: _(() => [
            f.overlay ? (h(), k(u(MH), {
              key: 0,
              class: A(c.value.overlay({ class: a.ui?.overlay }))
            }, null, 8, ["class"])) : D("", !0),
            V(u(OH), O({
              class: c.value.content({ class: [!r.default && a.class, a.ui?.content] })
            }, l.value, Ri(d)), {
              default: _(() => [
                f.handle ? (h(), k(u(NH), {
                  key: 0,
                  class: A(c.value.handle({ class: a.ui?.handle }))
                }, null, 8, ["class"])) : D("", !0),
                r.content && (f.title || r.title || f.description || r.description) ? (h(), k(u(Fn), { key: 1 }, {
                  default: _(() => [
                    f.title || r.title ? (h(), k(u(bs), { key: 0 }, {
                      default: _(() => [
                        S(f.$slots, "title", {}, () => [
                          ee(X(f.title), 1)
                        ])
                      ]),
                      _: 3
                    })) : D("", !0),
                    f.description || r.description ? (h(), k(u(ys), { key: 1 }, {
                      default: _(() => [
                        S(f.$slots, "description", {}, () => [
                          ee(X(f.description), 1)
                        ])
                      ]),
                      _: 3
                    })) : D("", !0)
                  ]),
                  _: 3
                })) : D("", !0),
                S(f.$slots, "content", {}, () => [
                  J("div", {
                    class: A(c.value.container({ class: a.ui?.container }))
                  }, [
                    r.header || f.title || r.title || f.description || r.description ? (h(), M("div", {
                      key: 0,
                      class: A(c.value.header({ class: a.ui?.header }))
                    }, [
                      S(f.$slots, "header", {}, () => [
                        f.title || r.title ? (h(), k(u(bs), {
                          key: 0,
                          class: A(c.value.title({ class: a.ui?.title }))
                        }, {
                          default: _(() => [
                            S(f.$slots, "title", {}, () => [
                              ee(X(f.title), 1)
                            ])
                          ]),
                          _: 3
                        }, 8, ["class"])) : D("", !0),
                        f.description || r.description ? (h(), k(u(ys), {
                          key: 1,
                          class: A(c.value.description({ class: a.ui?.description }))
                        }, {
                          default: _(() => [
                            S(f.$slots, "description", {}, () => [
                              ee(X(f.description), 1)
                            ])
                          ]),
                          _: 3
                        }, 8, ["class"])) : D("", !0)
                      ])
                    ], 2)) : D("", !0),
                    r.body ? (h(), M("div", {
                      key: 1,
                      class: A(c.value.body({ class: a.ui?.body }))
                    }, [
                      S(f.$slots, "body")
                    ], 2)) : D("", !0),
                    r.footer ? (h(), M("div", {
                      key: 2,
                      class: A(c.value.footer({ class: a.ui?.footer }))
                    }, [
                      S(f.$slots, "footer")
                    ], 2)) : D("", !0)
                  ], 2)
                ])
              ]),
              _: 3
            }, 16, ["class"])
          ]),
          _: 3
        }, 16)
      ]),
      _: 3
    }, 16));
  }
}), jH = {
  slots: {
    root: "relative hidden lg:flex flex-col min-h-svh min-w-16 w-(--width) shrink-0",
    header: "h-(--ui-header-height) shrink-0 flex items-center gap-1.5 px-4",
    body: "flex flex-col gap-4 flex-1 overflow-y-auto px-4 py-2",
    footer: "shrink-0 flex items-center gap-1.5 px-4 py-2",
    toggle: "",
    handle: "",
    content: "lg:hidden",
    overlay: "lg:hidden"
  },
  variants: {
    menu: {
      true: {
        header: "sm:px-6",
        body: "sm:px-6",
        footer: "sm:px-6"
      }
    },
    side: {
      left: {
        root: "border-r border-default"
      },
      right: {
        root: ""
      }
    },
    toggleSide: {
      left: {
        toggle: ""
      },
      right: {
        toggle: "ms-auto"
      }
    }
  }
}, KH = ["data-collapsed", "data-dragging"], z4 = /* @__PURE__ */ L({
  inheritAttrs: !1,
  __name: "DashboardSidebar",
  props: /* @__PURE__ */ mt({
    mode: { default: "slideover" },
    menu: {},
    toggle: { type: [Boolean, Object], default: !0 },
    toggleSide: { default: "left" },
    class: {},
    ui: {},
    id: {},
    side: { default: "left" },
    minSize: { default: 10 },
    maxSize: { default: 20 },
    defaultSize: { default: 15 },
    resizable: { type: Boolean, default: !1 },
    collapsible: { type: Boolean, default: !1 },
    collapsedSize: { default: 0 }
  }, {
    open: { type: Boolean, default: !1 },
    openModifiers: {},
    collapsed: { type: Boolean, default: !1 },
    collapsedModifiers: {}
  }),
  emits: ["update:open", "update:collapsed"],
  setup(e) {
    const t = e, a = Se(), n = lt(e, "open"), r = lt(e, "collapsed"), s = Nf(), { t: i } = it(), o = ue(), l = js({
      storageKey: "dashboard",
      unit: "%",
      sidebarOpen: N(!1),
      sidebarCollapsed: N(!1)
    }), d = `${l.storageKey}-sidebar-${t.id || Rn()}`, { el: c, size: f, collapse: p, isCollapsed: g, isDragging: v, onMouseDown: m, onTouchStart: y, onDoubleClick: x } = M1(d, Ge(() => ({ ...l, ...t })), { collapsed: r }), [b, C] = /* @__PURE__ */ Lt(), [w, $] = /* @__PURE__ */ Lt();
    Ld("dashboard:sidebar:toggle", () => {
      n.value = !n.value;
    }), Ld("dashboard:sidebar:collapse", (R) => {
      g.value = R;
    }), ye(n, () => l.sidebarOpen.value = n.value, { immediate: !0 }), ye(g, () => l.sidebarCollapsed.value = g.value, { immediate: !0 }), ye(() => s.fullPath, () => {
      n.value = !1;
    });
    const B = T(() => W({ extend: W(jH), ...o.ui?.dashboardSidebar || {} })({
      side: t.side
    })), I = T(() => ({
      slideover: L1,
      modal: Ip,
      drawer: N1
    })[t.mode]), E = Ge(() => Ct(t.menu, {
      content: {
        onOpenAutoFocus: (R) => R.preventDefault()
      }
    }, t.mode === "modal" ? { fullscreen: !0, transition: !1 } : t.mode === "slideover" ? { side: "left" } : {}));
    function P() {
      n.value = !n.value;
    }
    return (R, F) => (h(), M(te, null, [
      V(u(b), null, {
        default: _(() => [
          S(R.$slots, "toggle", {
            open: n.value,
            toggle: P
          }, () => [
            R.toggle ? (h(), k(D1, O({ key: 0 }, typeof R.toggle == "object" ? R.toggle : {}, {
              side: R.toggleSide,
              class: B.value.toggle({ class: t.ui?.toggle, toggleSide: R.toggleSide })
            }), null, 16, ["side", "class"])) : D("", !0)
          ])
        ]),
        _: 3
      }),
      V(u(w), null, {
        default: _(() => [
          S(R.$slots, "resize-handle", {
            onMouseDown: u(m),
            onTouchStart: u(y),
            onDoubleClick: u(x)
          }, () => [
            R.resizable ? (h(), k(R1, {
              key: 0,
              "aria-controls": d,
              class: A(B.value.handle({ class: t.ui?.handle })),
              onMousedown: u(m),
              onTouchstart: u(y),
              onDblclick: u(x)
            }, null, 8, ["class", "onMousedown", "onTouchstart", "onDblclick"])) : D("", !0)
          ])
        ]),
        _: 3
      }),
      R.side === "right" ? (h(), k(u($), { key: 0 })) : D("", !0),
      J("div", O({
        id: d,
        ref_key: "el",
        ref: c
      }, R.$attrs, {
        "data-collapsed": u(g),
        "data-dragging": u(v),
        class: B.value.root({ class: [t.ui?.root, t.class] }),
        style: { "--width": `${u(f) || 0}${u(l).unit}` }
      }), [
        a.header ? (h(), M("div", {
          key: 0,
          class: A(B.value.header({ class: t.ui?.header }))
        }, [
          S(R.$slots, "header", {
            collapsed: u(g),
            collapse: u(p)
          })
        ], 2)) : D("", !0),
        J("div", {
          class: A(B.value.body({ class: t.ui?.body }))
        }, [
          S(R.$slots, "default", {
            collapsed: u(g),
            collapse: u(p)
          })
        ], 2),
        a.footer ? (h(), M("div", {
          key: 1,
          class: A(B.value.footer({ class: t.ui?.footer }))
        }, [
          S(R.$slots, "footer", {
            collapsed: u(g),
            collapse: u(p)
          })
        ], 2)) : D("", !0)
      ], 16, KH),
      R.side === "left" ? (h(), k(u($), { key: 1 })) : D("", !0),
      V(u(I), O({
        open: n.value,
        "onUpdate:open": F[0] || (F[0] = (H) => n.value = H),
        title: u(i)("dashboardSidebar.title"),
        description: u(i)("dashboardSidebar.description")
      }, E.value, {
        ui: {
          overlay: B.value.overlay({ class: t.ui?.overlay }),
          content: B.value.content({ class: t.ui?.content })
        }
      }), {
        content: _(() => [
          S(R.$slots, "content", {}, () => [
            a.header || R.mode !== "drawer" ? (h(), M("div", {
              key: 0,
              class: A(B.value.header({ class: t.ui?.header, menu: !0 }))
            }, [
              R.mode !== "drawer" && R.toggleSide === "left" ? (h(), k(u(C), { key: 0 })) : D("", !0),
              S(R.$slots, "header"),
              R.mode !== "drawer" && R.toggleSide === "right" ? (h(), k(u(C), { key: 1 })) : D("", !0)
            ], 2)) : D("", !0),
            J("div", {
              class: A(B.value.body({ class: t.ui?.body, menu: !0 }))
            }, [
              S(R.$slots, "default")
            ], 2),
            a.footer ? (h(), M("div", {
              key: 1,
              class: A(B.value.footer({ class: t.ui?.footer, menu: !0 }))
            }, [
              S(R.$slots, "footer")
            ], 2)) : D("", !0)
          ])
        ]),
        _: 3
      }, 16, ["open", "title", "description", "ui"])
    ], 64));
  }
}), GH = {
  base: "hidden lg:flex",
  variants: {
    side: {
      left: "",
      right: ""
    }
  }
}, q4 = /* @__PURE__ */ L({
  __name: "DashboardSidebarCollapse",
  props: {
    side: { default: "left" },
    color: { default: "neutral" },
    variant: { default: "ghost" },
    class: {}
  },
  setup(e) {
    const t = e, a = xt(tt(t, "color", "variant", "size")), { t: n } = it(), r = ue(), { sidebarCollapsed: s, collapseSidebar: i } = js({ sidebarCollapsed: N(!1), collapseSidebar: () => {
    } }), o = T(() => W({ extend: W(GH), ...r.ui?.dashboardSidebarCollapse || {} }));
    return (l, d) => (h(), k(Je, O(u(a), {
      "aria-label": u(s) ? u(n)("dashboardSidebarCollapse.expand") : u(n)("dashboardSidebarCollapse.collapse"),
      icon: u(s) ? u(r).ui.icons.panelOpen : u(r).ui.icons.panelClose,
      class: o.value({ class: t.class, side: t.side }),
      onClick: d[0] || (d[0] = (c) => u(i)?.(!u(s)))
    }), null, 16, ["aria-label", "icon", "class"]));
  }
}), UH = {
  slots: {
    root: "shrink-0 flex items-center justify-between border-b border-default px-4 sm:px-6 gap-1.5 overflow-x-auto min-h-[49px]",
    left: "flex items-center gap-1.5",
    right: "flex items-center gap-1.5"
  }
}, V4 = /* @__PURE__ */ L({
  __name: "DashboardToolbar",
  props: {
    as: {},
    class: {},
    ui: {}
  },
  setup(e) {
    const t = e, a = ue(), n = T(() => W({ extend: W(UH), ...a.ui?.dashboardToolbar || {} })());
    return (r, s) => (h(), k(u(U), {
      as: r.as,
      class: A(n.value.root({ class: [t.ui?.root, t.class] }))
    }, {
      default: _(() => [
        S(r.$slots, "default", {}, () => [
          J("div", {
            class: A(n.value.left({ class: [t.ui?.left] }))
          }, [
            S(r.$slots, "left")
          ], 2),
          J("div", {
            class: A(n.value.right({ class: [t.ui?.right] }))
          }, [
            S(r.$slots, "right")
          ], 2)
        ])
      ]),
      _: 3
    }, 8, ["as", "class"]));
  }
}), H1 = /* @__PURE__ */ L({
  __name: "DropdownMenuContent",
  props: {
    items: {},
    portal: { type: [Boolean, String] },
    sub: { type: Boolean },
    labelKey: {},
    checkedIcon: {},
    loadingIcon: {},
    externalIcon: { type: [Boolean, String, Object] },
    class: {},
    ui: {},
    uiOverride: {},
    loop: { type: Boolean },
    side: {},
    sideOffset: {},
    sideFlip: { type: Boolean },
    align: {},
    alignOffset: {},
    alignFlip: { type: Boolean },
    avoidCollisions: { type: Boolean },
    collisionBoundary: {},
    collisionPadding: {},
    arrowPadding: {},
    sticky: {},
    hideWhenDetached: { type: Boolean },
    positionStrategy: {},
    updatePositionStrategy: {},
    disableUpdateOnLayoutShift: { type: Boolean },
    prioritizePosition: { type: Boolean },
    reference: {}
  },
  emits: ["escapeKeyDown", "pointerDownOutside", "focusOutside", "interactOutside", "closeAutoFocus"],
  setup(e, { emit: t }) {
    const a = e, n = t, r = Se(), { dir: s } = it(), i = ue(), o = tn(Ge(() => a.portal)), l = Xe(Ui(a, "sub", "items", "portal", "labelKey", "checkedIcon", "loadingIcon", "externalIcon", "class", "ui", "uiOverride"), n), d = Mt(r, ["default"]), [c, f] = /* @__PURE__ */ Lt(), p = T(() => s.value === "rtl" ? i.ui.icons.chevronLeft : i.ui.icons.chevronRight), g = T(
      () => a.items?.length ? Ps(a.items) ? a.items : [a.items] : []
    );
    return (v, m) => (h(), M(te, null, [
      V(u(c), null, {
        default: _(({ item: y, active: x, index: b }) => [
          S(v.$slots, y.slot || "item", {
            item: y,
            index: b
          }, () => [
            S(v.$slots, y.slot ? `${y.slot}-leading` : "item-leading", {
              item: y,
              active: x,
              index: b
            }, () => [
              y.loading ? (h(), k(he, {
                key: 0,
                name: v.loadingIcon || u(i).ui.icons.loading,
                class: A(v.ui.itemLeadingIcon({ class: [v.uiOverride?.itemLeadingIcon, y.ui?.itemLeadingIcon], color: y?.color, loading: !0 }))
              }, null, 8, ["name", "class"])) : y.icon ? (h(), k(he, {
                key: 1,
                name: y.icon,
                class: A(v.ui.itemLeadingIcon({ class: [v.uiOverride?.itemLeadingIcon, y.ui?.itemLeadingIcon], color: y?.color, active: x }))
              }, null, 8, ["name", "class"])) : y.avatar ? (h(), k(ft, O({
                key: 2,
                size: y.ui?.itemLeadingAvatarSize || v.uiOverride?.itemLeadingAvatarSize || v.ui.itemLeadingAvatarSize()
              }, y.avatar, {
                class: v.ui.itemLeadingAvatar({ class: [v.uiOverride?.itemLeadingAvatar, y.ui?.itemLeadingAvatar], active: x })
              }), null, 16, ["size", "class"])) : D("", !0)
            ]),
            u(qe)(y, a.labelKey) || r[y.slot ? `${y.slot}-label` : "item-label"] ? (h(), M("span", {
              key: 0,
              class: A(v.ui.itemLabel({ class: [v.uiOverride?.itemLabel, y.ui?.itemLabel], active: x }))
            }, [
              S(v.$slots, y.slot ? `${y.slot}-label` : "item-label", {
                item: y,
                active: x,
                index: b
              }, () => [
                ee(X(u(qe)(y, a.labelKey)), 1)
              ]),
              y.target === "_blank" && v.externalIcon !== !1 ? (h(), k(he, {
                key: 0,
                name: typeof v.externalIcon == "string" ? v.externalIcon : u(i).ui.icons.external,
                class: A(v.ui.itemLabelExternalIcon({ class: [v.uiOverride?.itemLabelExternalIcon, y.ui?.itemLabelExternalIcon], color: y?.color, active: x }))
              }, null, 8, ["name", "class"])) : D("", !0)
            ], 2)) : D("", !0),
            J("span", {
              class: A(v.ui.itemTrailing({ class: [v.uiOverride?.itemTrailing, y.ui?.itemTrailing] }))
            }, [
              S(v.$slots, y.slot ? `${y.slot}-trailing` : "item-trailing", {
                item: y,
                active: x,
                index: b
              }, () => [
                y.children?.length ? (h(), k(he, {
                  key: 0,
                  name: p.value,
                  class: A(v.ui.itemTrailingIcon({ class: [v.uiOverride?.itemTrailingIcon, y.ui?.itemTrailingIcon], color: y?.color, active: x }))
                }, null, 8, ["name", "class"])) : y.kbds?.length ? (h(), M("span", {
                  key: 1,
                  class: A(v.ui.itemTrailingKbds({ class: [v.uiOverride?.itemTrailingKbds, y.ui?.itemTrailingKbds] }))
                }, [
                  (h(!0), M(te, null, le(y.kbds, (C, w) => (h(), k(eo, O({
                    key: w,
                    size: y.ui?.itemTrailingKbdsSize || v.uiOverride?.itemTrailingKbdsSize || v.ui.itemTrailingKbdsSize()
                  }, { ref_for: !0 }, typeof C == "string" ? { value: C } : C), null, 16, ["size"]))), 128))
                ], 2)) : D("", !0)
              ]),
              V(u(Na).ItemIndicator, { "as-child": "" }, {
                default: _(() => [
                  V(he, {
                    name: v.checkedIcon || u(i).ui.icons.check,
                    class: A(v.ui.itemTrailingIcon({ class: [v.uiOverride?.itemTrailingIcon, y.ui?.itemTrailingIcon], color: y?.color }))
                  }, null, 8, ["name", "class"])
                ]),
                _: 2
              }, 1024)
            ], 2)
          ])
        ]),
        _: 3
      }),
      V(u(Na).Portal, pe(me(u(o))), {
        default: _(() => [
          (h(), k(ut(v.sub ? u(Na).SubContent : u(Na).Content), O({
            class: a.class
          }, u(l)), {
            default: _(() => [
              S(v.$slots, "content-top"),
              J("div", {
                role: "presentation",
                class: A(v.ui.viewport({ class: v.uiOverride?.viewport }))
              }, [
                (h(!0), M(te, null, le(g.value, (y, x) => (h(), k(u(Na).Group, {
                  key: `group-${x}`,
                  class: A(v.ui.group({ class: v.uiOverride?.group }))
                }, {
                  default: _(() => [
                    (h(!0), M(te, null, le(y, (b, C) => (h(), M(te, {
                      key: `group-${x}-${C}`
                    }, [
                      b.type === "label" ? (h(), k(u(Na).Label, {
                        key: 0,
                        class: A(v.ui.label({ class: [v.uiOverride?.label, b.ui?.label, b.class] }))
                      }, {
                        default: _(() => [
                          V(u(f), {
                            item: b,
                            index: C
                          }, null, 8, ["item", "index"])
                        ]),
                        _: 2
                      }, 1032, ["class"])) : b.type === "separator" ? (h(), k(u(Na).Separator, {
                        key: 1,
                        class: A(v.ui.separator({ class: [v.uiOverride?.separator, b.ui?.separator, b.class] }))
                      }, null, 8, ["class"])) : b?.children?.length ? (h(), k(u(Na).Sub, {
                        key: 2,
                        open: b.open,
                        "default-open": b.defaultOpen
                      }, {
                        default: _(() => [
                          V(u(Na).SubTrigger, {
                            as: "button",
                            type: "button",
                            disabled: b.disabled,
                            "text-value": u(qe)(b, a.labelKey),
                            class: A(v.ui.item({ class: [v.uiOverride?.item, b.ui?.item, b.class], color: b?.color }))
                          }, {
                            default: _(() => [
                              V(u(f), {
                                item: b,
                                index: C
                              }, null, 8, ["item", "index"])
                            ]),
                            _: 2
                          }, 1032, ["disabled", "text-value", "class"]),
                          V(H1, O({
                            sub: "",
                            class: a.class,
                            ui: v.ui,
                            "ui-override": v.uiOverride,
                            portal: v.portal,
                            items: b.children,
                            align: "start",
                            "align-offset": -4,
                            "side-offset": 3,
                            "label-key": v.labelKey,
                            "checked-icon": v.checkedIcon,
                            "loading-icon": v.loadingIcon,
                            "external-icon": v.externalIcon
                          }, { ref_for: !0 }, b.content), Ia({ _: 2 }, [
                            le(u(d), (w, $) => ({
                              name: $,
                              fn: _((B) => [
                                S(v.$slots, $, O({ ref_for: !0 }, B))
                              ])
                            }))
                          ]), 1040, ["class", "ui", "ui-override", "portal", "items", "label-key", "checked-icon", "loading-icon", "external-icon"])
                        ]),
                        _: 2
                      }, 1032, ["open", "default-open"])) : b.type === "checkbox" ? (h(), k(u(Na).CheckboxItem, {
                        key: 3,
                        "model-value": b.checked,
                        disabled: b.disabled,
                        "text-value": u(qe)(b, a.labelKey),
                        class: A(v.ui.item({ class: [v.uiOverride?.item, b.ui?.item, b.class], color: b?.color })),
                        "onUpdate:modelValue": b.onUpdateChecked,
                        onSelect: b.onSelect
                      }, {
                        default: _(() => [
                          V(u(f), {
                            item: b,
                            index: C
                          }, null, 8, ["item", "index"])
                        ]),
                        _: 2
                      }, 1032, ["model-value", "disabled", "text-value", "class", "onUpdate:modelValue", "onSelect"])) : (h(), k(u(Na).Item, {
                        key: 4,
                        "as-child": "",
                        disabled: b.disabled,
                        "text-value": u(qe)(b, a.labelKey),
                        onSelect: b.onSelect
                      }, {
                        default: _(() => [
                          V(Wt, O({ ref_for: !0 }, u(Ga)(b), { custom: "" }), {
                            default: _(({ active: w, ...$ }) => [
                              V(ha, O({ ref_for: !0 }, $, {
                                class: v.ui.item({ class: [v.uiOverride?.item, b.ui?.item, b.class], color: b?.color, active: w })
                              }), {
                                default: _(() => [
                                  V(u(f), {
                                    item: b,
                                    active: w,
                                    index: C
                                  }, null, 8, ["item", "active", "index"])
                                ]),
                                _: 2
                              }, 1040, ["class"])
                            ]),
                            _: 2
                          }, 1040)
                        ]),
                        _: 2
                      }, 1032, ["disabled", "text-value", "onSelect"]))
                    ], 64))), 128))
                  ]),
                  _: 2
                }, 1032, ["class"]))), 128))
              ], 2),
              S(v.$slots, "default"),
              S(v.$slots, "content-bottom")
            ]),
            _: 3
          }, 16, ["class"]))
        ]),
        _: 3
      }, 16)
    ], 64));
  }
}), WH = {
  slots: {
    content: "min-w-32 bg-default shadow-lg rounded-md ring ring-default overflow-hidden data-[state=open]:animate-[scale-in_100ms_ease-out] data-[state=closed]:animate-[scale-out_100ms_ease-in] origin-(--reka-dropdown-menu-content-transform-origin) flex flex-col",
    viewport: "relative divide-y divide-default scroll-py-1 overflow-y-auto flex-1",
    arrow: "fill-default",
    group: "p-1 isolate",
    label: "w-full flex items-center font-semibold text-highlighted",
    separator: "-mx-1 my-1 h-px bg-border",
    item: "group relative w-full flex items-center select-none outline-none before:absolute before:z-[-1] before:inset-px before:rounded-md data-disabled:cursor-not-allowed data-disabled:opacity-75",
    itemLeadingIcon: "shrink-0",
    itemLeadingAvatar: "shrink-0",
    itemLeadingAvatarSize: "",
    itemTrailing: "ms-auto inline-flex gap-1.5 items-center",
    itemTrailingIcon: "shrink-0",
    itemTrailingKbds: "hidden lg:inline-flex items-center shrink-0",
    itemTrailingKbdsSize: "",
    itemLabel: "truncate",
    itemLabelExternalIcon: "inline-block size-3 align-top text-dimmed"
  },
  variants: {
    color: {
      primary: "",
      secondary: "",
      success: "",
      info: "",
      warning: "",
      error: "",
      neutral: ""
    },
    active: {
      true: {
        item: "text-highlighted before:bg-elevated",
        itemLeadingIcon: "text-default"
      },
      false: {
        item: [
          "text-default data-highlighted:text-highlighted data-[state=open]:text-highlighted data-highlighted:before:bg-elevated/50 data-[state=open]:before:bg-elevated/50",
          "transition-colors before:transition-colors"
        ],
        itemLeadingIcon: [
          "text-dimmed group-data-highlighted:text-default group-data-[state=open]:text-default",
          "transition-colors"
        ]
      }
    },
    loading: {
      true: {
        itemLeadingIcon: "animate-spin"
      }
    },
    size: {
      xs: {
        label: "p-1 text-xs gap-1",
        item: "p-1 text-xs gap-1",
        itemLeadingIcon: "size-4",
        itemLeadingAvatarSize: "3xs",
        itemTrailingIcon: "size-4",
        itemTrailingKbds: "gap-0.5",
        itemTrailingKbdsSize: "sm"
      },
      sm: {
        label: "p-1.5 text-xs gap-1.5",
        item: "p-1.5 text-xs gap-1.5",
        itemLeadingIcon: "size-4",
        itemLeadingAvatarSize: "3xs",
        itemTrailingIcon: "size-4",
        itemTrailingKbds: "gap-0.5",
        itemTrailingKbdsSize: "sm"
      },
      md: {
        label: "p-1.5 text-sm gap-1.5",
        item: "p-1.5 text-sm gap-1.5",
        itemLeadingIcon: "size-5",
        itemLeadingAvatarSize: "2xs",
        itemTrailingIcon: "size-5",
        itemTrailingKbds: "gap-0.5",
        itemTrailingKbdsSize: "md"
      },
      lg: {
        label: "p-2 text-sm gap-2",
        item: "p-2 text-sm gap-2",
        itemLeadingIcon: "size-5",
        itemLeadingAvatarSize: "2xs",
        itemTrailingIcon: "size-5",
        itemTrailingKbds: "gap-1",
        itemTrailingKbdsSize: "md"
      },
      xl: {
        label: "p-2 text-base gap-2",
        item: "p-2 text-base gap-2",
        itemLeadingIcon: "size-6",
        itemLeadingAvatarSize: "xs",
        itemTrailingIcon: "size-6",
        itemTrailingKbds: "gap-1",
        itemTrailingKbdsSize: "lg"
      }
    }
  },
  compoundVariants: [
    {
      color: "primary",
      active: !1,
      class: {
        item: "text-primary data-highlighted:text-primary data-highlighted:before:bg-primary/10 data-[state=open]:before:bg-primary/10",
        itemLeadingIcon: "text-primary/75 group-data-highlighted:text-primary group-data-[state=open]:text-primary"
      }
    },
    {
      color: "secondary",
      active: !1,
      class: {
        item: "text-secondary data-highlighted:text-secondary data-highlighted:before:bg-secondary/10 data-[state=open]:before:bg-secondary/10",
        itemLeadingIcon: "text-secondary/75 group-data-highlighted:text-secondary group-data-[state=open]:text-secondary"
      }
    },
    {
      color: "success",
      active: !1,
      class: {
        item: "text-success data-highlighted:text-success data-highlighted:before:bg-success/10 data-[state=open]:before:bg-success/10",
        itemLeadingIcon: "text-success/75 group-data-highlighted:text-success group-data-[state=open]:text-success"
      }
    },
    {
      color: "info",
      active: !1,
      class: {
        item: "text-info data-highlighted:text-info data-highlighted:before:bg-info/10 data-[state=open]:before:bg-info/10",
        itemLeadingIcon: "text-info/75 group-data-highlighted:text-info group-data-[state=open]:text-info"
      }
    },
    {
      color: "warning",
      active: !1,
      class: {
        item: "text-warning data-highlighted:text-warning data-highlighted:before:bg-warning/10 data-[state=open]:before:bg-warning/10",
        itemLeadingIcon: "text-warning/75 group-data-highlighted:text-warning group-data-[state=open]:text-warning"
      }
    },
    {
      color: "error",
      active: !1,
      class: {
        item: "text-error data-highlighted:text-error data-highlighted:before:bg-error/10 data-[state=open]:before:bg-error/10",
        itemLeadingIcon: "text-error/75 group-data-highlighted:text-error group-data-[state=open]:text-error"
      }
    },
    {
      color: "primary",
      active: !0,
      class: {
        item: "text-primary before:bg-primary/10",
        itemLeadingIcon: "text-primary"
      }
    },
    {
      color: "secondary",
      active: !0,
      class: {
        item: "text-secondary before:bg-secondary/10",
        itemLeadingIcon: "text-secondary"
      }
    },
    {
      color: "success",
      active: !0,
      class: {
        item: "text-success before:bg-success/10",
        itemLeadingIcon: "text-success"
      }
    },
    {
      color: "info",
      active: !0,
      class: {
        item: "text-info before:bg-info/10",
        itemLeadingIcon: "text-info"
      }
    },
    {
      color: "warning",
      active: !0,
      class: {
        item: "text-warning before:bg-warning/10",
        itemLeadingIcon: "text-warning"
      }
    },
    {
      color: "error",
      active: !0,
      class: {
        item: "text-error before:bg-error/10",
        itemLeadingIcon: "text-error"
      }
    }
  ],
  defaultVariants: {
    size: "md"
  }
}, N4 = /* @__PURE__ */ L({
  __name: "DropdownMenu",
  props: {
    size: {},
    items: {},
    checkedIcon: {},
    loadingIcon: {},
    externalIcon: { type: [Boolean, String, Object], default: !0 },
    content: {},
    arrow: { type: [Boolean, Object] },
    portal: { type: [Boolean, String], default: !0 },
    labelKey: { default: "label" },
    disabled: { type: Boolean },
    class: {},
    ui: {},
    defaultOpen: { type: Boolean },
    open: { type: Boolean },
    modal: { type: Boolean, default: !0 }
  },
  emits: ["update:open"],
  setup(e, { emit: t }) {
    const a = e, n = t, r = Se(), s = ue(), i = Xe(tt(a, "defaultOpen", "open", "modal"), n), o = Ge(() => Ct(a.content, { side: "bottom", sideOffset: 8, collisionPadding: 8 })), l = Ge(() => a.arrow), d = Mt(r, ["default"]), c = T(() => W({ extend: W(WH), ...s.ui?.dropdownMenu || {} })({
      size: a.size
    }));
    return (f, p) => (h(), k(u(ob), pe(me(u(i))), {
      default: _(({ open: g }) => [
        r.default ? (h(), k(u(lb), {
          key: 0,
          "as-child": "",
          class: A(a.class),
          disabled: f.disabled
        }, {
          default: _(() => [
            S(f.$slots, "default", { open: g })
          ]),
          _: 2
        }, 1032, ["class", "disabled"])) : D("", !0),
        V(H1, O({
          class: c.value.content({ class: [!r.default && a.class, a.ui?.content] }),
          ui: c.value,
          "ui-override": a.ui
        }, o.value, {
          items: f.items,
          portal: f.portal,
          "label-key": f.labelKey,
          "checked-icon": f.checkedIcon,
          "loading-icon": f.loadingIcon,
          "external-icon": f.externalIcon
        }), Ia({
          default: _(() => [
            f.arrow ? (h(), k(u(sb), O({ key: 0 }, l.value, {
              class: c.value.arrow({ class: a.ui?.arrow })
            }), null, 16, ["class"])) : D("", !0)
          ]),
          _: 2
        }, [
          le(u(d), (v, m) => ({
            name: m,
            fn: _((y) => [
              S(f.$slots, m, pe(me(y)))
            ])
          }))
        ]), 1040, ["class", "ui", "ui-override", "items", "portal", "label-key", "checked-icon", "loading-icon", "external-icon"])
      ]),
      _: 3
    }, 16));
  }
}), YH = {
  slots: {
    root: "min-h-[calc(100vh-var(--ui-header-height))] flex flex-col items-center justify-center text-center",
    statusCode: "text-base font-semibold text-primary",
    statusMessage: "mt-2 text-4xl sm:text-5xl font-bold text-highlighted text-balance",
    message: "mt-4 text-lg text-muted text-balance",
    links: "mt-8 flex items-center justify-center gap-6"
  }
}, H4 = /* @__PURE__ */ L({
  __name: "Error",
  props: {
    as: { default: "main" },
    error: {},
    redirect: { default: "/" },
    clear: { type: [Boolean, Object], default: !0 },
    class: {},
    ui: {}
  },
  setup(e) {
    const t = e, a = Se(), { t: n } = it(), r = ue(), s = T(() => W({ extend: W(YH), ...r.ui?.error || {} })());
    function i() {
      GM({ redirect: t.redirect });
    }
    return (o, l) => (h(), k(u(U), {
      as: o.as,
      class: A(s.value.root({ class: [t.ui?.root, t.class] }))
    }, {
      default: _(() => [
        t.error?.statusCode || a.statusCode ? (h(), M("p", {
          key: 0,
          class: A(s.value.statusCode({ class: t.ui?.statusCode }))
        }, [
          S(o.$slots, "statusCode", {}, () => [
            ee(X(t.error?.statusCode), 1)
          ])
        ], 2)) : D("", !0),
        t.error?.statusMessage || a.statusMessage ? (h(), M("h1", {
          key: 1,
          class: A(s.value.statusMessage({ class: t.ui?.statusMessage }))
        }, [
          S(o.$slots, "statusMessage", {}, () => [
            ee(X(t.error?.statusMessage), 1)
          ])
        ], 2)) : D("", !0),
        t.error?.message && t.error.message !== t.error.statusMessage || a.message ? (h(), M("p", {
          key: 2,
          class: A(s.value.message({ class: t.ui?.message }))
        }, [
          S(o.$slots, "message", {}, () => [
            ee(X(t.error?.message), 1)
          ])
        ], 2)) : D("", !0),
        o.clear || a.links ? (h(), M("div", {
          key: 3,
          class: A(s.value.links({ class: t.ui?.links }))
        }, [
          S(o.$slots, "links", {}, () => [
            o.clear ? (h(), k(Je, O({
              key: 0,
              size: "lg",
              color: "primary",
              variant: "solid",
              label: u(n)("error.clear")
            }, typeof o.clear == "object" ? o.clear : {}, { onClick: i }), null, 16, ["label"])) : D("", !0)
          ])
        ], 2)) : D("", !0)
      ]),
      _: 3
    }, 8, ["as", "class"]));
  }
}), XH = {
  base: "relative",
  variants: {
    size: {
      xs: "",
      sm: "",
      md: "",
      lg: "",
      xl: ""
    },
    orientation: {
      horizontal: "inline-flex -space-x-px",
      vertical: "flex flex-col -space-y-px"
    }
  }
}, j4 = /* @__PURE__ */ L({
  __name: "FieldGroup",
  props: {
    as: {},
    size: {},
    orientation: { default: "horizontal" },
    class: {},
    ui: {}
  },
  setup(e) {
    const t = e, a = ue(), n = T(() => W({ extend: W(XH), ...a.ui?.fieldGroup || {} }));
    return ta(h0, T(() => ({
      orientation: t.orientation,
      size: t.size
    }))), (r, s) => (h(), k(u(U), {
      as: r.as,
      class: A(n.value({ orientation: r.orientation, class: t.class }))
    }, {
      default: _(() => [
        S(r.$slots, "default")
      ]),
      _: 3
    }, 8, ["as", "class"]));
  }
});
function JH(e) {
  if (!e || e === "*")
    return;
  const t = e.split(",").map((a) => {
    const n = a.trim();
    return n.includes("/") && n.endsWith("/*") && n.split("/")[0] || n;
  }).filter((a) => !a.startsWith("."));
  return t.length > 0 ? t : void 0;
}
function QH(e) {
  const {
    accept: t = "*",
    reset: a = !1,
    multiple: n = !1,
    dropzone: r = !0,
    onUpdate: s
  } = e, i = N(), o = N(), l = T(() => JH(u(t))), d = (g) => {
    !g || g.length === 0 || (g instanceof FileList && (g = Array.from(g)), g.length > 1 && !n && (g = [g[0]]), s(g));
  }, c = N(!1), f = ba({
    open: () => {
    }
  });
  function p() {
    f.open();
  }
  return Pe(() => {
    const { isOverDropZone: g } = r ? vM(o, { dataTypes: l.value, onDrop: d }) : { isOverDropZone: N(!1) };
    ye(g, (y) => {
      c.value = y;
    });
    const { onChange: v, open: m } = bM({
      accept: u(t),
      multiple: n,
      input: u(i),
      reset: a
    });
    f.open = m, v((y) => d(y));
  }), {
    isDragging: c,
    open: p,
    inputRef: i,
    dropzoneRef: o
  };
}
const ZH = {
  slots: {
    root: "relative flex flex-col",
    base: [
      "w-full flex-1 bg-default border border-default flex flex-col gap-2 items-stretch justify-center rounded-lg focus-visible:outline-2",
      "transition-[background]"
    ],
    wrapper: "flex flex-col items-center justify-center text-center",
    icon: "shrink-0",
    avatar: "shrink-0",
    label: "font-medium text-default mt-2",
    description: "text-muted mt-1",
    actions: "flex flex-wrap gap-1.5 shrink-0 mt-4",
    files: "",
    file: "relative",
    fileLeadingAvatar: "shrink-0",
    fileWrapper: "flex flex-col min-w-0",
    fileName: "text-default truncate",
    fileSize: "text-muted truncate",
    fileTrailingButton: ""
  },
  variants: {
    color: {
      primary: "",
      secondary: "",
      success: "",
      info: "",
      warning: "",
      error: "",
      neutral: ""
    },
    variant: {
      area: {
        wrapper: "px-4 py-3",
        base: "p-4"
      },
      button: {}
    },
    size: {
      xs: {
        base: "text-xs",
        icon: "size-4",
        file: "text-xs px-2 py-1 gap-1",
        fileWrapper: "flex-row gap-1"
      },
      sm: {
        base: "text-xs",
        icon: "size-4",
        file: "text-xs px-2.5 py-1.5 gap-1.5",
        fileWrapper: "flex-row gap-1"
      },
      md: {
        base: "text-sm",
        icon: "size-5",
        file: "text-xs px-2.5 py-1.5 gap-1.5"
      },
      lg: {
        base: "text-sm",
        icon: "size-5",
        file: "text-sm px-3 py-2 gap-2",
        fileSize: "text-xs"
      },
      xl: {
        base: "text-base",
        icon: "size-6",
        file: "text-sm px-3 py-2 gap-2"
      }
    },
    layout: {
      list: {
        root: "gap-2 items-start",
        files: "flex flex-col w-full gap-2",
        file: "min-w-0 flex items-center border border-default rounded-md w-full",
        fileTrailingButton: "ms-auto"
      },
      grid: {
        fileWrapper: "hidden",
        fileLeadingAvatar: "size-full rounded-lg",
        fileTrailingButton: "absolute -top-1.5 -end-1.5 p-0 rounded-full border-2 border-bg"
      }
    },
    position: {
      inside: "",
      outside: ""
    },
    dropzone: {
      true: "border-dashed data-[dragging=true]:bg-elevated/25"
    },
    interactive: {
      true: ""
    },
    highlight: {
      true: ""
    },
    multiple: {
      true: ""
    },
    disabled: {
      true: "cursor-not-allowed opacity-75"
    }
  },
  compoundVariants: [
    {
      color: "primary",
      class: "focus-visible:outline-primary"
    },
    {
      color: "secondary",
      class: "focus-visible:outline-secondary"
    },
    {
      color: "success",
      class: "focus-visible:outline-success"
    },
    {
      color: "info",
      class: "focus-visible:outline-info"
    },
    {
      color: "warning",
      class: "focus-visible:outline-warning"
    },
    {
      color: "error",
      class: "focus-visible:outline-error"
    },
    {
      color: "primary",
      highlight: !0,
      class: "border-primary"
    },
    {
      color: "secondary",
      highlight: !0,
      class: "border-secondary"
    },
    {
      color: "success",
      highlight: !0,
      class: "border-success"
    },
    {
      color: "info",
      highlight: !0,
      class: "border-info"
    },
    {
      color: "warning",
      highlight: !0,
      class: "border-warning"
    },
    {
      color: "error",
      highlight: !0,
      class: "border-error"
    },
    {
      color: "neutral",
      class: "focus-visible:outline-inverted"
    },
    {
      color: "neutral",
      highlight: !0,
      class: "border-inverted"
    },
    {
      size: "xs",
      layout: "list",
      class: {
        fileTrailingButton: "-me-1"
      }
    },
    {
      size: "sm",
      layout: "list",
      class: {
        fileTrailingButton: "-me-1.5"
      }
    },
    {
      size: "md",
      layout: "list",
      class: {
        fileTrailingButton: "-me-1.5"
      }
    },
    {
      size: "lg",
      layout: "list",
      class: {
        fileTrailingButton: "-me-2"
      }
    },
    {
      size: "xl",
      layout: "list",
      class: {
        fileTrailingButton: "-me-2"
      }
    },
    {
      variant: "button",
      size: "xs",
      class: {
        base: "p-1"
      }
    },
    {
      variant: "button",
      size: "sm",
      class: {
        base: "p-1.5"
      }
    },
    {
      variant: "button",
      size: "md",
      class: {
        base: "p-1.5"
      }
    },
    {
      variant: "button",
      size: "lg",
      class: {
        base: "p-2"
      }
    },
    {
      variant: "button",
      size: "xl",
      class: {
        base: "p-2"
      }
    },
    {
      layout: "grid",
      multiple: !0,
      class: {
        files: "grid grid-cols-2 md:grid-cols-3 gap-4 w-full",
        file: "p-0 aspect-square"
      }
    },
    {
      layout: "grid",
      multiple: !1,
      class: {
        file: "absolute inset-0 p-0"
      }
    },
    {
      interactive: !0,
      disabled: !1,
      class: "hover:bg-elevated/25"
    }
  ],
  defaultVariants: {
    color: "primary",
    variant: "area",
    size: "md"
  }
}, e6 = ["id", "name", "accept", "multiple", "required", "disabled"], K4 = /* @__PURE__ */ L({
  inheritAttrs: !1,
  __name: "FileUpload",
  props: /* @__PURE__ */ mt({
    as: {},
    id: {},
    name: {},
    icon: {},
    label: {},
    description: {},
    color: {},
    variant: {},
    size: {},
    layout: { default: "grid" },
    position: { default: "outside" },
    highlight: { type: Boolean },
    accept: { default: "*" },
    multiple: { type: Boolean, default: !1 },
    reset: { type: Boolean, default: !1 },
    dropzone: { type: Boolean, default: !0 },
    interactive: { type: Boolean, default: !0 },
    required: { type: Boolean },
    disabled: { type: Boolean },
    fileIcon: {},
    fileDelete: { type: [Boolean, Object] },
    fileDeleteIcon: {},
    class: {},
    ui: {}
  }, {
    modelValue: {},
    modelModifiers: {}
  }),
  emits: /* @__PURE__ */ mt(["change"], ["update:modelValue"]),
  setup(e, { expose: t, emit: a }) {
    const n = e, r = a, s = Se(), i = lt(e, "modelValue"), o = ue(), { t: l } = it(), [d, c] = /* @__PURE__ */ Lt(), { isDragging: f, open: p, inputRef: g, dropzoneRef: v } = QH({
      accept: n.accept,
      reset: n.reset,
      multiple: n.multiple,
      dropzone: n.dropzone,
      onUpdate: F
    }), { emitFormInput: m, emitFormChange: y, id: x, name: b, disabled: C, ariaAttrs: w } = Ca(n), $ = T(() => n.multiple ? "area" : n.variant), B = T(() => n.variant === "button" && !n.multiple ? "grid" : n.layout), I = T(() => B.value === "grid" && n.multiple ? "inside" : $.value === "button" ? "outside" : n.position), E = T(() => W({ extend: W(ZH), ...o.ui?.fileUpload || {} })({
      dropzone: n.dropzone,
      interactive: n.interactive,
      color: n.color,
      size: n.size,
      variant: $.value,
      layout: B.value,
      position: I.value,
      multiple: n.multiple,
      highlight: n.highlight,
      disabled: n.disabled
    }));
    function P(j) {
      return URL.createObjectURL(j);
    }
    function R(j) {
      if (j === 0)
        return "0B";
      const K = 1024, z = ["B", "KB", "MB", "GB"], G = Math.floor(Math.log(j) / Math.log(K)), Y = j / Math.pow(K, G);
      return `${G === 0 ? Y.toString() : Y.toFixed(0)}${z[G]}`;
    }
    function F(j, K = !1) {
      if (n.multiple)
        if (K)
          i.value = j;
        else {
          const G = i.value || [];
          i.value = [...G, ...j || []];
        }
      else
        i.value = j?.[0];
      const z = new Event("change", { target: { value: i.value } });
      r("change", z), y(), m();
    }
    function H(j) {
      if (!i.value)
        return;
      if (!n.multiple || j === void 0) {
        F([], !0), v.value?.focus();
        return;
      }
      const K = [...i.value];
      K.splice(j, 1), F(K, !0), v.value?.focus();
    }
    return ye(i, (j) => {
      (!Array.isArray(j) || !j.length) && g.value && (g.value.value = "");
    }), t({
      inputRef: g,
      dropzoneRef: v
    }), (j, K) => (h(), M(te, null, [
      V(u(d), null, {
        default: _(() => [
          i.value && (!Array.isArray(i.value) || i.value.length) ? (h(), M(te, { key: 0 }, [
            S(j.$slots, "files-top", {
              files: i.value,
              open: u(p),
              removeFile: H
            }),
            J("div", {
              class: A(E.value.files({ class: n.ui?.files }))
            }, [
              S(j.$slots, "files", { files: i.value }, () => [
                (h(!0), M(te, null, le(Array.isArray(i.value) ? i.value : [i.value], (z, G) => (h(), M("div", {
                  key: z.name,
                  class: A(E.value.file({ class: n.ui?.file }))
                }, [
                  S(j.$slots, "file", {
                    file: z,
                    index: G
                  }, () => [
                    S(j.$slots, "file-leading", {
                      file: z,
                      index: G
                    }, () => [
                      V(ft, {
                        src: P(z),
                        icon: j.fileIcon || u(o).ui.icons.file,
                        size: n.size,
                        class: A(E.value.fileLeadingAvatar({ class: n.ui?.fileLeadingAvatar }))
                      }, null, 8, ["src", "icon", "size", "class"])
                    ]),
                    J("div", {
                      class: A(E.value.fileWrapper({ class: n.ui?.fileWrapper }))
                    }, [
                      J("span", {
                        class: A(E.value.fileName({ class: n.ui?.fileName }))
                      }, [
                        S(j.$slots, "file-name", {
                          file: z,
                          index: G
                        }, () => [
                          ee(X(z.name), 1)
                        ])
                      ], 2),
                      J("span", {
                        class: A(E.value.fileSize({ class: n.ui?.fileSize }))
                      }, [
                        S(j.$slots, "file-size", {
                          file: z,
                          index: G
                        }, () => [
                          ee(X(R(z.size)), 1)
                        ])
                      ], 2)
                    ], 2),
                    S(j.$slots, "file-trailing", {
                      file: z,
                      index: G
                    }, () => [
                      V(Je, O({ color: "neutral" }, { ref_for: !0 }, {
                        ...B.value === "grid" ? {
                          variant: "solid",
                          size: "xs"
                        } : {
                          variant: "link",
                          size: j.size
                        },
                        ...typeof j.fileDelete == "object" ? j.fileDelete : void 0
                      }, {
                        "aria-label": u(l)("fileUpload.removeFile", { filename: z.name }),
                        "trailing-icon": j.fileDeleteIcon || u(o).ui.icons.close,
                        class: E.value.fileTrailingButton({ class: n.ui?.fileTrailingButton }),
                        onClick: ze((Y) => H(G), ["stop", "prevent"])
                      }), null, 16, ["aria-label", "trailing-icon", "class", "onClick"])
                    ])
                  ])
                ], 2))), 128))
              ])
            ], 2),
            S(j.$slots, "files-bottom", {
              files: i.value,
              open: u(p),
              removeFile: H
            })
          ], 64)) : D("", !0)
        ]),
        _: 3
      }),
      V(u(U), {
        as: j.as,
        class: A(E.value.root({ class: [n.ui?.root, n.class] }))
      }, {
        default: _(() => [
          S(j.$slots, "default", {
            open: u(p),
            removeFile: H
          }, () => [
            (h(), k(ut($.value === "button" ? "button" : "div"), {
              ref_key: "dropzoneRef",
              ref: v,
              role: $.value === "button" ? void 0 : "button",
              "data-dragging": u(f),
              class: A(E.value.base({ class: n.ui?.base })),
              tabindex: j.interactive && !u(C) ? 0 : -1,
              onClick: K[0] || (K[0] = (z) => j.interactive && !u(C) && u(p)()),
              onKeydown: K[1] || (K[1] = ze(() => {
              }, ["prevent"])),
              onKeyup: K[2] || (K[2] = nt((z) => j.interactive && !u(C) && u(p)(), ["enter", "space"]))
            }, {
              default: _(() => [
                I.value === "inside" ? (h(), k(u(c), { key: 0 })) : D("", !0),
                I.value !== "inside" || (j.multiple ? !i.value?.length : !i.value) ? (h(), M("div", {
                  key: 1,
                  class: A(E.value.wrapper({ class: n.ui?.wrapper }))
                }, [
                  S(j.$slots, "leading", {}, () => [
                    $.value === "button" ? (h(), k(he, {
                      key: 0,
                      name: j.icon || u(o).ui.icons.upload,
                      class: A(E.value.icon({ class: n.ui?.icon }))
                    }, null, 8, ["name", "class"])) : (h(), k(ft, {
                      key: 1,
                      icon: j.icon || u(o).ui.icons.upload,
                      size: n.size,
                      class: A(E.value.avatar({ class: n.ui?.avatar }))
                    }, null, 8, ["icon", "size", "class"]))
                  ]),
                  $.value !== "button" ? (h(), M(te, { key: 0 }, [
                    j.label || s.label ? (h(), M("div", {
                      key: 0,
                      class: A(E.value.label({ class: n.ui?.label }))
                    }, [
                      S(j.$slots, "label", {}, () => [
                        ee(X(j.label), 1)
                      ])
                    ], 2)) : D("", !0),
                    j.description || s.description ? (h(), M("div", {
                      key: 1,
                      class: A(E.value.description({ class: n.ui?.description }))
                    }, [
                      S(j.$slots, "description", {}, () => [
                        ee(X(j.description), 1)
                      ])
                    ], 2)) : D("", !0),
                    s.actions ? (h(), M("div", {
                      key: 2,
                      class: A(E.value.actions({ class: n.ui?.actions }))
                    }, [
                      S(j.$slots, "actions", {
                        files: i.value,
                        open: u(p),
                        removeFile: H
                      })
                    ], 2)) : D("", !0)
                  ], 64)) : D("", !0)
                ], 2)) : D("", !0)
              ]),
              _: 3
            }, 40, ["role", "data-dragging", "class", "tabindex"])),
            I.value === "outside" ? (h(), k(u(c), { key: 0 })) : D("", !0)
          ]),
          J("input", O({
            id: u(x),
            ref_key: "inputRef",
            ref: g,
            type: "file",
            name: u(b),
            accept: j.accept,
            multiple: j.multiple,
            required: j.required,
            disabled: u(C)
          }, { ...j.$attrs, ...u(w) }, {
            class: "sr-only",
            tabindex: "-1"
          }), null, 16, e6)
        ]),
        _: 3
      }, 8, ["as", "class"])
    ], 64));
  }
}), t6 = {
  slots: {
    root: "",
    top: "py-8 lg:py-12",
    bottom: "py-8 lg:py-12",
    container: "py-8 lg:py-4 lg:flex lg:items-center lg:justify-between lg:gap-x-3",
    left: "flex items-center justify-center lg:justify-start lg:flex-1 gap-x-1.5 mt-3 lg:mt-0 lg:order-1",
    center: "mt-3 lg:mt-0 lg:order-2 flex items-center justify-center",
    right: "lg:flex-1 flex items-center justify-center lg:justify-end gap-x-1.5 lg:order-3"
  }
}, G4 = /* @__PURE__ */ L({
  __name: "Footer",
  props: {
    as: { default: "footer" },
    class: {},
    ui: {}
  },
  setup(e) {
    const t = e, a = Se(), n = ue(), r = T(() => W({ extend: W(t6), ...n.ui?.footer || {} })());
    return (s, i) => (h(), k(u(U), {
      as: s.as,
      class: A(r.value.root({ class: [t.ui?.root, t.class] }))
    }, {
      default: _(() => [
        a.top ? (h(), M("div", {
          key: 0,
          class: A(r.value.top({ class: t.ui?.top }))
        }, [
          S(s.$slots, "top")
        ], 2)) : D("", !0),
        V(Os, {
          class: A(r.value.container({ class: t.ui?.container }))
        }, {
          default: _(() => [
            J("div", {
              class: A(r.value.right({ class: t.ui?.right }))
            }, [
              S(s.$slots, "right")
            ], 2),
            J("div", {
              class: A(r.value.center({ class: t.ui?.center }))
            }, [
              S(s.$slots, "default")
            ], 2),
            J("div", {
              class: A(r.value.left({ class: t.ui?.left }))
            }, [
              S(s.$slots, "left")
            ], 2)
          ]),
          _: 3
        }, 8, ["class"]),
        a.bottom ? (h(), M("div", {
          key: 1,
          class: A(r.value.bottom({ class: t.ui?.bottom }))
        }, [
          S(s.$slots, "bottom")
        ], 2)) : D("", !0)
      ]),
      _: 3
    }, 8, ["as", "class"]));
  }
}), a6 = {
  slots: {
    root: "xl:grid xl:grid-cols-3 xl:gap-8",
    left: "mb-10 xl:mb-0",
    center: "flex flex-col lg:grid grid-flow-col auto-cols-fr gap-8 xl:col-span-2",
    right: "mt-10 xl:mt-0",
    label: "text-sm font-semibold",
    list: "mt-6 space-y-4",
    item: "relative",
    link: "group text-sm flex items-center gap-1.5 focus-visible:outline-primary",
    linkLeadingIcon: "size-5 shrink-0",
    linkLabel: "truncate",
    linkLabelExternalIcon: "size-3 absolute top-0 text-dimmed inline-block"
  },
  variants: {
    active: {
      true: {
        link: "text-primary font-medium"
      },
      false: {
        link: [
          "text-muted hover:text-default",
          "transition-colors"
        ]
      }
    }
  }
}, U4 = /* @__PURE__ */ L({
  __name: "FooterColumns",
  props: {
    as: { default: "nav" },
    class: {},
    columns: {},
    ui: {}
  },
  setup(e) {
    const t = e, a = Se(), n = ue(), r = T(() => W({ extend: W(a6), ...n.ui?.footerColumns || {} })());
    return (s, i) => (h(), k(u(U), {
      as: s.as,
      class: A(r.value.root({ class: [t.ui?.root, t.class] }))
    }, {
      default: _(() => [
        a.left ? (h(), M("div", {
          key: 0,
          class: A(r.value.left({ class: t.ui?.left }))
        }, [
          S(s.$slots, "left")
        ], 2)) : D("", !0),
        a.default || s.columns?.length ? (h(), M("div", {
          key: 1,
          class: A(r.value.center({ class: t.ui?.center }))
        }, [
          S(s.$slots, "default", {}, () => [
            (h(!0), M(te, null, le(s.columns, (o, l) => (h(), M("div", { key: l }, [
              J("h3", {
                class: A(r.value.label({ class: t.ui?.label }))
              }, [
                S(s.$slots, "column-label", { column: o }, () => [
                  ee(X(o.label), 1)
                ])
              ], 2),
              J("ul", {
                class: A(r.value.list({ class: t.ui?.list }))
              }, [
                (h(!0), M(te, null, le(o.children, (d, c) => (h(), M("li", {
                  key: c,
                  class: A(r.value.item({ class: [t.ui?.item, d.ui?.item] }))
                }, [
                  V(Wt, O({ ref_for: !0 }, u(Ga)(d), { custom: "" }), {
                    default: _(({ active: f, ...p }) => [
                      V(ha, O({ ref_for: !0 }, p, {
                        class: r.value.link({ class: [t.ui?.link, d.ui?.link, d.class], active: f })
                      }), {
                        default: _(() => [
                          S(s.$slots, "link", {
                            link: d,
                            active: f
                          }, () => [
                            S(s.$slots, "link-leading", {
                              link: d,
                              active: f
                            }, () => [
                              d.icon ? (h(), k(he, {
                                key: 0,
                                name: d.icon,
                                class: A(r.value.linkLeadingIcon({ class: [t.ui?.linkLeadingIcon, d.ui?.linkLeadingIcon], active: f }))
                              }, null, 8, ["name", "class"])) : D("", !0)
                            ]),
                            d.label || a["link-label"] ? (h(), M("span", {
                              key: 0,
                              class: A(r.value.linkLabel({ class: [t.ui?.linkLabel, d.ui?.linkLabel], active: f }))
                            }, [
                              S(s.$slots, "link-label", {
                                link: d,
                                active: f
                              }, () => [
                                ee(X(d.label), 1)
                              ]),
                              d.target === "_blank" ? (h(), k(he, {
                                key: 0,
                                name: u(n).ui.icons.external,
                                class: A(r.value.linkLabelExternalIcon({ class: [t.ui?.linkLabelExternalIcon, d.ui?.linkLabelExternalIcon], active: f }))
                              }, null, 8, ["name", "class"])) : D("", !0)
                            ], 2)) : D("", !0),
                            S(s.$slots, "link-trailing", {
                              link: d,
                              active: f
                            })
                          ])
                        ]),
                        _: 2
                      }, 1040, ["class"])
                    ]),
                    _: 2
                  }, 1040)
                ], 2))), 128))
              ], 2)
            ]))), 128))
          ])
        ], 2)) : D("", !0),
        a.right ? (h(), M("div", {
          key: 2,
          class: A(r.value.right({ class: t.ui?.right }))
        }, [
          S(s.$slots, "right")
        ], 2)) : D("", !0)
      ]),
      _: 3
    }, 8, ["as", "class"]));
  }
}), n6 = {
  slots: {
    root: "bg-default/75 backdrop-blur border-b border-default h-(--ui-header-height) sticky top-0 z-50",
    container: "flex items-center justify-between gap-3 h-full",
    left: "lg:flex-1 flex items-center gap-1.5",
    center: "hidden lg:flex",
    right: "flex items-center justify-end lg:flex-1 gap-1.5",
    title: "shrink-0 font-bold text-xl text-highlighted flex items-end gap-1.5",
    toggle: "lg:hidden",
    content: "lg:hidden",
    overlay: "lg:hidden",
    header: "px-4 sm:px-6 h-(--ui-header-height) shrink-0 flex items-center justify-between gap-3",
    body: "p-4 sm:p-6 overflow-y-auto"
  },
  variants: {
    toggleSide: {
      left: {
        toggle: "-ms-1.5"
      },
      right: {
        toggle: "-me-1.5"
      }
    }
  }
}, W4 = /* @__PURE__ */ L({
  inheritAttrs: !1,
  __name: "Header",
  props: /* @__PURE__ */ mt({
    as: { default: "header" },
    title: { default: "Nuxt UI" },
    to: { default: "/" },
    mode: { default: "modal" },
    menu: {},
    toggle: { type: [Boolean, Object], default: !0 },
    toggleSide: { default: "right" },
    class: {},
    ui: {}
  }, {
    open: { type: Boolean, default: !1 },
    openModifiers: {}
  }),
  emits: ["update:open"],
  setup(e) {
    const t = e, a = Se(), n = lt(e, "open"), r = Nf(), { t: s } = it(), i = ue(), [o, l] = /* @__PURE__ */ Lt(), [d, c] = /* @__PURE__ */ Lt(), [f, p] = /* @__PURE__ */ Lt(), g = T(() => (a.title && Er(a.title()) || t.title || "Nuxt UI").trim());
    ye(() => r.fullPath, () => {
      n.value = !1;
    });
    const v = T(() => W({ extend: W(n6), ...i.ui?.header || {} })()), m = T(() => ({
      slideover: L1,
      modal: Ip,
      drawer: N1
    })[t.mode]), y = Ge(() => Ct(t.menu, {
      content: {
        onOpenAutoFocus: (b) => b.preventDefault()
      }
    }, t.mode === "modal" ? { fullscreen: !0, transition: !1 } : {}));
    function x() {
      n.value = !n.value;
    }
    return (b, C) => (h(), M(te, null, [
      V(u(f), null, {
        default: _(() => [
          S(b.$slots, "toggle", {
            open: n.value,
            toggle: x
          }, () => [
            b.toggle ? (h(), k(Je, O({
              key: 0,
              color: "neutral",
              variant: "ghost",
              "aria-label": n.value ? u(s)("header.close") : u(s)("header.open"),
              icon: n.value ? u(i).ui.icons.close : u(i).ui.icons.menu
            }, typeof b.toggle == "object" ? b.toggle : {}, {
              class: v.value.toggle({ class: t.ui?.toggle, toggleSide: b.toggleSide }),
              onClick: x
            }), null, 16, ["aria-label", "icon", "class"])) : D("", !0)
          ])
        ]),
        _: 3
      }),
      V(u(o), null, {
        default: _(() => [
          J("div", {
            class: A(v.value.left({ class: t.ui?.left }))
          }, [
            b.toggleSide === "left" ? (h(), k(u(p), { key: 0 })) : D("", !0),
            S(b.$slots, "left", {}, () => [
              V(Wt, {
                to: b.to,
                "aria-label": g.value,
                class: A(v.value.title({ class: t.ui?.title }))
              }, {
                default: _(() => [
                  S(b.$slots, "title", {}, () => [
                    ee(X(b.title), 1)
                  ])
                ]),
                _: 3
              }, 8, ["to", "aria-label", "class"])
            ])
          ], 2)
        ]),
        _: 3
      }),
      V(u(d), null, {
        default: _(() => [
          J("div", {
            class: A(v.value.right({ class: t.ui?.right }))
          }, [
            S(b.$slots, "right"),
            b.toggleSide === "right" ? (h(), k(u(p), { key: 0 })) : D("", !0)
          ], 2)
        ]),
        _: 3
      }),
      V(u(U), O({ as: b.as }, b.$attrs, {
        class: v.value.root({ class: [t.ui?.root, t.class] })
      }), {
        default: _(() => [
          S(b.$slots, "top"),
          V(Os, {
            class: A(v.value.container({ class: t.ui?.container }))
          }, {
            default: _(() => [
              V(u(l)),
              J("div", {
                class: A(v.value.center({ class: t.ui?.center }))
              }, [
                S(b.$slots, "default")
              ], 2),
              V(u(c))
            ]),
            _: 3
          }, 8, ["class"]),
          S(b.$slots, "bottom")
        ]),
        _: 3
      }, 16, ["as", "class"]),
      V(u(m), O({
        open: n.value,
        "onUpdate:open": C[0] || (C[0] = (w) => n.value = w),
        title: u(s)("header.title"),
        description: u(s)("header.description")
      }, y.value, {
        ui: {
          overlay: v.value.overlay({ class: t.ui?.overlay }),
          content: v.value.content({ class: t.ui?.content })
        }
      }), {
        content: _(() => [
          S(b.$slots, "content", {}, () => [
            b.mode !== "drawer" ? (h(), M("div", {
              key: 0,
              class: A(v.value.header({ class: t.ui?.header }))
            }, [
              V(u(l)),
              V(u(c))
            ], 2)) : D("", !0),
            J("div", {
              class: A(v.value.body({ class: t.ui?.body }))
            }, [
              S(b.$slots, "body")
            ], 2)
          ])
        ]),
        _: 3
      }, 16, ["open", "title", "description", "ui"])
    ], 64));
  }
}), r6 = {
  slots: {
    root: "relative inline-flex items-center",
    base: [
      "rounded-md",
      "transition-colors"
    ],
    leading: "absolute inset-y-0 start-0 flex items-center",
    leadingIcon: "shrink-0 text-dimmed",
    leadingAvatar: "shrink-0",
    leadingAvatarSize: "",
    trailing: "group absolute inset-y-0 end-0 flex items-center disabled:cursor-not-allowed disabled:opacity-75",
    trailingIcon: "shrink-0 text-dimmed",
    arrow: "fill-default",
    content: "max-h-60 w-(--reka-combobox-trigger-width) bg-default shadow-lg rounded-md ring ring-default overflow-hidden data-[state=open]:animate-[scale-in_100ms_ease-out] data-[state=closed]:animate-[scale-out_100ms_ease-in] origin-(--reka-combobox-content-transform-origin) pointer-events-auto flex flex-col",
    viewport: "relative divide-y divide-default scroll-py-1 overflow-y-auto flex-1",
    group: "p-1 isolate",
    empty: "text-center text-muted",
    label: "font-semibold text-highlighted",
    separator: "-mx-1 my-1 h-px bg-border",
    item: [
      "group relative w-full flex items-center gap-1.5 p-1.5 text-sm select-none outline-none before:absolute before:z-[-1] before:inset-px before:rounded-md data-disabled:cursor-not-allowed data-disabled:opacity-75 text-default data-highlighted:not-data-disabled:text-highlighted data-highlighted:not-data-disabled:before:bg-elevated/50",
      "transition-colors before:transition-colors"
    ],
    itemLeadingIcon: [
      "shrink-0 text-dimmed group-data-highlighted:not-group-data-disabled:text-default",
      "transition-colors"
    ],
    itemLeadingAvatar: "shrink-0",
    itemLeadingAvatarSize: "",
    itemLeadingChip: "shrink-0",
    itemLeadingChipSize: "",
    itemTrailing: "ms-auto inline-flex gap-1.5 items-center",
    itemTrailingIcon: "shrink-0",
    itemLabel: "truncate",
    tagsItem: "px-1.5 py-0.5 rounded-sm font-medium inline-flex items-center gap-0.5 ring ring-inset ring-accented bg-elevated text-default data-disabled:cursor-not-allowed data-disabled:opacity-75",
    tagsItemText: "truncate",
    tagsItemDelete: [
      "inline-flex items-center rounded-xs text-dimmed hover:text-default hover:bg-accented/75 disabled:pointer-events-none",
      "transition-colors"
    ],
    tagsItemDeleteIcon: "shrink-0",
    tagsInput: "flex-1 border-0 bg-transparent placeholder:text-dimmed focus:outline-none disabled:cursor-not-allowed disabled:opacity-75"
  },
  variants: {
    fieldGroup: {
      horizontal: {
        root: "group has-focus-visible:z-[1]",
        base: "group-not-only:group-first:rounded-e-none group-not-only:group-last:rounded-s-none group-not-last:group-not-first:rounded-none"
      },
      vertical: {
        root: "group has-focus-visible:z-[1]",
        base: "group-not-only:group-first:rounded-b-none group-not-only:group-last:rounded-t-none group-not-last:group-not-first:rounded-none"
      }
    },
    size: {
      xs: {
        base: "px-2 py-1 text-xs gap-1",
        leading: "ps-2",
        trailing: "pe-2",
        leadingIcon: "size-4",
        leadingAvatarSize: "3xs",
        trailingIcon: "size-4",
        label: "p-1 text-[10px]/3 gap-1",
        item: "p-1 text-xs gap-1",
        itemLeadingIcon: "size-4",
        itemLeadingAvatarSize: "3xs",
        itemLeadingChip: "size-4",
        itemLeadingChipSize: "sm",
        itemTrailingIcon: "size-4",
        tagsItem: "text-[10px]/3",
        tagsItemDeleteIcon: "size-3",
        empty: "p-1 text-xs"
      },
      sm: {
        base: "px-2.5 py-1.5 text-xs gap-1.5",
        leading: "ps-2.5",
        trailing: "pe-2.5",
        leadingIcon: "size-4",
        leadingAvatarSize: "3xs",
        trailingIcon: "size-4",
        label: "p-1.5 text-[10px]/3 gap-1.5",
        item: "p-1.5 text-xs gap-1.5",
        itemLeadingIcon: "size-4",
        itemLeadingAvatarSize: "3xs",
        itemLeadingChip: "size-4",
        itemLeadingChipSize: "sm",
        itemTrailingIcon: "size-4",
        tagsItem: "text-[10px]/3",
        tagsItemDeleteIcon: "size-3",
        empty: "p-1.5 text-xs"
      },
      md: {
        base: "px-2.5 py-1.5 text-sm gap-1.5",
        leading: "ps-2.5",
        trailing: "pe-2.5",
        leadingIcon: "size-5",
        leadingAvatarSize: "2xs",
        trailingIcon: "size-5",
        label: "p-1.5 text-xs gap-1.5",
        item: "p-1.5 text-sm gap-1.5",
        itemLeadingIcon: "size-5",
        itemLeadingAvatarSize: "2xs",
        itemLeadingChip: "size-5",
        itemLeadingChipSize: "md",
        itemTrailingIcon: "size-5",
        tagsItem: "text-xs",
        tagsItemDeleteIcon: "size-3.5",
        empty: "p-1.5 text-sm"
      },
      lg: {
        base: "px-3 py-2 text-sm gap-2",
        leading: "ps-3",
        trailing: "pe-3",
        leadingIcon: "size-5",
        leadingAvatarSize: "2xs",
        trailingIcon: "size-5",
        label: "p-2 text-xs gap-2",
        item: "p-2 text-sm gap-2",
        itemLeadingIcon: "size-5",
        itemLeadingAvatarSize: "2xs",
        itemLeadingChip: "size-5",
        itemLeadingChipSize: "md",
        itemTrailingIcon: "size-5",
        tagsItem: "text-xs",
        tagsItemDeleteIcon: "size-3.5",
        empty: "p-2 text-sm"
      },
      xl: {
        base: "px-3 py-2 text-base gap-2",
        leading: "ps-3",
        trailing: "pe-3",
        leadingIcon: "size-6",
        leadingAvatarSize: "xs",
        trailingIcon: "size-6",
        label: "p-2 text-sm gap-2",
        item: "p-2 text-base gap-2",
        itemLeadingIcon: "size-6",
        itemLeadingAvatarSize: "xs",
        itemLeadingChip: "size-6",
        itemLeadingChipSize: "lg",
        itemTrailingIcon: "size-6",
        tagsItem: "text-sm",
        tagsItemDeleteIcon: "size-4",
        empty: "p-2 text-base"
      }
    },
    variant: {
      outline: "text-highlighted bg-default ring ring-inset ring-accented",
      soft: "text-highlighted bg-elevated/50 hover:bg-elevated focus:bg-elevated disabled:bg-elevated/50",
      subtle: "text-highlighted bg-elevated ring ring-inset ring-accented",
      ghost: "text-highlighted bg-transparent hover:bg-elevated focus:bg-elevated disabled:bg-transparent dark:disabled:bg-transparent",
      none: "text-highlighted bg-transparent"
    },
    color: {
      primary: "",
      secondary: "",
      success: "",
      info: "",
      warning: "",
      error: "",
      neutral: ""
    },
    leading: {
      true: ""
    },
    trailing: {
      true: ""
    },
    loading: {
      true: ""
    },
    highlight: {
      true: ""
    },
    type: {
      file: "file:me-1.5 file:font-medium file:text-muted file:outline-none"
    },
    multiple: {
      true: {
        root: "flex-wrap"
      },
      false: {
        base: "w-full border-0 placeholder:text-dimmed focus:outline-none disabled:cursor-not-allowed disabled:opacity-75"
      }
    }
  },
  compoundVariants: [
    {
      variant: "soft",
      multiple: !0,
      class: "has-focus:bg-elevated"
    },
    {
      variant: "ghost",
      multiple: !0,
      class: "has-focus:bg-elevated"
    },
    {
      color: "primary",
      multiple: !0,
      variant: [
        "outline",
        "subtle"
      ],
      class: "has-focus-visible:ring-2 has-focus-visible:ring-primary"
    },
    {
      color: "secondary",
      multiple: !0,
      variant: [
        "outline",
        "subtle"
      ],
      class: "has-focus-visible:ring-2 has-focus-visible:ring-secondary"
    },
    {
      color: "success",
      multiple: !0,
      variant: [
        "outline",
        "subtle"
      ],
      class: "has-focus-visible:ring-2 has-focus-visible:ring-success"
    },
    {
      color: "info",
      multiple: !0,
      variant: [
        "outline",
        "subtle"
      ],
      class: "has-focus-visible:ring-2 has-focus-visible:ring-info"
    },
    {
      color: "warning",
      multiple: !0,
      variant: [
        "outline",
        "subtle"
      ],
      class: "has-focus-visible:ring-2 has-focus-visible:ring-warning"
    },
    {
      color: "error",
      multiple: !0,
      variant: [
        "outline",
        "subtle"
      ],
      class: "has-focus-visible:ring-2 has-focus-visible:ring-error"
    },
    {
      color: "neutral",
      multiple: !0,
      variant: [
        "outline",
        "subtle"
      ],
      class: "has-focus-visible:ring-2 has-focus-visible:ring-inverted"
    },
    {
      color: "primary",
      variant: [
        "outline",
        "subtle"
      ],
      class: "focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-primary"
    },
    {
      color: "secondary",
      variant: [
        "outline",
        "subtle"
      ],
      class: "focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-secondary"
    },
    {
      color: "success",
      variant: [
        "outline",
        "subtle"
      ],
      class: "focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-success"
    },
    {
      color: "info",
      variant: [
        "outline",
        "subtle"
      ],
      class: "focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-info"
    },
    {
      color: "warning",
      variant: [
        "outline",
        "subtle"
      ],
      class: "focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-warning"
    },
    {
      color: "error",
      variant: [
        "outline",
        "subtle"
      ],
      class: "focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-error"
    },
    {
      color: "primary",
      highlight: !0,
      class: "ring ring-inset ring-primary"
    },
    {
      color: "secondary",
      highlight: !0,
      class: "ring ring-inset ring-secondary"
    },
    {
      color: "success",
      highlight: !0,
      class: "ring ring-inset ring-success"
    },
    {
      color: "info",
      highlight: !0,
      class: "ring ring-inset ring-info"
    },
    {
      color: "warning",
      highlight: !0,
      class: "ring ring-inset ring-warning"
    },
    {
      color: "error",
      highlight: !0,
      class: "ring ring-inset ring-error"
    },
    {
      color: "neutral",
      variant: [
        "outline",
        "subtle"
      ],
      class: "focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-inverted"
    },
    {
      color: "neutral",
      highlight: !0,
      class: "ring ring-inset ring-inverted"
    },
    {
      leading: !0,
      size: "xs",
      class: "ps-7"
    },
    {
      leading: !0,
      size: "sm",
      class: "ps-8"
    },
    {
      leading: !0,
      size: "md",
      class: "ps-9"
    },
    {
      leading: !0,
      size: "lg",
      class: "ps-10"
    },
    {
      leading: !0,
      size: "xl",
      class: "ps-11"
    },
    {
      trailing: !0,
      size: "xs",
      class: "pe-7"
    },
    {
      trailing: !0,
      size: "sm",
      class: "pe-8"
    },
    {
      trailing: !0,
      size: "md",
      class: "pe-9"
    },
    {
      trailing: !0,
      size: "lg",
      class: "pe-10"
    },
    {
      trailing: !0,
      size: "xl",
      class: "pe-11"
    },
    {
      loading: !0,
      leading: !0,
      class: {
        leadingIcon: "animate-spin"
      }
    },
    {
      loading: !0,
      leading: !1,
      trailing: !0,
      class: {
        trailingIcon: "animate-spin"
      }
    }
  ],
  defaultVariants: {
    size: "md",
    color: "primary",
    variant: "outline"
  }
}, Y4 = /* @__PURE__ */ L({
  inheritAttrs: !1,
  __name: "InputMenu",
  props: /* @__PURE__ */ mt({
    as: {},
    id: {},
    type: { default: "text" },
    placeholder: {},
    color: {},
    variant: {},
    size: {},
    required: { type: Boolean },
    autofocus: { type: Boolean },
    autofocusDelay: { default: 0 },
    trailingIcon: {},
    selectedIcon: {},
    deleteIcon: {},
    content: {},
    arrow: { type: [Boolean, Object] },
    portal: { type: [Boolean, String], default: !0 },
    valueKey: {},
    labelKey: { default: "label" },
    items: {},
    defaultValue: {},
    modelValue: {},
    multiple: { type: Boolean },
    highlight: { type: Boolean },
    createItem: { type: [Boolean, String, Object] },
    filterFields: {},
    ignoreFilter: { type: Boolean },
    class: {},
    ui: {},
    open: { type: Boolean },
    defaultOpen: { type: Boolean },
    disabled: { type: Boolean },
    name: {},
    resetSearchTermOnBlur: { type: Boolean, default: !0 },
    resetSearchTermOnSelect: { type: Boolean, default: !0 },
    highlightOnHover: { type: Boolean },
    openOnClick: { type: Boolean },
    openOnFocus: { type: Boolean },
    icon: {},
    avatar: {},
    leading: { type: Boolean },
    leadingIcon: {},
    trailing: { type: Boolean },
    loading: { type: Boolean },
    loadingIcon: {}
  }, {
    searchTerm: { default: "" },
    searchTermModifiers: {}
  }),
  emits: /* @__PURE__ */ mt(["update:open", "change", "blur", "focus", "create", "highlight", "remove-tag", "update:modelValue"], ["update:searchTerm"]),
  setup(e, { expose: t, emit: a }) {
    const n = e, r = a, s = Se(), i = lt(e, "searchTerm"), { t: o } = it(), l = ue(), { contains: d } = af({ sensitivity: "base" }), c = Xe(tt(n, "as", "modelValue", "defaultValue", "open", "defaultOpen", "required", "multiple", "resetSearchTermOnBlur", "resetSearchTermOnSelect", "highlightOnHover", "openOnClick", "openOnFocus"), r), f = tn(Ge(() => n.portal)), p = Ge(() => Ct(n.content, { side: "bottom", sideOffset: 8, collisionPadding: 8, position: "popper" })), g = Ge(() => n.arrow), { emitFormBlur: v, emitFormFocus: m, emitFormChange: y, emitFormInput: x, size: b, color: C, id: w, name: $, highlight: B, disabled: I, ariaAttrs: E } = Ca(n), { orientation: P, size: R } = ur(n), { isLeading: F, isTrailing: H, leadingIconName: j, trailingIconName: K } = lr(Ge(() => Ct(n, { trailingIcon: l.ui.icons.chevronDown }))), z = T(() => R.value || b.value), [G, Y] = /* @__PURE__ */ Lt(), q = T(() => W({ extend: W(r6), ...l.ui?.inputMenu || {} })({
      color: C.value,
      variant: n.variant,
      size: z?.value,
      loading: n.loading,
      highlight: B.value,
      leading: F.value || !!n.avatar || !!s.leading,
      trailing: H.value || !!s.trailing,
      multiple: n.multiple,
      fieldGroup: P.value
    }));
    function Q(ie) {
      return xi(ce.value, ie, {
        labelKey: n.labelKey,
        valueKey: n.valueKey
      }) ?? "";
    }
    const se = T(
      () => n.items?.length ? Ps(n.items) ? n.items : [n.items] : []
    ), ce = T(() => se.value.flatMap((ie) => ie)), oe = T(() => {
      if (n.ignoreFilter || !i.value)
        return se.value;
      const ie = Array.isArray(n.filterFields) ? n.filterFields : [n.labelKey];
      return se.value.map((Ne) => Ne.filter((Oe) => Oe == null ? !1 : typeof Oe != "object" ? d(String(Oe), i.value) : Oe.type && ["label", "separator"].includes(Oe.type) ? !0 : ie.some((Ae) => {
        const ge = qe(Oe, Ae);
        return ge != null && d(String(ge), i.value);
      }))).filter((Ne) => Ne.filter(
        (Oe) => !_e(Oe) || !Oe.type || !["label", "separator"].includes(Oe.type)
      ).length > 0);
    }), xe = T(() => oe.value.flatMap((ie) => ie)), $e = T(() => {
      if (!n.createItem || !i.value)
        return !1;
      const ie = n.valueKey ? { [n.valueKey]: i.value } : i.value;
      return typeof n.createItem == "object" && n.createItem.when === "always" || n.createItem === "always" ? !xe.value.find((Ne) => jf(Ne, ie, n.valueKey)) : !xe.value.length;
    }), Le = T(() => typeof n.createItem == "object" ? n.createItem.position : "bottom"), Ye = N(null);
    function ne() {
      n.autofocus && Ye.value?.$el?.focus();
    }
    Pe(() => {
      Be(() => {
        i.value = "";
      }), setTimeout(() => {
        ne();
      }, n.autofocusDelay);
    });
    function ae(ie) {
      if (Tl(n.modelValue) === ie)
        return;
      const Ne = new Event("change", { target: { value: ie } });
      r("change", Ne), y(), x(), n.resetSearchTermOnSelect && (i.value = "");
    }
    function be(ie) {
      r("blur", ie), v();
    }
    function De(ie) {
      r("focus", ie), m();
    }
    function Ke(ie) {
      let Ne;
      if (ie) {
        const Oe = new FocusEvent("focus");
        r("focus", Oe), m(), clearTimeout(Ne);
      } else {
        const Oe = new FocusEvent("blur");
        r("blur", Oe), v(), n.resetSearchTermOnBlur && (Ne = setTimeout(() => {
          i.value = "";
        }, 100));
      }
    }
    function re(ie) {
      if (n.multiple) {
        const Oe = n.modelValue.filter((Ae) => !ca(Ae, ie));
        r("update:modelValue", Oe), r("remove-tag", ie), ae(Oe);
      }
    }
    function de(ie, Ne) {
      if (_e(Ne)) {
        if (Ne.disabled) {
          ie.preventDefault();
          return;
        }
        Ne.onSelect?.(ie);
      }
    }
    function _e(ie) {
      return typeof ie == "object" && ie !== null;
    }
    return t({
      inputRef: Ye
    }), (ie, Ne) => (h(), M(te, null, [
      V(u(G), null, {
        default: _(() => [
          V(u(sl), {
            class: A(q.value.group({ class: n.ui?.group }))
          }, {
            default: _(() => [
              V(u(il), {
                class: A(q.value.item({ class: n.ui?.item })),
                value: i.value,
                onSelect: Ne[0] || (Ne[0] = ze((Oe) => r("create", i.value), ["prevent"]))
              }, {
                default: _(() => [
                  J("span", {
                    class: A(q.value.itemLabel({ class: n.ui?.itemLabel }))
                  }, [
                    S(ie.$slots, "create-item-label", { item: i.value }, () => [
                      ee(X(u(o)("inputMenu.create", { label: i.value })), 1)
                    ])
                  ], 2)
                ]),
                _: 3
              }, 8, ["class", "value"])
            ]),
            _: 3
          }, 8, ["class"])
        ]),
        _: 3
      }),
      V(u(Iy), O(u(c), {
        name: u($),
        disabled: u(I),
        class: q.value.root({ class: [n.ui?.root, n.class] }),
        "as-child": !!ie.multiple,
        "ignore-filter": "",
        "onUpdate:modelValue": ae,
        "onUpdate:open": Ke,
        onKeydown: Ne[5] || (Ne[5] = nt((Oe) => Oe.preventDefault(), ["enter"]))
      }), {
        default: _(({ modelValue: Oe, open: Ae }) => [
          V(u(Cy), {
            "as-child": !ie.multiple,
            class: A(q.value.base({ class: n.ui?.base }))
          }, {
            default: _(() => [
              ie.multiple ? (h(), k(u(Eb), {
                key: 0,
                "model-value": Oe,
                disabled: u(I),
                required: ie.required,
                delimiter: "",
                "as-child": "",
                onBlur: be,
                onFocus: De,
                onRemoveTag: re
              }, {
                default: _(({ modelValue: ge }) => [
                  (h(!0), M(te, null, le(ge, (Fe, ve) => (h(), k(u(Pb), {
                    key: ve,
                    value: Fe,
                    class: A(q.value.tagsItem({ class: [n.ui?.tagsItem, _e(Fe) && Fe.ui?.tagsItem] }))
                  }, {
                    default: _(() => [
                      V(u(Mb), {
                        class: A(q.value.tagsItemText({ class: [n.ui?.tagsItemText, _e(Fe) && Fe.ui?.tagsItemText] }))
                      }, {
                        default: _(() => [
                          S(ie.$slots, "tags-item-text", {
                            item: Fe,
                            index: ve
                          }, () => [
                            ee(X(Q(Fe)), 1)
                          ])
                        ]),
                        _: 2
                      }, 1032, ["class"]),
                      V(u(Db), {
                        class: A(q.value.tagsItemDelete({ class: [n.ui?.tagsItemDelete, _e(Fe) && Fe.ui?.tagsItemDelete] })),
                        disabled: u(I)
                      }, {
                        default: _(() => [
                          S(ie.$slots, "tags-item-delete", {
                            item: Fe,
                            index: ve
                          }, () => [
                            V(he, {
                              name: ie.deleteIcon || u(l).ui.icons.close,
                              class: A(q.value.tagsItemDeleteIcon({ class: [n.ui?.tagsItemDeleteIcon, _e(Fe) && Fe.ui?.tagsItemDeleteIcon] }))
                            }, null, 8, ["name", "class"])
                          ])
                        ]),
                        _: 2
                      }, 1032, ["class", "disabled"])
                    ]),
                    _: 2
                  }, 1032, ["value", "class"]))), 128)),
                  V(u(_d), {
                    modelValue: i.value,
                    "onUpdate:modelValue": Ne[2] || (Ne[2] = (Fe) => i.value = Fe),
                    "as-child": ""
                  }, {
                    default: _(() => [
                      V(u(Tb), O({
                        id: u(w),
                        ref_key: "inputRef",
                        ref: Ye
                      }, { ...ie.$attrs, ...u(E) }, {
                        placeholder: ie.placeholder,
                        class: q.value.tagsInput({ class: n.ui?.tagsInput }),
                        onKeydown: Ne[1] || (Ne[1] = nt(ze(() => {
                        }, ["prevent"]), ["enter"]))
                      }), null, 16, ["id", "placeholder", "class"])
                    ]),
                    _: 1
                  }, 8, ["modelValue"])
                ]),
                _: 3
              }, 8, ["model-value", "disabled", "required"])) : (h(), k(u(_d), O({
                key: 1,
                id: u(w),
                ref_key: "inputRef",
                ref: Ye,
                "display-value": Q
              }, { ...ie.$attrs, ...u(E) }, {
                type: ie.type,
                placeholder: ie.placeholder,
                required: ie.required,
                onBlur: be,
                onFocus: De,
                "onUpdate:modelValue": Ne[3] || (Ne[3] = (ge) => i.value = ge)
              }), null, 16, ["id", "type", "placeholder", "required"])),
              u(F) || ie.avatar || s.leading ? (h(), M("span", {
                key: 2,
                class: A(q.value.leading({ class: n.ui?.leading }))
              }, [
                S(ie.$slots, "leading", {
                  modelValue: Oe,
                  open: Ae,
                  ui: q.value
                }, () => [
                  u(F) && u(j) ? (h(), k(he, {
                    key: 0,
                    name: u(j),
                    class: A(q.value.leadingIcon({ class: n.ui?.leadingIcon }))
                  }, null, 8, ["name", "class"])) : ie.avatar ? (h(), k(ft, O({
                    key: 1,
                    size: n.ui?.itemLeadingAvatarSize || q.value.itemLeadingAvatarSize()
                  }, ie.avatar, {
                    class: q.value.itemLeadingAvatar({ class: n.ui?.itemLeadingAvatar })
                  }), null, 16, ["size", "class"])) : D("", !0)
                ])
              ], 2)) : D("", !0),
              u(H) || s.trailing ? (h(), k(u(Oy), {
                key: 3,
                class: A(q.value.trailing({ class: n.ui?.trailing }))
              }, {
                default: _(() => [
                  S(ie.$slots, "trailing", {
                    modelValue: Oe,
                    open: Ae,
                    ui: q.value
                  }, () => [
                    u(K) ? (h(), k(he, {
                      key: 0,
                      name: u(K),
                      class: A(q.value.trailingIcon({ class: n.ui?.trailingIcon }))
                    }, null, 8, ["name", "class"])) : D("", !0)
                  ])
                ]),
                _: 2
              }, 1032, ["class"])) : D("", !0)
            ]),
            _: 2
          }, 1032, ["as-child", "class"]),
          V(u(Ry), pe(me(u(f))), {
            default: _(() => [
              V(u(Ty), O({
                class: q.value.content({ class: n.ui?.content })
              }, p.value, {
                onFocusOutside: Ne[4] || (Ne[4] = ze(() => {
                }, ["prevent"]))
              }), {
                default: _(() => [
                  S(ie.$slots, "content-top"),
                  V(u(By), {
                    class: A(q.value.empty({ class: n.ui?.empty }))
                  }, {
                    default: _(() => [
                      S(ie.$slots, "empty", { searchTerm: i.value }, () => [
                        ee(X(i.value ? u(o)("inputMenu.noMatch", { searchTerm: i.value }) : u(o)("inputMenu.noData")), 1)
                      ])
                    ]),
                    _: 3
                  }, 8, ["class"]),
                  J("div", {
                    role: "presentation",
                    class: A(q.value.viewport({ class: n.ui?.viewport }))
                  }, [
                    $e.value && Le.value === "top" ? (h(), k(u(Y), { key: 0 })) : D("", !0),
                    (h(!0), M(te, null, le(oe.value, (ge, Fe) => (h(), k(u(sl), {
                      key: `group-${Fe}`,
                      class: A(q.value.group({ class: n.ui?.group }))
                    }, {
                      default: _(() => [
                        (h(!0), M(te, null, le(ge, (ve, ct) => (h(), M(te, {
                          key: `group-${Fe}-${ct}`
                        }, [
                          _e(ve) && ve.type === "label" ? (h(), k(u(My), {
                            key: 0,
                            class: A(q.value.label({ class: [n.ui?.label, ve.ui?.label, ve.class] }))
                          }, {
                            default: _(() => [
                              ee(X(u(qe)(ve, n.labelKey)), 1)
                            ]),
                            _: 2
                          }, 1032, ["class"])) : _e(ve) && ve.type === "separator" ? (h(), k(u(Ly), {
                            key: 1,
                            class: A(q.value.separator({ class: [n.ui?.separator, ve.ui?.separator, ve.class] }))
                          }, null, 8, ["class"])) : (h(), k(u(il), {
                            key: 2,
                            class: A(q.value.item({ class: [n.ui?.item, _e(ve) && ve.ui?.item, _e(ve) && ve.class] })),
                            disabled: _e(ve) && ve.disabled,
                            value: n.valueKey && _e(ve) ? u(qe)(ve, n.valueKey) : ve,
                            onSelect: (St) => de(St, ve)
                          }, {
                            default: _(() => [
                              S(ie.$slots, "item", {
                                item: ve,
                                index: ct
                              }, () => [
                                S(ie.$slots, "item-leading", {
                                  item: ve,
                                  index: ct
                                }, () => [
                                  _e(ve) && ve.icon ? (h(), k(he, {
                                    key: 0,
                                    name: ve.icon,
                                    class: A(q.value.itemLeadingIcon({ class: [n.ui?.itemLeadingIcon, ve.ui?.itemLeadingIcon] }))
                                  }, null, 8, ["name", "class"])) : _e(ve) && ve.avatar ? (h(), k(ft, O({
                                    key: 1,
                                    size: ve.ui?.itemLeadingAvatarSize || n.ui?.itemLeadingAvatarSize || q.value.itemLeadingAvatarSize()
                                  }, { ref_for: !0 }, ve.avatar, {
                                    class: q.value.itemLeadingAvatar({ class: [n.ui?.itemLeadingAvatar, ve.ui?.itemLeadingAvatar] })
                                  }), null, 16, ["size", "class"])) : _e(ve) && ve.chip ? (h(), k(Rs, O({
                                    key: 2,
                                    size: ve.ui?.itemLeadingChipSize || n.ui?.itemLeadingChipSize || q.value.itemLeadingChipSize(),
                                    inset: "",
                                    standalone: ""
                                  }, { ref_for: !0 }, ve.chip, {
                                    class: q.value.itemLeadingChip({ class: [n.ui?.itemLeadingChip, ve.ui?.itemLeadingChip] })
                                  }), null, 16, ["size", "class"])) : D("", !0)
                                ]),
                                J("span", {
                                  class: A(q.value.itemLabel({ class: [n.ui?.itemLabel, _e(ve) && ve.ui?.itemLabel] }))
                                }, [
                                  S(ie.$slots, "item-label", {
                                    item: ve,
                                    index: ct
                                  }, () => [
                                    ee(X(_e(ve) ? u(qe)(ve, n.labelKey) : ve), 1)
                                  ])
                                ], 2),
                                J("span", {
                                  class: A(q.value.itemTrailing({ class: [n.ui?.itemTrailing, _e(ve) && ve.ui?.itemTrailing] }))
                                }, [
                                  S(ie.$slots, "item-trailing", {
                                    item: ve,
                                    index: ct
                                  }),
                                  V(u(Dy), { "as-child": "" }, {
                                    default: _(() => [
                                      V(he, {
                                        name: ie.selectedIcon || u(l).ui.icons.check,
                                        class: A(q.value.itemTrailingIcon({ class: [n.ui?.itemTrailingIcon, _e(ve) && ve.ui?.itemTrailingIcon] }))
                                      }, null, 8, ["name", "class"])
                                    ]),
                                    _: 2
                                  }, 1024)
                                ], 2)
                              ])
                            ]),
                            _: 2
                          }, 1032, ["class", "disabled", "value", "onSelect"]))
                        ], 64))), 128))
                      ]),
                      _: 2
                    }, 1032, ["class"]))), 128)),
                    $e.value && Le.value === "bottom" ? (h(), k(u(Y), { key: 1 })) : D("", !0)
                  ], 2),
                  S(ie.$slots, "content-bottom"),
                  ie.arrow ? (h(), k(u(Ey), O({ key: 0 }, g.value, {
                    class: q.value.arrow({ class: n.ui?.arrow })
                  }), null, 16, ["class"])) : D("", !0)
                ]),
                _: 3
              }, 16, ["class"])
            ]),
            _: 3
          }, 16)
        ]),
        _: 3
      }, 16, ["name", "disabled", "class", "as-child"])
    ], 64));
  }
}), s6 = {
  slots: {
    root: "relative inline-flex items-center",
    base: [
      "w-full rounded-md border-0 placeholder:text-dimmed focus:outline-none disabled:cursor-not-allowed disabled:opacity-75",
      "transition-colors"
    ],
    increment: "absolute flex items-center",
    decrement: "absolute flex items-center"
  },
  variants: {
    fieldGroup: {
      horizontal: {
        root: "group has-focus-visible:z-[1]",
        base: "group-not-only:group-first:rounded-e-none group-not-only:group-last:rounded-s-none group-not-last:group-not-first:rounded-none"
      },
      vertical: {
        root: "group has-focus-visible:z-[1]",
        base: "group-not-only:group-first:rounded-b-none group-not-only:group-last:rounded-t-none group-not-last:group-not-first:rounded-none"
      }
    },
    color: {
      primary: "",
      secondary: "",
      success: "",
      info: "",
      warning: "",
      error: "",
      neutral: ""
    },
    size: {
      xs: "px-2 py-1 text-xs gap-1",
      sm: "px-2.5 py-1.5 text-xs gap-1.5",
      md: "px-2.5 py-1.5 text-sm gap-1.5",
      lg: "px-3 py-2 text-sm gap-2",
      xl: "px-3 py-2 text-base gap-2"
    },
    variant: {
      outline: "text-highlighted bg-default ring ring-inset ring-accented",
      soft: "text-highlighted bg-elevated/50 hover:bg-elevated focus:bg-elevated disabled:bg-elevated/50",
      subtle: "text-highlighted bg-elevated ring ring-inset ring-accented",
      ghost: "text-highlighted bg-transparent hover:bg-elevated focus:bg-elevated disabled:bg-transparent dark:disabled:bg-transparent",
      none: "text-highlighted bg-transparent"
    },
    disabled: {
      true: {
        increment: "opacity-75 cursor-not-allowed",
        decrement: "opacity-75 cursor-not-allowed"
      }
    },
    orientation: {
      horizontal: {
        base: "text-center",
        increment: "inset-y-0 end-0 pe-1",
        decrement: "inset-y-0 start-0 ps-1"
      },
      vertical: {
        increment: "top-0 end-0 pe-1 [&>button]:py-0 scale-80",
        decrement: "bottom-0 end-0 pe-1 [&>button]:py-0 scale-80"
      }
    },
    highlight: {
      true: ""
    }
  },
  compoundVariants: [
    {
      color: "primary",
      variant: [
        "outline",
        "subtle"
      ],
      class: "focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-primary"
    },
    {
      color: "secondary",
      variant: [
        "outline",
        "subtle"
      ],
      class: "focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-secondary"
    },
    {
      color: "success",
      variant: [
        "outline",
        "subtle"
      ],
      class: "focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-success"
    },
    {
      color: "info",
      variant: [
        "outline",
        "subtle"
      ],
      class: "focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-info"
    },
    {
      color: "warning",
      variant: [
        "outline",
        "subtle"
      ],
      class: "focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-warning"
    },
    {
      color: "error",
      variant: [
        "outline",
        "subtle"
      ],
      class: "focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-error"
    },
    {
      color: "primary",
      highlight: !0,
      class: "ring ring-inset ring-primary"
    },
    {
      color: "secondary",
      highlight: !0,
      class: "ring ring-inset ring-secondary"
    },
    {
      color: "success",
      highlight: !0,
      class: "ring ring-inset ring-success"
    },
    {
      color: "info",
      highlight: !0,
      class: "ring ring-inset ring-info"
    },
    {
      color: "warning",
      highlight: !0,
      class: "ring ring-inset ring-warning"
    },
    {
      color: "error",
      highlight: !0,
      class: "ring ring-inset ring-error"
    },
    {
      color: "neutral",
      variant: [
        "outline",
        "subtle"
      ],
      class: "focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-inverted"
    },
    {
      color: "neutral",
      highlight: !0,
      class: "ring ring-inset ring-inverted"
    },
    {
      orientation: "horizontal",
      size: "xs",
      class: "px-7"
    },
    {
      orientation: "horizontal",
      size: "sm",
      class: "px-8"
    },
    {
      orientation: "horizontal",
      size: "md",
      class: "px-9"
    },
    {
      orientation: "horizontal",
      size: "lg",
      class: "px-10"
    },
    {
      orientation: "horizontal",
      size: "xl",
      class: "px-11"
    },
    {
      orientation: "vertical",
      size: "xs",
      class: "pe-7"
    },
    {
      orientation: "vertical",
      size: "sm",
      class: "pe-8"
    },
    {
      orientation: "vertical",
      size: "md",
      class: "pe-9"
    },
    {
      orientation: "vertical",
      size: "lg",
      class: "pe-10"
    },
    {
      orientation: "vertical",
      size: "xl",
      class: "pe-11"
    }
  ],
  defaultVariants: {
    size: "md",
    color: "primary",
    variant: "outline"
  }
}, X4 = /* @__PURE__ */ L({
  inheritAttrs: !1,
  __name: "InputNumber",
  props: {
    as: {},
    placeholder: {},
    color: {},
    variant: {},
    size: {},
    highlight: { type: Boolean },
    orientation: { default: "horizontal" },
    increment: {},
    incrementIcon: {},
    incrementDisabled: { type: Boolean },
    decrement: {},
    decrementIcon: {},
    decrementDisabled: { type: Boolean },
    autofocus: { type: Boolean },
    autofocusDelay: {},
    modelValue: {},
    defaultValue: {},
    modelModifiers: {},
    locale: {},
    class: {},
    ui: {},
    min: {},
    max: {},
    step: {},
    stepSnapping: { type: Boolean },
    disabled: { type: Boolean },
    required: { type: Boolean },
    id: {},
    name: {},
    formatOptions: {},
    disableWheelChange: { type: Boolean },
    invertWheelChange: { type: Boolean },
    readonly: { type: Boolean }
  },
  emits: ["update:modelValue", "blur", "change"],
  setup(e, { expose: t, emit: a }) {
    const n = e, r = a, s = /* @__PURE__ */ qf(n, "modelValue", r, { defaultValue: n.defaultValue }), { t: i, code: o } = it(), l = ue(), d = Xe(tt(n, "as", "defaultValue", "min", "max", "step", "stepSnapping", "formatOptions", "disableWheelChange", "invertWheelChange", "readonly"), r), { emitFormBlur: c, emitFormFocus: f, emitFormChange: p, emitFormInput: g, id: v, color: m, size: y, name: x, highlight: b, disabled: C, ariaAttrs: w } = Ca(n), { orientation: $, size: B } = ur(n), I = T(() => n.locale || o.value), E = T(() => B.value || y.value), P = T(() => W({ extend: W(s6), ...l.ui?.inputNumber || {} })({
      color: m.value,
      variant: n.variant,
      size: E.value,
      highlight: b.value,
      orientation: n.orientation,
      fieldGroup: $.value
    })), R = T(() => n.incrementIcon || (n.orientation === "horizontal" ? l.ui.icons.plus : l.ui.icons.chevronUp)), F = T(() => n.decrementIcon || (n.orientation === "horizontal" ? l.ui.icons.minus : l.ui.icons.chevronDown)), H = N(null);
    function j(G) {
      n.modelModifiers?.optional && (G = G ?? void 0);
      const Y = new Event("change", { target: { value: G } });
      r("change", Y), p(), g();
    }
    function K(G) {
      c(), r("blur", G);
    }
    function z() {
      n.autofocus && H.value?.$el?.focus();
    }
    return Pe(() => {
      setTimeout(() => {
        z();
      }, n.autofocusDelay);
    }), t({
      inputRef: H
    }), (G, Y) => (h(), k(u(qE), O(u(d), {
      id: u(v),
      "model-value": u(s),
      class: P.value.root({ class: [n.ui?.root, n.class] }),
      name: u(x),
      disabled: u(C),
      locale: I.value,
      "onUpdate:modelValue": j
    }), {
      default: _(() => [
        V(u(GE), O({ ...G.$attrs, ...u(w) }, {
          ref_key: "inputRef",
          ref: H,
          placeholder: G.placeholder,
          required: G.required,
          class: P.value.base({ class: n.ui?.base }),
          onBlur: K,
          onFocus: u(f)
        }), null, 16, ["placeholder", "required", "class", "onFocus"]),
        J("div", {
          class: A(P.value.increment({ class: n.ui?.increment }))
        }, [
          V(u(jE), {
            "as-child": "",
            disabled: u(C) || G.incrementDisabled
          }, {
            default: _(() => [
              S(G.$slots, "increment", {}, () => [
                V(Je, O({
                  icon: R.value,
                  color: u(m),
                  size: G.size,
                  variant: "link",
                  "aria-label": u(i)("inputNumber.increment")
                }, typeof G.increment == "object" ? G.increment : void 0), null, 16, ["icon", "color", "size", "aria-label"])
              ])
            ]),
            _: 3
          }, 8, ["disabled"])
        ], 2),
        J("div", {
          class: A(P.value.decrement({ class: n.ui?.decrement }))
        }, [
          V(u(NE), {
            "as-child": "",
            disabled: u(C) || G.decrementDisabled
          }, {
            default: _(() => [
              S(G.$slots, "decrement", {}, () => [
                V(Je, O({
                  icon: F.value,
                  color: u(m),
                  size: G.size,
                  variant: "link",
                  "aria-label": u(i)("inputNumber.decrement")
                }, typeof G.decrement == "object" ? G.decrement : void 0), null, 16, ["icon", "color", "size", "aria-label"])
              ])
            ]),
            _: 3
          }, 8, ["disabled"])
        ], 2)
      ]),
      _: 3
    }, 16, ["id", "model-value", "class", "name", "disabled", "locale"]));
  }
}), i6 = {
  slots: {
    root: [
      "relative inline-flex items-center",
      "flex-wrap"
    ],
    base: [
      "rounded-md",
      "transition-colors"
    ],
    leading: "absolute inset-y-0 start-0 flex items-center",
    leadingIcon: "shrink-0 text-dimmed",
    leadingAvatar: "shrink-0",
    leadingAvatarSize: "",
    trailing: "absolute inset-y-0 end-0 flex items-center",
    trailingIcon: "shrink-0 text-dimmed",
    item: 'px-1.5 py-0.5 rounded-sm font-medium inline-flex items-center gap-0.5 ring ring-inset ring-accented bg-elevated text-default data-disabled:cursor-not-allowed data-disabled:opacity-75 wrap-anywhere data-[state="active"]:bg-accented',
    itemText: "",
    itemDelete: [
      "inline-flex items-center rounded-xs text-dimmed hover:text-default hover:bg-accented/75 disabled:pointer-events-none",
      "transition-colors"
    ],
    itemDeleteIcon: "shrink-0",
    input: "flex-1 border-0 bg-transparent placeholder:text-dimmed focus:outline-none disabled:cursor-not-allowed disabled:opacity-75"
  },
  variants: {
    fieldGroup: {
      horizontal: {
        root: "group has-focus-visible:z-[1]",
        base: "group-not-only:group-first:rounded-e-none group-not-only:group-last:rounded-s-none group-not-last:group-not-first:rounded-none"
      },
      vertical: {
        root: "group has-focus-visible:z-[1]",
        base: "group-not-only:group-first:rounded-b-none group-not-only:group-last:rounded-t-none group-not-last:group-not-first:rounded-none"
      }
    },
    size: {
      xs: {
        base: "px-2 py-1 text-xs gap-1",
        leading: "ps-2",
        trailing: "pe-2",
        leadingIcon: "size-4",
        leadingAvatarSize: "3xs",
        trailingIcon: "size-4",
        item: "text-[10px]/3",
        itemDeleteIcon: "size-3"
      },
      sm: {
        base: "px-2.5 py-1.5 text-xs gap-1.5",
        leading: "ps-2.5",
        trailing: "pe-2.5",
        leadingIcon: "size-4",
        leadingAvatarSize: "3xs",
        trailingIcon: "size-4",
        item: "text-[10px]/3",
        itemDeleteIcon: "size-3"
      },
      md: {
        base: "px-2.5 py-1.5 text-sm gap-1.5",
        leading: "ps-2.5",
        trailing: "pe-2.5",
        leadingIcon: "size-5",
        leadingAvatarSize: "2xs",
        trailingIcon: "size-5",
        item: "text-xs",
        itemDeleteIcon: "size-3.5"
      },
      lg: {
        base: "px-3 py-2 text-sm gap-2",
        leading: "ps-3",
        trailing: "pe-3",
        leadingIcon: "size-5",
        leadingAvatarSize: "2xs",
        trailingIcon: "size-5",
        item: "text-xs",
        itemDeleteIcon: "size-3.5"
      },
      xl: {
        base: "px-3 py-2 text-base gap-2",
        leading: "ps-3",
        trailing: "pe-3",
        leadingIcon: "size-6",
        leadingAvatarSize: "xs",
        trailingIcon: "size-6",
        item: "text-sm",
        itemDeleteIcon: "size-4"
      }
    },
    variant: {
      outline: "text-highlighted bg-default ring ring-inset ring-accented",
      soft: "text-highlighted bg-elevated/50 hover:bg-elevated has-focus:bg-elevated disabled:bg-elevated/50",
      subtle: "text-highlighted bg-elevated ring ring-inset ring-accented",
      ghost: "text-highlighted bg-transparent hover:bg-elevated has-focus:bg-elevated disabled:bg-transparent dark:disabled:bg-transparent",
      none: "text-highlighted bg-transparent"
    },
    color: {
      primary: "",
      secondary: "",
      success: "",
      info: "",
      warning: "",
      error: "",
      neutral: ""
    },
    leading: {
      true: ""
    },
    trailing: {
      true: ""
    },
    loading: {
      true: ""
    },
    highlight: {
      true: ""
    },
    type: {
      file: "file:me-1.5 file:font-medium file:text-muted file:outline-none"
    }
  },
  compoundVariants: [
    {
      color: "primary",
      variant: [
        "outline",
        "subtle"
      ],
      class: "has-focus-visible:ring-2 has-focus-visible:ring-inset has-focus-visible:ring-primary"
    },
    {
      color: "secondary",
      variant: [
        "outline",
        "subtle"
      ],
      class: "has-focus-visible:ring-2 has-focus-visible:ring-inset has-focus-visible:ring-secondary"
    },
    {
      color: "success",
      variant: [
        "outline",
        "subtle"
      ],
      class: "has-focus-visible:ring-2 has-focus-visible:ring-inset has-focus-visible:ring-success"
    },
    {
      color: "info",
      variant: [
        "outline",
        "subtle"
      ],
      class: "has-focus-visible:ring-2 has-focus-visible:ring-inset has-focus-visible:ring-info"
    },
    {
      color: "warning",
      variant: [
        "outline",
        "subtle"
      ],
      class: "has-focus-visible:ring-2 has-focus-visible:ring-inset has-focus-visible:ring-warning"
    },
    {
      color: "error",
      variant: [
        "outline",
        "subtle"
      ],
      class: "has-focus-visible:ring-2 has-focus-visible:ring-inset has-focus-visible:ring-error"
    },
    {
      color: "primary",
      highlight: !0,
      class: "ring ring-inset ring-primary"
    },
    {
      color: "secondary",
      highlight: !0,
      class: "ring ring-inset ring-secondary"
    },
    {
      color: "success",
      highlight: !0,
      class: "ring ring-inset ring-success"
    },
    {
      color: "info",
      highlight: !0,
      class: "ring ring-inset ring-info"
    },
    {
      color: "warning",
      highlight: !0,
      class: "ring ring-inset ring-warning"
    },
    {
      color: "error",
      highlight: !0,
      class: "ring ring-inset ring-error"
    },
    {
      color: "neutral",
      variant: [
        "outline",
        "subtle"
      ],
      class: "has-focus-visible:ring-2 has-focus-visible:ring-inset has-focus-visible:ring-inverted"
    },
    {
      color: "neutral",
      highlight: !0,
      class: "ring ring-inset ring-inverted"
    },
    {
      leading: !0,
      size: "xs",
      class: "ps-7"
    },
    {
      leading: !0,
      size: "sm",
      class: "ps-8"
    },
    {
      leading: !0,
      size: "md",
      class: "ps-9"
    },
    {
      leading: !0,
      size: "lg",
      class: "ps-10"
    },
    {
      leading: !0,
      size: "xl",
      class: "ps-11"
    },
    {
      trailing: !0,
      size: "xs",
      class: "pe-7"
    },
    {
      trailing: !0,
      size: "sm",
      class: "pe-8"
    },
    {
      trailing: !0,
      size: "md",
      class: "pe-9"
    },
    {
      trailing: !0,
      size: "lg",
      class: "pe-10"
    },
    {
      trailing: !0,
      size: "xl",
      class: "pe-11"
    },
    {
      loading: !0,
      leading: !0,
      class: {
        leadingIcon: "animate-spin"
      }
    },
    {
      loading: !0,
      leading: !1,
      trailing: !0,
      class: {
        trailingIcon: "animate-spin"
      }
    }
  ],
  defaultVariants: {
    size: "md",
    color: "primary",
    variant: "outline"
  }
}, J4 = /* @__PURE__ */ L({
  inheritAttrs: !1,
  __name: "InputTags",
  props: {
    as: {},
    placeholder: {},
    maxLength: {},
    color: {},
    variant: {},
    size: {},
    autofocus: { type: Boolean },
    autofocusDelay: { default: 0 },
    deleteIcon: {},
    highlight: { type: Boolean },
    class: {},
    ui: {},
    modelValue: {},
    defaultValue: {},
    addOnPaste: { type: Boolean },
    addOnTab: { type: Boolean },
    addOnBlur: { type: Boolean },
    duplicate: { type: Boolean },
    disabled: { type: Boolean },
    delimiter: {},
    max: {},
    id: {},
    convertValue: {},
    displayValue: {},
    name: {},
    required: { type: Boolean },
    icon: {},
    avatar: {},
    leading: { type: Boolean },
    leadingIcon: {},
    trailing: { type: Boolean },
    trailingIcon: {},
    loading: { type: Boolean },
    loadingIcon: {}
  },
  emits: ["change", "blur", "focus", "update:modelValue", "invalid", "addTag", "removeTag"],
  setup(e, { expose: t, emit: a }) {
    const n = e, r = a, s = Se(), i = ue(), o = Xe(tt(n, "as", "addOnPaste", "addOnTab", "addOnBlur", "duplicate", "delimiter", "max", "convertValue", "displayValue", "required"), r), { emitFormBlur: l, emitFormFocus: d, emitFormChange: c, emitFormInput: f, size: p, color: g, id: v, name: m, highlight: y, disabled: x, ariaAttrs: b } = Ca(n), { orientation: C, size: w } = ur(n), { isLeading: $, isTrailing: B, leadingIconName: I, trailingIconName: E } = lr(n), P = T(() => w.value || p.value), R = T(() => W({ extend: W(i6), ...i.ui?.inputTags || {} })({
      color: g.value,
      variant: n.variant,
      size: P?.value,
      loading: n.loading,
      highlight: y.value,
      leading: $.value || !!n.avatar || !!s.leading,
      trailing: B.value || !!s.trailing,
      fieldGroup: C.value
    })), F = N(null);
    Pe(() => {
      setTimeout(() => {
        H();
      }, n.autofocusDelay);
    });
    function H() {
      n.autofocus && F.value?.$el?.focus();
    }
    function j(G) {
      if (Tl(n.modelValue) === G)
        return;
      const Y = new Event("change", { target: { value: G } });
      r("change", Y), c(), f();
    }
    function K(G) {
      r("blur", G), l();
    }
    function z(G) {
      r("focus", G), d();
    }
    return t({
      inputRef: F
    }), (G, Y) => (h(), k(u(Eb), O({
      id: u(v),
      "model-value": G.modelValue,
      "default-value": G.defaultValue,
      class: R.value.root({ class: [R.value.base({ class: n.ui?.base }), n.ui?.root, n.class] })
    }, u(o), {
      name: u(m),
      disabled: u(x),
      "onUpdate:modelValue": j,
      onBlur: K,
      onFocus: z
    }), {
      default: _(({ modelValue: q }) => [
        (h(!0), M(te, null, le(q, (Q, se) => (h(), k(u(Pb), {
          key: se,
          value: Q,
          class: A(R.value.item({ class: [n.ui?.item] }))
        }, {
          default: _(() => [
            V(u(Mb), {
              class: A(R.value.itemText({ class: [n.ui?.itemText] }))
            }, {
              default: _(() => [
                s["item-text"] ? S(G.$slots, "item-text", {
                  key: 0,
                  item: Q,
                  index: se
                }) : D("", !0)
              ]),
              _: 2
            }, 1032, ["class"]),
            V(u(Db), {
              class: A(R.value.itemDelete({ class: [n.ui?.itemDelete] })),
              disabled: u(x)
            }, {
              default: _(() => [
                S(G.$slots, "item-delete", {
                  item: Q,
                  index: se
                }, () => [
                  V(he, {
                    name: G.deleteIcon || u(i).ui.icons.close,
                    class: A(R.value.itemDeleteIcon({ class: [n.ui?.itemDeleteIcon] }))
                  }, null, 8, ["name", "class"])
                ])
              ]),
              _: 2
            }, 1032, ["class", "disabled"])
          ]),
          _: 2
        }, 1032, ["value", "class"]))), 128)),
        V(u(Tb), O({
          ref_key: "inputRef",
          ref: F
        }, { ...G.$attrs, ...u(b) }, {
          placeholder: G.placeholder,
          "max-length": G.maxLength,
          class: R.value.input({ class: n.ui?.input })
        }), null, 16, ["placeholder", "max-length", "class"]),
        S(G.$slots, "default"),
        u($) || G.avatar || s.leading ? (h(), M("span", {
          key: 0,
          class: A(R.value.leading({ class: n.ui?.leading }))
        }, [
          S(G.$slots, "leading", {}, () => [
            u($) && u(I) ? (h(), k(he, {
              key: 0,
              name: u(I),
              class: A(R.value.leadingIcon({ class: n.ui?.leadingIcon }))
            }, null, 8, ["name", "class"])) : G.avatar ? (h(), k(ft, O({
              key: 1,
              size: n.ui?.leadingAvatarSize || R.value.leadingAvatarSize()
            }, G.avatar, {
              class: R.value.leadingAvatar({ class: n.ui?.leadingAvatar })
            }), null, 16, ["size", "class"])) : D("", !0)
          ])
        ], 2)) : D("", !0),
        u(B) || s.trailing ? (h(), M("span", {
          key: 1,
          class: A(R.value.trailing({ class: n.ui?.trailing }))
        }, [
          S(G.$slots, "trailing", {}, () => [
            u(E) ? (h(), k(he, {
              key: 0,
              name: u(E),
              class: A(R.value.trailingIcon({ class: n.ui?.trailingIcon }))
            }, null, 8, ["name", "class"])) : D("", !0)
          ])
        ], 2)) : D("", !0)
      ]),
      _: 3
    }, 16, ["id", "model-value", "default-value", "class", "name", "disabled"]));
  }
}), o6 = {
  base: "min-h-[calc(100vh-var(--ui-header-height))]"
}, Q4 = /* @__PURE__ */ L({
  __name: "Main",
  props: {
    as: { default: "main" },
    class: {}
  },
  setup(e) {
    const t = e, a = ue(), n = T(() => W({ extend: W(o6), ...a.ui?.main || {} }));
    return (r, s) => (h(), k(u(U), {
      as: r.as,
      class: A(n.value({ class: t.class }))
    }, {
      default: _(() => [
        S(r.$slots, "default")
      ]),
      _: 3
    }, 8, ["as", "class"]));
  }
}), l6 = {
  slots: {
    root: "group relative flex items-center overflow-hidden gap-(--gap) [--gap:--spacing(16)] [--duration:20s]",
    content: "flex items-center shrink-0 justify-around gap-(--gap) min-w-max"
  },
  variants: {
    orientation: {
      horizontal: {
        content: "w-full"
      },
      vertical: {
        content: "h-full"
      }
    },
    pauseOnHover: {
      true: {
        content: "group-hover:[animation-play-state:paused]"
      }
    },
    reverse: {
      true: {
        content: "[animation-direction:reverse]"
      }
    },
    overlay: {
      true: {
        root: 'before:absolute before:pointer-events-none before:content-[""] before:z-2 before:from-default before:to-transparent after:absolute after:pointer-events-none after:content-[""] after:z-2 after:from-default after:to-transparent'
      }
    }
  },
  compoundVariants: [
    {
      orientation: "horizontal",
      class: {
        root: "flex-row",
        content: "flex-row animate-[marquee_var(--duration)_linear_infinite] rtl:animate-[marquee-rtl_var(--duration)_linear_infinite] backface-hidden"
      }
    },
    {
      orientation: "horizontal",
      overlay: !0,
      class: {
        root: "before:inset-y-0 before:left-0 before:h-full before:w-1/3 before:bg-gradient-to-r after:inset-y-0 after:right-0 after:h-full after:w-1/3 after:bg-gradient-to-l backface-hidden"
      }
    },
    {
      orientation: "vertical",
      class: {
        root: "flex-col",
        content: "flex-col animate-[marquee-vertical_var(--duration)_linear_infinite] rtl:animate-[marquee-vertical-rtl_var(--duration)_linear_infinite] h-[fit-content] backface-hidden"
      }
    },
    {
      orientation: "vertical",
      overlay: !0,
      class: {
        root: "before:inset-x-0 before:top-0 before:w-full before:h-1/3 before:bg-gradient-to-b after:inset-x-0 after:bottom-0 after:w-full after:h-1/3 after:bg-gradient-to-t backface-hidden"
      }
    }
  ]
}, u6 = /* @__PURE__ */ L({
  __name: "Marquee",
  props: {
    as: {},
    pauseOnHover: { type: Boolean },
    reverse: { type: Boolean },
    orientation: { default: "horizontal" },
    repeat: { default: 4 },
    overlay: { type: Boolean, default: !0 },
    class: {},
    ui: {}
  },
  setup(e) {
    const t = e, a = ue(), n = T(() => W({ extend: W(l6), ...a.ui?.marquee || {} })({
      pauseOnHover: t.pauseOnHover,
      orientation: t.orientation,
      reverse: t.reverse,
      overlay: t.overlay
    }));
    return (r, s) => (h(), k(u(U), {
      as: r.as,
      class: A(n.value.root({ class: [t.ui?.root, t.class] }))
    }, {
      default: _(() => [
        (h(!0), M(te, null, le(r.repeat, (i) => (h(), M("div", {
          key: i,
          class: A(n.value.content({ class: [t.ui?.content] }))
        }, [
          S(r.$slots, "default")
        ], 2))), 128))
      ]),
      _: 3
    }, 8, ["as", "class"]));
  }
}), d6 = {
  slots: {
    content: "bg-default shadow-lg rounded-md ring ring-default data-[state=open]:animate-[scale-in_100ms_ease-out] data-[state=closed]:animate-[scale-out_100ms_ease-in] origin-(--reka-popover-content-transform-origin) focus:outline-none pointer-events-auto",
    arrow: "fill-default"
  }
}, c6 = /* @__PURE__ */ L({
  __name: "Popover",
  props: {
    mode: { default: "click" },
    content: {},
    arrow: { type: [Boolean, Object] },
    portal: { type: [Boolean, String], default: !0 },
    reference: {},
    dismissible: { type: Boolean, default: !0 },
    class: {},
    ui: {},
    defaultOpen: { type: Boolean },
    open: { type: Boolean },
    modal: { type: Boolean },
    openDelay: { default: 0 },
    closeDelay: { default: 0 }
  },
  emits: ["close:prevent", "update:open"],
  setup(e, { emit: t }) {
    const a = e, n = t, r = Se(), s = ue(), i = a.mode === "hover" ? tt(a, "defaultOpen", "open", "openDelay", "closeDelay") : tt(a, "defaultOpen", "open", "modal"), o = Xe(i, n), l = tn(Ge(() => a.portal)), d = Ge(() => Ct(a.content, { side: "bottom", sideOffset: 8, collisionPadding: 8 })), c = T(() => a.dismissible ? {} : ["pointerDownOutside", "interactOutside", "escapeKeyDown"].reduce((m, y) => (m[y] = (x) => {
      x.preventDefault(), n("close:prevent");
    }, m), {})), f = Ge(() => a.arrow), p = T(() => W({ extend: W(d6), ...s.ui?.popover || {} })({
      side: d.value.side
    })), g = T(() => a.mode === "hover" ? GL : UL);
    return (v, m) => (h(), k(u(g).Root, pe(me(u(o))), {
      default: _(({ open: y }) => [
        r.default || v.reference ? (h(), k(u(g).Trigger, {
          key: 0,
          "as-child": "",
          reference: v.reference,
          class: A(a.class)
        }, {
          default: _(() => [
            S(v.$slots, "default", { open: y })
          ]),
          _: 2
        }, 1032, ["reference", "class"])) : D("", !0),
        "Anchor" in g.value && r.anchor ? (h(), k(u(g).Anchor, {
          key: 1,
          "as-child": ""
        }, {
          default: _(() => [
            S(v.$slots, "anchor")
          ]),
          _: 3
        })) : D("", !0),
        V(u(g).Portal, pe(me(u(l))), {
          default: _(() => [
            V(u(g).Content, O(d.value, {
              class: p.value.content({ class: [!r.default && a.class, a.ui?.content] })
            }, Ri(c.value)), {
              default: _(() => [
                S(v.$slots, "content"),
                v.arrow ? (h(), k(u(g).Arrow, O({ key: 0 }, f.value, {
                  class: p.value.arrow({ class: a.ui?.arrow })
                }), null, 16, ["class"])) : D("", !0)
              ]),
              _: 3
            }, 16, ["class"])
          ]),
          _: 3
        }, 16)
      ]),
      _: 3
    }, 16));
  }
}), f6 = {
  slots: {
    root: "relative flex gap-1.5 [&>div]:min-w-0",
    list: "isolate min-w-0",
    label: "w-full flex items-center gap-1.5 font-semibold text-xs/5 text-highlighted px-2.5 py-1.5",
    item: "min-w-0",
    link: "group relative w-full flex items-center gap-1.5 font-medium text-sm before:absolute before:z-[-1] before:rounded-md focus:outline-none focus-visible:outline-none dark:focus-visible:outline-none focus-visible:before:ring-inset focus-visible:before:ring-2",
    linkLeadingIcon: "shrink-0 size-5",
    linkLeadingAvatar: "shrink-0",
    linkLeadingAvatarSize: "2xs",
    linkTrailing: "group ms-auto inline-flex gap-1.5 items-center",
    linkTrailingBadge: "shrink-0",
    linkTrailingBadgeSize: "sm",
    linkTrailingIcon: "size-5 transform shrink-0 group-data-[state=open]:rotate-180 transition-transform duration-200",
    linkLabel: "truncate",
    linkLabelExternalIcon: "inline-block size-3 align-top text-dimmed",
    childList: "isolate",
    childLabel: "text-xs text-highlighted",
    childItem: "",
    childLink: "group relative size-full flex items-start text-start text-sm before:absolute before:z-[-1] before:rounded-md focus:outline-none focus-visible:outline-none dark:focus-visible:outline-none focus-visible:before:ring-inset focus-visible:before:ring-2",
    childLinkWrapper: "min-w-0",
    childLinkIcon: "size-5 shrink-0",
    childLinkLabel: "truncate",
    childLinkLabelExternalIcon: "inline-block size-3 align-top text-dimmed",
    childLinkDescription: "text-muted",
    separator: "px-2 h-px bg-border",
    viewportWrapper: "absolute top-full left-0 flex w-full",
    viewport: "relative overflow-hidden bg-default shadow-lg rounded-md ring ring-default h-(--reka-navigation-menu-viewport-height) w-full transition-[width,height,left] duration-200 origin-[top_center] data-[state=open]:animate-[scale-in_100ms_ease-out] data-[state=closed]:animate-[scale-out_100ms_ease-in] z-[1]",
    content: "",
    indicator: "absolute data-[state=visible]:animate-[fade-in_100ms_ease-out] data-[state=hidden]:animate-[fade-out_100ms_ease-in] data-[state=hidden]:opacity-0 bottom-0 z-[2] w-(--reka-navigation-menu-indicator-size) translate-x-(--reka-navigation-menu-indicator-position) flex h-2.5 items-end justify-center overflow-hidden transition-[translate,width] duration-200",
    arrow: "relative top-[50%] size-2.5 rotate-45 border border-default bg-default z-[1] rounded-xs"
  },
  variants: {
    color: {
      primary: {
        link: "focus-visible:before:ring-primary",
        childLink: "focus-visible:before:ring-primary"
      },
      secondary: {
        link: "focus-visible:before:ring-secondary",
        childLink: "focus-visible:before:ring-secondary"
      },
      success: {
        link: "focus-visible:before:ring-success",
        childLink: "focus-visible:before:ring-success"
      },
      info: {
        link: "focus-visible:before:ring-info",
        childLink: "focus-visible:before:ring-info"
      },
      warning: {
        link: "focus-visible:before:ring-warning",
        childLink: "focus-visible:before:ring-warning"
      },
      error: {
        link: "focus-visible:before:ring-error",
        childLink: "focus-visible:before:ring-error"
      },
      neutral: {
        link: "focus-visible:before:ring-inverted",
        childLink: "focus-visible:before:ring-inverted"
      }
    },
    highlightColor: {
      primary: "",
      secondary: "",
      success: "",
      info: "",
      warning: "",
      error: "",
      neutral: ""
    },
    variant: {
      pill: "",
      link: ""
    },
    orientation: {
      horizontal: {
        root: "items-center justify-between",
        list: "flex items-center",
        item: "py-2",
        link: "px-2.5 py-1.5 before:inset-x-px before:inset-y-0",
        childList: "grid p-2",
        childLink: "px-3 py-2 gap-2 before:inset-x-px before:inset-y-0",
        childLinkLabel: "font-medium",
        content: "absolute top-0 left-0 w-full max-h-[70vh] overflow-y-auto"
      },
      vertical: {
        root: "flex-col",
        link: "flex-row px-2.5 py-1.5 before:inset-y-px before:inset-x-0",
        childLabel: "px-1.5 py-0.5",
        childLink: "p-1.5 gap-1.5 before:inset-y-px before:inset-x-0"
      }
    },
    contentOrientation: {
      horizontal: {
        viewportWrapper: "justify-center",
        content: "data-[motion=from-start]:animate-[enter-from-left_200ms_ease] data-[motion=from-end]:animate-[enter-from-right_200ms_ease] data-[motion=to-start]:animate-[exit-to-left_200ms_ease] data-[motion=to-end]:animate-[exit-to-right_200ms_ease]"
      },
      vertical: {
        viewport: "sm:w-(--reka-navigation-menu-viewport-width) left-(--reka-navigation-menu-viewport-left)"
      }
    },
    active: {
      true: {
        childLink: "before:bg-elevated text-highlighted",
        childLinkIcon: "text-default"
      },
      false: {
        link: "text-muted",
        linkLeadingIcon: "text-dimmed",
        childLink: [
          "hover:before:bg-elevated/50 text-default hover:text-highlighted",
          "transition-colors before:transition-colors"
        ],
        childLinkIcon: [
          "text-dimmed group-hover:text-default",
          "transition-colors"
        ]
      }
    },
    disabled: {
      true: {
        link: "cursor-not-allowed opacity-75"
      }
    },
    highlight: {
      true: ""
    },
    level: {
      true: ""
    },
    collapsed: {
      true: ""
    }
  },
  compoundVariants: [
    {
      orientation: "horizontal",
      contentOrientation: "horizontal",
      class: {
        childList: "grid-cols-2 gap-2"
      }
    },
    {
      orientation: "horizontal",
      contentOrientation: "vertical",
      class: {
        childList: "gap-1",
        content: "w-60"
      }
    },
    {
      orientation: "vertical",
      collapsed: !1,
      class: {
        childList: "ms-5 border-s border-default",
        childItem: "ps-1.5 -ms-px",
        content: "data-[state=open]:animate-[collapsible-down_200ms_ease-out] data-[state=closed]:animate-[collapsible-up_200ms_ease-out] overflow-hidden"
      }
    },
    {
      orientation: "vertical",
      collapsed: !0,
      class: {
        link: "px-1.5",
        content: "shadow-sm rounded-sm min-h-6 p-1"
      }
    },
    {
      orientation: "horizontal",
      highlight: !0,
      class: {
        link: [
          "after:absolute after:-bottom-2 after:inset-x-2.5 after:block after:h-px after:rounded-full",
          "after:transition-colors"
        ]
      }
    },
    {
      orientation: "vertical",
      highlight: !0,
      level: !0,
      class: {
        link: [
          "after:absolute after:-start-1.5 after:inset-y-0.5 after:block after:w-px after:rounded-full",
          "after:transition-colors"
        ]
      }
    },
    {
      disabled: !1,
      active: !1,
      variant: "pill",
      class: {
        link: [
          "hover:text-highlighted hover:before:bg-elevated/50",
          "transition-colors before:transition-colors"
        ],
        linkLeadingIcon: [
          "group-hover:text-default",
          "transition-colors"
        ]
      }
    },
    {
      disabled: !1,
      active: !1,
      variant: "pill",
      orientation: "horizontal",
      class: {
        link: "data-[state=open]:text-highlighted",
        linkLeadingIcon: "group-data-[state=open]:text-default"
      }
    },
    {
      disabled: !1,
      variant: "pill",
      highlight: !0,
      orientation: "horizontal",
      class: {
        link: "data-[state=open]:before:bg-elevated/50"
      }
    },
    {
      disabled: !1,
      variant: "pill",
      highlight: !1,
      active: !1,
      orientation: "horizontal",
      class: {
        link: "data-[state=open]:before:bg-elevated/50"
      }
    },
    {
      color: "primary",
      variant: "pill",
      active: !0,
      class: {
        link: "text-primary",
        linkLeadingIcon: "text-primary group-data-[state=open]:text-primary"
      }
    },
    {
      color: "secondary",
      variant: "pill",
      active: !0,
      class: {
        link: "text-secondary",
        linkLeadingIcon: "text-secondary group-data-[state=open]:text-secondary"
      }
    },
    {
      color: "success",
      variant: "pill",
      active: !0,
      class: {
        link: "text-success",
        linkLeadingIcon: "text-success group-data-[state=open]:text-success"
      }
    },
    {
      color: "info",
      variant: "pill",
      active: !0,
      class: {
        link: "text-info",
        linkLeadingIcon: "text-info group-data-[state=open]:text-info"
      }
    },
    {
      color: "warning",
      variant: "pill",
      active: !0,
      class: {
        link: "text-warning",
        linkLeadingIcon: "text-warning group-data-[state=open]:text-warning"
      }
    },
    {
      color: "error",
      variant: "pill",
      active: !0,
      class: {
        link: "text-error",
        linkLeadingIcon: "text-error group-data-[state=open]:text-error"
      }
    },
    {
      color: "neutral",
      variant: "pill",
      active: !0,
      class: {
        link: "text-highlighted",
        linkLeadingIcon: "text-highlighted group-data-[state=open]:text-highlighted"
      }
    },
    {
      variant: "pill",
      active: !0,
      highlight: !1,
      class: {
        link: "before:bg-elevated"
      }
    },
    {
      variant: "pill",
      active: !0,
      highlight: !0,
      disabled: !1,
      class: {
        link: [
          "hover:before:bg-elevated/50",
          "before:transition-colors"
        ]
      }
    },
    {
      disabled: !1,
      active: !1,
      variant: "link",
      class: {
        link: [
          "hover:text-highlighted",
          "transition-colors"
        ],
        linkLeadingIcon: [
          "group-hover:text-default",
          "transition-colors"
        ]
      }
    },
    {
      disabled: !1,
      active: !1,
      variant: "link",
      orientation: "horizontal",
      class: {
        link: "data-[state=open]:text-highlighted",
        linkLeadingIcon: "group-data-[state=open]:text-default"
      }
    },
    {
      color: "primary",
      variant: "link",
      active: !0,
      class: {
        link: "text-primary",
        linkLeadingIcon: "text-primary group-data-[state=open]:text-primary"
      }
    },
    {
      color: "secondary",
      variant: "link",
      active: !0,
      class: {
        link: "text-secondary",
        linkLeadingIcon: "text-secondary group-data-[state=open]:text-secondary"
      }
    },
    {
      color: "success",
      variant: "link",
      active: !0,
      class: {
        link: "text-success",
        linkLeadingIcon: "text-success group-data-[state=open]:text-success"
      }
    },
    {
      color: "info",
      variant: "link",
      active: !0,
      class: {
        link: "text-info",
        linkLeadingIcon: "text-info group-data-[state=open]:text-info"
      }
    },
    {
      color: "warning",
      variant: "link",
      active: !0,
      class: {
        link: "text-warning",
        linkLeadingIcon: "text-warning group-data-[state=open]:text-warning"
      }
    },
    {
      color: "error",
      variant: "link",
      active: !0,
      class: {
        link: "text-error",
        linkLeadingIcon: "text-error group-data-[state=open]:text-error"
      }
    },
    {
      color: "neutral",
      variant: "link",
      active: !0,
      class: {
        link: "text-highlighted",
        linkLeadingIcon: "text-highlighted group-data-[state=open]:text-highlighted"
      }
    },
    {
      highlightColor: "primary",
      highlight: !0,
      level: !0,
      active: !0,
      class: {
        link: "after:bg-primary"
      }
    },
    {
      highlightColor: "secondary",
      highlight: !0,
      level: !0,
      active: !0,
      class: {
        link: "after:bg-secondary"
      }
    },
    {
      highlightColor: "success",
      highlight: !0,
      level: !0,
      active: !0,
      class: {
        link: "after:bg-success"
      }
    },
    {
      highlightColor: "info",
      highlight: !0,
      level: !0,
      active: !0,
      class: {
        link: "after:bg-info"
      }
    },
    {
      highlightColor: "warning",
      highlight: !0,
      level: !0,
      active: !0,
      class: {
        link: "after:bg-warning"
      }
    },
    {
      highlightColor: "error",
      highlight: !0,
      level: !0,
      active: !0,
      class: {
        link: "after:bg-error"
      }
    },
    {
      highlightColor: "neutral",
      highlight: !0,
      level: !0,
      active: !0,
      class: {
        link: "after:bg-inverted"
      }
    }
  ],
  defaultVariants: {
    color: "primary",
    highlightColor: "primary",
    variant: "pill"
  }
}, Z4 = /* @__PURE__ */ L({
  inheritAttrs: !1,
  __name: "NavigationMenu",
  props: {
    as: {},
    trailingIcon: {},
    externalIcon: { type: [Boolean, String, Object], default: !0 },
    items: {},
    color: {},
    variant: {},
    orientation: { default: "horizontal" },
    collapsed: { type: Boolean },
    tooltip: { type: [Boolean, Object] },
    popover: { type: [Boolean, Object] },
    highlight: { type: Boolean },
    highlightColor: {},
    content: {},
    contentOrientation: { default: "horizontal" },
    arrow: { type: Boolean },
    labelKey: { default: "label" },
    class: {},
    ui: {},
    modelValue: {},
    defaultValue: {},
    delayDuration: { default: 0 },
    disableClickTrigger: { type: Boolean },
    disableHoverTrigger: { type: Boolean },
    skipDelayDuration: {},
    disablePointerLeaveClose: { type: Boolean },
    unmountOnHide: { type: Boolean, default: !0 },
    disabled: { type: Boolean },
    type: { default: "multiple" },
    collapsible: { type: Boolean, default: !0 }
  },
  emits: ["update:modelValue"],
  setup(e, { emit: t }) {
    const a = e, n = t, r = Se(), s = ue(), i = Xe(T(() => ({
      as: a.as,
      modelValue: a.modelValue,
      defaultValue: a.defaultValue,
      delayDuration: a.delayDuration,
      skipDelayDuration: a.skipDelayDuration,
      orientation: a.orientation,
      disableClickTrigger: a.disableClickTrigger,
      disableHoverTrigger: a.disableHoverTrigger,
      disablePointerLeaveClose: a.disablePointerLeaveClose,
      unmountOnHide: a.unmountOnHide
    })), n), o = Xe(tt(a, "collapsible", "disabled", "type", "unmountOnHide"), n), l = Ge(() => a.content), d = Ge(() => Ct(typeof a.tooltip == "boolean" ? {} : a.tooltip, { delayDuration: 0, content: { side: "right" } })), c = Ge(() => Ct(typeof a.popover == "boolean" ? {} : a.popover, { mode: "hover", content: { side: "right", align: "start", alignOffset: 2 } })), [f, p] = /* @__PURE__ */ Lt(), [g, v] = /* @__PURE__ */ Lt({
      props: {
        item: Object,
        index: Number,
        level: Number
      }
    }), m = T(() => W({ extend: W(f6), ...s.ui?.navigationMenu || {} })({
      orientation: a.orientation,
      contentOrientation: a.orientation === "vertical" ? void 0 : a.contentOrientation,
      collapsed: a.collapsed,
      color: a.color,
      variant: a.variant,
      highlight: a.highlight,
      highlightColor: a.highlightColor || a.color
    })), y = T(
      () => a.items?.length ? Ps(a.items) ? a.items : [a.items] : []
    );
    function x(b, C = 0) {
      const w = b.reduce(($, B, I) => ((B.defaultOpen || B.open) && $.push(B.value || (C > 0 ? `item-${C}-${I}` : `item-${I}`)), $), []);
      return a.type === "single" ? w[0] : w;
    }
    return (b, C) => (h(), M(te, null, [
      V(u(f), null, {
        default: _(({ item: w, active: $, index: B }) => [
          S(b.$slots, w.slot || "item", {
            item: w,
            index: B
          }, () => [
            S(b.$slots, w.slot ? `${w.slot}-leading` : "item-leading", {
              item: w,
              active: $,
              index: B
            }, () => [
              w.avatar ? (h(), k(ft, O({
                key: 0,
                size: w.ui?.linkLeadingAvatarSize || a.ui?.linkLeadingAvatarSize || m.value.linkLeadingAvatarSize()
              }, w.avatar, {
                class: m.value.linkLeadingAvatar({ class: [a.ui?.linkLeadingAvatar, w.ui?.linkLeadingAvatar], active: $, disabled: !!w.disabled })
              }), null, 16, ["size", "class"])) : w.icon ? (h(), k(he, {
                key: 1,
                name: w.icon,
                class: A(m.value.linkLeadingIcon({ class: [a.ui?.linkLeadingIcon, w.ui?.linkLeadingIcon], active: $, disabled: !!w.disabled }))
              }, null, 8, ["name", "class"])) : D("", !0)
            ]),
            (!b.collapsed || b.orientation !== "vertical") && (u(qe)(w, a.labelKey) || r[w.slot ? `${w.slot}-label` : "item-label"]) ? (h(), M("span", {
              key: 0,
              class: A(m.value.linkLabel({ class: [a.ui?.linkLabel, w.ui?.linkLabel] }))
            }, [
              S(b.$slots, w.slot ? `${w.slot}-label` : "item-label", {
                item: w,
                active: $,
                index: B
              }, () => [
                ee(X(u(qe)(w, a.labelKey)), 1)
              ]),
              w.target === "_blank" && b.externalIcon !== !1 ? (h(), k(he, {
                key: 0,
                name: typeof b.externalIcon == "string" ? b.externalIcon : u(s).ui.icons.external,
                class: A(m.value.linkLabelExternalIcon({ class: [a.ui?.linkLabelExternalIcon, w.ui?.linkLabelExternalIcon], active: $ }))
              }, null, 8, ["name", "class"])) : D("", !0)
            ], 2)) : D("", !0),
            (!b.collapsed || b.orientation !== "vertical") && (w.badge || b.orientation === "horizontal" && (w.children?.length || r[w.slot ? `${w.slot}-content` : "item-content"]) || b.orientation === "vertical" && w.children?.length || w.trailingIcon || r[w.slot ? `${w.slot}-trailing` : "item-trailing"]) ? (h(), k(ut(b.orientation === "vertical" && w.children?.length && !b.collapsed ? u(hd) : "span"), {
              key: 1,
              as: "span",
              class: A(m.value.linkTrailing({ class: [a.ui?.linkTrailing, w.ui?.linkTrailing] })),
              onClick: C[0] || (C[0] = ze(() => {
              }, ["stop", "prevent"]))
            }, {
              default: _(() => [
                S(b.$slots, w.slot ? `${w.slot}-trailing` : "item-trailing", {
                  item: w,
                  active: $,
                  index: B
                }, () => [
                  w.badge !== void 0 ? (h(), k(Ls, O({
                    key: 0,
                    color: "neutral",
                    variant: "outline",
                    size: w.ui?.linkTrailingBadgeSize || a.ui?.linkTrailingBadgeSize || m.value.linkTrailingBadgeSize()
                  }, typeof w.badge == "string" || typeof w.badge == "number" ? { label: w.badge } : w.badge, {
                    class: m.value.linkTrailingBadge({ class: [a.ui?.linkTrailingBadge, w.ui?.linkTrailingBadge] })
                  }), null, 16, ["size", "class"])) : D("", !0),
                  b.orientation === "horizontal" && (w.children?.length || r[w.slot ? `${w.slot}-content` : "item-content"]) || b.orientation === "vertical" && w.children?.length ? (h(), k(he, {
                    key: 1,
                    name: w.trailingIcon || b.trailingIcon || u(s).ui.icons.chevronDown,
                    class: A(m.value.linkTrailingIcon({ class: [a.ui?.linkTrailingIcon, w.ui?.linkTrailingIcon], active: $ }))
                  }, null, 8, ["name", "class"])) : w.trailingIcon ? (h(), k(he, {
                    key: 2,
                    name: w.trailingIcon,
                    class: A(m.value.linkTrailingIcon({ class: [a.ui?.linkTrailingIcon, w.ui?.linkTrailingIcon], active: $ }))
                  }, null, 8, ["name", "class"])) : D("", !0)
                ])
              ]),
              _: 2
            }, 1032, ["class"])) : D("", !0)
          ])
        ]),
        _: 3
      }),
      V(u(g), null, {
        default: _(({ item: w, index: $, level: B = 0 }) => [
          (h(), k(ut(b.orientation === "vertical" && !b.collapsed ? u(Qm) : u(vE)), {
            as: "li",
            value: w.value || (B > 0 ? `item-${B}-${$}` : `item-${$}`)
          }, {
            default: _(() => [
              b.orientation === "vertical" && w.type === "label" && !b.collapsed ? (h(), M("div", {
                key: 0,
                class: A(m.value.label({ class: [a.ui?.label, w.ui?.label, w.class] }))
              }, [
                V(u(p), {
                  item: w,
                  index: $
                }, null, 8, ["item", "index"])
              ], 2)) : w.type !== "label" ? (h(), k(Wt, O({ key: 1 }, b.orientation === "vertical" && w.children?.length && !b.collapsed && w.type === "trigger" ? {} : u(Ga)(w), { custom: "" }), {
                default: _(({ active: I, ...E }) => [
                  (h(), k(ut(b.orientation === "horizontal" && (w.children?.length || r[w.slot ? `${w.slot}-content` : "item-content"]) ? u($E) : b.orientation === "vertical" && w.children?.length && !b.collapsed && !E.href ? u(hd) : u(bu)), {
                    "as-child": "",
                    active: I || w.active,
                    disabled: w.disabled,
                    onSelect: w.onSelect
                  }, {
                    default: _(() => [
                      b.orientation === "vertical" && b.collapsed && w.children?.length && (a.popover || w.popover) ? (h(), k(c6, O({ key: 0 }, { ...c.value, ...typeof w.popover == "boolean" ? {} : w.popover || {} }, {
                        ui: { content: m.value.content({ class: [a.ui?.content, w.ui?.content] }) }
                      }), {
                        content: _(() => [
                          S(b.$slots, w.slot ? `${w.slot}-content` : "item-content", {
                            item: w,
                            active: I || w.active,
                            index: $
                          }, () => [
                            J("ul", {
                              class: A(m.value.childList({ class: [a.ui?.childList, w.ui?.childList] }))
                            }, [
                              J("li", {
                                class: A(m.value.childLabel({ class: [a.ui?.childLabel, w.ui?.childLabel] }))
                              }, X(u(qe)(w, a.labelKey)), 3),
                              (h(!0), M(te, null, le(w.children, (P, R) => (h(), M("li", {
                                key: R,
                                class: A(m.value.childItem({ class: [a.ui?.childItem, w.ui?.childItem] }))
                              }, [
                                V(Wt, O({ ref_for: !0 }, u(Ga)(P), { custom: "" }), {
                                  default: _(({ active: F, ...H }) => [
                                    V(u(bu), {
                                      "as-child": "",
                                      active: F,
                                      onSelect: P.onSelect
                                    }, {
                                      default: _(() => [
                                        V(ha, O({ ref_for: !0 }, H, {
                                          class: m.value.childLink({ class: [a.ui?.childLink, w.ui?.childLink, P.class], active: F })
                                        }), {
                                          default: _(() => [
                                            P.icon ? (h(), k(he, {
                                              key: 0,
                                              name: P.icon,
                                              class: A(m.value.childLinkIcon({ class: [a.ui?.childLinkIcon, w.ui?.childLinkIcon], active: F }))
                                            }, null, 8, ["name", "class"])) : D("", !0),
                                            J("span", {
                                              class: A(m.value.childLinkLabel({ class: [a.ui?.childLinkLabel, w.ui?.childLinkLabel], active: F }))
                                            }, [
                                              ee(X(u(qe)(P, a.labelKey)) + " ", 1),
                                              P.target === "_blank" && b.externalIcon !== !1 ? (h(), k(he, {
                                                key: 0,
                                                name: typeof b.externalIcon == "string" ? b.externalIcon : u(s).ui.icons.external,
                                                class: A(m.value.childLinkLabelExternalIcon({ class: [a.ui?.childLinkLabelExternalIcon, w.ui?.childLinkLabelExternalIcon], active: F }))
                                              }, null, 8, ["name", "class"])) : D("", !0)
                                            ], 2)
                                          ]),
                                          _: 2
                                        }, 1040, ["class"])
                                      ]),
                                      _: 2
                                    }, 1032, ["active", "onSelect"])
                                  ]),
                                  _: 2
                                }, 1040)
                              ], 2))), 128))
                            ], 2)
                          ])
                        ]),
                        default: _(() => [
                          V(ha, O(E, {
                            class: m.value.link({ class: [a.ui?.link, w.ui?.link, w.class], active: I || w.active, disabled: !!w.disabled, level: B > 0 })
                          }), {
                            default: _(() => [
                              V(u(p), {
                                item: w,
                                active: I || w.active,
                                index: $
                              }, null, 8, ["item", "active", "index"])
                            ]),
                            _: 2
                          }, 1040, ["class"])
                        ]),
                        _: 2
                      }, 1040, ["ui"])) : b.orientation === "vertical" && b.collapsed && (a.tooltip || w.tooltip) ? (h(), k(au, O({
                        key: 1,
                        text: u(qe)(w, a.labelKey)
                      }, { ...d.value, ...typeof w.tooltip == "boolean" ? {} : w.tooltip || {} }), {
                        default: _(() => [
                          V(ha, O(E, {
                            class: m.value.link({ class: [a.ui?.link, w.ui?.link, w.class], active: I || w.active, disabled: !!w.disabled, level: B > 0 })
                          }), {
                            default: _(() => [
                              V(u(p), {
                                item: w,
                                active: I || w.active,
                                index: $
                              }, null, 8, ["item", "active", "index"])
                            ]),
                            _: 2
                          }, 1040, ["class"])
                        ]),
                        _: 2
                      }, 1040, ["text"])) : (h(), k(ha, O({ key: 2 }, E, {
                        class: m.value.link({ class: [a.ui?.link, w.ui?.link, w.class], active: I || w.active, disabled: !!w.disabled, level: b.orientation === "horizontal" || B > 0 })
                      }), {
                        default: _(() => [
                          V(u(p), {
                            item: w,
                            active: I || w.active,
                            index: $
                          }, null, 8, ["item", "active", "index"])
                        ]),
                        _: 2
                      }, 1040, ["class"]))
                    ]),
                    _: 2
                  }, 1064, ["active", "disabled", "onSelect"])),
                  b.orientation === "horizontal" && (w.children?.length || r[w.slot ? `${w.slot}-content` : "item-content"]) ? (h(), k(u(bE), O({ key: 0 }, l.value, {
                    class: m.value.content({ class: [a.ui?.content, w.ui?.content] })
                  }), {
                    default: _(() => [
                      S(b.$slots, w.slot ? `${w.slot}-content` : "item-content", {
                        item: w,
                        active: I || w.active,
                        index: $
                      }, () => [
                        J("ul", {
                          class: A(m.value.childList({ class: [a.ui?.childList, w.ui?.childList] }))
                        }, [
                          (h(!0), M(te, null, le(w.children, (P, R) => (h(), M("li", {
                            key: R,
                            class: A(m.value.childItem({ class: [a.ui?.childItem, w.ui?.childItem] }))
                          }, [
                            V(Wt, O({ ref_for: !0 }, u(Ga)(P), { custom: "" }), {
                              default: _(({ active: F, ...H }) => [
                                V(u(bu), {
                                  "as-child": "",
                                  active: F,
                                  onSelect: P.onSelect
                                }, {
                                  default: _(() => [
                                    V(ha, O({ ref_for: !0 }, H, {
                                      class: m.value.childLink({ class: [a.ui?.childLink, w.ui?.childLink, P.class], active: F })
                                    }), {
                                      default: _(() => [
                                        P.icon ? (h(), k(he, {
                                          key: 0,
                                          name: P.icon,
                                          class: A(m.value.childLinkIcon({ class: [a.ui?.childLinkIcon, w.ui?.childLinkIcon], active: F }))
                                        }, null, 8, ["name", "class"])) : D("", !0),
                                        J("div", {
                                          class: A(m.value.childLinkWrapper({ class: [a.ui?.childLinkWrapper, w.ui?.childLinkWrapper] }))
                                        }, [
                                          J("p", {
                                            class: A(m.value.childLinkLabel({ class: [a.ui?.childLinkLabel, w.ui?.childLinkLabel], active: F }))
                                          }, [
                                            ee(X(u(qe)(P, a.labelKey)) + " ", 1),
                                            P.target === "_blank" && b.externalIcon !== !1 ? (h(), k(he, {
                                              key: 0,
                                              name: typeof b.externalIcon == "string" ? b.externalIcon : u(s).ui.icons.external,
                                              class: A(m.value.childLinkLabelExternalIcon({ class: [a.ui?.childLinkLabelExternalIcon, w.ui?.childLinkLabelExternalIcon], active: F }))
                                            }, null, 8, ["name", "class"])) : D("", !0)
                                          ], 2),
                                          P.description ? (h(), M("p", {
                                            key: 0,
                                            class: A(m.value.childLinkDescription({ class: [a.ui?.childLinkDescription, w.ui?.childLinkDescription], active: F }))
                                          }, X(P.description), 3)) : D("", !0)
                                        ], 2)
                                      ]),
                                      _: 2
                                    }, 1040, ["class"])
                                  ]),
                                  _: 2
                                }, 1032, ["active", "onSelect"])
                              ]),
                              _: 2
                            }, 1040)
                          ], 2))), 128))
                        ], 2)
                      ])
                    ]),
                    _: 2
                  }, 1040, ["class"])) : D("", !0)
                ]),
                _: 2
              }, 1040)) : D("", !0),
              b.orientation === "vertical" && w.children?.length && !b.collapsed ? (h(), k(u(Zm), {
                key: 2,
                class: A(m.value.content({ class: [a.ui?.content, w.ui?.content] }))
              }, {
                default: _(() => [
                  V(u(gd), O({
                    ...u(o),
                    defaultValue: x(w.children, B + 1)
                  }, {
                    as: "ul",
                    class: m.value.childList({ class: a.ui?.childList })
                  }), {
                    default: _(() => [
                      (h(!0), M(te, null, le(w.children, (I, E) => (h(), k(u(v), {
                        key: E,
                        item: I,
                        index: E,
                        level: B + 1,
                        class: A(m.value.childItem({ class: [a.ui?.childItem, I.ui?.childItem] }))
                      }, null, 8, ["item", "index", "level", "class"]))), 128))
                    ]),
                    _: 2
                  }, 1040, ["class"])
                ]),
                _: 2
              }, 1032, ["class"])) : D("", !0)
            ]),
            _: 2
          }, 1032, ["value"]))
        ]),
        _: 3
      }),
      V(u(dE), O({ ...u(i), ...b.$attrs }, {
        "data-collapsed": b.collapsed,
        class: m.value.root({ class: [a.ui?.root, a.class] })
      }), {
        default: _(() => [
          S(b.$slots, "list-leading"),
          (h(!0), M(te, null, le(y.value, (w, $) => (h(), M(te, {
            key: `list-${$}`
          }, [
            (h(), k(ut(b.orientation === "vertical" && !b.collapsed ? u(gd) : u(_E)), O({ ref_for: !0 }, b.orientation === "vertical" && !b.collapsed ? {
              ...u(o),
              defaultValue: x(w)
            } : {}, {
              as: "ul",
              class: m.value.list({ class: a.ui?.list })
            }), {
              default: _(() => [
                (h(!0), M(te, null, le(w, (B, I) => (h(), k(u(v), {
                  key: `list-${$}-${I}`,
                  item: B,
                  index: I,
                  class: A(m.value.item({ class: [a.ui?.item, B.ui?.item] }))
                }, null, 8, ["item", "index", "class"]))), 128))
              ]),
              _: 2
            }, 1040, ["class"])),
            b.orientation === "vertical" && $ < y.value.length - 1 ? (h(), M("div", {
              key: 0,
              class: A(m.value.separator({ class: a.ui?.separator }))
            }, null, 2)) : D("", !0)
          ], 64))), 128)),
          S(b.$slots, "list-trailing"),
          b.orientation === "horizontal" ? (h(), M("div", {
            key: 0,
            class: A(m.value.viewportWrapper({ class: a.ui?.viewportWrapper }))
          }, [
            b.arrow ? (h(), k(u(CE), {
              key: 0,
              class: A(m.value.indicator({ class: a.ui?.indicator }))
            }, {
              default: _(() => [
                J("div", {
                  class: A(m.value.arrow({ class: a.ui?.arrow }))
                }, null, 2)
              ]),
              _: 1
            }, 8, ["class"])) : D("", !0),
            V(u(EE), {
              class: A(m.value.viewport({ class: a.ui?.viewport }))
            }, null, 8, ["class"])
          ], 2)) : D("", !0)
        ]),
        _: 3
      }, 16, ["data-collapsed", "class"])
    ], 64));
  }
}), p6 = {
  slots: {
    root: "flex flex-col lg:grid lg:grid-cols-10 lg:gap-10",
    left: "lg:col-span-2",
    center: "lg:col-span-8",
    right: "lg:col-span-2 order-first lg:order-last"
  },
  variants: {
    left: {
      true: ""
    },
    right: {
      true: ""
    }
  },
  compoundVariants: [
    {
      left: !0,
      right: !0,
      class: {
        center: "lg:col-span-6"
      }
    },
    {
      left: !1,
      right: !1,
      class: {
        center: "lg:col-span-10"
      }
    }
  ]
}, ej = /* @__PURE__ */ L({
  __name: "Page",
  props: {
    as: {},
    class: {},
    ui: {}
  },
  setup(e) {
    const t = e, a = Se(), n = ue(), r = T(() => W({ extend: W(p6), ...n.ui?.page || {} })({
      left: !!a.left,
      right: !!a.right
    }));
    return (s, i) => (h(), k(u(U), {
      as: s.as,
      class: A(r.value.root({ class: [t.ui?.root, t.class] }))
    }, {
      default: _(() => [
        a.left ? (h(), k(u(Tn), {
          key: 0,
          class: A(r.value.left({ class: t.ui?.left }))
        }, {
          default: _(() => [
            S(s.$slots, "left")
          ]),
          _: 3
        }, 8, ["class"])) : D("", !0),
        J("div", {
          class: A(r.value.center({ class: t.ui?.center }))
        }, [
          S(s.$slots, "default")
        ], 2),
        a.right ? (h(), k(u(Tn), {
          key: 1,
          class: A(r.value.right({ class: t.ui?.right }))
        }, {
          default: _(() => [
            S(s.$slots, "right")
          ]),
          _: 3
        }, 8, ["class"])) : D("", !0)
      ]),
      _: 3
    }, 8, ["as", "class"]));
  }
}), g6 = {
  slots: {
    root: "",
    list: "",
    item: "relative",
    link: "group text-sm flex items-center gap-1.5 py-1 focus-visible:outline-primary",
    linkLeading: "rounded-md p-1 inline-flex ring-inset ring",
    linkLeadingIcon: "size-4 shrink-0",
    linkLabel: "truncate",
    linkLabelExternalIcon: "size-3 absolute top-0 text-dimmed"
  },
  variants: {
    active: {
      true: {
        link: "text-primary font-semibold",
        linkLeading: "bg-primary ring-primary text-inverted"
      },
      false: {
        link: [
          "text-muted hover:text-default font-medium",
          "transition-colors"
        ],
        linkLeading: [
          "bg-elevated/50 ring-accented text-dimmed group-hover:bg-primary group-hover:ring-primary group-hover:text-inverted",
          "transition"
        ]
      }
    }
  }
}, tj = /* @__PURE__ */ L({
  __name: "PageAnchors",
  props: {
    as: { default: "nav" },
    links: {},
    class: {},
    ui: {}
  },
  setup(e) {
    const t = e, a = Se(), n = ue(), r = T(() => W({ extend: W(g6), ...n.ui?.pageAnchors || {} })());
    return (s, i) => (h(), k(u(U), {
      as: s.as,
      class: A(r.value.root({ class: [t.ui?.root, t.class] }))
    }, {
      default: _(() => [
        J("ul", {
          class: A(r.value.list({ class: t.ui?.list }))
        }, [
          (h(!0), M(te, null, le(s.links, (o, l) => (h(), M("li", {
            key: l,
            class: A(r.value.item({ class: [t.ui?.item, o.ui?.item] }))
          }, [
            V(Wt, O({ ref_for: !0 }, u(Ga)(o), { custom: "" }), {
              default: _(({ active: d, ...c }) => [
                V(ha, O({ ref_for: !0 }, c, {
                  class: r.value.link({ class: [t.ui?.link, o.ui?.link, o.class], active: d })
                }), {
                  default: _(() => [
                    S(s.$slots, "link", {
                      link: o,
                      active: d
                    }, () => [
                      o.icon || a["link-leading"] ? (h(), M("div", {
                        key: 0,
                        class: A(r.value.linkLeading({ class: [t.ui?.linkLeading, o.ui?.linkLeading], active: d }))
                      }, [
                        S(s.$slots, "link-leading", {
                          link: o,
                          active: d
                        }, () => [
                          o.icon ? (h(), k(he, {
                            key: 0,
                            name: o.icon,
                            class: A(r.value.linkLeadingIcon({ class: [t.ui?.linkLeadingIcon, o.ui?.linkLeadingIcon], active: d }))
                          }, null, 8, ["name", "class"])) : D("", !0)
                        ])
                      ], 2)) : D("", !0),
                      o.label || a["link-label"] ? (h(), M("span", {
                        key: 1,
                        class: A(r.value.linkLabel({ class: [t.ui?.linkLabel, o.ui?.linkLabel], active: d }))
                      }, [
                        S(s.$slots, "link-label", {
                          link: o,
                          active: d
                        }, () => [
                          ee(X(o.label), 1)
                        ]),
                        o.target === "_blank" ? (h(), k(he, {
                          key: 0,
                          name: u(n).ui.icons.external,
                          class: A(r.value.linkLabelExternalIcon({ class: [t.ui?.linkLabelExternalIcon, o.ui?.linkLabelExternalIcon], active: d }))
                        }, null, 8, ["name", "class"])) : D("", !0)
                      ], 2)) : D("", !0),
                      S(s.$slots, "link-trailing", {
                        link: o,
                        active: d
                      })
                    ])
                  ]),
                  _: 2
                }, 1040, ["class"])
              ]),
              _: 2
            }, 1040)
          ], 2))), 128))
        ], 2)
      ]),
      _: 3
    }, 8, ["as", "class"]));
  }
}), v6 = {
  slots: {
    root: "hidden overflow-y-auto lg:block lg:max-h-[calc(100vh-var(--ui-header-height))] lg:sticky lg:top-(--ui-header-height) py-8 lg:ps-4 lg:-ms-4 lg:pe-6.5",
    container: "relative",
    top: "sticky -top-8 -mt-8 pointer-events-none z-[1]",
    topHeader: "h-8 bg-default -mx-4 px-4",
    topBody: "bg-default relative pointer-events-auto flex flex-col -mx-4 px-4",
    topFooter: "h-8 bg-gradient-to-b from-default -mx-4 px-4"
  }
}, aj = /* @__PURE__ */ L({
  __name: "PageAside",
  props: {
    as: { default: "aside" },
    class: {},
    ui: {}
  },
  setup(e) {
    const t = e, a = Se(), n = ue(), r = T(() => W({ extend: W(v6), ...n.ui?.pageAside || {} })());
    return (s, i) => (h(), k(u(U), {
      as: s.as,
      class: A(r.value.root({ class: [t.ui?.root, t.class] }))
    }, {
      default: _(() => [
        J("div", {
          class: A(r.value.container({ class: t.ui?.container }))
        }, [
          a.top ? (h(), M("div", {
            key: 0,
            class: A(r.value.top({ class: t.ui?.top }))
          }, [
            J("div", {
              class: A(r.value.topHeader({ class: t.ui?.topHeader }))
            }, null, 2),
            J("div", {
              class: A(r.value.topBody({ class: t.ui?.topBody }))
            }, [
              S(s.$slots, "top")
            ], 2),
            J("div", {
              class: A(r.value.topFooter({ class: t.ui?.topFooter }))
            }, null, 2)
          ], 2)) : D("", !0),
          S(s.$slots, "default"),
          S(s.$slots, "bottom")
        ], 2)
      ]),
      _: 3
    }, 8, ["as", "class"]));
  }
}), h6 = {
  base: "mt-8 pb-24 space-y-12"
}, nj = /* @__PURE__ */ L({
  __name: "PageBody",
  props: {
    as: {},
    class: {}
  },
  setup(e) {
    const t = e, a = ue(), n = T(() => W({ extend: W(h6), ...a.ui?.pageBody || {} }));
    return (r, s) => (h(), k(u(U), {
      as: r.as,
      class: A(n.value({ class: t.class }))
    }, {
      default: _(() => [
        S(r.$slots, "default")
      ]),
      _: 3
    }, 8, ["as", "class"]));
  }
}), m6 = {
  slots: {
    root: "relative isolate rounded-xl overflow-hidden",
    container: "flex flex-col lg:grid px-6 py-12 sm:px-12 sm:py-24 lg:px-16 lg:py-24 gap-8 sm:gap-16",
    wrapper: "",
    header: "",
    title: "text-3xl sm:text-4xl text-pretty tracking-tight font-bold text-highlighted",
    description: "text-base sm:text-lg text-muted",
    body: "mt-8",
    footer: "mt-8",
    links: "flex flex-wrap gap-x-6 gap-y-3"
  },
  variants: {
    orientation: {
      horizontal: {
        container: "lg:grid-cols-2 lg:items-center",
        description: "text-pretty"
      },
      vertical: {
        container: "",
        title: "text-center",
        description: "text-center text-balance",
        links: "justify-center"
      }
    },
    reverse: {
      true: {
        wrapper: "lg:order-last"
      }
    },
    variant: {
      solid: {
        root: "bg-inverted text-inverted",
        title: "text-inverted",
        description: "text-dimmed"
      },
      outline: {
        root: "bg-default ring ring-default",
        description: "text-muted"
      },
      soft: {
        root: "bg-elevated/50",
        description: "text-toned"
      },
      subtle: {
        root: "bg-elevated/50 ring ring-default",
        description: "text-toned"
      },
      naked: {
        description: "text-muted"
      }
    },
    title: {
      true: {
        description: "mt-6"
      }
    }
  },
  defaultVariants: {
    variant: "outline"
  }
}, y6 = {
  key: 2,
  class: "hidden lg:block"
}, rj = /* @__PURE__ */ L({
  __name: "PageCTA",
  props: {
    as: {},
    class: {},
    title: {},
    description: {},
    orientation: { default: "vertical" },
    reverse: { type: Boolean, default: !1 },
    variant: {},
    links: {},
    ui: {}
  },
  setup(e) {
    const t = e, a = Se(), n = ue(), r = T(() => W({ extend: W(m6), ...n.ui?.pageCTA || {} })({
      variant: t.variant,
      orientation: t.orientation,
      reverse: t.reverse,
      title: !!t.title || !!a.title
    }));
    return (s, i) => (h(), k(u(U), {
      as: s.as,
      "data-orientation": s.orientation,
      class: A(r.value.root({ class: [t.ui?.root, t.class] }))
    }, {
      default: _(() => [
        S(s.$slots, "top"),
        V(Os, {
          class: A(r.value.container({ class: t.ui?.container }))
        }, {
          default: _(() => [
            a.header || s.title || a.title || s.description || a.description || a.body || a.footer || s.links?.length || a.links ? (h(), M("div", {
              key: 0,
              class: A(r.value.wrapper({ class: t.ui?.wrapper }))
            }, [
              a.header || s.title || a.title || s.description || a.description ? (h(), M("div", {
                key: 0,
                class: A(r.value.header({ class: t.ui?.header }))
              }, [
                S(s.$slots, "header", {}, () => [
                  s.title || a.title ? (h(), M("h2", {
                    key: 0,
                    class: A(r.value.title({ class: t.ui?.title }))
                  }, [
                    S(s.$slots, "title", {}, () => [
                      ee(X(s.title), 1)
                    ])
                  ], 2)) : D("", !0),
                  s.description || a.description ? (h(), M("div", {
                    key: 1,
                    class: A(r.value.description({ class: t.ui?.description }))
                  }, [
                    S(s.$slots, "description", {}, () => [
                      ee(X(s.description), 1)
                    ])
                  ], 2)) : D("", !0)
                ])
              ], 2)) : D("", !0),
              a.body ? (h(), M("div", {
                key: 1,
                class: A(r.value.body({ class: t.ui?.body }))
              }, [
                S(s.$slots, "body")
              ], 2)) : D("", !0),
              a.footer || s.links?.length || a.links ? (h(), M("div", {
                key: 2,
                class: A(r.value.footer({ class: t.ui?.footer }))
              }, [
                S(s.$slots, "footer", {}, () => [
                  s.links?.length || a.links ? (h(), M("div", {
                    key: 0,
                    class: A(r.value.links({ class: t.ui?.links }))
                  }, [
                    S(s.$slots, "links", {}, () => [
                      (h(!0), M(te, null, le(s.links, (o, l) => (h(), k(Je, O({
                        key: l,
                        size: "lg"
                      }, { ref_for: !0 }, o), null, 16))), 128))
                    ])
                  ], 2)) : D("", !0)
                ])
              ], 2)) : D("", !0)
            ], 2)) : D("", !0),
            a.default ? S(s.$slots, "default", { key: 1 }) : s.orientation === "horizontal" ? (h(), M("div", y6)) : D("", !0)
          ]),
          _: 3
        }, 8, ["class"]),
        S(s.$slots, "bottom")
      ]),
      _: 3
    }, 8, ["as", "data-orientation", "class"]));
  }
}), b6 = {
  slots: {
    root: "relative flex rounded-lg",
    spotlight: "absolute inset-0 rounded-[inherit] pointer-events-none bg-default/90",
    container: "relative flex flex-col flex-1 lg:grid gap-x-8 gap-y-4 p-4 sm:p-6",
    wrapper: "flex flex-col flex-1 items-start",
    header: "mb-4",
    body: "flex-1",
    footer: "pt-4 mt-auto",
    leading: "inline-flex items-center mb-2.5",
    leadingIcon: "size-5 shrink-0 text-primary",
    title: "text-base text-pretty font-semibold text-highlighted",
    description: "text-[15px] text-pretty"
  },
  variants: {
    orientation: {
      horizontal: {
        container: "lg:grid-cols-2 lg:items-center"
      },
      vertical: {
        container: ""
      }
    },
    reverse: {
      true: {
        wrapper: "lg:order-last"
      }
    },
    variant: {
      solid: {
        root: "bg-inverted text-inverted",
        title: "text-inverted",
        description: "text-dimmed"
      },
      outline: {
        root: "bg-default ring ring-default",
        description: "text-muted"
      },
      soft: {
        root: "bg-elevated/50",
        description: "text-toned"
      },
      subtle: {
        root: "bg-elevated/50 ring ring-default",
        description: "text-toned"
      },
      ghost: {
        description: "text-muted"
      },
      naked: {
        container: "p-0 sm:p-0",
        description: "text-muted"
      }
    },
    to: {
      true: {
        root: [
          "transition"
        ]
      }
    },
    title: {
      true: {
        description: "mt-1"
      }
    },
    highlight: {
      true: {
        root: "ring-2"
      }
    },
    highlightColor: {
      primary: "",
      secondary: "",
      success: "",
      info: "",
      warning: "",
      error: "",
      neutral: ""
    },
    spotlight: {
      true: {
        root: "[--spotlight-size:400px] before:absolute before:-inset-px before:pointer-events-none before:rounded-[inherit] before:bg-[radial-gradient(var(--spotlight-size)_var(--spotlight-size)_at_calc(var(--spotlight-x,0px))_calc(var(--spotlight-y,0px)),var(--spotlight-color),transparent_70%)]"
      }
    },
    spotlightColor: {
      primary: "",
      secondary: "",
      success: "",
      info: "",
      warning: "",
      error: "",
      neutral: ""
    }
  },
  compoundVariants: [
    {
      variant: "solid",
      to: !0,
      class: {
        root: "hover:bg-inverted/90"
      }
    },
    {
      variant: "outline",
      to: !0,
      class: {
        root: "hover:bg-elevated/50"
      }
    },
    {
      variant: "soft",
      to: !0,
      class: {
        root: "hover:bg-elevated"
      }
    },
    {
      variant: "subtle",
      to: !0,
      class: {
        root: "hover:bg-elevated"
      }
    },
    {
      variant: "subtle",
      to: !0,
      highlight: !1,
      class: {
        root: "hover:ring-accented"
      }
    },
    {
      variant: "ghost",
      to: !0,
      class: {
        root: "hover:bg-elevated/50"
      }
    },
    {
      highlightColor: "primary",
      highlight: !0,
      class: {
        root: "ring-primary"
      }
    },
    {
      highlightColor: "secondary",
      highlight: !0,
      class: {
        root: "ring-secondary"
      }
    },
    {
      highlightColor: "success",
      highlight: !0,
      class: {
        root: "ring-success"
      }
    },
    {
      highlightColor: "info",
      highlight: !0,
      class: {
        root: "ring-info"
      }
    },
    {
      highlightColor: "warning",
      highlight: !0,
      class: {
        root: "ring-warning"
      }
    },
    {
      highlightColor: "error",
      highlight: !0,
      class: {
        root: "ring-error"
      }
    },
    {
      highlightColor: "neutral",
      highlight: !0,
      class: {
        root: "ring-inverted"
      }
    },
    {
      spotlightColor: "primary",
      spotlight: !0,
      class: {
        root: "[--spotlight-color:var(--ui-primary)]"
      }
    },
    {
      spotlightColor: "secondary",
      spotlight: !0,
      class: {
        root: "[--spotlight-color:var(--ui-secondary)]"
      }
    },
    {
      spotlightColor: "success",
      spotlight: !0,
      class: {
        root: "[--spotlight-color:var(--ui-success)]"
      }
    },
    {
      spotlightColor: "info",
      spotlight: !0,
      class: {
        root: "[--spotlight-color:var(--ui-info)]"
      }
    },
    {
      spotlightColor: "warning",
      spotlight: !0,
      class: {
        root: "[--spotlight-color:var(--ui-warning)]"
      }
    },
    {
      spotlightColor: "error",
      spotlight: !0,
      class: {
        root: "[--spotlight-color:var(--ui-error)]"
      }
    },
    {
      spotlightColor: "neutral",
      spotlight: !0,
      class: {
        root: "[--spotlight-color:var(--ui-bg-inverted)]"
      }
    },
    {
      to: !0,
      class: {
        root: "has-focus-visible:ring-2 has-focus-visible:ring-primary"
      }
    }
  ],
  defaultVariants: {
    variant: "outline",
    highlightColor: "primary",
    spotlightColor: "primary"
  }
}, sj = /* @__PURE__ */ L({
  inheritAttrs: !1,
  __name: "PageCard",
  props: {
    as: {},
    icon: {},
    title: {},
    description: {},
    orientation: { default: "vertical" },
    reverse: { type: Boolean },
    highlight: { type: Boolean },
    highlightColor: {},
    spotlight: { type: Boolean },
    spotlightColor: {},
    variant: {},
    to: {},
    target: {},
    onClick: {},
    class: {},
    ui: {}
  },
  setup(e) {
    const t = e, a = Se(), n = N(), r = Hb(), s = ue(), { elementX: i, elementY: o } = xM(n, {
      eventFilter: r.eventFilter
    }), l = T(() => t.spotlight && (i.value !== 0 || o.value !== 0));
    ye(() => t.spotlight, (f) => {
      f ? r.resume() : r.pause();
    }, { immediate: !0 });
    const d = T(() => W({ extend: W(b6), ...s.ui?.pageCard || {} })({
      orientation: t.orientation,
      reverse: t.reverse,
      variant: t.variant,
      to: !!t.to || !!t.onClick,
      title: !!t.title || !!a.title,
      highlight: t.highlight,
      highlightColor: t.highlightColor,
      spotlight: l.value,
      spotlightColor: t.spotlightColor
    })), c = T(() => (a.title && Er(a.title()) || t.title || "Card link").trim());
    return (f, p) => (h(), k(u(U), {
      ref_key: "cardRef",
      ref: n,
      as: f.as,
      "data-orientation": f.orientation,
      class: A(d.value.root({ class: [t.ui?.root, t.class] })),
      style: It(l.value && { "--spotlight-x": `${u(i)}px`, "--spotlight-y": `${u(o)}px` }),
      onClick: f.onClick
    }, {
      default: _(() => [
        t.spotlight ? (h(), M("div", {
          key: 0,
          class: A(d.value.spotlight({ class: t.ui?.spotlight }))
        }, null, 2)) : D("", !0),
        J("div", {
          class: A(d.value.container({ class: t.ui?.container }))
        }, [
          a.header || f.icon || a.leading || a.body || f.title || a.title || f.description || a.description || a.footer ? (h(), M("div", {
            key: 0,
            class: A(d.value.wrapper({ class: t.ui?.wrapper }))
          }, [
            a.header ? (h(), M("div", {
              key: 0,
              class: A(d.value.header({ class: t.ui?.header }))
            }, [
              S(f.$slots, "header")
            ], 2)) : D("", !0),
            f.icon || a.leading ? (h(), M("div", {
              key: 1,
              class: A(d.value.leading({ class: t.ui?.leading }))
            }, [
              S(f.$slots, "leading", {}, () => [
                f.icon ? (h(), k(he, {
                  key: 0,
                  name: f.icon,
                  class: A(d.value.leadingIcon({ class: t.ui?.leadingIcon }))
                }, null, 8, ["name", "class"])) : D("", !0)
              ])
            ], 2)) : D("", !0),
            a.body || f.title || a.title || f.description || a.description ? (h(), M("div", {
              key: 2,
              class: A(d.value.body({ class: t.ui?.body }))
            }, [
              S(f.$slots, "body", {}, () => [
                f.title || a.title ? (h(), M("div", {
                  key: 0,
                  class: A(d.value.title({ class: t.ui?.title }))
                }, [
                  S(f.$slots, "title", {}, () => [
                    ee(X(f.title), 1)
                  ])
                ], 2)) : D("", !0),
                f.description || a.description ? (h(), M("div", {
                  key: 1,
                  class: A(d.value.description({ class: t.ui?.description }))
                }, [
                  S(f.$slots, "description", {}, () => [
                    ee(X(f.description), 1)
                  ])
                ], 2)) : D("", !0)
              ])
            ], 2)) : D("", !0),
            a.footer ? (h(), M("div", {
              key: 3,
              class: A(d.value.footer({ class: t.ui?.footer }))
            }, [
              S(f.$slots, "footer")
            ], 2)) : D("", !0)
          ], 2)) : D("", !0),
          S(f.$slots, "default")
        ], 2),
        f.to ? (h(), k(Wt, O({
          key: 1,
          "aria-label": c.value
        }, { to: f.to, target: f.target, ...f.$attrs }, {
          class: "focus:outline-none peer",
          raw: ""
        }), {
          default: _(() => [...p[0] || (p[0] = [
            J("span", {
              class: "absolute inset-0",
              "aria-hidden": "true"
            }, null, -1)
          ])]),
          _: 1
        }, 16, ["aria-label"])) : D("", !0)
      ]),
      _: 3
    }, 8, ["as", "data-orientation", "class", "style", "onClick"]));
  }
}), w6 = {
  base: "relative column-1 md:columns-2 lg:columns-3 gap-8 space-y-8 *:break-inside-avoid-column *:will-change-transform"
}, ij = /* @__PURE__ */ L({
  __name: "PageColumns",
  props: {
    as: {},
    class: {}
  },
  setup(e) {
    const t = e, a = ue(), n = T(() => W({ extend: W(w6), ...a.ui?.pageColumns || {} }));
    return (r, s) => (h(), k(u(U), {
      as: r.as,
      class: A(n.value({ class: t.class }))
    }, {
      default: _(() => [
        S(r.$slots, "default")
      ]),
      _: 3
    }, 8, ["as", "class"]));
  }
}), C6 = {
  slots: {
    root: "relative",
    wrapper: "",
    leading: "inline-flex items-center justify-center",
    leadingIcon: "size-5 shrink-0 text-primary",
    title: "text-base text-pretty font-semibold text-highlighted",
    description: "text-[15px] text-pretty text-muted"
  },
  variants: {
    orientation: {
      horizontal: {
        root: "flex items-start gap-2.5",
        leading: "p-0.5"
      },
      vertical: {
        leading: "mb-2.5"
      }
    },
    title: {
      true: {
        description: "mt-1"
      }
    }
  }
}, x6 = /* @__PURE__ */ L({
  inheritAttrs: !1,
  __name: "PageFeature",
  props: {
    as: {},
    icon: {},
    title: {},
    description: {},
    orientation: { default: "horizontal" },
    to: {},
    target: {},
    onClick: {},
    class: {},
    ui: {}
  },
  setup(e) {
    const t = e, a = Se(), n = ue(), r = T(() => W({ extend: W(C6), ...n.ui?.pageFeature || {} })({
      orientation: t.orientation,
      title: !!t.title || !!a.title
    })), s = T(() => (a.title && Er(a.title()) || t.title || "Feature link").trim());
    return (i, o) => (h(), k(u(U), {
      as: i.as,
      "data-orientation": i.orientation,
      class: A(r.value.root({ class: [t.ui?.root, t.class] })),
      onClick: i.onClick
    }, {
      default: _(() => [
        i.icon || a.leading ? (h(), M("div", {
          key: 0,
          class: A(r.value.leading({ class: t.ui?.leading }))
        }, [
          S(i.$slots, "leading", {}, () => [
            i.icon ? (h(), k(he, {
              key: 0,
              name: i.icon,
              class: A(r.value.leadingIcon({ class: t.ui?.leadingIcon }))
            }, null, 8, ["name", "class"])) : D("", !0)
          ])
        ], 2)) : D("", !0),
        J("div", {
          class: A(r.value.wrapper({ class: t.ui?.wrapper }))
        }, [
          i.to ? (h(), k(Wt, O({
            key: 0,
            "aria-label": s.value
          }, { to: i.to, target: i.target, ...i.$attrs }, {
            class: "focus:outline-none peer",
            tabindex: "-1",
            raw: ""
          }), {
            default: _(() => [...o[0] || (o[0] = [
              J("span", {
                class: "absolute inset-0",
                "aria-hidden": "true"
              }, null, -1)
            ])]),
            _: 1
          }, 16, ["aria-label"])) : D("", !0),
          S(i.$slots, "default", {}, () => [
            i.title || a.title ? (h(), M("div", {
              key: 0,
              class: A(r.value.title({ class: t.ui?.title }))
            }, [
              S(i.$slots, "title", {}, () => [
                ee(X(i.title), 1)
              ])
            ], 2)) : D("", !0),
            i.description || a.description ? (h(), M("div", {
              key: 1,
              class: A(r.value.description({ class: t.ui?.description }))
            }, [
              S(i.$slots, "description", {}, () => [
                ee(X(i.description), 1)
              ])
            ], 2)) : D("", !0)
          ])
        ], 2)
      ]),
      _: 3
    }, 8, ["as", "data-orientation", "class", "onClick"]));
  }
}), S6 = {
  base: "relative grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-8"
}, oj = /* @__PURE__ */ L({
  __name: "PageGrid",
  props: {
    as: {},
    class: {}
  },
  setup(e) {
    const t = e, a = ue(), n = T(() => W({ extend: W(S6), ...a.ui?.pageGrid || {} }));
    return (r, s) => (h(), k(u(U), {
      as: r.as,
      class: A(n.value({ class: t.class }))
    }, {
      default: _(() => [
        S(r.$slots, "default")
      ]),
      _: 3
    }, 8, ["as", "class"]));
  }
}), _6 = {
  slots: {
    root: "relative border-b border-default py-8",
    container: "",
    wrapper: "flex flex-col lg:flex-row lg:items-center lg:justify-between gap-4",
    headline: "mb-2.5 text-sm font-semibold text-primary flex items-center gap-1.5",
    title: "text-3xl sm:text-4xl text-pretty font-bold text-highlighted",
    description: "text-lg text-pretty text-muted",
    links: "flex flex-wrap items-center gap-1.5"
  },
  variants: {
    title: {
      true: {
        description: "mt-4"
      }
    }
  }
}, lj = /* @__PURE__ */ L({
  __name: "PageHeader",
  props: {
    as: {},
    headline: {},
    title: {},
    description: {},
    links: {},
    class: {},
    ui: {}
  },
  setup(e) {
    const t = e, a = Se(), n = ue(), r = T(() => W({ extend: W(_6), ...n.ui?.pageHeader || {} })({
      title: !!t.title || !!a.title
    }));
    return (s, i) => (h(), k(u(U), {
      as: s.as,
      class: A(r.value.root({ class: [t.ui?.root, t.class] }))
    }, {
      default: _(() => [
        s.headline || a.headline ? (h(), M("div", {
          key: 0,
          class: A(r.value.headline({ class: t.ui?.headline }))
        }, [
          S(s.$slots, "headline", {}, () => [
            ee(X(s.headline), 1)
          ])
        ], 2)) : D("", !0),
        J("div", {
          class: A(r.value.container({ class: t.ui?.container }))
        }, [
          J("div", {
            class: A(r.value.wrapper({ class: t.ui?.wrapper }))
          }, [
            s.title || a.title ? (h(), M("h1", {
              key: 0,
              class: A(r.value.title({ class: t.ui?.title }))
            }, [
              S(s.$slots, "title", {}, () => [
                ee(X(s.title), 1)
              ])
            ], 2)) : D("", !0),
            s.links?.length || a.links ? (h(), M("div", {
              key: 1,
              class: A(r.value.links({ class: t.ui?.links }))
            }, [
              S(s.$slots, "links", {}, () => [
                (h(!0), M(te, null, le(s.links, (o, l) => (h(), k(Je, O({
                  key: l,
                  color: "neutral",
                  variant: "outline"
                }, { ref_for: !0 }, o), null, 16))), 128))
              ])
            ], 2)) : D("", !0)
          ], 2),
          s.description || a.description ? (h(), M("div", {
            key: 0,
            class: A(r.value.description({ class: t.ui?.description }))
          }, [
            S(s.$slots, "description", {}, () => [
              ee(X(s.description), 1)
            ])
          ], 2)) : D("", !0),
          S(s.$slots, "default")
        ], 2)
      ]),
      _: 3
    }, 8, ["as", "class"]));
  }
}), k6 = {
  slots: {
    root: "relative isolate",
    container: "flex flex-col lg:grid py-24 sm:py-32 lg:py-40 gap-16 sm:gap-y-24",
    wrapper: "",
    header: "",
    headline: "mb-4",
    title: "text-5xl sm:text-7xl text-pretty tracking-tight font-bold text-highlighted",
    description: "text-lg sm:text-xl/8 text-muted",
    body: "mt-10",
    footer: "mt-10",
    links: "flex flex-wrap gap-x-6 gap-y-3"
  },
  variants: {
    orientation: {
      horizontal: {
        container: "lg:grid-cols-2 lg:items-center",
        description: "text-pretty"
      },
      vertical: {
        container: "",
        headline: "justify-center",
        wrapper: "text-center",
        description: "text-balance",
        links: "justify-center"
      }
    },
    reverse: {
      true: {
        wrapper: "order-last"
      }
    },
    headline: {
      true: {
        headline: "font-semibold text-primary flex items-center gap-1.5"
      }
    },
    title: {
      true: {
        description: "mt-6"
      }
    }
  }
}, A6 = {
  key: 2,
  class: "hidden lg:block"
}, uj = /* @__PURE__ */ L({
  __name: "PageHero",
  props: {
    as: {},
    headline: {},
    title: {},
    description: {},
    links: {},
    orientation: { default: "vertical" },
    reverse: { type: Boolean },
    class: {},
    ui: {}
  },
  setup(e) {
    const t = e, a = Se(), n = ue(), r = T(() => W({ extend: W(k6), ...n.ui?.pageHero || {} })({
      orientation: t.orientation,
      reverse: t.reverse,
      title: !!t.title || !!a.title
    }));
    return (s, i) => (h(), k(u(U), {
      as: s.as,
      "data-orientation": s.orientation,
      class: A(r.value.root({ class: [t.ui?.root, t.class] }))
    }, {
      default: _(() => [
        S(s.$slots, "top"),
        V(Os, {
          class: A(r.value.container({ class: t.ui?.container }))
        }, {
          default: _(() => [
            a.header || s.headline || a.headline || s.title || a.title || s.description || a.description || a.body || a.footer || s.links?.length || a.links ? (h(), M("div", {
              key: 0,
              class: A(r.value.wrapper({ class: t.ui?.wrapper }))
            }, [
              a.header || s.headline || a.headline || s.title || a.title || s.description || a.description ? (h(), M("div", {
                key: 0,
                class: A(r.value.header({ class: t.ui?.header }))
              }, [
                S(s.$slots, "header", {}, () => [
                  s.headline || a.headline ? (h(), M("div", {
                    key: 0,
                    class: A(r.value.headline({ class: t.ui?.headline, headline: !a.headline }))
                  }, [
                    S(s.$slots, "headline", {}, () => [
                      ee(X(s.headline), 1)
                    ])
                  ], 2)) : D("", !0),
                  s.title || a.title ? (h(), M("h1", {
                    key: 1,
                    class: A(r.value.title({ class: t.ui?.title }))
                  }, [
                    S(s.$slots, "title", {}, () => [
                      ee(X(s.title), 1)
                    ])
                  ], 2)) : D("", !0),
                  s.description || a.description ? (h(), M("div", {
                    key: 2,
                    class: A(r.value.description({ class: t.ui?.description }))
                  }, [
                    S(s.$slots, "description", {}, () => [
                      ee(X(s.description), 1)
                    ])
                  ], 2)) : D("", !0)
                ])
              ], 2)) : D("", !0),
              a.body ? (h(), M("div", {
                key: 1,
                class: A(r.value.body({ class: t.ui?.body }))
              }, [
                S(s.$slots, "body")
              ], 2)) : D("", !0),
              a.footer || s.links?.length || a.links ? (h(), M("div", {
                key: 2,
                class: A(r.value.footer({ class: t.ui?.footer }))
              }, [
                S(s.$slots, "footer", {}, () => [
                  s.links?.length || a.links ? (h(), M("div", {
                    key: 0,
                    class: A(r.value.links({ class: t.ui?.links }))
                  }, [
                    S(s.$slots, "links", {}, () => [
                      (h(!0), M(te, null, le(s.links, (o, l) => (h(), k(Je, O({
                        key: l,
                        size: "xl"
                      }, { ref_for: !0 }, o), null, 16))), 128))
                    ])
                  ], 2)) : D("", !0)
                ])
              ], 2)) : D("", !0)
            ], 2)) : D("", !0),
            a.default ? S(s.$slots, "default", { key: 1 }) : s.orientation === "horizontal" ? (h(), M("div", A6)) : D("", !0)
          ]),
          _: 3
        }, 8, ["class"]),
        S(s.$slots, "bottom")
      ]),
      _: 3
    }, 8, ["as", "data-orientation", "class"]));
  }
}), $6 = {
  slots: {
    root: "flex flex-col gap-3",
    title: "text-sm font-semibold flex items-center gap-1.5",
    list: "flex flex-col gap-2",
    item: "relative",
    link: "group text-sm flex items-center gap-1.5 focus-visible:outline-primary",
    linkLeadingIcon: "size-5 shrink-0",
    linkLabel: "truncate",
    linkLabelExternalIcon: "size-3 absolute top-0 text-dimmed"
  },
  variants: {
    active: {
      true: {
        link: "text-primary font-medium"
      },
      false: {
        link: [
          "text-muted hover:text-default",
          "transition-colors"
        ]
      }
    }
  }
}, dj = /* @__PURE__ */ L({
  __name: "PageLinks",
  props: {
    as: { default: "nav" },
    title: {},
    links: {},
    class: {},
    ui: {}
  },
  setup(e) {
    const t = e, a = Se(), n = ue(), r = T(() => W({ extend: W($6), ...n.ui?.pageLinks || {} })());
    return (s, i) => (h(), k(u(U), {
      as: s.as,
      class: A(r.value.root({ class: [t.ui?.root, t.class] }))
    }, {
      default: _(() => [
        s.title || a.title ? (h(), M("p", {
          key: 0,
          class: A(r.value.title({ class: t.ui?.title }))
        }, [
          S(s.$slots, "title", {}, () => [
            ee(X(s.title), 1)
          ])
        ], 2)) : D("", !0),
        J("ul", {
          class: A(r.value.list({ class: t.ui?.list }))
        }, [
          (h(!0), M(te, null, le(s.links, (o, l) => (h(), M("li", {
            key: l,
            class: A(r.value.item({ class: [t.ui?.item, o.ui?.item] }))
          }, [
            V(Wt, O({ ref_for: !0 }, u(Ga)(o), { custom: "" }), {
              default: _(({ active: d, ...c }) => [
                V(ha, O({ ref_for: !0 }, c, {
                  class: r.value.link({ class: [t.ui?.link, o.ui?.link, o.class], active: d })
                }), {
                  default: _(() => [
                    S(s.$slots, "link", {
                      link: o,
                      active: d
                    }, () => [
                      S(s.$slots, "link-leading", {
                        link: o,
                        active: d
                      }, () => [
                        o.icon ? (h(), k(he, {
                          key: 0,
                          name: o.icon,
                          class: A(r.value.linkLeadingIcon({ class: [t.ui?.linkLeadingIcon, o.ui?.linkLeadingIcon], active: d }))
                        }, null, 8, ["name", "class"])) : D("", !0)
                      ]),
                      o.label || a["link-label"] ? (h(), M("span", {
                        key: 0,
                        class: A(r.value.linkLabel({ class: [t.ui?.linkLabel, o.ui?.linkLabel], active: d }))
                      }, [
                        S(s.$slots, "link-label", {
                          link: o,
                          active: d
                        }, () => [
                          ee(X(o.label), 1)
                        ]),
                        o.target === "_blank" ? (h(), k(he, {
                          key: 0,
                          name: u(n).ui.icons.external,
                          class: A(r.value.linkLabelExternalIcon({ class: [t.ui?.linkLabelExternalIcon, o.ui?.linkLabelExternalIcon], active: d }))
                        }, null, 8, ["name", "class"])) : D("", !0)
                      ], 2)) : D("", !0),
                      S(s.$slots, "link-trailing", {
                        link: o,
                        active: d
                      })
                    ])
                  ]),
                  _: 2
                }, 1040, ["class"])
              ]),
              _: 2
            }, 1040)
          ], 2))), 128))
        ], 2)
      ]),
      _: 3
    }, 8, ["as", "class"]));
  }
}), I6 = {
  base: "relative flex flex-col",
  variants: {
    divide: {
      true: "*:not-last:after:absolute *:not-last:after:inset-x-1 *:not-last:after:bottom-0 *:not-last:after:bg-border *:not-last:after:h-px"
    }
  }
}, cj = /* @__PURE__ */ L({
  __name: "PageList",
  props: {
    as: {},
    divide: { type: Boolean, default: !1 },
    class: {}
  },
  setup(e) {
    const t = e, a = ue(), n = T(() => W({ extend: W(I6), ...a.ui?.pageList || {} }));
    return (r, s) => (h(), k(u(U), {
      as: r.as,
      role: "list",
      class: A(n.value({ class: t.class, divide: t.divide }))
    }, {
      default: _(() => [
        S(r.$slots, "default")
      ]),
      _: 3
    }, 8, ["as", "class"]));
  }
}), E6 = {
  slots: {
    root: "relative overflow-hidden",
    title: "text-lg text-center font-semibold text-highlighted",
    logos: "mt-10",
    logo: "size-10 shrink-0"
  },
  variants: {
    marquee: {
      false: {
        logos: "flex items-center shrink-0 justify-around gap-(--gap) [--gap:--spacing(16)]"
      }
    }
  }
}, fj = /* @__PURE__ */ L({
  inheritAttrs: !1,
  __name: "PageLogos",
  props: {
    as: {},
    title: {},
    items: {},
    marquee: { type: [Boolean, Object], default: !1 },
    class: {},
    ui: {}
  },
  setup(e) {
    const [t, a] = /* @__PURE__ */ Lt(), n = e, r = Se(), s = ue(), i = T(() => W({ extend: W(E6), ...s.ui?.pageLogos || {} })());
    return (o, l) => (h(), M(te, null, [
      V(u(t), null, {
        default: _(() => [
          r.default ? S(o.$slots, "default", { key: 0 }) : o.items?.length ? (h(!0), M(te, { key: 1 }, le(o.items, (d, c) => (h(), M(te, { key: c }, [
            typeof d == "object" ? (h(), k(ft, {
              key: 0,
              src: d.src,
              alt: d.alt,
              class: A(i.value.logo({ class: n.ui?.logo }))
            }, null, 8, ["src", "alt", "class"])) : (h(), k(he, {
              key: 1,
              name: d,
              class: A(i.value.logo({ class: n.ui?.logo }))
            }, null, 8, ["name", "class"]))
          ], 64))), 128)) : D("", !0)
        ]),
        _: 3
      }),
      V(u(U), O({ as: o.as }, o.$attrs, {
        class: i.value.root({ class: [n.ui?.root, n.class] })
      }), {
        default: _(() => [
          o.title ? (h(), M("h2", {
            key: 0,
            class: A(i.value.title({ class: n.ui?.title }))
          }, X(o.title), 3)) : D("", !0),
          o.marquee ? (h(), k(u6, O({ key: 1 }, typeof o.marquee == "object" ? o.marquee : {}, {
            class: i.value.logos({ class: n.ui?.logos, marquee: !0 })
          }), {
            default: _(() => [
              V(u(a), { items: o.items }, null, 8, ["items"])
            ]),
            _: 1
          }, 16, ["class"])) : (h(), M("div", {
            key: 2,
            class: A(i.value.logos({ class: n.ui?.logos }))
          }, [
            V(u(a), { items: o.items }, null, 8, ["items"])
          ], 2))
        ]),
        _: 1
      }, 16, ["as", "class"])
    ], 64));
  }
}), T6 = {
  slots: {
    root: "relative isolate",
    container: "flex flex-col lg:grid py-16 sm:py-24 lg:py-32 gap-8 sm:gap-16",
    wrapper: "",
    header: "",
    leading: "flex items-center mb-6",
    leadingIcon: "size-10 shrink-0 text-primary",
    headline: "mb-3",
    title: "text-3xl sm:text-4xl lg:text-5xl text-pretty tracking-tight font-bold text-highlighted",
    description: "text-base sm:text-lg text-muted",
    body: "mt-8",
    features: "grid",
    footer: "mt-8",
    links: "flex flex-wrap gap-x-6 gap-y-3"
  },
  variants: {
    orientation: {
      horizontal: {
        container: "lg:grid-cols-2 lg:items-center",
        description: "text-pretty",
        features: "gap-4"
      },
      vertical: {
        container: "",
        headline: "justify-center",
        leading: "justify-center",
        title: "text-center",
        description: "text-center text-balance",
        links: "justify-center",
        features: "sm:grid-cols-2 lg:grid-cols-3 gap-8"
      }
    },
    reverse: {
      true: {
        wrapper: "lg:order-last"
      }
    },
    headline: {
      true: {
        headline: "font-semibold text-primary flex items-center gap-1.5"
      }
    },
    title: {
      true: {
        description: "mt-6"
      }
    },
    description: {
      true: ""
    },
    body: {
      true: ""
    }
  },
  compoundVariants: [
    {
      orientation: "vertical",
      title: !0,
      class: {
        body: "mt-16"
      }
    },
    {
      orientation: "vertical",
      description: !0,
      class: {
        body: "mt-16"
      }
    },
    {
      orientation: "vertical",
      body: !0,
      class: {
        footer: "mt-16"
      }
    }
  ]
}, B6 = {
  key: 2,
  class: "hidden lg:block"
}, pj = /* @__PURE__ */ L({
  __name: "PageSection",
  props: {
    as: { default: "section" },
    headline: {},
    icon: {},
    title: {},
    description: {},
    links: {},
    features: {},
    orientation: { default: "vertical" },
    reverse: { type: Boolean },
    class: {},
    ui: {}
  },
  setup(e) {
    const t = e, a = Se(), n = ue(), r = T(() => W({ extend: W(T6), ...n.ui?.pageSection || {} })({
      orientation: t.orientation,
      reverse: t.reverse,
      title: !!t.title || !!a.title,
      description: !!t.description || !!a.description,
      body: !!a.body || !!t.features?.length || !!a.features
    }));
    return (s, i) => (h(), k(u(U), {
      as: s.as,
      "data-orientation": s.orientation,
      class: A(r.value.root({ class: [t.ui?.root, t.class] }))
    }, {
      default: _(() => [
        S(s.$slots, "top"),
        V(Os, {
          class: A(r.value.container({ class: t.ui?.container }))
        }, {
          default: _(() => [
            a.header || s.icon || a.leading || s.headline || a.headline || s.title || a.title || s.description || a.description || a.body || s.features?.length || a.features || a.footer || s.links?.length || a.links ? (h(), M("div", {
              key: 0,
              class: A(r.value.wrapper({ class: t.ui?.wrapper }))
            }, [
              a.header || s.icon || a.leading || s.headline || a.headline || s.title || a.title || s.description || a.description ? (h(), M("div", {
                key: 0,
                class: A(r.value.header({ class: t.ui?.header }))
              }, [
                S(s.$slots, "header", {}, () => [
                  s.icon || a.leading ? (h(), M("div", {
                    key: 0,
                    class: A(r.value.leading({ class: t.ui?.leading }))
                  }, [
                    S(s.$slots, "leading", {}, () => [
                      s.icon ? (h(), k(he, {
                        key: 0,
                        name: s.icon,
                        class: A(r.value.leadingIcon({ class: t.ui?.leadingIcon }))
                      }, null, 8, ["name", "class"])) : D("", !0)
                    ])
                  ], 2)) : D("", !0),
                  s.headline || a.headline ? (h(), M("div", {
                    key: 1,
                    class: A(r.value.headline({ class: t.ui?.headline, headline: !a.headline }))
                  }, [
                    S(s.$slots, "headline", {}, () => [
                      ee(X(s.headline), 1)
                    ])
                  ], 2)) : D("", !0),
                  s.title || a.title ? (h(), M("h2", {
                    key: 2,
                    class: A(r.value.title({ class: t.ui?.title }))
                  }, [
                    S(s.$slots, "title", {}, () => [
                      ee(X(s.title), 1)
                    ])
                  ], 2)) : D("", !0),
                  s.description || a.description ? (h(), M("div", {
                    key: 3,
                    class: A(r.value.description({ class: t.ui?.description }))
                  }, [
                    S(s.$slots, "description", {}, () => [
                      ee(X(s.description), 1)
                    ])
                  ], 2)) : D("", !0)
                ])
              ], 2)) : D("", !0),
              a.body || s.features?.length || a.features ? (h(), M("div", {
                key: 1,
                class: A(r.value.body({ class: t.ui?.body }))
              }, [
                S(s.$slots, "body", {}, () => [
                  s.features?.length || a.features ? (h(), M("ul", {
                    key: 0,
                    class: A(r.value.features({ class: t.ui?.features }))
                  }, [
                    S(s.$slots, "features", {}, () => [
                      (h(!0), M(te, null, le(s.features, (o, l) => (h(), k(x6, O({
                        key: l,
                        as: "li"
                      }, { ref_for: !0 }, o), null, 16))), 128))
                    ])
                  ], 2)) : D("", !0)
                ])
              ], 2)) : D("", !0),
              a.footer || s.links?.length || a.links ? (h(), M("div", {
                key: 2,
                class: A(r.value.footer({ class: t.ui?.footer }))
              }, [
                S(s.$slots, "footer", {}, () => [
                  s.links?.length || a.links ? (h(), M("div", {
                    key: 0,
                    class: A(r.value.links({ class: t.ui?.links }))
                  }, [
                    S(s.$slots, "links", {}, () => [
                      (h(!0), M(te, null, le(s.links, (o, l) => (h(), k(Je, O({
                        key: l,
                        size: "lg"
                      }, { ref_for: !0 }, o), null, 16))), 128))
                    ])
                  ], 2)) : D("", !0)
                ])
              ], 2)) : D("", !0)
            ], 2)) : D("", !0),
            a.default ? S(s.$slots, "default", { key: 1 }) : s.orientation === "horizontal" ? (h(), M("div", B6)) : D("", !0)
          ]),
          _: 3
        }, 8, ["class"]),
        S(s.$slots, "bottom")
      ]),
      _: 3
    }, 8, ["as", "data-orientation", "class"]));
  }
}), P6 = {
  slots: {
    root: "",
    list: "flex items-center gap-1",
    ellipsis: "pointer-events-none",
    label: "min-w-5 text-center",
    first: "",
    prev: "",
    item: "",
    next: "",
    last: ""
  }
}, gj = /* @__PURE__ */ L({
  __name: "Pagination",
  props: {
    as: {},
    firstIcon: {},
    prevIcon: {},
    nextIcon: {},
    lastIcon: {},
    ellipsisIcon: {},
    color: { default: "neutral" },
    variant: { default: "outline" },
    activeColor: { default: "primary" },
    activeVariant: { default: "solid" },
    showControls: { type: Boolean, default: !0 },
    size: {},
    to: {},
    class: {},
    ui: {},
    defaultPage: {},
    disabled: { type: Boolean },
    itemsPerPage: { default: 10 },
    page: {},
    showEdges: { type: Boolean, default: !1 },
    siblingCount: { default: 2 },
    total: { default: 0 }
  },
  emits: ["update:page"],
  setup(e, { emit: t }) {
    const a = e, n = t, r = Se(), { dir: s } = it(), i = ue(), o = Xe(tt(a, "as", "defaultPage", "disabled", "itemsPerPage", "page", "showEdges", "siblingCount", "total"), n), l = T(() => a.firstIcon || (s.value === "rtl" ? i.ui.icons.chevronDoubleRight : i.ui.icons.chevronDoubleLeft)), d = T(() => a.prevIcon || (s.value === "rtl" ? i.ui.icons.chevronRight : i.ui.icons.chevronLeft)), c = T(() => a.nextIcon || (s.value === "rtl" ? i.ui.icons.chevronLeft : i.ui.icons.chevronRight)), f = T(() => a.lastIcon || (s.value === "rtl" ? i.ui.icons.chevronDoubleLeft : i.ui.icons.chevronDoubleRight)), p = T(() => W({ extend: W(P6), ...i.ui?.pagination || {} })());
    return (g, v) => (h(), k(u(JE), O(u(o), {
      class: p.value.root({ class: [a.ui?.root, a.class] })
    }), {
      default: _(({ page: m, pageCount: y }) => [
        V(u(sT), {
          class: A(p.value.list({ class: a.ui?.list }))
        }, {
          default: _(({ items: x }) => [
            g.showControls || r.first ? (h(), k(u(ZE), {
              key: 0,
              "as-child": "",
              class: A(p.value.first({ class: a.ui?.first }))
            }, {
              default: _(() => [
                S(g.$slots, "first", {}, () => [
                  V(Je, {
                    color: g.color,
                    variant: g.variant,
                    size: g.size,
                    icon: l.value,
                    to: g.to?.(1)
                  }, null, 8, ["color", "variant", "size", "icon", "to"])
                ])
              ]),
              _: 3
            }, 8, ["class"])) : D("", !0),
            g.showControls || r.prev ? (h(), k(u(cT), {
              key: 1,
              "as-child": "",
              class: A(p.value.prev({ class: a.ui?.prev }))
            }, {
              default: _(() => [
                S(g.$slots, "prev", {}, () => [
                  V(Je, {
                    color: g.color,
                    variant: g.variant,
                    size: g.size,
                    icon: d.value,
                    to: m > 1 ? g.to?.(m - 1) : void 0
                  }, null, 8, ["color", "variant", "size", "icon", "to"])
                ])
              ]),
              _: 2
            }, 1032, ["class"])) : D("", !0),
            (h(!0), M(te, null, le(x, (b, C) => (h(), M(te, null, [
              b.type === "page" ? (h(), k(u(oT), {
                key: C,
                "as-child": "",
                value: b.value,
                class: A(p.value.item({ class: a.ui?.item }))
              }, {
                default: _(() => [
                  S(g.$slots, "item", O({ ref_for: !0 }, { item: b, index: C, page: m, pageCount: y }), () => [
                    V(Je, {
                      color: m === b.value ? g.activeColor : g.color,
                      variant: m === b.value ? g.activeVariant : g.variant,
                      size: g.size,
                      label: String(b.value),
                      ui: { label: p.value.label() },
                      to: g.to?.(b.value),
                      square: ""
                    }, null, 8, ["color", "variant", "size", "label", "ui", "to"])
                  ])
                ]),
                _: 2
              }, 1032, ["value", "class"])) : (h(), k(u(WE), {
                key: b.type,
                index: C,
                "as-child": "",
                class: A(p.value.ellipsis({ class: a.ui?.ellipsis }))
              }, {
                default: _(() => [
                  S(g.$slots, "ellipsis", {}, () => [
                    V(Je, {
                      color: g.color,
                      variant: g.variant,
                      size: g.size,
                      icon: g.ellipsisIcon || u(i).ui.icons.ellipsis
                    }, null, 8, ["color", "variant", "size", "icon"])
                  ])
                ]),
                _: 3
              }, 8, ["index", "class"]))
            ], 64))), 256)),
            g.showControls || r.next ? (h(), k(u(uT), {
              key: 2,
              "as-child": "",
              class: A(p.value.next({ class: a.ui?.next }))
            }, {
              default: _(() => [
                S(g.$slots, "next", {}, () => [
                  V(Je, {
                    color: g.color,
                    variant: g.variant,
                    size: g.size,
                    icon: c.value,
                    to: m < y ? g.to?.(m + 1) : void 0
                  }, null, 8, ["color", "variant", "size", "icon", "to"])
                ])
              ]),
              _: 2
            }, 1032, ["class"])) : D("", !0),
            g.showControls || r.last ? (h(), k(u(tT), {
              key: 3,
              "as-child": "",
              class: A(p.value.last({ class: a.ui?.last }))
            }, {
              default: _(() => [
                S(g.$slots, "last", {}, () => [
                  V(Je, {
                    color: g.color,
                    variant: g.variant,
                    size: g.size,
                    icon: f.value,
                    to: g.to?.(y)
                  }, null, 8, ["color", "variant", "size", "icon", "to"])
                ])
              ]),
              _: 2
            }, 1032, ["class"])) : D("", !0)
          ]),
          _: 2
        }, 1032, ["class"])
      ]),
      _: 3
    }, 16, ["class"]));
  }
}), D6 = {
  slots: {
    root: "relative grid rounded-lg p-6 lg:p-8 xl:p-10 gap-6",
    header: "",
    body: "flex flex-col min-w-0",
    footer: "flex flex-col gap-6 items-center",
    titleWrapper: "flex items-center gap-3",
    title: "text-highlighted text-2xl sm:text-3xl text-pretty font-semibold",
    description: "text-muted text-base text-pretty mt-2",
    priceWrapper: "flex items-center gap-1",
    price: "text-highlighted text-3xl sm:text-4xl font-semibold",
    discount: "text-muted line-through text-xl sm:text-2xl",
    billing: "flex flex-col justify-between min-w-0",
    billingPeriod: "text-toned truncate text-xs font-medium",
    billingCycle: "text-muted truncate text-xs font-medium",
    features: "flex flex-col gap-3 flex-1 mt-6 grow-0",
    feature: "flex items-center gap-2 min-w-0",
    featureIcon: "size-5 shrink-0 text-primary",
    featureTitle: "text-muted text-sm truncate",
    badge: "",
    button: "",
    tagline: "text-base font-semibold text-default",
    terms: "text-xs/5 text-muted text-center text-balance"
  },
  variants: {
    orientation: {
      horizontal: {
        root: "grid-cols-1 lg:grid-cols-3 justify-between divide-y lg:divide-y-0 lg:divide-x divide-default",
        body: "lg:col-span-2 pb-6 lg:pb-0 lg:pr-6 justify-center",
        footer: "lg:justify-center lg:items-center lg:p-6 lg:max-w-xs lg:w-full lg:mx-auto",
        features: "lg:grid lg:grid-cols-2 lg:mt-12"
      },
      vertical: {
        footer: "justify-end",
        priceWrapper: "mt-6"
      }
    },
    variant: {
      solid: {
        root: "bg-inverted",
        title: "text-inverted",
        description: "text-dimmed",
        price: "text-inverted",
        discount: "text-dimmed",
        billingCycle: "text-dimmed",
        billingPeriod: "text-dimmed",
        featureTitle: "text-dimmed"
      },
      outline: {
        root: "bg-default ring ring-default"
      },
      soft: {
        root: "bg-elevated/50"
      },
      subtle: {
        root: "bg-elevated/50 ring ring-default"
      }
    },
    highlight: {
      true: {
        root: "ring-2 ring-inset ring-primary"
      }
    },
    scale: {
      true: {
        root: "lg:scale-[1.1] lg:z-[1]"
      }
    }
  },
  compoundVariants: [
    {
      orientation: "horizontal",
      variant: "soft",
      class: {
        root: "divide-accented"
      }
    },
    {
      orientation: "horizontal",
      variant: "subtle",
      class: {
        root: "divide-accented"
      }
    }
  ],
  defaultVariants: {
    variant: "outline"
  }
}, M6 = /* @__PURE__ */ L({
  inheritAttrs: !1,
  __name: "PricingPlan",
  props: {
    as: {},
    title: {},
    description: {},
    badge: {},
    billingCycle: {},
    billingPeriod: {},
    price: {},
    discount: {},
    features: {},
    button: {},
    tagline: {},
    terms: {},
    orientation: { default: "vertical" },
    variant: {},
    highlight: { type: Boolean },
    scale: { type: Boolean },
    class: {},
    ui: {}
  },
  setup(e) {
    const t = e, a = Se(), n = ue(), [r, s] = /* @__PURE__ */ Lt(), i = T(() => W({ extend: W(D6), ...n.ui?.pricingPlan || {} })({
      orientation: t.orientation,
      variant: t.variant,
      highlight: t.highlight,
      scale: t.scale
    })), o = T(() => t.features?.map((l) => typeof l == "string" ? { title: l } : l));
    return (l, d) => (h(), M(te, null, [
      V(u(r), null, {
        default: _(() => [
          l.discount || l.price || a.discount || a.price || l.billingCycle || l.billingPeriod || a.billing ? (h(), M("div", {
            key: 0,
            class: A(i.value.priceWrapper({ class: t.ui?.priceWrapper }))
          }, [
            l.discount && l.price || a.discount ? (h(), M("div", {
              key: 0,
              class: A(i.value.discount({ class: t.ui?.discount }))
            }, [
              S(l.$slots, "discount", {}, () => [
                ee(X(l.price), 1)
              ])
            ], 2)) : D("", !0),
            l.discount || l.price || a.price ? (h(), M("div", {
              key: 1,
              class: A(i.value.price({ class: t.ui?.price }))
            }, [
              S(l.$slots, "price", {}, () => [
                ee(X(l.discount || l.price), 1)
              ])
            ], 2)) : D("", !0),
            l.billingCycle || l.billingPeriod || a.billing ? (h(), M("div", {
              key: 2,
              class: A(i.value.billing({ class: t.ui?.billing }))
            }, [
              S(l.$slots, "billing", {}, () => [
                J("span", {
                  class: A(i.value.billingPeriod({ class: t.ui?.billingPeriod }))
                }, X(l.billingPeriod || " "), 3),
                l.billingCycle ? (h(), M("span", {
                  key: 0,
                  class: A(i.value.billingCycle({ class: t.ui?.billingCycle }))
                }, X(l.billingCycle), 3)) : D("", !0)
              ])
            ], 2)) : D("", !0)
          ], 2)) : D("", !0)
        ]),
        _: 3
      }),
      V(u(U), O({ as: l.as }, l.$attrs, {
        "data-orientation": l.orientation,
        class: i.value.root({ class: [t.ui?.root, t.class] })
      }), {
        default: _(() => [
          a.header && l.orientation === "vertical" ? (h(), M("div", {
            key: 0,
            class: A(i.value.header({ class: t.ui?.header }))
          }, [
            S(l.$slots, "header")
          ], 2)) : D("", !0),
          J("div", {
            class: A(i.value.body({ class: t.ui?.body }))
          }, [
            S(l.$slots, "body", {}, () => [
              J("div", {
                class: A(i.value.titleWrapper({ class: t.ui?.titleWrapper }))
              }, [
                l.title || a.title ? (h(), M("div", {
                  key: 0,
                  class: A(i.value.title({ class: t.ui?.title }))
                }, [
                  S(l.$slots, "title", {}, () => [
                    ee(X(l.title), 1)
                  ])
                ], 2)) : D("", !0),
                S(l.$slots, "badge", {}, () => [
                  l.badge ? (h(), k(Ls, O({
                    key: 0,
                    color: "primary",
                    variant: "subtle"
                  }, typeof l.badge == "string" ? { label: l.badge } : l.badge, {
                    class: i.value.badge({ class: t.ui?.badge })
                  }), null, 16, ["class"])) : D("", !0)
                ])
              ], 2),
              l.description || a.description ? (h(), M("div", {
                key: 0,
                class: A(i.value.description({ class: t.ui?.description }))
              }, [
                S(l.$slots, "description", {}, () => [
                  ee(X(l.description), 1)
                ])
              ], 2)) : D("", !0),
              l.orientation === "vertical" ? (h(), k(u(s), { key: 1 })) : D("", !0),
              o.value?.length || a.features ? (h(), M("ul", {
                key: 2,
                class: A(i.value.features({ class: t.ui?.features }))
              }, [
                S(l.$slots, "features", {}, () => [
                  (h(!0), M(te, null, le(o.value, (c, f) => (h(), M("li", {
                    key: f,
                    class: A(i.value.feature({ class: t.ui?.feature }))
                  }, [
                    V(he, {
                      name: c.icon || u(n).ui.icons.success,
                      class: A(i.value.featureIcon({ class: t.ui?.featureIcon }))
                    }, null, 8, ["name", "class"]),
                    J("span", {
                      class: A(i.value.featureTitle({ class: t.ui?.featureTitle }))
                    }, X(c.title), 3)
                  ], 2))), 128))
                ])
              ], 2)) : D("", !0)
            ])
          ], 2),
          l.terms || a.terms || l.button || a.button || l.orientation === "horizontal" || l.tagline || a.tagline || a.footer ? (h(), M("div", {
            key: 1,
            class: A(i.value.footer({ class: t.ui?.footer }))
          }, [
            S(l.$slots, "footer", {}, () => [
              l.tagline || a.tagline ? (h(), M("div", {
                key: 0,
                class: A(i.value.tagline({ class: t.ui?.tagline }))
              }, [
                S(l.$slots, "tagline", {}, () => [
                  ee(X(l.tagline), 1)
                ])
              ], 2)) : D("", !0),
              l.orientation === "horizontal" ? (h(), k(u(s), { key: 1 })) : D("", !0),
              S(l.$slots, "button", {}, () => [
                l.button ? (h(), k(Je, O({ key: 0 }, { block: !0, size: "lg", ...l.button }, {
                  class: i.value.button({ class: t.ui?.button }),
                  onClick: l.button?.onClick
                }), null, 16, ["class", "onClick"])) : D("", !0)
              ]),
              l.terms || a.terms ? (h(), M("div", {
                key: 2,
                class: A(i.value.terms({ class: t.ui?.terms }))
              }, [
                S(l.$slots, "terms", {}, () => [
                  ee(X(l.terms), 1)
                ])
              ], 2)) : D("", !0)
            ])
          ], 2)) : D("", !0)
        ]),
        _: 3
      }, 16, ["as", "data-orientation", "class"])
    ], 64));
  }
}), R6 = {
  base: "flex flex-col gap-y-8",
  variants: {
    orientation: {
      horizontal: "lg:grid lg:grid-cols-[repeat(var(--count),minmax(0,1fr))]",
      vertical: ""
    },
    compact: {
      false: "gap-x-8"
    },
    scale: {
      true: ""
    }
  },
  compoundVariants: [
    {
      compact: !1,
      scale: !0,
      class: "lg:gap-x-13"
    }
  ]
}, vj = /* @__PURE__ */ L({
  __name: "PricingPlans",
  props: {
    as: {},
    plans: {},
    orientation: { default: "horizontal" },
    compact: { type: Boolean, default: !1 },
    scale: { type: Boolean, default: !1 },
    class: {}
  },
  setup(e) {
    const t = e, a = Se(), n = ue(), r = T(() => W({ extend: W(R6), ...n.ui?.pricingPlans || {} })), s = T(() => t.plans?.length || a.default?.()?.flatMap(i).filter(Boolean)?.length || 3);
    function i(o) {
      return typeof o.type == "symbol" ? o.children && Array.isArray(o.children) ? o.children.map(i) : void 0 : o;
    }
    return (o, l) => (h(), k(u(U), {
      as: o.as,
      "data-orientation": o.orientation,
      class: A(r.value({ class: t.class, compact: o.compact, scale: o.scale, orientation: o.orientation })),
      style: It({ "--count": s.value })
    }, {
      default: _(() => [
        S(o.$slots, "default", {}, () => [
          (h(!0), M(te, null, le(o.plans, (d, c) => (h(), k(M6, O({
            key: c,
            orientation: o.orientation === "vertical" ? "horizontal" : "vertical"
          }, { ref_for: !0 }, d), null, 16, ["orientation"]))), 128))
        ])
      ]),
      _: 3
    }, 8, ["as", "data-orientation", "class", "style"]));
  }
}), L6 = {
  slots: {
    root: "w-full relative",
    table: "w-full table-fixed border-separate border-spacing-x-0 hidden md:table",
    list: "md:hidden flex flex-col gap-6 w-full",
    item: "p-6 flex flex-col border border-default rounded-lg",
    caption: "sr-only",
    thead: "",
    tbody: "",
    tr: "",
    th: "py-4 font-normal text-left border-b border-default",
    td: "px-6 py-4 text-center border-b border-default",
    tier: "p-6 text-left font-normal",
    tierTitleWrapper: "flex items-center gap-3",
    tierTitle: "text-lg font-semibold text-highlighted",
    tierDescription: "text-sm font-normal text-muted mt-1",
    tierBadge: "truncate",
    tierPriceWrapper: "flex items-center gap-1 mt-4",
    tierPrice: "text-highlighted text-3xl sm:text-4xl font-semibold",
    tierDiscount: "text-muted line-through text-xl sm:text-2xl",
    tierBilling: "flex flex-col justify-between min-w-0",
    tierBillingPeriod: "text-toned truncate text-xs font-medium",
    tierBillingCycle: "text-muted truncate text-xs font-medium",
    tierButton: "mt-6",
    tierFeatureIcon: "size-5 shrink-0",
    section: "mt-6 flex flex-col gap-2",
    sectionTitle: "font-semibold text-sm text-highlighted",
    feature: "flex items-center justify-between gap-1",
    featureTitle: "text-sm text-default",
    featureValue: "text-sm text-muted flex justify-center min-w-5"
  },
  variants: {
    section: {
      true: {
        tr: "*:pt-8"
      }
    },
    active: {
      true: {
        tierFeatureIcon: "text-primary"
      }
    },
    highlight: {
      true: {
        tier: "bg-elevated/50 border-x border-t border-default rounded-t-lg",
        td: "bg-elevated/50 border-x border-default",
        item: "bg-elevated/50"
      }
    }
  }
}, hj = /* @__PURE__ */ L({
  inheritAttrs: !1,
  __name: "PricingTable",
  props: {
    as: {},
    caption: {},
    tiers: {},
    sections: {},
    class: {},
    ui: {}
  },
  setup(e) {
    const t = e, a = Se(), { t: n } = it(), r = ue(), s = (f) => f.id ? f.id : f.title.toLowerCase().replace(/[^a-z0-9\s-]/g, "").replace(/\s+/g, "-").replace(/-+/g, "-").replace(/^-|-$/g, ""), i = T(() => W({ extend: W(L6), ...r.ui?.pricingTable || {} })()), [o, l] = /* @__PURE__ */ Lt({
      props: {
        tier: Object
      }
    }), [d, c] = /* @__PURE__ */ Lt({
      props: {
        tier: Object,
        feature: Object
      }
    });
    return (f, p) => (h(), M(te, null, [
      V(u(o), null, {
        default: _(({ tier: g }) => [
          S(f.$slots, g.id, {
            tier: g
          }, () => [
            S(f.$slots, "tier", {
              tier: g
            }, () => [
              J("div", {
                class: A(i.value.tierTitleWrapper({ class: t.ui?.tierTitleWrapper }))
              }, [
                J("div", {
                  class: A(i.value.tierTitle({ class: t.ui?.tierTitle }))
                }, [
                  S(f.$slots, `${g.id}-title`, { tier: g }, () => [
                    S(f.$slots, "tier-title", {
                      tier: g
                    }, () => [
                      ee(X(g.title), 1)
                    ])
                  ])
                ], 2),
                S(f.$slots, `${g.id}-badge`, { tier: g }, () => [
                  S(f.$slots, "tier-badge", {
                    tier: g
                  }, () => [
                    g.badge ? (h(), k(Ls, O({
                      key: 0,
                      color: "primary",
                      variant: "subtle"
                    }, typeof g.badge == "string" ? { label: g.badge } : g.badge, {
                      class: i.value.tierBadge({ class: t.ui?.tierBadge })
                    }), null, 16, ["class"])) : D("", !0)
                  ])
                ])
              ], 2),
              g.description || a["tier-description"] || a[`${g.id}-description`] ? (h(), M("div", {
                key: 0,
                class: A(i.value.tierDescription({ class: t.ui?.tierDescription }))
              }, [
                S(f.$slots, `${g.id}-description`, { tier: g }, () => [
                  S(f.$slots, "tier-description", {
                    tier: g
                  }, () => [
                    ee(X(g.description), 1)
                  ])
                ])
              ], 2)) : D("", !0),
              g.discount || g.price || a["tier-discount"] || a[`${g.id}-discount`] || a["tier-price"] || a[`${g.id}-price`] || g.billingCycle || g.billingPeriod || a["tier-billing"] || a[`${g.id}-billing`] ? (h(), M("div", {
                key: 1,
                class: A(i.value.tierPriceWrapper({ class: t.ui?.tierPriceWrapper }))
              }, [
                g.discount && g.price || a[`${g.id}-discount`] || a["tier-discount"] ? (h(), M("div", {
                  key: 0,
                  class: A(i.value.tierDiscount({ class: t.ui?.tierDiscount }))
                }, [
                  S(f.$slots, `${g.id}-discount`, { tier: g }, () => [
                    S(f.$slots, "tier-discount", {
                      tier: g
                    }, () => [
                      ee(X(g.price), 1)
                    ])
                  ])
                ], 2)) : D("", !0),
                g.discount || g.price || a[`${g.id}-price`] || a["tier-price"] ? (h(), M("div", {
                  key: 1,
                  class: A(i.value.tierPrice({ class: t.ui?.tierPrice }))
                }, [
                  S(f.$slots, `${g.id}-price`, { tier: g }, () => [
                    S(f.$slots, "tier-price", {
                      tier: g
                    }, () => [
                      ee(X(g.discount || g.price), 1)
                    ])
                  ])
                ], 2)) : D("", !0),
                g.billingCycle || g.billingPeriod || a[`${g.id}-billing`] || a["tier-billing"] ? (h(), M("div", {
                  key: 2,
                  class: A(i.value.tierBilling({ class: t.ui?.tierBilling }))
                }, [
                  S(f.$slots, `${g.id}-billing`, { tier: g }, () => [
                    S(f.$slots, "tier-billing", {
                      tier: g
                    }, () => [
                      J("span", {
                        class: A(i.value.tierBillingPeriod({ class: t.ui?.tierBillingPeriod }))
                      }, X(g.billingPeriod || " "), 3),
                      g.billingCycle ? (h(), M("span", {
                        key: 0,
                        class: A(i.value.tierBillingCycle({ class: t.ui?.tierBillingCycle }))
                      }, X(g.billingCycle), 3)) : D("", !0)
                    ])
                  ])
                ], 2)) : D("", !0)
              ], 2)) : D("", !0),
              a[`${g.id}-button`] || a["tier-button"] || g.button ? (h(), M("div", {
                key: 2,
                class: A(i.value.tierButton({ class: t.ui?.tierButton }))
              }, [
                S(f.$slots, `${g.id}-button`, { tier: g }, () => [
                  S(f.$slots, "tier-button", {
                    tier: g
                  }, () => [
                    g.button ? (h(), k(Je, O({
                      key: 0,
                      block: "",
                      size: "lg"
                    }, g.button), null, 16)) : D("", !0)
                  ])
                ])
              ], 2)) : D("", !0)
            ])
          ])
        ]),
        _: 3
      }),
      V(u(d), null, {
        default: _(({ feature: g, tier: v }) => [
          g.tiers?.[v.id] ? (h(), M(te, { key: 0 }, [
            typeof g.tiers[v.id] == "boolean" ? (h(), k(he, {
              key: 0,
              name: u(r).ui.icons.success,
              class: A(i.value.tierFeatureIcon({ class: t.ui?.tierFeatureIcon, active: !0 }))
            }, null, 8, ["name", "class"])) : (h(), M(te, { key: 1 }, [
              ee(X(g.tiers[v.id]), 1)
            ], 64))
          ], 64)) : (h(), k(he, {
            key: 1,
            name: u(r).ui.icons.minus,
            class: A(i.value.tierFeatureIcon({ class: t.ui?.tierFeatureIcon }))
          }, null, 8, ["name", "class"]))
        ]),
        _: 1
      }),
      V(u(U), O({ as: f.as }, f.$attrs, {
        class: i.value.root({ class: [t.ui?.root, t.class] })
      }), {
        default: _(() => [
          J("table", {
            class: A(i.value.table({ class: t.ui?.table }))
          }, [
            f.caption || a.caption ? (h(), M("caption", {
              key: 0,
              class: A(i.value.caption({ class: [t.ui?.caption] }))
            }, [
              S(f.$slots, "caption", {}, () => [
                ee(X(f.caption || u(n)("pricingTable.caption")), 1)
              ])
            ], 2)) : D("", !0),
            J("thead", {
              class: A(i.value.thead({ class: t.ui?.thead }))
            }, [
              J("tr", {
                class: A(i.value.tr({ class: t.ui?.tr }))
              }, [
                p[0] || (p[0] = J("td", null, null, -1)),
                (h(!0), M(te, null, le(f.tiers, (g, v) => (h(), M("th", {
                  key: v,
                  scope: "col",
                  class: A(i.value.tier({ class: t.ui?.tier, highlight: g.highlight }))
                }, [
                  V(u(l), { tier: g }, null, 8, ["tier"])
                ], 2))), 128))
              ], 2)
            ], 2),
            J("tbody", {
              class: A(i.value.tbody({ class: t.ui?.tbody }))
            }, [
              (h(!0), M(te, null, le(f.sections, (g, v) => (h(), M(te, { key: v }, [
                J("tr", {
                  class: A(i.value.tr({ class: t.ui?.tr, section: v > 0 }))
                }, [
                  J("th", {
                    scope: "row",
                    class: A(i.value.th({ class: t.ui?.th }))
                  }, [
                    g.title || a["section-title"] || a[`section-${s(g)}-title`] ? (h(), M("div", {
                      key: 0,
                      class: A(i.value.sectionTitle({ class: t.ui?.sectionTitle }))
                    }, [
                      S(f.$slots, `section-${s(g)}-title`, { section: g }, () => [
                        S(f.$slots, "section-title", { section: g }, () => [
                          ee(X(g.title), 1)
                        ])
                      ])
                    ], 2)) : D("", !0)
                  ], 2),
                  (h(!0), M(te, null, le(f.tiers, (m, y) => (h(), M("td", {
                    key: `${v}-tier-${y}`,
                    class: A(i.value.td({ class: t.ui?.td, highlight: m.highlight }))
                  }, null, 2))), 128))
                ], 2),
                (h(!0), M(te, null, le(g.features, (m, y) => (h(), M("tr", {
                  key: `${v}-feature-${y}`
                }, [
                  J("th", {
                    scope: "row",
                    class: A(i.value.th({ class: t.ui?.th }))
                  }, [
                    J("div", {
                      class: A(i.value.featureTitle({ class: t.ui?.featureTitle }))
                    }, [
                      S(f.$slots, `feature-${s(m)}-title`, {
                        feature: m,
                        section: g
                      }, () => [
                        S(f.$slots, "feature-title", {
                          feature: m,
                          section: g
                        }, () => [
                          ee(X(m.title), 1)
                        ])
                      ])
                    ], 2)
                  ], 2),
                  (h(!0), M(te, null, le(f.tiers, (x, b) => (h(), M("td", {
                    key: `${v}-feature-${y}-tier-${b}`,
                    class: A(i.value.td({ class: t.ui?.td, highlight: x.highlight }))
                  }, [
                    J("div", {
                      class: A(i.value.featureValue({ class: t.ui?.featureValue }))
                    }, [
                      S(f.$slots, `feature-${s(m)}-value`, {
                        feature: m,
                        tier: x,
                        section: g
                      }, () => [
                        S(f.$slots, "feature-value", {
                          feature: m,
                          tier: x,
                          section: g
                        }, () => [
                          V(u(c), {
                            tier: x,
                            feature: m
                          }, null, 8, ["tier", "feature"])
                        ])
                      ])
                    ], 2)
                  ], 2))), 128))
                ]))), 128))
              ], 64))), 128))
            ], 2)
          ], 2),
          J("ul", {
            class: A(i.value.list({ class: t.ui?.list }))
          }, [
            (h(!0), M(te, null, le(f.tiers, (g, v) => (h(), M("li", {
              key: v,
              class: A(i.value.item({ class: t.ui?.item, highlight: g.highlight }))
            }, [
              V(u(l), { tier: g }, null, 8, ["tier"]),
              (h(!0), M(te, null, le(f.sections, (m, y) => (h(), M("div", {
                key: `section-${y}`,
                class: A(i.value.section({ class: t.ui?.section }))
              }, [
                m.title ? (h(), M("div", {
                  key: 0,
                  class: A(i.value.sectionTitle({ class: t.ui?.sectionTitle }))
                }, [
                  S(f.$slots, `section-${s(m)}-title`, { section: m }, () => [
                    S(f.$slots, "section-title", { section: m }, () => [
                      ee(X(m.title), 1)
                    ])
                  ])
                ], 2)) : D("", !0),
                (h(!0), M(te, null, le(m.features, (x, b) => (h(), M("div", {
                  key: `section-${y}-feature-${b}`,
                  class: A(i.value.feature({ class: t.ui?.feature }))
                }, [
                  J("div", {
                    class: A(i.value.featureTitle({ class: t.ui?.featureTitle }))
                  }, [
                    S(f.$slots, `feature-${s(x)}-title`, {
                      feature: x,
                      section: m
                    }, () => [
                      S(f.$slots, "feature-title", {
                        feature: x,
                        section: m
                      }, () => [
                        ee(X(x.title), 1)
                      ])
                    ])
                  ], 2),
                  J("div", {
                    class: A(i.value.featureValue({ class: t.ui?.featureValue }))
                  }, [
                    S(f.$slots, `feature-${s(x)}-value`, {
                      feature: x,
                      tier: g,
                      section: m
                    }, () => [
                      S(f.$slots, "feature-value", {
                        feature: x,
                        tier: g,
                        section: m
                      }, () => [
                        V(u(c), {
                          tier: g,
                          feature: x
                        }, null, 8, ["tier", "feature"])
                      ])
                    ])
                  ], 2)
                ], 2))), 128))
              ], 2))), 128))
            ], 2))), 128))
          ], 2)
        ]),
        _: 3
      }, 16, ["as", "class"])
    ], 64));
  }
}), O6 = {
  slots: {
    root: "relative",
    fieldset: "flex gap-x-2",
    legend: "mb-1 block font-medium text-default",
    item: "flex items-start",
    container: "flex items-center",
    base: "rounded-full ring ring-inset ring-accented overflow-hidden focus-visible:outline-2 focus-visible:outline-offset-2",
    indicator: "flex items-center justify-center size-full after:bg-default after:rounded-full",
    wrapper: "w-full",
    label: "block font-medium text-default",
    description: "text-muted"
  },
  variants: {
    color: {
      primary: {
        base: "focus-visible:outline-primary",
        indicator: "bg-primary"
      },
      secondary: {
        base: "focus-visible:outline-secondary",
        indicator: "bg-secondary"
      },
      success: {
        base: "focus-visible:outline-success",
        indicator: "bg-success"
      },
      info: {
        base: "focus-visible:outline-info",
        indicator: "bg-info"
      },
      warning: {
        base: "focus-visible:outline-warning",
        indicator: "bg-warning"
      },
      error: {
        base: "focus-visible:outline-error",
        indicator: "bg-error"
      },
      neutral: {
        base: "focus-visible:outline-inverted",
        indicator: "bg-inverted"
      }
    },
    variant: {
      list: {
        item: ""
      },
      card: {
        item: "border border-muted rounded-lg"
      },
      table: {
        item: "border border-muted"
      }
    },
    orientation: {
      horizontal: {
        fieldset: "flex-row"
      },
      vertical: {
        fieldset: "flex-col"
      }
    },
    indicator: {
      start: {
        item: "flex-row",
        wrapper: "ms-2"
      },
      end: {
        item: "flex-row-reverse",
        wrapper: "me-2"
      },
      hidden: {
        base: "sr-only",
        wrapper: "text-center"
      }
    },
    size: {
      xs: {
        fieldset: "gap-y-0.5",
        legend: "text-xs",
        base: "size-3",
        item: "text-xs",
        container: "h-4",
        indicator: "after:size-1"
      },
      sm: {
        fieldset: "gap-y-0.5",
        legend: "text-xs",
        base: "size-3.5",
        item: "text-xs",
        container: "h-4",
        indicator: "after:size-1"
      },
      md: {
        fieldset: "gap-y-1",
        legend: "text-sm",
        base: "size-4",
        item: "text-sm",
        container: "h-5",
        indicator: "after:size-1.5"
      },
      lg: {
        fieldset: "gap-y-1",
        legend: "text-sm",
        base: "size-4.5",
        item: "text-sm",
        container: "h-5",
        indicator: "after:size-1.5"
      },
      xl: {
        fieldset: "gap-y-1.5",
        legend: "text-base",
        base: "size-5",
        item: "text-base",
        container: "h-6",
        indicator: "after:size-2"
      }
    },
    disabled: {
      true: {
        base: "cursor-not-allowed opacity-75",
        label: "cursor-not-allowed opacity-75"
      }
    },
    required: {
      true: {
        legend: "after:content-['*'] after:ms-0.5 after:text-error"
      }
    }
  },
  compoundVariants: [
    {
      size: "xs",
      variant: [
        "card",
        "table"
      ],
      class: {
        item: "p-2.5"
      }
    },
    {
      size: "sm",
      variant: [
        "card",
        "table"
      ],
      class: {
        item: "p-3"
      }
    },
    {
      size: "md",
      variant: [
        "card",
        "table"
      ],
      class: {
        item: "p-3.5"
      }
    },
    {
      size: "lg",
      variant: [
        "card",
        "table"
      ],
      class: {
        item: "p-4"
      }
    },
    {
      size: "xl",
      variant: [
        "card",
        "table"
      ],
      class: {
        item: "p-4.5"
      }
    },
    {
      orientation: "horizontal",
      variant: "table",
      class: {
        item: "first-of-type:rounded-s-lg last-of-type:rounded-e-lg",
        fieldset: "gap-0 -space-x-px"
      }
    },
    {
      orientation: "vertical",
      variant: "table",
      class: {
        item: "first-of-type:rounded-t-lg last-of-type:rounded-b-lg",
        fieldset: "gap-0 -space-y-px"
      }
    },
    {
      color: "primary",
      variant: "card",
      class: {
        item: "has-data-[state=checked]:border-primary"
      }
    },
    {
      color: "secondary",
      variant: "card",
      class: {
        item: "has-data-[state=checked]:border-secondary"
      }
    },
    {
      color: "success",
      variant: "card",
      class: {
        item: "has-data-[state=checked]:border-success"
      }
    },
    {
      color: "info",
      variant: "card",
      class: {
        item: "has-data-[state=checked]:border-info"
      }
    },
    {
      color: "warning",
      variant: "card",
      class: {
        item: "has-data-[state=checked]:border-warning"
      }
    },
    {
      color: "error",
      variant: "card",
      class: {
        item: "has-data-[state=checked]:border-error"
      }
    },
    {
      color: "neutral",
      variant: "card",
      class: {
        item: "has-data-[state=checked]:border-inverted"
      }
    },
    {
      color: "primary",
      variant: "table",
      class: {
        item: "has-data-[state=checked]:bg-primary/10 has-data-[state=checked]:border-primary/50 has-data-[state=checked]:z-[1]"
      }
    },
    {
      color: "secondary",
      variant: "table",
      class: {
        item: "has-data-[state=checked]:bg-secondary/10 has-data-[state=checked]:border-secondary/50 has-data-[state=checked]:z-[1]"
      }
    },
    {
      color: "success",
      variant: "table",
      class: {
        item: "has-data-[state=checked]:bg-success/10 has-data-[state=checked]:border-success/50 has-data-[state=checked]:z-[1]"
      }
    },
    {
      color: "info",
      variant: "table",
      class: {
        item: "has-data-[state=checked]:bg-info/10 has-data-[state=checked]:border-info/50 has-data-[state=checked]:z-[1]"
      }
    },
    {
      color: "warning",
      variant: "table",
      class: {
        item: "has-data-[state=checked]:bg-warning/10 has-data-[state=checked]:border-warning/50 has-data-[state=checked]:z-[1]"
      }
    },
    {
      color: "error",
      variant: "table",
      class: {
        item: "has-data-[state=checked]:bg-error/10 has-data-[state=checked]:border-error/50 has-data-[state=checked]:z-[1]"
      }
    },
    {
      color: "neutral",
      variant: "table",
      class: {
        item: "has-data-[state=checked]:bg-elevated has-data-[state=checked]:border-inverted/50 has-data-[state=checked]:z-[1]"
      }
    },
    {
      variant: [
        "card",
        "table"
      ],
      disabled: !0,
      class: {
        item: "cursor-not-allowed opacity-75"
      }
    }
  ],
  defaultVariants: {
    size: "md",
    color: "primary",
    variant: "list",
    orientation: "vertical",
    indicator: "start"
  }
}, mj = /* @__PURE__ */ L({
  __name: "RadioGroup",
  props: {
    as: {},
    legend: {},
    valueKey: { default: "value" },
    labelKey: { default: "label" },
    descriptionKey: { default: "description" },
    items: {},
    size: {},
    variant: {},
    color: {},
    orientation: { default: "vertical" },
    indicator: {},
    class: {},
    ui: {},
    defaultValue: {},
    disabled: { type: Boolean },
    loop: { type: Boolean },
    modelValue: {},
    name: {},
    required: { type: Boolean }
  },
  emits: ["update:modelValue", "change"],
  setup(e, { emit: t }) {
    const a = e, n = t, r = Se(), s = ue(), i = Xe(tt(a, "as", "modelValue", "defaultValue", "orientation", "loop", "required"), n), { emitFormChange: o, emitFormInput: l, color: d, name: c, size: f, id: p, disabled: g, ariaAttrs: v } = Ca(a, { bind: !1 }), m = p.value ?? Rn(), y = T(() => W({ extend: W(O6), ...s.ui?.radioGroup || {} })({
      size: f.value,
      color: d.value,
      disabled: g.value,
      required: a.required,
      orientation: a.orientation,
      variant: a.variant,
      indicator: a.indicator
    }));
    function x(w) {
      if (w === null)
        return {
          id: `${m}:null`,
          value: void 0,
          label: void 0
        };
      if (typeof w == "string" || typeof w == "number" || typeof w == "bigint")
        return {
          id: `${m}:${w}`,
          value: String(w),
          label: String(w)
        };
      const $ = qe(w, a.valueKey), B = qe(w, a.labelKey), I = qe(w, a.descriptionKey);
      return {
        ...w,
        value: $,
        label: B,
        description: I,
        id: `${m}:${$}`
      };
    }
    const b = T(() => a.items ? a.items.map(x) : []);
    function C(w) {
      const $ = new Event("change", { target: { value: w } });
      n("change", $), o(), l();
    }
    return (w, $) => (h(), k(u(DT), O({ id: u(m) }, u(i), {
      name: u(c),
      disabled: u(g),
      class: y.value.root({ class: [a.ui?.root, a.class] }),
      "onUpdate:modelValue": C
    }), {
      default: _(({ modelValue: B }) => [
        J("fieldset", O({
          class: y.value.fieldset({ class: a.ui?.fieldset })
        }, u(v)), [
          w.legend || r.legend ? (h(), M("legend", {
            key: 0,
            class: A(y.value.legend({ class: a.ui?.legend }))
          }, [
            S(w.$slots, "legend", {}, () => [
              ee(X(w.legend), 1)
            ])
          ], 2)) : D("", !0),
          (h(!0), M(te, null, le(b.value, (I) => (h(), k(ut(!w.variant || w.variant === "list" ? "div" : u(Cs)), {
            key: I.value,
            class: A(y.value.item({ class: [a.ui?.item, I.ui?.item, I.class] }))
          }, {
            default: _(() => [
              J("div", {
                class: A(y.value.container({ class: [a.ui?.container, I.ui?.container] }))
              }, [
                V(u(OT), {
                  id: I.id,
                  value: I.value,
                  disabled: I.disabled,
                  class: A(y.value.base({ class: [a.ui?.base, I.ui?.base], disabled: I.disabled }))
                }, {
                  default: _(() => [
                    V(u(zT), {
                      class: A(y.value.indicator({ class: [a.ui?.indicator, I.ui?.indicator] }))
                    }, null, 8, ["class"])
                  ]),
                  _: 2
                }, 1032, ["id", "value", "disabled", "class"])
              ], 2),
              I.label || r.label || I.description || r.description ? (h(), M("div", {
                key: 0,
                class: A(y.value.wrapper({ class: [a.ui?.wrapper, I.ui?.wrapper] }))
              }, [
                I.label || r.label ? (h(), k(ut(!w.variant || w.variant === "list" ? u(Cs) : "p"), {
                  key: 0,
                  for: I.id,
                  class: A(y.value.label({ class: [a.ui?.label, I.ui?.label] }))
                }, {
                  default: _(() => [
                    S(w.$slots, "label", {
                      item: I,
                      modelValue: B
                    }, () => [
                      ee(X(I.label), 1)
                    ])
                  ]),
                  _: 2
                }, 1032, ["for", "class"])) : D("", !0),
                I.description || r.description ? (h(), M("p", {
                  key: 1,
                  class: A(y.value.description({ class: [a.ui?.description, I.ui?.description] }))
                }, [
                  S(w.$slots, "description", {
                    item: I,
                    modelValue: B
                  }, () => [
                    ee(X(I.description), 1)
                  ])
                ], 2)) : D("", !0)
              ], 2)) : D("", !0)
            ]),
            _: 2
          }, 1032, ["class"]))), 128))
        ], 16)
      ]),
      _: 3
    }, 16, ["id", "name", "disabled", "class"]));
  }
}), F6 = {
  slots: {
    base: [
      "relative group rounded-md inline-flex items-center focus:outline-none disabled:cursor-not-allowed disabled:opacity-75",
      "transition-colors"
    ],
    leading: "absolute inset-y-0 start-0 flex items-center",
    leadingIcon: "shrink-0 text-dimmed",
    leadingAvatar: "shrink-0",
    leadingAvatarSize: "",
    trailing: "absolute inset-y-0 end-0 flex items-center",
    trailingIcon: "shrink-0 text-dimmed",
    value: "truncate pointer-events-none",
    placeholder: "truncate text-dimmed",
    arrow: "fill-default",
    content: "max-h-60 w-(--reka-select-trigger-width) bg-default shadow-lg rounded-md ring ring-default overflow-hidden data-[state=open]:animate-[scale-in_100ms_ease-out] data-[state=closed]:animate-[scale-out_100ms_ease-in] origin-(--reka-select-content-transform-origin) pointer-events-auto flex flex-col",
    viewport: "relative divide-y divide-default scroll-py-1 overflow-y-auto flex-1",
    group: "p-1 isolate",
    empty: "text-center text-muted",
    label: "font-semibold text-highlighted",
    separator: "-mx-1 my-1 h-px bg-border",
    item: [
      "group relative w-full flex items-center select-none outline-none before:absolute before:z-[-1] before:inset-px before:rounded-md data-disabled:cursor-not-allowed data-disabled:opacity-75 text-default data-highlighted:not-data-disabled:text-highlighted data-highlighted:not-data-disabled:before:bg-elevated/50",
      "transition-colors before:transition-colors"
    ],
    itemLeadingIcon: [
      "shrink-0 text-dimmed group-data-highlighted:not-group-data-disabled:text-default",
      "transition-colors"
    ],
    itemLeadingAvatar: "shrink-0",
    itemLeadingAvatarSize: "",
    itemLeadingChip: "shrink-0",
    itemLeadingChipSize: "",
    itemTrailing: "ms-auto inline-flex gap-1.5 items-center",
    itemTrailingIcon: "shrink-0",
    itemLabel: "truncate"
  },
  variants: {
    fieldGroup: {
      horizontal: "not-only:first:rounded-e-none not-only:last:rounded-s-none not-last:not-first:rounded-none focus-visible:z-[1]",
      vertical: "not-only:first:rounded-b-none not-only:last:rounded-t-none not-last:not-first:rounded-none focus-visible:z-[1]"
    },
    size: {
      xs: {
        base: "px-2 py-1 text-xs gap-1",
        leading: "ps-2",
        trailing: "pe-2",
        leadingIcon: "size-4",
        leadingAvatarSize: "3xs",
        trailingIcon: "size-4",
        label: "p-1 text-[10px]/3 gap-1",
        item: "p-1 text-xs gap-1",
        itemLeadingIcon: "size-4",
        itemLeadingAvatarSize: "3xs",
        itemLeadingChip: "size-4",
        itemLeadingChipSize: "sm",
        itemTrailingIcon: "size-4",
        empty: "p-1 text-xs"
      },
      sm: {
        base: "px-2.5 py-1.5 text-xs gap-1.5",
        leading: "ps-2.5",
        trailing: "pe-2.5",
        leadingIcon: "size-4",
        leadingAvatarSize: "3xs",
        trailingIcon: "size-4",
        label: "p-1.5 text-[10px]/3 gap-1.5",
        item: "p-1.5 text-xs gap-1.5",
        itemLeadingIcon: "size-4",
        itemLeadingAvatarSize: "3xs",
        itemLeadingChip: "size-4",
        itemLeadingChipSize: "sm",
        itemTrailingIcon: "size-4",
        empty: "p-1.5 text-xs"
      },
      md: {
        base: "px-2.5 py-1.5 text-sm gap-1.5",
        leading: "ps-2.5",
        trailing: "pe-2.5",
        leadingIcon: "size-5",
        leadingAvatarSize: "2xs",
        trailingIcon: "size-5",
        label: "p-1.5 text-xs gap-1.5",
        item: "p-1.5 text-sm gap-1.5",
        itemLeadingIcon: "size-5",
        itemLeadingAvatarSize: "2xs",
        itemLeadingChip: "size-5",
        itemLeadingChipSize: "md",
        itemTrailingIcon: "size-5",
        empty: "p-1.5 text-sm"
      },
      lg: {
        base: "px-3 py-2 text-sm gap-2",
        leading: "ps-3",
        trailing: "pe-3",
        leadingIcon: "size-5",
        leadingAvatarSize: "2xs",
        trailingIcon: "size-5",
        label: "p-2 text-xs gap-2",
        item: "p-2 text-sm gap-2",
        itemLeadingIcon: "size-5",
        itemLeadingAvatarSize: "2xs",
        itemLeadingChip: "size-5",
        itemLeadingChipSize: "md",
        itemTrailingIcon: "size-5",
        empty: "p-2 text-sm"
      },
      xl: {
        base: "px-3 py-2 text-base gap-2",
        leading: "ps-3",
        trailing: "pe-3",
        leadingIcon: "size-6",
        leadingAvatarSize: "xs",
        trailingIcon: "size-6",
        label: "p-2 text-sm gap-2",
        item: "p-2 text-base gap-2",
        itemLeadingIcon: "size-6",
        itemLeadingAvatarSize: "xs",
        itemLeadingChip: "size-6",
        itemLeadingChipSize: "lg",
        itemTrailingIcon: "size-6",
        empty: "p-2 text-base"
      }
    },
    variant: {
      outline: "text-highlighted bg-default ring ring-inset ring-accented",
      soft: "text-highlighted bg-elevated/50 hover:bg-elevated focus:bg-elevated disabled:bg-elevated/50",
      subtle: "text-highlighted bg-elevated ring ring-inset ring-accented",
      ghost: "text-highlighted bg-transparent hover:bg-elevated focus:bg-elevated disabled:bg-transparent dark:disabled:bg-transparent",
      none: "text-highlighted bg-transparent"
    },
    color: {
      primary: "",
      secondary: "",
      success: "",
      info: "",
      warning: "",
      error: "",
      neutral: ""
    },
    leading: {
      true: ""
    },
    trailing: {
      true: ""
    },
    loading: {
      true: ""
    },
    highlight: {
      true: ""
    },
    type: {
      file: "file:me-1.5 file:font-medium file:text-muted file:outline-none"
    }
  },
  compoundVariants: [
    {
      color: "primary",
      variant: [
        "outline",
        "subtle"
      ],
      class: "focus:ring-2 focus:ring-inset focus:ring-primary"
    },
    {
      color: "secondary",
      variant: [
        "outline",
        "subtle"
      ],
      class: "focus:ring-2 focus:ring-inset focus:ring-secondary"
    },
    {
      color: "success",
      variant: [
        "outline",
        "subtle"
      ],
      class: "focus:ring-2 focus:ring-inset focus:ring-success"
    },
    {
      color: "info",
      variant: [
        "outline",
        "subtle"
      ],
      class: "focus:ring-2 focus:ring-inset focus:ring-info"
    },
    {
      color: "warning",
      variant: [
        "outline",
        "subtle"
      ],
      class: "focus:ring-2 focus:ring-inset focus:ring-warning"
    },
    {
      color: "error",
      variant: [
        "outline",
        "subtle"
      ],
      class: "focus:ring-2 focus:ring-inset focus:ring-error"
    },
    {
      color: "primary",
      highlight: !0,
      class: "ring ring-inset ring-primary"
    },
    {
      color: "secondary",
      highlight: !0,
      class: "ring ring-inset ring-secondary"
    },
    {
      color: "success",
      highlight: !0,
      class: "ring ring-inset ring-success"
    },
    {
      color: "info",
      highlight: !0,
      class: "ring ring-inset ring-info"
    },
    {
      color: "warning",
      highlight: !0,
      class: "ring ring-inset ring-warning"
    },
    {
      color: "error",
      highlight: !0,
      class: "ring ring-inset ring-error"
    },
    {
      color: "neutral",
      variant: [
        "outline",
        "subtle"
      ],
      class: "focus:ring-2 focus:ring-inset focus:ring-inverted"
    },
    {
      color: "neutral",
      highlight: !0,
      class: "ring ring-inset ring-inverted"
    },
    {
      leading: !0,
      size: "xs",
      class: "ps-7"
    },
    {
      leading: !0,
      size: "sm",
      class: "ps-8"
    },
    {
      leading: !0,
      size: "md",
      class: "ps-9"
    },
    {
      leading: !0,
      size: "lg",
      class: "ps-10"
    },
    {
      leading: !0,
      size: "xl",
      class: "ps-11"
    },
    {
      trailing: !0,
      size: "xs",
      class: "pe-7"
    },
    {
      trailing: !0,
      size: "sm",
      class: "pe-8"
    },
    {
      trailing: !0,
      size: "md",
      class: "pe-9"
    },
    {
      trailing: !0,
      size: "lg",
      class: "pe-10"
    },
    {
      trailing: !0,
      size: "xl",
      class: "pe-11"
    },
    {
      loading: !0,
      leading: !0,
      class: {
        leadingIcon: "animate-spin"
      }
    },
    {
      loading: !0,
      leading: !1,
      trailing: !0,
      class: {
        trailingIcon: "animate-spin"
      }
    }
  ],
  defaultVariants: {
    size: "md",
    color: "primary",
    variant: "outline"
  }
}, yj = /* @__PURE__ */ L({
  inheritAttrs: !1,
  __name: "Select",
  props: {
    id: {},
    placeholder: {},
    color: {},
    variant: {},
    size: {},
    trailingIcon: {},
    selectedIcon: {},
    content: {},
    arrow: { type: [Boolean, Object] },
    portal: { type: [Boolean, String], default: !0 },
    valueKey: { default: "value" },
    labelKey: { default: "label" },
    items: {},
    defaultValue: {},
    modelValue: {},
    multiple: { type: Boolean },
    highlight: { type: Boolean },
    autofocus: { type: Boolean },
    autofocusDelay: { default: 0 },
    class: {},
    ui: {},
    open: { type: Boolean },
    defaultOpen: { type: Boolean },
    autocomplete: {},
    disabled: { type: Boolean },
    name: {},
    required: { type: Boolean },
    icon: {},
    avatar: {},
    leading: { type: Boolean },
    leadingIcon: {},
    trailing: { type: Boolean },
    loading: { type: Boolean },
    loadingIcon: {}
  },
  emits: ["update:open", "change", "blur", "focus", "update:modelValue"],
  setup(e, { expose: t, emit: a }) {
    const n = e, r = a, s = Se(), i = ue(), o = Xe(tt(n, "open", "defaultOpen", "disabled", "autocomplete", "required", "multiple"), r), l = tn(Ge(() => n.portal)), d = Ge(() => Ct(n.content, { side: "bottom", sideOffset: 8, collisionPadding: 8, position: "popper" })), c = Ge(() => n.arrow), { emitFormChange: f, emitFormInput: p, emitFormBlur: g, emitFormFocus: v, size: m, color: y, id: x, name: b, highlight: C, disabled: w, ariaAttrs: $ } = Ca(n), { orientation: B, size: I } = ur(n), { isLeading: E, isTrailing: P, leadingIconName: R, trailingIconName: F } = lr(Ge(() => Ct(n, { trailingIcon: i.ui.icons.chevronDown }))), H = T(() => I.value || m.value), j = T(() => W({ extend: W(F6), ...i.ui?.select || {} })({
      color: y.value,
      variant: n.variant,
      size: H?.value,
      loading: n.loading,
      highlight: C.value,
      leading: E.value || !!n.avatar || !!s.leading,
      trailing: P.value || !!s.trailing,
      fieldGroup: B.value
    })), K = T(
      () => n.items?.length ? Ps(n.items) ? n.items : [n.items] : []
    ), z = T(() => K.value.flatMap((oe) => oe));
    function G(oe) {
      if (n.multiple && Array.isArray(oe)) {
        const xe = oe.map(($e) => xi(z.value, $e, {
          labelKey: n.labelKey,
          valueKey: n.valueKey
        })).filter(($e) => $e != null && $e !== "");
        return xe.length > 0 ? xe.join(", ") : void 0;
      }
      return xi(z.value, oe, {
        labelKey: n.labelKey,
        valueKey: n.valueKey
      });
    }
    const Y = N(null);
    function q() {
      n.autofocus && Y.value?.$el?.focus({
        focusVisible: !0
      });
    }
    Pe(() => {
      setTimeout(() => {
        q();
      }, n.autofocusDelay);
    });
    function Q(oe) {
      const xe = new Event("change", { target: { value: oe } });
      r("change", xe), f(), p();
    }
    function se(oe) {
      if (oe) {
        const xe = new FocusEvent("focus");
        r("focus", xe), v();
      } else {
        const xe = new FocusEvent("blur");
        r("blur", xe), g();
      }
    }
    function ce(oe) {
      return typeof oe == "object" && oe !== null;
    }
    return t({
      triggerRef: Y
    }), (oe, xe) => (h(), k(u(UT), O({ name: u(b) }, u(o), {
      autocomplete: oe.autocomplete,
      disabled: u(w),
      "default-value": oe.defaultValue,
      "model-value": oe.modelValue,
      "onUpdate:modelValue": Q,
      "onUpdate:open": se
    }), {
      default: _(({ modelValue: $e, open: Le }) => [
        V(u(AB), O({
          id: u(x),
          ref_key: "triggerRef",
          ref: Y,
          class: j.value.base({ class: [n.ui?.base, n.class] })
        }, { ...oe.$attrs, ...u($) }), {
          default: _(() => [
            u(E) || oe.avatar || s.leading ? (h(), M("span", {
              key: 0,
              class: A(j.value.leading({ class: n.ui?.leading }))
            }, [
              S(oe.$slots, "leading", {
                modelValue: $e,
                open: Le,
                ui: j.value
              }, () => [
                u(E) && u(R) ? (h(), k(he, {
                  key: 0,
                  name: u(R),
                  class: A(j.value.leadingIcon({ class: n.ui?.leadingIcon }))
                }, null, 8, ["name", "class"])) : oe.avatar ? (h(), k(ft, O({
                  key: 1,
                  size: n.ui?.itemLeadingAvatarSize || j.value.itemLeadingAvatarSize()
                }, oe.avatar, {
                  class: j.value.itemLeadingAvatar({ class: n.ui?.itemLeadingAvatar })
                }), null, 16, ["size", "class"])) : D("", !0)
              ])
            ], 2)) : D("", !0),
            S(oe.$slots, "default", {
              modelValue: $e,
              open: Le
            }, () => [
              (h(!0), M(te, null, le([G($e)], (Ye) => (h(), M(te, { key: Ye }, [
                Ye != null ? (h(), M("span", {
                  key: 0,
                  class: A(j.value.value({ class: n.ui?.value }))
                }, X(Ye), 3)) : (h(), M("span", {
                  key: 1,
                  class: A(j.value.placeholder({ class: n.ui?.placeholder }))
                }, X(oe.placeholder ?? " "), 3))
              ], 64))), 128))
            ]),
            u(P) || s.trailing ? (h(), M("span", {
              key: 1,
              class: A(j.value.trailing({ class: n.ui?.trailing }))
            }, [
              S(oe.$slots, "trailing", {
                modelValue: $e,
                open: Le,
                ui: j.value
              }, () => [
                u(F) ? (h(), k(he, {
                  key: 0,
                  name: u(F),
                  class: A(j.value.trailingIcon({ class: n.ui?.trailingIcon }))
                }, null, 8, ["name", "class"])) : D("", !0)
              ])
            ], 2)) : D("", !0)
          ]),
          _: 2
        }, 1040, ["id", "class"]),
        V(u(xB), pe(me(u(l))), {
          default: _(() => [
            V(u(oB), O({
              class: j.value.content({ class: n.ui?.content })
            }, d.value), {
              default: _(() => [
                S(oe.$slots, "content-top"),
                J("div", {
                  role: "presentation",
                  class: A(j.value.viewport({ class: n.ui?.viewport }))
                }, [
                  (h(!0), M(te, null, le(K.value, (Ye, ne) => (h(), k(u(cB), {
                    key: `group-${ne}`,
                    class: A(j.value.group({ class: n.ui?.group }))
                  }, {
                    default: _(() => [
                      (h(!0), M(te, null, le(Ye, (ae, be) => (h(), M(te, {
                        key: `group-${ne}-${be}`
                      }, [
                        ce(ae) && ae.type === "label" ? (h(), k(u(wB), {
                          key: 0,
                          class: A(j.value.label({ class: [n.ui?.label, ae.ui?.label, ae.class] }))
                        }, {
                          default: _(() => [
                            ee(X(u(qe)(ae, n.labelKey)), 1)
                          ]),
                          _: 2
                        }, 1032, ["class"])) : ce(ae) && ae.type === "separator" ? (h(), k(u(_B), {
                          key: 1,
                          class: A(j.value.separator({ class: [n.ui?.separator, ae.ui?.separator, ae.class] }))
                        }, null, 8, ["class"])) : (h(), k(u(gB), {
                          key: 2,
                          class: A(j.value.item({ class: [n.ui?.item, ce(ae) && ae.ui?.item, ce(ae) && ae.class] })),
                          disabled: ce(ae) && ae.disabled,
                          value: ce(ae) ? u(qe)(ae, n.valueKey) : ae,
                          onSelect: (De) => ce(ae) && ae.onSelect?.(De)
                        }, {
                          default: _(() => [
                            S(oe.$slots, "item", {
                              item: ae,
                              index: be
                            }, () => [
                              S(oe.$slots, "item-leading", {
                                item: ae,
                                index: be
                              }, () => [
                                ce(ae) && ae.icon ? (h(), k(he, {
                                  key: 0,
                                  name: ae.icon,
                                  class: A(j.value.itemLeadingIcon({ class: [n.ui?.itemLeadingIcon, ae.ui?.itemLeadingIcon] }))
                                }, null, 8, ["name", "class"])) : ce(ae) && ae.avatar ? (h(), k(ft, O({
                                  key: 1,
                                  size: ae.ui?.itemLeadingAvatarSize || n.ui?.itemLeadingAvatarSize || j.value.itemLeadingAvatarSize()
                                }, { ref_for: !0 }, ae.avatar, {
                                  class: j.value.itemLeadingAvatar({ class: [n.ui?.itemLeadingAvatar, ae.ui?.itemLeadingAvatar] })
                                }), null, 16, ["size", "class"])) : ce(ae) && ae.chip ? (h(), k(Rs, O({
                                  key: 2,
                                  size: ae.ui?.itemLeadingChipSize || n.ui?.itemLeadingChipSize || j.value.itemLeadingChipSize(),
                                  inset: "",
                                  standalone: ""
                                }, { ref_for: !0 }, ae.chip, {
                                  class: j.value.itemLeadingChip({ class: [n.ui?.itemLeadingChip, ae.ui?.itemLeadingChip] })
                                }), null, 16, ["size", "class"])) : D("", !0)
                              ]),
                              V(u(yB), {
                                class: A(j.value.itemLabel({ class: [n.ui?.itemLabel, ce(ae) && ae.ui?.itemLabel] }))
                              }, {
                                default: _(() => [
                                  S(oe.$slots, "item-label", {
                                    item: ae,
                                    index: be
                                  }, () => [
                                    ee(X(ce(ae) ? u(qe)(ae, n.labelKey) : ae), 1)
                                  ])
                                ]),
                                _: 2
                              }, 1032, ["class"]),
                              J("span", {
                                class: A(j.value.itemTrailing({ class: [n.ui?.itemTrailing, ce(ae) && ae.ui?.itemTrailing] }))
                              }, [
                                S(oe.$slots, "item-trailing", {
                                  item: ae,
                                  index: be
                                }),
                                V(u(hB), { "as-child": "" }, {
                                  default: _(() => [
                                    V(he, {
                                      name: oe.selectedIcon || u(i).ui.icons.check,
                                      class: A(j.value.itemTrailingIcon({ class: [n.ui?.itemTrailingIcon, ce(ae) && ae.ui?.itemTrailingIcon] }))
                                    }, null, 8, ["name", "class"])
                                  ]),
                                  _: 2
                                }, 1024)
                              ], 2)
                            ])
                          ]),
                          _: 2
                        }, 1032, ["class", "disabled", "value", "onSelect"]))
                      ], 64))), 128))
                    ]),
                    _: 2
                  }, 1032, ["class"]))), 128))
                ], 2),
                S(oe.$slots, "content-bottom"),
                oe.arrow ? (h(), k(u(aB), O({ key: 0 }, c.value, {
                  class: j.value.arrow({ class: n.ui?.arrow })
                }), null, 16, ["class"])) : D("", !0)
              ]),
              _: 3
            }, 16, ["class"])
          ]),
          _: 3
        }, 16)
      ]),
      _: 3
    }, 16, ["name", "autocomplete", "disabled", "default-value", "model-value"]));
  }
}), z6 = {
  base: "animate-pulse rounded-md bg-elevated"
}, bj = /* @__PURE__ */ L({
  __name: "Skeleton",
  props: {
    as: {},
    class: {}
  },
  setup(e) {
    const t = e, a = ue(), n = T(() => W({ extend: W(z6), ...a.ui?.skeleton || {} }));
    return (r, s) => (h(), k(u(U), {
      as: r.as,
      "aria-busy": "true",
      "aria-label": "loading",
      "aria-live": "polite",
      role: "alert",
      class: A(n.value({ class: t.class }))
    }, {
      default: _(() => [
        S(r.$slots, "default")
      ]),
      _: 3
    }, 8, ["as", "class"]));
  }
}), q6 = {
  slots: {
    root: "relative flex items-center select-none touch-none",
    track: "relative bg-accented overflow-hidden rounded-full grow",
    range: "absolute rounded-full",
    thumb: "rounded-full bg-default ring-2 focus-visible:outline-2 focus-visible:outline-offset-2"
  },
  variants: {
    color: {
      primary: {
        range: "bg-primary",
        thumb: "ring-primary focus-visible:outline-primary/50"
      },
      secondary: {
        range: "bg-secondary",
        thumb: "ring-secondary focus-visible:outline-secondary/50"
      },
      success: {
        range: "bg-success",
        thumb: "ring-success focus-visible:outline-success/50"
      },
      info: {
        range: "bg-info",
        thumb: "ring-info focus-visible:outline-info/50"
      },
      warning: {
        range: "bg-warning",
        thumb: "ring-warning focus-visible:outline-warning/50"
      },
      error: {
        range: "bg-error",
        thumb: "ring-error focus-visible:outline-error/50"
      },
      neutral: {
        range: "bg-inverted",
        thumb: "ring-inverted focus-visible:outline-inverted/50"
      }
    },
    size: {
      xs: {
        thumb: "size-3"
      },
      sm: {
        thumb: "size-3.5"
      },
      md: {
        thumb: "size-4"
      },
      lg: {
        thumb: "size-4.5"
      },
      xl: {
        thumb: "size-5"
      }
    },
    orientation: {
      horizontal: {
        root: "w-full",
        range: "h-full"
      },
      vertical: {
        root: "flex-col h-full",
        range: "w-full"
      }
    },
    disabled: {
      true: {
        root: "opacity-75 cursor-not-allowed"
      }
    }
  },
  compoundVariants: [
    {
      orientation: "horizontal",
      size: "xs",
      class: {
        track: "h-[6px]"
      }
    },
    {
      orientation: "horizontal",
      size: "sm",
      class: {
        track: "h-[7px]"
      }
    },
    {
      orientation: "horizontal",
      size: "md",
      class: {
        track: "h-[8px]"
      }
    },
    {
      orientation: "horizontal",
      size: "lg",
      class: {
        track: "h-[9px]"
      }
    },
    {
      orientation: "horizontal",
      size: "xl",
      class: {
        track: "h-[10px]"
      }
    },
    {
      orientation: "vertical",
      size: "xs",
      class: {
        track: "w-[6px]"
      }
    },
    {
      orientation: "vertical",
      size: "sm",
      class: {
        track: "w-[7px]"
      }
    },
    {
      orientation: "vertical",
      size: "md",
      class: {
        track: "w-[8px]"
      }
    },
    {
      orientation: "vertical",
      size: "lg",
      class: {
        track: "w-[9px]"
      }
    },
    {
      orientation: "vertical",
      size: "xl",
      class: {
        track: "w-[10px]"
      }
    }
  ],
  defaultVariants: {
    size: "md",
    color: "primary"
  }
}, wj = /* @__PURE__ */ L({
  __name: "Slider",
  props: /* @__PURE__ */ mt({
    as: {},
    size: {},
    color: {},
    orientation: { default: "horizontal" },
    tooltip: { type: [Boolean, Object] },
    defaultValue: {},
    class: {},
    ui: {},
    name: {},
    disabled: { type: Boolean },
    inverted: { type: Boolean },
    min: { default: 0 },
    max: { default: 100 },
    step: { default: 1 },
    minStepsBetweenThumbs: {}
  }, {
    modelValue: {},
    modelModifiers: {}
  }),
  emits: /* @__PURE__ */ mt(["change"], ["update:modelValue"]),
  setup(e, { emit: t }) {
    const a = e, n = t, r = lt(e, "modelValue"), s = ue(), i = Xe(tt(a, "as", "orientation", "min", "max", "step", "minStepsBetweenThumbs", "inverted"), n), { id: o, emitFormChange: l, emitFormInput: d, size: c, color: f, name: p, disabled: g, ariaAttrs: v } = Ca(a), m = T(() => typeof a.defaultValue == "number" ? [a.defaultValue] : a.defaultValue), y = T({
      get() {
        return typeof r.value == "number" ? [r.value] : r.value ?? m.value;
      },
      set(w) {
        r.value = w?.length !== 1 ? w : w[0];
      }
    }), x = T(() => y.value?.length ?? 1), b = T(() => W({ extend: W(q6), ...s.ui?.slider || {} })({
      disabled: g.value,
      size: c.value,
      color: f.value,
      orientation: a.orientation
    }));
    function C(w) {
      const $ = new Event("change", { target: { value: w } });
      n("change", $), l();
    }
    return (w, $) => (h(), k(u(jB), O({ ...u(i), ...u(v) }, {
      id: u(o),
      modelValue: y.value,
      "onUpdate:modelValue": [
        $[0] || ($[0] = (B) => y.value = B),
        $[1] || ($[1] = (B) => u(d)())
      ],
      name: u(p),
      disabled: u(g),
      class: b.value.root({ class: [a.ui?.root, a.class] }),
      "default-value": m.value,
      onValueCommit: C
    }), {
      default: _(() => [
        V(u(QB), {
          class: A(b.value.track({ class: a.ui?.track }))
        }, {
          default: _(() => [
            V(u(UB), {
              class: A(b.value.range({ class: a.ui?.range }))
            }, null, 8, ["class"])
          ]),
          _: 1
        }, 8, ["class"]),
        (h(!0), M(te, null, le(x.value, (B) => (h(), M(te, { key: B }, [
          w.tooltip ? (h(), k(au, O({
            key: 0,
            text: x.value > 1 ? String(y.value?.[B - 1]) : String(y.value),
            "disable-closing-trigger": ""
          }, { ref_for: !0 }, typeof w.tooltip == "object" ? w.tooltip : {}), {
            default: _(() => [
              V(u(Bg), {
                class: A(b.value.thumb({ class: a.ui?.thumb }))
              }, null, 8, ["class"])
            ]),
            _: 2
          }, 1040, ["text"])) : (h(), k(u(Bg), {
            key: 1,
            class: A(b.value.thumb({ class: a.ui?.thumb }))
          }, null, 8, ["class"]))
        ], 64))), 128))
      ]),
      _: 1
    }, 16, ["id", "modelValue", "name", "disabled", "class", "default-value"]));
  }
}), V6 = {
  slots: {
    root: "flex gap-4",
    header: "flex",
    item: "group text-center relative w-full",
    container: "relative",
    trigger: "rounded-full font-medium text-center align-middle flex items-center justify-center font-semibold group-data-[state=completed]:text-inverted group-data-[state=active]:text-inverted text-muted bg-elevated focus-visible:outline-2 focus-visible:outline-offset-2",
    indicator: "flex items-center justify-center size-full",
    icon: "shrink-0",
    separator: "absolute rounded-full group-data-[disabled]:opacity-75 bg-accented",
    wrapper: "",
    title: "font-medium text-default",
    description: "text-muted text-wrap",
    content: "size-full"
  },
  variants: {
    orientation: {
      horizontal: {
        root: "flex-col",
        container: "flex justify-center",
        separator: "top-[calc(50%-2px)] h-0.5",
        wrapper: "mt-1"
      },
      vertical: {
        header: "flex-col gap-4",
        item: "flex text-start",
        separator: "start-[calc(50%-1px)] -bottom-[10px] w-0.5"
      }
    },
    size: {
      xs: {
        trigger: "size-6 text-xs",
        icon: "size-3",
        title: "text-xs",
        description: "text-xs",
        wrapper: "mt-1.5"
      },
      sm: {
        trigger: "size-8 text-sm",
        icon: "size-4",
        title: "text-xs",
        description: "text-xs",
        wrapper: "mt-2"
      },
      md: {
        trigger: "size-10 text-base",
        icon: "size-5",
        title: "text-sm",
        description: "text-sm",
        wrapper: "mt-2.5"
      },
      lg: {
        trigger: "size-12 text-lg",
        icon: "size-6",
        title: "text-base",
        description: "text-base",
        wrapper: "mt-3"
      },
      xl: {
        trigger: "size-14 text-xl",
        icon: "size-7",
        title: "text-lg",
        description: "text-lg",
        wrapper: "mt-3.5"
      }
    },
    color: {
      primary: {
        trigger: "group-data-[state=completed]:bg-primary group-data-[state=active]:bg-primary focus-visible:outline-primary",
        separator: "group-data-[state=completed]:bg-primary"
      },
      secondary: {
        trigger: "group-data-[state=completed]:bg-secondary group-data-[state=active]:bg-secondary focus-visible:outline-secondary",
        separator: "group-data-[state=completed]:bg-secondary"
      },
      success: {
        trigger: "group-data-[state=completed]:bg-success group-data-[state=active]:bg-success focus-visible:outline-success",
        separator: "group-data-[state=completed]:bg-success"
      },
      info: {
        trigger: "group-data-[state=completed]:bg-info group-data-[state=active]:bg-info focus-visible:outline-info",
        separator: "group-data-[state=completed]:bg-info"
      },
      warning: {
        trigger: "group-data-[state=completed]:bg-warning group-data-[state=active]:bg-warning focus-visible:outline-warning",
        separator: "group-data-[state=completed]:bg-warning"
      },
      error: {
        trigger: "group-data-[state=completed]:bg-error group-data-[state=active]:bg-error focus-visible:outline-error",
        separator: "group-data-[state=completed]:bg-error"
      },
      neutral: {
        trigger: "group-data-[state=completed]:bg-inverted group-data-[state=active]:bg-inverted focus-visible:outline-inverted",
        separator: "group-data-[state=completed]:bg-inverted"
      }
    }
  },
  compoundVariants: [
    {
      orientation: "horizontal",
      size: "xs",
      class: {
        separator: "start-[calc(50%+16px)] end-[calc(-50%+16px)]"
      }
    },
    {
      orientation: "horizontal",
      size: "sm",
      class: {
        separator: "start-[calc(50%+20px)] end-[calc(-50%+20px)]"
      }
    },
    {
      orientation: "horizontal",
      size: "md",
      class: {
        separator: "start-[calc(50%+28px)] end-[calc(-50%+28px)]"
      }
    },
    {
      orientation: "horizontal",
      size: "lg",
      class: {
        separator: "start-[calc(50%+32px)] end-[calc(-50%+32px)]"
      }
    },
    {
      orientation: "horizontal",
      size: "xl",
      class: {
        separator: "start-[calc(50%+36px)] end-[calc(-50%+36px)]"
      }
    },
    {
      orientation: "vertical",
      size: "xs",
      class: {
        separator: "top-[30px]",
        item: "gap-1.5"
      }
    },
    {
      orientation: "vertical",
      size: "sm",
      class: {
        separator: "top-[38px]",
        item: "gap-2"
      }
    },
    {
      orientation: "vertical",
      size: "md",
      class: {
        separator: "top-[46px]",
        item: "gap-2.5"
      }
    },
    {
      orientation: "vertical",
      size: "lg",
      class: {
        separator: "top-[54px]",
        item: "gap-3"
      }
    },
    {
      orientation: "vertical",
      size: "xl",
      class: {
        separator: "top-[62px]",
        item: "gap-3.5"
      }
    }
  ],
  defaultVariants: {
    size: "md",
    color: "primary"
  }
}, Cj = /* @__PURE__ */ L({
  __name: "Stepper",
  props: /* @__PURE__ */ mt({
    as: {},
    items: {},
    size: {},
    color: {},
    orientation: { default: "horizontal" },
    defaultValue: {},
    disabled: { type: Boolean },
    class: {},
    ui: {},
    linear: { type: Boolean, default: !0 }
  }, {
    modelValue: {},
    modelModifiers: {}
  }),
  emits: /* @__PURE__ */ mt(["next", "prev"], ["update:modelValue"]),
  setup(e, { expose: t, emit: a }) {
    const n = e, r = a, s = Se(), i = lt(e, "modelValue"), o = ue(), l = xt(tt(n, "as", "orientation", "linear")), d = T(() => W({ extend: W(V6), ...o.ui?.stepper || {} })({
      orientation: n.orientation,
      size: n.size,
      color: n.color
    })), c = T({
      get() {
        const v = i.value ?? n.defaultValue;
        return (typeof v == "string" ? n.items.findIndex((m) => m.value === v) : v) ?? 0;
      },
      set(v) {
        i.value = n.items?.[v]?.value ?? v;
      }
    }), f = T(() => n.items?.[c.value]), p = T(() => c.value < n.items?.length - 1), g = T(() => c.value > 0);
    return t({
      next() {
        p.value && (c.value += 1, r("next", f.value));
      },
      prev() {
        g.value && (c.value -= 1, r("prev", f.value));
      },
      hasNext: p,
      hasPrev: g
    }), (v, m) => (h(), k(u(aP), O(u(l), {
      modelValue: c.value,
      "onUpdate:modelValue": m[0] || (m[0] = (y) => c.value = y),
      class: d.value.root({ class: [n.ui?.root, n.class] })
    }), {
      default: _(() => [
        J("div", {
          class: A(d.value.header({ class: n.ui?.header }))
        }, [
          (h(!0), M(te, null, le(v.items, (y, x) => (h(), k(u(sP), {
            key: y.value ?? x,
            step: x,
            disabled: y.disabled || n.disabled,
            class: A(d.value.item({ class: [n.ui?.item, y.ui?.item, y.class] }))
          }, {
            default: _(() => [
              J("div", {
                class: A(d.value.container({ class: [n.ui?.container, y.ui?.container] }))
              }, [
                V(u(vP), {
                  class: A(d.value.trigger({ class: [n.ui?.trigger, y.ui?.trigger] }))
                }, {
                  default: _(() => [
                    V(u(uP), {
                      class: A(d.value.indicator({ class: [n.ui?.indicator, y.ui?.indicator] }))
                    }, {
                      default: _(() => [
                        S(v.$slots, "indicator", { item: y }, () => [
                          y.icon ? (h(), k(he, {
                            key: 0,
                            name: y.icon,
                            class: A(d.value.icon({ class: [n.ui?.icon, y.ui?.icon] }))
                          }, null, 8, ["name", "class"])) : (h(), M(te, { key: 1 }, [
                            ee(X(x + 1), 1)
                          ], 64))
                        ])
                      ]),
                      _: 2
                    }, 1032, ["class"])
                  ]),
                  _: 2
                }, 1032, ["class"]),
                x < v.items.length - 1 ? (h(), k(u(cP), {
                  key: 0,
                  class: A(d.value.separator({ class: [n.ui?.separator, y.ui?.separator] }))
                }, null, 8, ["class"])) : D("", !0)
              ], 2),
              J("div", {
                class: A(d.value.wrapper({ class: [n.ui?.wrapper, y.ui?.wrapper] }))
              }, [
                V(u(pP), {
                  as: "div",
                  class: A(d.value.title({ class: [n.ui?.title, y.ui?.title] }))
                }, {
                  default: _(() => [
                    S(v.$slots, "title", { item: y }, () => [
                      ee(X(y.title), 1)
                    ])
                  ]),
                  _: 2
                }, 1032, ["class"]),
                V(u(oP), {
                  as: "div",
                  class: A(d.value.description({ class: [n.ui?.description, y.ui?.description] }))
                }, {
                  default: _(() => [
                    S(v.$slots, "description", { item: y }, () => [
                      ee(X(y.description), 1)
                    ])
                  ]),
                  _: 2
                }, 1032, ["class"])
              ], 2)
            ]),
            _: 2
          }, 1032, ["step", "disabled", "class"]))), 128))
        ], 2),
        f.value?.content || s.content || f.value?.slot ? (h(), M("div", {
          key: 0,
          class: A(d.value.content({ class: n.ui?.content }))
        }, [
          S(v.$slots, f.value?.slot || "content", {
            item: f.value
          }, () => [
            ee(X(f.value?.content), 1)
          ])
        ], 2)) : D("", !0)
      ]),
      _: 3
    }, 16, ["modelValue", "class"]));
  }
}), N6 = {
  slots: {
    root: "relative flex items-start",
    base: [
      "inline-flex items-center shrink-0 rounded-full border-2 border-transparent focus-visible:outline-2 focus-visible:outline-offset-2 data-[state=unchecked]:bg-accented",
      "transition-[background] duration-200"
    ],
    container: "flex items-center",
    thumb: "group pointer-events-none rounded-full bg-default shadow-lg ring-0 transition-transform duration-200 data-[state=unchecked]:translate-x-0 data-[state=unchecked]:rtl:-translate-x-0 flex items-center justify-center",
    icon: [
      "absolute shrink-0 group-data-[state=unchecked]:text-dimmed opacity-0 size-10/12",
      "transition-[color,opacity] duration-200"
    ],
    wrapper: "ms-2",
    label: "block font-medium text-default",
    description: "text-muted"
  },
  variants: {
    color: {
      primary: {
        base: "data-[state=checked]:bg-primary focus-visible:outline-primary",
        icon: "group-data-[state=checked]:text-primary"
      },
      secondary: {
        base: "data-[state=checked]:bg-secondary focus-visible:outline-secondary",
        icon: "group-data-[state=checked]:text-secondary"
      },
      success: {
        base: "data-[state=checked]:bg-success focus-visible:outline-success",
        icon: "group-data-[state=checked]:text-success"
      },
      info: {
        base: "data-[state=checked]:bg-info focus-visible:outline-info",
        icon: "group-data-[state=checked]:text-info"
      },
      warning: {
        base: "data-[state=checked]:bg-warning focus-visible:outline-warning",
        icon: "group-data-[state=checked]:text-warning"
      },
      error: {
        base: "data-[state=checked]:bg-error focus-visible:outline-error",
        icon: "group-data-[state=checked]:text-error"
      },
      neutral: {
        base: "data-[state=checked]:bg-inverted focus-visible:outline-inverted",
        icon: "group-data-[state=checked]:text-highlighted"
      }
    },
    size: {
      xs: {
        base: "w-7",
        container: "h-4",
        thumb: "size-3 data-[state=checked]:translate-x-3 data-[state=checked]:rtl:-translate-x-3",
        wrapper: "text-xs"
      },
      sm: {
        base: "w-8",
        container: "h-4",
        thumb: "size-3.5 data-[state=checked]:translate-x-3.5 data-[state=checked]:rtl:-translate-x-3.5",
        wrapper: "text-xs"
      },
      md: {
        base: "w-9",
        container: "h-5",
        thumb: "size-4 data-[state=checked]:translate-x-4 data-[state=checked]:rtl:-translate-x-4",
        wrapper: "text-sm"
      },
      lg: {
        base: "w-10",
        container: "h-5",
        thumb: "size-4.5 data-[state=checked]:translate-x-4.5 data-[state=checked]:rtl:-translate-x-4.5",
        wrapper: "text-sm"
      },
      xl: {
        base: "w-11",
        container: "h-6",
        thumb: "size-5 data-[state=checked]:translate-x-5 data-[state=checked]:rtl:-translate-x-5",
        wrapper: "text-base"
      }
    },
    checked: {
      true: {
        icon: "group-data-[state=checked]:opacity-100"
      }
    },
    unchecked: {
      true: {
        icon: "group-data-[state=unchecked]:opacity-100"
      }
    },
    loading: {
      true: {
        icon: "animate-spin"
      }
    },
    required: {
      true: {
        label: "after:content-['*'] after:ms-0.5 after:text-error"
      }
    },
    disabled: {
      true: {
        base: "cursor-not-allowed opacity-75",
        label: "cursor-not-allowed opacity-75",
        description: "cursor-not-allowed opacity-75"
      }
    }
  },
  defaultVariants: {
    color: "primary",
    size: "md"
  }
}, xj = /* @__PURE__ */ L({
  inheritAttrs: !1,
  __name: "Switch",
  props: /* @__PURE__ */ mt({
    as: {},
    color: {},
    size: {},
    loading: { type: Boolean },
    loadingIcon: {},
    checkedIcon: {},
    uncheckedIcon: {},
    label: {},
    description: {},
    class: {},
    ui: {},
    disabled: { type: Boolean },
    id: {},
    name: {},
    required: { type: Boolean },
    value: {},
    defaultValue: { type: Boolean }
  }, {
    modelValue: { type: Boolean, default: void 0 },
    modelModifiers: {}
  }),
  emits: /* @__PURE__ */ mt(["change"], ["update:modelValue"]),
  setup(e, { emit: t }) {
    const a = e, n = Se(), r = t, s = lt(e, "modelValue"), i = ue(), o = xt(tt(a, "required", "value", "defaultValue")), { id: l, emitFormChange: d, emitFormInput: c, size: f, color: p, name: g, disabled: v, ariaAttrs: m } = Ca(a), y = l.value ?? Rn(), x = T(() => W({ extend: W(N6), ...i.ui?.switch || {} })({
      size: f.value,
      color: p.value,
      required: a.required,
      loading: a.loading,
      disabled: v.value || a.loading
    }));
    function b(C) {
      const w = new Event("change", { target: { value: C } });
      r("change", w), d(), c();
    }
    return (C, w) => (h(), k(u(U), {
      as: C.as,
      class: A(x.value.root({ class: [a.ui?.root, a.class] }))
    }, {
      default: _(() => [
        J("div", {
          class: A(x.value.container({ class: a.ui?.container }))
        }, [
          V(u(bP), O({ id: u(y) }, { ...u(o), ...C.$attrs, ...u(m) }, {
            modelValue: s.value,
            "onUpdate:modelValue": [
              w[0] || (w[0] = ($) => s.value = $),
              b
            ],
            name: u(g),
            disabled: u(v) || C.loading,
            class: x.value.base({ class: a.ui?.base })
          }), {
            default: _(() => [
              V(u(CP), {
                class: A(x.value.thumb({ class: a.ui?.thumb }))
              }, {
                default: _(() => [
                  C.loading ? (h(), k(he, {
                    key: 0,
                    name: C.loadingIcon || u(i).ui.icons.loading,
                    class: A(x.value.icon({ class: a.ui?.icon, checked: !0, unchecked: !0 }))
                  }, null, 8, ["name", "class"])) : (h(), M(te, { key: 1 }, [
                    C.checkedIcon ? (h(), k(he, {
                      key: 0,
                      name: C.checkedIcon,
                      class: A(x.value.icon({ class: a.ui?.icon, checked: !0 }))
                    }, null, 8, ["name", "class"])) : D("", !0),
                    C.uncheckedIcon ? (h(), k(he, {
                      key: 1,
                      name: C.uncheckedIcon,
                      class: A(x.value.icon({ class: a.ui?.icon, unchecked: !0 }))
                    }, null, 8, ["name", "class"])) : D("", !0)
                  ], 64))
                ]),
                _: 1
              }, 8, ["class"])
            ]),
            _: 1
          }, 16, ["id", "modelValue", "name", "disabled", "class"])
        ], 2),
        C.label || n.label || C.description || n.description ? (h(), M("div", {
          key: 0,
          class: A(x.value.wrapper({ class: a.ui?.wrapper }))
        }, [
          C.label || n.label ? (h(), k(u(Cs), {
            key: 0,
            for: u(y),
            class: A(x.value.label({ class: a.ui?.label }))
          }, {
            default: _(() => [
              S(C.$slots, "label", { label: C.label }, () => [
                ee(X(C.label), 1)
              ])
            ]),
            _: 3
          }, 8, ["for", "class"])) : D("", !0),
          C.description || n.description ? (h(), M("p", {
            key: 1,
            class: A(x.value.description({ class: a.ui?.description }))
          }, [
            S(C.$slots, "description", { description: C.description }, () => [
              ee(X(C.description), 1)
            ])
          ], 2)) : D("", !0)
        ], 2)) : D("", !0)
      ]),
      _: 3
    }, 8, ["as", "class"]));
  }
});
function H6(e) {
  return e ? e[0].toUpperCase() + e.slice(1) : "";
}
/**
   * table-core
   *
   * Copyright (c) TanStack
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   */
function Xn(e, t) {
  return typeof e == "function" ? e(t) : e;
}
function $a(e, t) {
  return (a) => {
    t.setState((n) => ({
      ...n,
      [e]: Xn(a, n[e])
    }));
  };
}
function ru(e) {
  return e instanceof Function;
}
function j6(e) {
  return Array.isArray(e) && e.every((t) => typeof t == "number");
}
function K6(e, t) {
  const a = [], n = (r) => {
    r.forEach((s) => {
      a.push(s);
      const i = t(s);
      i != null && i.length && n(i);
    });
  };
  return n(e), a;
}
function He(e, t, a) {
  let n = [], r;
  return (s) => {
    let i;
    a.key && a.debug && (i = Date.now());
    const o = e(s);
    if (!(o.length !== n.length || o.some((c, f) => n[f] !== c)))
      return r;
    n = o;
    let d;
    if (a.key && a.debug && (d = Date.now()), r = t(...o), a == null || a.onChange == null || a.onChange(r), a.key && a.debug && a != null && a.debug()) {
      const c = Math.round((Date.now() - i) * 100) / 100, f = Math.round((Date.now() - d) * 100) / 100, p = f / 16, g = (v, m) => {
        for (v = String(v); v.length < m; )
          v = " " + v;
        return v;
      };
      console.info(`%c⏱ ${g(f, 5)} /${g(c, 5)} ms`, `
            font-size: .6rem;
            font-weight: bold;
            color: hsl(${Math.max(0, Math.min(120 - 120 * p, 120))}deg 100% 31%);`, a?.key);
    }
    return r;
  };
}
function je(e, t, a, n) {
  return {
    debug: () => {
      var r;
      return (r = e?.debugAll) != null ? r : e[t];
    },
    key: process.env.NODE_ENV === "development" && a,
    onChange: n
  };
}
function G6(e, t, a, n) {
  const r = () => {
    var i;
    return (i = s.getValue()) != null ? i : e.options.renderFallbackValue;
  }, s = {
    id: `${t.id}_${a.id}`,
    row: t,
    column: a,
    getValue: () => t.getValue(n),
    renderValue: r,
    getContext: He(() => [e, a, t, s], (i, o, l, d) => ({
      table: i,
      column: o,
      row: l,
      cell: d,
      getValue: d.getValue,
      renderValue: d.renderValue
    }), je(e.options, "debugCells", "cell.getContext"))
  };
  return e._features.forEach((i) => {
    i.createCell == null || i.createCell(s, a, t, e);
  }, {}), s;
}
function U6(e, t, a, n) {
  var r, s;
  const o = {
    ...e._getDefaultColumnDef(),
    ...t
  }, l = o.accessorKey;
  let d = (r = (s = o.id) != null ? s : l ? typeof String.prototype.replaceAll == "function" ? l.replaceAll(".", "_") : l.replace(/\./g, "_") : void 0) != null ? r : typeof o.header == "string" ? o.header : void 0, c;
  if (o.accessorFn ? c = o.accessorFn : l && (l.includes(".") ? c = (p) => {
    let g = p;
    for (const m of l.split(".")) {
      var v;
      g = (v = g) == null ? void 0 : v[m], process.env.NODE_ENV !== "production" && g === void 0 && console.warn(`"${m}" in deeply nested key "${l}" returned undefined.`);
    }
    return g;
  } : c = (p) => p[o.accessorKey]), !d)
    throw process.env.NODE_ENV !== "production" ? new Error(o.accessorFn ? "Columns require an id when using an accessorFn" : "Columns require an id when using a non-string header") : new Error();
  let f = {
    id: `${String(d)}`,
    accessorFn: c,
    parent: n,
    depth: a,
    columnDef: o,
    columns: [],
    getFlatColumns: He(() => [!0], () => {
      var p;
      return [f, ...(p = f.columns) == null ? void 0 : p.flatMap((g) => g.getFlatColumns())];
    }, je(e.options, "debugColumns", "column.getFlatColumns")),
    getLeafColumns: He(() => [e._getOrderColumnsFn()], (p) => {
      var g;
      if ((g = f.columns) != null && g.length) {
        let v = f.columns.flatMap((m) => m.getLeafColumns());
        return p(v);
      }
      return [f];
    }, je(e.options, "debugColumns", "column.getLeafColumns"))
  };
  for (const p of e._features)
    p.createColumn == null || p.createColumn(f, e);
  return f;
}
const la = "debugHeaders";
function tm(e, t, a) {
  var n;
  let s = {
    id: (n = a.id) != null ? n : t.id,
    column: t,
    index: a.index,
    isPlaceholder: !!a.isPlaceholder,
    placeholderId: a.placeholderId,
    depth: a.depth,
    subHeaders: [],
    colSpan: 0,
    rowSpan: 0,
    headerGroup: null,
    getLeafHeaders: () => {
      const i = [], o = (l) => {
        l.subHeaders && l.subHeaders.length && l.subHeaders.map(o), i.push(l);
      };
      return o(s), i;
    },
    getContext: () => ({
      table: e,
      header: s,
      column: t
    })
  };
  return e._features.forEach((i) => {
    i.createHeader == null || i.createHeader(s, e);
  }), s;
}
const W6 = {
  createTable: (e) => {
    e.getHeaderGroups = He(() => [e.getAllColumns(), e.getVisibleLeafColumns(), e.getState().columnPinning.left, e.getState().columnPinning.right], (t, a, n, r) => {
      var s, i;
      const o = (s = n?.map((f) => a.find((p) => p.id === f)).filter(Boolean)) != null ? s : [], l = (i = r?.map((f) => a.find((p) => p.id === f)).filter(Boolean)) != null ? i : [], d = a.filter((f) => !(n != null && n.includes(f.id)) && !(r != null && r.includes(f.id)));
      return To(t, [...o, ...d, ...l], e);
    }, je(e.options, la, "getHeaderGroups")), e.getCenterHeaderGroups = He(() => [e.getAllColumns(), e.getVisibleLeafColumns(), e.getState().columnPinning.left, e.getState().columnPinning.right], (t, a, n, r) => (a = a.filter((s) => !(n != null && n.includes(s.id)) && !(r != null && r.includes(s.id))), To(t, a, e, "center")), je(e.options, la, "getCenterHeaderGroups")), e.getLeftHeaderGroups = He(() => [e.getAllColumns(), e.getVisibleLeafColumns(), e.getState().columnPinning.left], (t, a, n) => {
      var r;
      const s = (r = n?.map((i) => a.find((o) => o.id === i)).filter(Boolean)) != null ? r : [];
      return To(t, s, e, "left");
    }, je(e.options, la, "getLeftHeaderGroups")), e.getRightHeaderGroups = He(() => [e.getAllColumns(), e.getVisibleLeafColumns(), e.getState().columnPinning.right], (t, a, n) => {
      var r;
      const s = (r = n?.map((i) => a.find((o) => o.id === i)).filter(Boolean)) != null ? r : [];
      return To(t, s, e, "right");
    }, je(e.options, la, "getRightHeaderGroups")), e.getFooterGroups = He(() => [e.getHeaderGroups()], (t) => [...t].reverse(), je(e.options, la, "getFooterGroups")), e.getLeftFooterGroups = He(() => [e.getLeftHeaderGroups()], (t) => [...t].reverse(), je(e.options, la, "getLeftFooterGroups")), e.getCenterFooterGroups = He(() => [e.getCenterHeaderGroups()], (t) => [...t].reverse(), je(e.options, la, "getCenterFooterGroups")), e.getRightFooterGroups = He(() => [e.getRightHeaderGroups()], (t) => [...t].reverse(), je(e.options, la, "getRightFooterGroups")), e.getFlatHeaders = He(() => [e.getHeaderGroups()], (t) => t.map((a) => a.headers).flat(), je(e.options, la, "getFlatHeaders")), e.getLeftFlatHeaders = He(() => [e.getLeftHeaderGroups()], (t) => t.map((a) => a.headers).flat(), je(e.options, la, "getLeftFlatHeaders")), e.getCenterFlatHeaders = He(() => [e.getCenterHeaderGroups()], (t) => t.map((a) => a.headers).flat(), je(e.options, la, "getCenterFlatHeaders")), e.getRightFlatHeaders = He(() => [e.getRightHeaderGroups()], (t) => t.map((a) => a.headers).flat(), je(e.options, la, "getRightFlatHeaders")), e.getCenterLeafHeaders = He(() => [e.getCenterFlatHeaders()], (t) => t.filter((a) => {
      var n;
      return !((n = a.subHeaders) != null && n.length);
    }), je(e.options, la, "getCenterLeafHeaders")), e.getLeftLeafHeaders = He(() => [e.getLeftFlatHeaders()], (t) => t.filter((a) => {
      var n;
      return !((n = a.subHeaders) != null && n.length);
    }), je(e.options, la, "getLeftLeafHeaders")), e.getRightLeafHeaders = He(() => [e.getRightFlatHeaders()], (t) => t.filter((a) => {
      var n;
      return !((n = a.subHeaders) != null && n.length);
    }), je(e.options, la, "getRightLeafHeaders")), e.getLeafHeaders = He(() => [e.getLeftHeaderGroups(), e.getCenterHeaderGroups(), e.getRightHeaderGroups()], (t, a, n) => {
      var r, s, i, o, l, d;
      return [...(r = (s = t[0]) == null ? void 0 : s.headers) != null ? r : [], ...(i = (o = a[0]) == null ? void 0 : o.headers) != null ? i : [], ...(l = (d = n[0]) == null ? void 0 : d.headers) != null ? l : []].map((c) => c.getLeafHeaders()).flat();
    }, je(e.options, la, "getLeafHeaders"));
  }
};
function To(e, t, a, n) {
  var r, s;
  let i = 0;
  const o = function(p, g) {
    g === void 0 && (g = 1), i = Math.max(i, g), p.filter((v) => v.getIsVisible()).forEach((v) => {
      var m;
      (m = v.columns) != null && m.length && o(v.columns, g + 1);
    }, 0);
  };
  o(e);
  let l = [];
  const d = (p, g) => {
    const v = {
      depth: g,
      id: [n, `${g}`].filter(Boolean).join("_"),
      headers: []
    }, m = [];
    p.forEach((y) => {
      const x = [...m].reverse()[0], b = y.column.depth === v.depth;
      let C, w = !1;
      if (b && y.column.parent ? C = y.column.parent : (C = y.column, w = !0), x && x?.column === C)
        x.subHeaders.push(y);
      else {
        const $ = tm(a, C, {
          id: [n, g, C.id, y?.id].filter(Boolean).join("_"),
          isPlaceholder: w,
          placeholderId: w ? `${m.filter((B) => B.column === C).length}` : void 0,
          depth: g,
          index: m.length
        });
        $.subHeaders.push(y), m.push($);
      }
      v.headers.push(y), y.headerGroup = v;
    }), l.push(v), g > 0 && d(m, g - 1);
  }, c = t.map((p, g) => tm(a, p, {
    depth: i,
    index: g
  }));
  d(c, i - 1), l.reverse();
  const f = (p) => p.filter((v) => v.column.getIsVisible()).map((v) => {
    let m = 0, y = 0, x = [0];
    v.subHeaders && v.subHeaders.length ? (x = [], f(v.subHeaders).forEach((C) => {
      let {
        colSpan: w,
        rowSpan: $
      } = C;
      m += w, x.push($);
    })) : m = 1;
    const b = Math.min(...x);
    return y = y + b, v.colSpan = m, v.rowSpan = y, {
      colSpan: m,
      rowSpan: y
    };
  });
  return f((r = (s = l[0]) == null ? void 0 : s.headers) != null ? r : []), l;
}
const Ep = (e, t, a, n, r, s, i) => {
  let o = {
    id: t,
    index: n,
    original: a,
    depth: r,
    parentId: i,
    _valuesCache: {},
    _uniqueValuesCache: {},
    getValue: (l) => {
      if (o._valuesCache.hasOwnProperty(l))
        return o._valuesCache[l];
      const d = e.getColumn(l);
      if (d != null && d.accessorFn)
        return o._valuesCache[l] = d.accessorFn(o.original, n), o._valuesCache[l];
    },
    getUniqueValues: (l) => {
      if (o._uniqueValuesCache.hasOwnProperty(l))
        return o._uniqueValuesCache[l];
      const d = e.getColumn(l);
      if (d != null && d.accessorFn)
        return d.columnDef.getUniqueValues ? (o._uniqueValuesCache[l] = d.columnDef.getUniqueValues(o.original, n), o._uniqueValuesCache[l]) : (o._uniqueValuesCache[l] = [o.getValue(l)], o._uniqueValuesCache[l]);
    },
    renderValue: (l) => {
      var d;
      return (d = o.getValue(l)) != null ? d : e.options.renderFallbackValue;
    },
    subRows: [],
    getLeafRows: () => K6(o.subRows, (l) => l.subRows),
    getParentRow: () => o.parentId ? e.getRow(o.parentId, !0) : void 0,
    getParentRows: () => {
      let l = [], d = o;
      for (; ; ) {
        const c = d.getParentRow();
        if (!c) break;
        l.push(c), d = c;
      }
      return l.reverse();
    },
    getAllCells: He(() => [e.getAllLeafColumns()], (l) => l.map((d) => G6(e, o, d, d.id)), je(e.options, "debugRows", "getAllCells")),
    _getAllCellsByColumnId: He(() => [o.getAllCells()], (l) => l.reduce((d, c) => (d[c.column.id] = c, d), {}), je(e.options, "debugRows", "getAllCellsByColumnId"))
  };
  for (let l = 0; l < e._features.length; l++) {
    const d = e._features[l];
    d == null || d.createRow == null || d.createRow(o, e);
  }
  return o;
}, Y6 = {
  createColumn: (e, t) => {
    e._getFacetedRowModel = t.options.getFacetedRowModel && t.options.getFacetedRowModel(t, e.id), e.getFacetedRowModel = () => e._getFacetedRowModel ? e._getFacetedRowModel() : t.getPreFilteredRowModel(), e._getFacetedUniqueValues = t.options.getFacetedUniqueValues && t.options.getFacetedUniqueValues(t, e.id), e.getFacetedUniqueValues = () => e._getFacetedUniqueValues ? e._getFacetedUniqueValues() : /* @__PURE__ */ new Map(), e._getFacetedMinMaxValues = t.options.getFacetedMinMaxValues && t.options.getFacetedMinMaxValues(t, e.id), e.getFacetedMinMaxValues = () => {
      if (e._getFacetedMinMaxValues)
        return e._getFacetedMinMaxValues();
    };
  }
}, j1 = (e, t, a) => {
  var n, r;
  const s = a == null || (n = a.toString()) == null ? void 0 : n.toLowerCase();
  return !!(!((r = e.getValue(t)) == null || (r = r.toString()) == null || (r = r.toLowerCase()) == null) && r.includes(s));
};
j1.autoRemove = (e) => Wa(e);
const K1 = (e, t, a) => {
  var n;
  return !!(!((n = e.getValue(t)) == null || (n = n.toString()) == null) && n.includes(a));
};
K1.autoRemove = (e) => Wa(e);
const G1 = (e, t, a) => {
  var n;
  return ((n = e.getValue(t)) == null || (n = n.toString()) == null ? void 0 : n.toLowerCase()) === a?.toLowerCase();
};
G1.autoRemove = (e) => Wa(e);
const U1 = (e, t, a) => {
  var n;
  return (n = e.getValue(t)) == null ? void 0 : n.includes(a);
};
U1.autoRemove = (e) => Wa(e);
const W1 = (e, t, a) => !a.some((n) => {
  var r;
  return !((r = e.getValue(t)) != null && r.includes(n));
});
W1.autoRemove = (e) => Wa(e) || !(e != null && e.length);
const Y1 = (e, t, a) => a.some((n) => {
  var r;
  return (r = e.getValue(t)) == null ? void 0 : r.includes(n);
});
Y1.autoRemove = (e) => Wa(e) || !(e != null && e.length);
const X1 = (e, t, a) => e.getValue(t) === a;
X1.autoRemove = (e) => Wa(e);
const J1 = (e, t, a) => e.getValue(t) == a;
J1.autoRemove = (e) => Wa(e);
const Tp = (e, t, a) => {
  let [n, r] = a;
  const s = e.getValue(t);
  return s >= n && s <= r;
};
Tp.resolveFilterValue = (e) => {
  let [t, a] = e, n = typeof t != "number" ? parseFloat(t) : t, r = typeof a != "number" ? parseFloat(a) : a, s = t === null || Number.isNaN(n) ? -1 / 0 : n, i = a === null || Number.isNaN(r) ? 1 / 0 : r;
  if (s > i) {
    const o = s;
    s = i, i = o;
  }
  return [s, i];
};
Tp.autoRemove = (e) => Wa(e) || Wa(e[0]) && Wa(e[1]);
const _n = {
  includesString: j1,
  includesStringSensitive: K1,
  equalsString: G1,
  arrIncludes: U1,
  arrIncludesAll: W1,
  arrIncludesSome: Y1,
  equals: X1,
  weakEquals: J1,
  inNumberRange: Tp
};
function Wa(e) {
  return e == null || e === "";
}
const X6 = {
  getDefaultColumnDef: () => ({
    filterFn: "auto"
  }),
  getInitialState: (e) => ({
    columnFilters: [],
    ...e
  }),
  getDefaultOptions: (e) => ({
    onColumnFiltersChange: $a("columnFilters", e),
    filterFromLeafRows: !1,
    maxLeafRowFilterDepth: 100
  }),
  createColumn: (e, t) => {
    e.getAutoFilterFn = () => {
      const a = t.getCoreRowModel().flatRows[0], n = a?.getValue(e.id);
      return typeof n == "string" ? _n.includesString : typeof n == "number" ? _n.inNumberRange : typeof n == "boolean" || n !== null && typeof n == "object" ? _n.equals : Array.isArray(n) ? _n.arrIncludes : _n.weakEquals;
    }, e.getFilterFn = () => {
      var a, n;
      return ru(e.columnDef.filterFn) ? e.columnDef.filterFn : e.columnDef.filterFn === "auto" ? e.getAutoFilterFn() : (
        // @ts-ignore
        (a = (n = t.options.filterFns) == null ? void 0 : n[e.columnDef.filterFn]) != null ? a : _n[e.columnDef.filterFn]
      );
    }, e.getCanFilter = () => {
      var a, n, r;
      return ((a = e.columnDef.enableColumnFilter) != null ? a : !0) && ((n = t.options.enableColumnFilters) != null ? n : !0) && ((r = t.options.enableFilters) != null ? r : !0) && !!e.accessorFn;
    }, e.getIsFiltered = () => e.getFilterIndex() > -1, e.getFilterValue = () => {
      var a;
      return (a = t.getState().columnFilters) == null || (a = a.find((n) => n.id === e.id)) == null ? void 0 : a.value;
    }, e.getFilterIndex = () => {
      var a, n;
      return (a = (n = t.getState().columnFilters) == null ? void 0 : n.findIndex((r) => r.id === e.id)) != null ? a : -1;
    }, e.setFilterValue = (a) => {
      t.setColumnFilters((n) => {
        const r = e.getFilterFn(), s = n?.find((c) => c.id === e.id), i = Xn(a, s ? s.value : void 0);
        if (am(r, i, e)) {
          var o;
          return (o = n?.filter((c) => c.id !== e.id)) != null ? o : [];
        }
        const l = {
          id: e.id,
          value: i
        };
        if (s) {
          var d;
          return (d = n?.map((c) => c.id === e.id ? l : c)) != null ? d : [];
        }
        return n != null && n.length ? [...n, l] : [l];
      });
    };
  },
  createRow: (e, t) => {
    e.columnFilters = {}, e.columnFiltersMeta = {};
  },
  createTable: (e) => {
    e.setColumnFilters = (t) => {
      const a = e.getAllLeafColumns(), n = (r) => {
        var s;
        return (s = Xn(t, r)) == null ? void 0 : s.filter((i) => {
          const o = a.find((l) => l.id === i.id);
          if (o) {
            const l = o.getFilterFn();
            if (am(l, i.value, o))
              return !1;
          }
          return !0;
        });
      };
      e.options.onColumnFiltersChange == null || e.options.onColumnFiltersChange(n);
    }, e.resetColumnFilters = (t) => {
      var a, n;
      e.setColumnFilters(t ? [] : (a = (n = e.initialState) == null ? void 0 : n.columnFilters) != null ? a : []);
    }, e.getPreFilteredRowModel = () => e.getCoreRowModel(), e.getFilteredRowModel = () => (!e._getFilteredRowModel && e.options.getFilteredRowModel && (e._getFilteredRowModel = e.options.getFilteredRowModel(e)), e.options.manualFiltering || !e._getFilteredRowModel ? e.getPreFilteredRowModel() : e._getFilteredRowModel());
  }
};
function am(e, t, a) {
  return (e && e.autoRemove ? e.autoRemove(t, a) : !1) || typeof t > "u" || typeof t == "string" && !t;
}
const J6 = (e, t, a) => a.reduce((n, r) => {
  const s = r.getValue(e);
  return n + (typeof s == "number" ? s : 0);
}, 0), Q6 = (e, t, a) => {
  let n;
  return a.forEach((r) => {
    const s = r.getValue(e);
    s != null && (n > s || n === void 0 && s >= s) && (n = s);
  }), n;
}, Z6 = (e, t, a) => {
  let n;
  return a.forEach((r) => {
    const s = r.getValue(e);
    s != null && (n < s || n === void 0 && s >= s) && (n = s);
  }), n;
}, e8 = (e, t, a) => {
  let n, r;
  return a.forEach((s) => {
    const i = s.getValue(e);
    i != null && (n === void 0 ? i >= i && (n = r = i) : (n > i && (n = i), r < i && (r = i)));
  }), [n, r];
}, t8 = (e, t) => {
  let a = 0, n = 0;
  if (t.forEach((r) => {
    let s = r.getValue(e);
    s != null && (s = +s) >= s && (++a, n += s);
  }), a) return n / a;
}, a8 = (e, t) => {
  if (!t.length)
    return;
  const a = t.map((s) => s.getValue(e));
  if (!j6(a))
    return;
  if (a.length === 1)
    return a[0];
  const n = Math.floor(a.length / 2), r = a.sort((s, i) => s - i);
  return a.length % 2 !== 0 ? r[n] : (r[n - 1] + r[n]) / 2;
}, n8 = (e, t) => Array.from(new Set(t.map((a) => a.getValue(e))).values()), r8 = (e, t) => new Set(t.map((a) => a.getValue(e))).size, s8 = (e, t) => t.length, Wu = {
  sum: J6,
  min: Q6,
  max: Z6,
  extent: e8,
  mean: t8,
  median: a8,
  unique: n8,
  uniqueCount: r8,
  count: s8
}, i8 = {
  getDefaultColumnDef: () => ({
    aggregatedCell: (e) => {
      var t, a;
      return (t = (a = e.getValue()) == null || a.toString == null ? void 0 : a.toString()) != null ? t : null;
    },
    aggregationFn: "auto"
  }),
  getInitialState: (e) => ({
    grouping: [],
    ...e
  }),
  getDefaultOptions: (e) => ({
    onGroupingChange: $a("grouping", e),
    groupedColumnMode: "reorder"
  }),
  createColumn: (e, t) => {
    e.toggleGrouping = () => {
      t.setGrouping((a) => a != null && a.includes(e.id) ? a.filter((n) => n !== e.id) : [...a ?? [], e.id]);
    }, e.getCanGroup = () => {
      var a, n;
      return ((a = e.columnDef.enableGrouping) != null ? a : !0) && ((n = t.options.enableGrouping) != null ? n : !0) && (!!e.accessorFn || !!e.columnDef.getGroupingValue);
    }, e.getIsGrouped = () => {
      var a;
      return (a = t.getState().grouping) == null ? void 0 : a.includes(e.id);
    }, e.getGroupedIndex = () => {
      var a;
      return (a = t.getState().grouping) == null ? void 0 : a.indexOf(e.id);
    }, e.getToggleGroupingHandler = () => {
      const a = e.getCanGroup();
      return () => {
        a && e.toggleGrouping();
      };
    }, e.getAutoAggregationFn = () => {
      const a = t.getCoreRowModel().flatRows[0], n = a?.getValue(e.id);
      if (typeof n == "number")
        return Wu.sum;
      if (Object.prototype.toString.call(n) === "[object Date]")
        return Wu.extent;
    }, e.getAggregationFn = () => {
      var a, n;
      if (!e)
        throw new Error();
      return ru(e.columnDef.aggregationFn) ? e.columnDef.aggregationFn : e.columnDef.aggregationFn === "auto" ? e.getAutoAggregationFn() : (a = (n = t.options.aggregationFns) == null ? void 0 : n[e.columnDef.aggregationFn]) != null ? a : Wu[e.columnDef.aggregationFn];
    };
  },
  createTable: (e) => {
    e.setGrouping = (t) => e.options.onGroupingChange == null ? void 0 : e.options.onGroupingChange(t), e.resetGrouping = (t) => {
      var a, n;
      e.setGrouping(t ? [] : (a = (n = e.initialState) == null ? void 0 : n.grouping) != null ? a : []);
    }, e.getPreGroupedRowModel = () => e.getFilteredRowModel(), e.getGroupedRowModel = () => (!e._getGroupedRowModel && e.options.getGroupedRowModel && (e._getGroupedRowModel = e.options.getGroupedRowModel(e)), e.options.manualGrouping || !e._getGroupedRowModel ? e.getPreGroupedRowModel() : e._getGroupedRowModel());
  },
  createRow: (e, t) => {
    e.getIsGrouped = () => !!e.groupingColumnId, e.getGroupingValue = (a) => {
      if (e._groupingValuesCache.hasOwnProperty(a))
        return e._groupingValuesCache[a];
      const n = t.getColumn(a);
      return n != null && n.columnDef.getGroupingValue ? (e._groupingValuesCache[a] = n.columnDef.getGroupingValue(e.original), e._groupingValuesCache[a]) : e.getValue(a);
    }, e._groupingValuesCache = {};
  },
  createCell: (e, t, a, n) => {
    e.getIsGrouped = () => t.getIsGrouped() && t.id === a.groupingColumnId, e.getIsPlaceholder = () => !e.getIsGrouped() && t.getIsGrouped(), e.getIsAggregated = () => {
      var r;
      return !e.getIsGrouped() && !e.getIsPlaceholder() && !!((r = a.subRows) != null && r.length);
    };
  }
};
function o8(e, t, a) {
  if (!(t != null && t.length) || !a)
    return e;
  const n = e.filter((s) => !t.includes(s.id));
  return a === "remove" ? n : [...t.map((s) => e.find((i) => i.id === s)).filter(Boolean), ...n];
}
const l8 = {
  getInitialState: (e) => ({
    columnOrder: [],
    ...e
  }),
  getDefaultOptions: (e) => ({
    onColumnOrderChange: $a("columnOrder", e)
  }),
  createColumn: (e, t) => {
    e.getIndex = He((a) => [vi(t, a)], (a) => a.findIndex((n) => n.id === e.id), je(t.options, "debugColumns", "getIndex")), e.getIsFirstColumn = (a) => {
      var n;
      return ((n = vi(t, a)[0]) == null ? void 0 : n.id) === e.id;
    }, e.getIsLastColumn = (a) => {
      var n;
      const r = vi(t, a);
      return ((n = r[r.length - 1]) == null ? void 0 : n.id) === e.id;
    };
  },
  createTable: (e) => {
    e.setColumnOrder = (t) => e.options.onColumnOrderChange == null ? void 0 : e.options.onColumnOrderChange(t), e.resetColumnOrder = (t) => {
      var a;
      e.setColumnOrder(t ? [] : (a = e.initialState.columnOrder) != null ? a : []);
    }, e._getOrderColumnsFn = He(() => [e.getState().columnOrder, e.getState().grouping, e.options.groupedColumnMode], (t, a, n) => (r) => {
      let s = [];
      if (!(t != null && t.length))
        s = r;
      else {
        const i = [...t], o = [...r];
        for (; o.length && i.length; ) {
          const l = i.shift(), d = o.findIndex((c) => c.id === l);
          d > -1 && s.push(o.splice(d, 1)[0]);
        }
        s = [...s, ...o];
      }
      return o8(s, a, n);
    }, je(e.options, "debugTable", "_getOrderColumnsFn"));
  }
}, Yu = () => ({
  left: [],
  right: []
}), u8 = {
  getInitialState: (e) => ({
    columnPinning: Yu(),
    ...e
  }),
  getDefaultOptions: (e) => ({
    onColumnPinningChange: $a("columnPinning", e)
  }),
  createColumn: (e, t) => {
    e.pin = (a) => {
      const n = e.getLeafColumns().map((r) => r.id).filter(Boolean);
      t.setColumnPinning((r) => {
        var s, i;
        if (a === "right") {
          var o, l;
          return {
            left: ((o = r?.left) != null ? o : []).filter((f) => !(n != null && n.includes(f))),
            right: [...((l = r?.right) != null ? l : []).filter((f) => !(n != null && n.includes(f))), ...n]
          };
        }
        if (a === "left") {
          var d, c;
          return {
            left: [...((d = r?.left) != null ? d : []).filter((f) => !(n != null && n.includes(f))), ...n],
            right: ((c = r?.right) != null ? c : []).filter((f) => !(n != null && n.includes(f)))
          };
        }
        return {
          left: ((s = r?.left) != null ? s : []).filter((f) => !(n != null && n.includes(f))),
          right: ((i = r?.right) != null ? i : []).filter((f) => !(n != null && n.includes(f)))
        };
      });
    }, e.getCanPin = () => e.getLeafColumns().some((n) => {
      var r, s, i;
      return ((r = n.columnDef.enablePinning) != null ? r : !0) && ((s = (i = t.options.enableColumnPinning) != null ? i : t.options.enablePinning) != null ? s : !0);
    }), e.getIsPinned = () => {
      const a = e.getLeafColumns().map((o) => o.id), {
        left: n,
        right: r
      } = t.getState().columnPinning, s = a.some((o) => n?.includes(o)), i = a.some((o) => r?.includes(o));
      return s ? "left" : i ? "right" : !1;
    }, e.getPinnedIndex = () => {
      var a, n;
      const r = e.getIsPinned();
      return r ? (a = (n = t.getState().columnPinning) == null || (n = n[r]) == null ? void 0 : n.indexOf(e.id)) != null ? a : -1 : 0;
    };
  },
  createRow: (e, t) => {
    e.getCenterVisibleCells = He(() => [e._getAllVisibleCells(), t.getState().columnPinning.left, t.getState().columnPinning.right], (a, n, r) => {
      const s = [...n ?? [], ...r ?? []];
      return a.filter((i) => !s.includes(i.column.id));
    }, je(t.options, "debugRows", "getCenterVisibleCells")), e.getLeftVisibleCells = He(() => [e._getAllVisibleCells(), t.getState().columnPinning.left], (a, n) => (n ?? []).map((s) => a.find((i) => i.column.id === s)).filter(Boolean).map((s) => ({
      ...s,
      position: "left"
    })), je(t.options, "debugRows", "getLeftVisibleCells")), e.getRightVisibleCells = He(() => [e._getAllVisibleCells(), t.getState().columnPinning.right], (a, n) => (n ?? []).map((s) => a.find((i) => i.column.id === s)).filter(Boolean).map((s) => ({
      ...s,
      position: "right"
    })), je(t.options, "debugRows", "getRightVisibleCells"));
  },
  createTable: (e) => {
    e.setColumnPinning = (t) => e.options.onColumnPinningChange == null ? void 0 : e.options.onColumnPinningChange(t), e.resetColumnPinning = (t) => {
      var a, n;
      return e.setColumnPinning(t ? Yu() : (a = (n = e.initialState) == null ? void 0 : n.columnPinning) != null ? a : Yu());
    }, e.getIsSomeColumnsPinned = (t) => {
      var a;
      const n = e.getState().columnPinning;
      if (!t) {
        var r, s;
        return !!((r = n.left) != null && r.length || (s = n.right) != null && s.length);
      }
      return !!((a = n[t]) != null && a.length);
    }, e.getLeftLeafColumns = He(() => [e.getAllLeafColumns(), e.getState().columnPinning.left], (t, a) => (a ?? []).map((n) => t.find((r) => r.id === n)).filter(Boolean), je(e.options, "debugColumns", "getLeftLeafColumns")), e.getRightLeafColumns = He(() => [e.getAllLeafColumns(), e.getState().columnPinning.right], (t, a) => (a ?? []).map((n) => t.find((r) => r.id === n)).filter(Boolean), je(e.options, "debugColumns", "getRightLeafColumns")), e.getCenterLeafColumns = He(() => [e.getAllLeafColumns(), e.getState().columnPinning.left, e.getState().columnPinning.right], (t, a, n) => {
      const r = [...a ?? [], ...n ?? []];
      return t.filter((s) => !r.includes(s.id));
    }, je(e.options, "debugColumns", "getCenterLeafColumns"));
  }
};
function d8(e) {
  return e || (typeof document < "u" ? document : null);
}
const Bo = {
  size: 150,
  minSize: 20,
  maxSize: Number.MAX_SAFE_INTEGER
}, Xu = () => ({
  startOffset: null,
  startSize: null,
  deltaOffset: null,
  deltaPercentage: null,
  isResizingColumn: !1,
  columnSizingStart: []
}), c8 = {
  getDefaultColumnDef: () => Bo,
  getInitialState: (e) => ({
    columnSizing: {},
    columnSizingInfo: Xu(),
    ...e
  }),
  getDefaultOptions: (e) => ({
    columnResizeMode: "onEnd",
    columnResizeDirection: "ltr",
    onColumnSizingChange: $a("columnSizing", e),
    onColumnSizingInfoChange: $a("columnSizingInfo", e)
  }),
  createColumn: (e, t) => {
    e.getSize = () => {
      var a, n, r;
      const s = t.getState().columnSizing[e.id];
      return Math.min(Math.max((a = e.columnDef.minSize) != null ? a : Bo.minSize, (n = s ?? e.columnDef.size) != null ? n : Bo.size), (r = e.columnDef.maxSize) != null ? r : Bo.maxSize);
    }, e.getStart = He((a) => [a, vi(t, a), t.getState().columnSizing], (a, n) => n.slice(0, e.getIndex(a)).reduce((r, s) => r + s.getSize(), 0), je(t.options, "debugColumns", "getStart")), e.getAfter = He((a) => [a, vi(t, a), t.getState().columnSizing], (a, n) => n.slice(e.getIndex(a) + 1).reduce((r, s) => r + s.getSize(), 0), je(t.options, "debugColumns", "getAfter")), e.resetSize = () => {
      t.setColumnSizing((a) => {
        let {
          [e.id]: n,
          ...r
        } = a;
        return r;
      });
    }, e.getCanResize = () => {
      var a, n;
      return ((a = e.columnDef.enableResizing) != null ? a : !0) && ((n = t.options.enableColumnResizing) != null ? n : !0);
    }, e.getIsResizing = () => t.getState().columnSizingInfo.isResizingColumn === e.id;
  },
  createHeader: (e, t) => {
    e.getSize = () => {
      let a = 0;
      const n = (r) => {
        if (r.subHeaders.length)
          r.subHeaders.forEach(n);
        else {
          var s;
          a += (s = r.column.getSize()) != null ? s : 0;
        }
      };
      return n(e), a;
    }, e.getStart = () => {
      if (e.index > 0) {
        const a = e.headerGroup.headers[e.index - 1];
        return a.getStart() + a.getSize();
      }
      return 0;
    }, e.getResizeHandler = (a) => {
      const n = t.getColumn(e.column.id), r = n?.getCanResize();
      return (s) => {
        if (!n || !r || (s.persist == null || s.persist(), Ju(s) && s.touches && s.touches.length > 1))
          return;
        const i = e.getSize(), o = e ? e.getLeafHeaders().map((x) => [x.column.id, x.column.getSize()]) : [[n.id, n.getSize()]], l = Ju(s) ? Math.round(s.touches[0].clientX) : s.clientX, d = {}, c = (x, b) => {
          typeof b == "number" && (t.setColumnSizingInfo((C) => {
            var w, $;
            const B = t.options.columnResizeDirection === "rtl" ? -1 : 1, I = (b - ((w = C?.startOffset) != null ? w : 0)) * B, E = Math.max(I / (($ = C?.startSize) != null ? $ : 0), -0.999999);
            return C.columnSizingStart.forEach((P) => {
              let [R, F] = P;
              d[R] = Math.round(Math.max(F + F * E, 0) * 100) / 100;
            }), {
              ...C,
              deltaOffset: I,
              deltaPercentage: E
            };
          }), (t.options.columnResizeMode === "onChange" || x === "end") && t.setColumnSizing((C) => ({
            ...C,
            ...d
          })));
        }, f = (x) => c("move", x), p = (x) => {
          c("end", x), t.setColumnSizingInfo((b) => ({
            ...b,
            isResizingColumn: !1,
            startOffset: null,
            startSize: null,
            deltaOffset: null,
            deltaPercentage: null,
            columnSizingStart: []
          }));
        }, g = d8(a), v = {
          moveHandler: (x) => f(x.clientX),
          upHandler: (x) => {
            g?.removeEventListener("mousemove", v.moveHandler), g?.removeEventListener("mouseup", v.upHandler), p(x.clientX);
          }
        }, m = {
          moveHandler: (x) => (x.cancelable && (x.preventDefault(), x.stopPropagation()), f(x.touches[0].clientX), !1),
          upHandler: (x) => {
            var b;
            g?.removeEventListener("touchmove", m.moveHandler), g?.removeEventListener("touchend", m.upHandler), x.cancelable && (x.preventDefault(), x.stopPropagation()), p((b = x.touches[0]) == null ? void 0 : b.clientX);
          }
        }, y = f8() ? {
          passive: !1
        } : !1;
        Ju(s) ? (g?.addEventListener("touchmove", m.moveHandler, y), g?.addEventListener("touchend", m.upHandler, y)) : (g?.addEventListener("mousemove", v.moveHandler, y), g?.addEventListener("mouseup", v.upHandler, y)), t.setColumnSizingInfo((x) => ({
          ...x,
          startOffset: l,
          startSize: i,
          deltaOffset: 0,
          deltaPercentage: 0,
          columnSizingStart: o,
          isResizingColumn: n.id
        }));
      };
    };
  },
  createTable: (e) => {
    e.setColumnSizing = (t) => e.options.onColumnSizingChange == null ? void 0 : e.options.onColumnSizingChange(t), e.setColumnSizingInfo = (t) => e.options.onColumnSizingInfoChange == null ? void 0 : e.options.onColumnSizingInfoChange(t), e.resetColumnSizing = (t) => {
      var a;
      e.setColumnSizing(t ? {} : (a = e.initialState.columnSizing) != null ? a : {});
    }, e.resetHeaderSizeInfo = (t) => {
      var a;
      e.setColumnSizingInfo(t ? Xu() : (a = e.initialState.columnSizingInfo) != null ? a : Xu());
    }, e.getTotalSize = () => {
      var t, a;
      return (t = (a = e.getHeaderGroups()[0]) == null ? void 0 : a.headers.reduce((n, r) => n + r.getSize(), 0)) != null ? t : 0;
    }, e.getLeftTotalSize = () => {
      var t, a;
      return (t = (a = e.getLeftHeaderGroups()[0]) == null ? void 0 : a.headers.reduce((n, r) => n + r.getSize(), 0)) != null ? t : 0;
    }, e.getCenterTotalSize = () => {
      var t, a;
      return (t = (a = e.getCenterHeaderGroups()[0]) == null ? void 0 : a.headers.reduce((n, r) => n + r.getSize(), 0)) != null ? t : 0;
    }, e.getRightTotalSize = () => {
      var t, a;
      return (t = (a = e.getRightHeaderGroups()[0]) == null ? void 0 : a.headers.reduce((n, r) => n + r.getSize(), 0)) != null ? t : 0;
    };
  }
};
let Po = null;
function f8() {
  if (typeof Po == "boolean") return Po;
  let e = !1;
  try {
    const t = {
      get passive() {
        return e = !0, !1;
      }
    }, a = () => {
    };
    window.addEventListener("test", a, t), window.removeEventListener("test", a);
  } catch {
    e = !1;
  }
  return Po = e, Po;
}
function Ju(e) {
  return e.type === "touchstart";
}
const p8 = {
  getInitialState: (e) => ({
    columnVisibility: {},
    ...e
  }),
  getDefaultOptions: (e) => ({
    onColumnVisibilityChange: $a("columnVisibility", e)
  }),
  createColumn: (e, t) => {
    e.toggleVisibility = (a) => {
      e.getCanHide() && t.setColumnVisibility((n) => ({
        ...n,
        [e.id]: a ?? !e.getIsVisible()
      }));
    }, e.getIsVisible = () => {
      var a, n;
      const r = e.columns;
      return (a = r.length ? r.some((s) => s.getIsVisible()) : (n = t.getState().columnVisibility) == null ? void 0 : n[e.id]) != null ? a : !0;
    }, e.getCanHide = () => {
      var a, n;
      return ((a = e.columnDef.enableHiding) != null ? a : !0) && ((n = t.options.enableHiding) != null ? n : !0);
    }, e.getToggleVisibilityHandler = () => (a) => {
      e.toggleVisibility == null || e.toggleVisibility(a.target.checked);
    };
  },
  createRow: (e, t) => {
    e._getAllVisibleCells = He(() => [e.getAllCells(), t.getState().columnVisibility], (a) => a.filter((n) => n.column.getIsVisible()), je(t.options, "debugRows", "_getAllVisibleCells")), e.getVisibleCells = He(() => [e.getLeftVisibleCells(), e.getCenterVisibleCells(), e.getRightVisibleCells()], (a, n, r) => [...a, ...n, ...r], je(t.options, "debugRows", "getVisibleCells"));
  },
  createTable: (e) => {
    const t = (a, n) => He(() => [n(), n().filter((r) => r.getIsVisible()).map((r) => r.id).join("_")], (r) => r.filter((s) => s.getIsVisible == null ? void 0 : s.getIsVisible()), je(e.options, "debugColumns", a));
    e.getVisibleFlatColumns = t("getVisibleFlatColumns", () => e.getAllFlatColumns()), e.getVisibleLeafColumns = t("getVisibleLeafColumns", () => e.getAllLeafColumns()), e.getLeftVisibleLeafColumns = t("getLeftVisibleLeafColumns", () => e.getLeftLeafColumns()), e.getRightVisibleLeafColumns = t("getRightVisibleLeafColumns", () => e.getRightLeafColumns()), e.getCenterVisibleLeafColumns = t("getCenterVisibleLeafColumns", () => e.getCenterLeafColumns()), e.setColumnVisibility = (a) => e.options.onColumnVisibilityChange == null ? void 0 : e.options.onColumnVisibilityChange(a), e.resetColumnVisibility = (a) => {
      var n;
      e.setColumnVisibility(a ? {} : (n = e.initialState.columnVisibility) != null ? n : {});
    }, e.toggleAllColumnsVisible = (a) => {
      var n;
      a = (n = a) != null ? n : !e.getIsAllColumnsVisible(), e.setColumnVisibility(e.getAllLeafColumns().reduce((r, s) => ({
        ...r,
        [s.id]: a || !(s.getCanHide != null && s.getCanHide())
      }), {}));
    }, e.getIsAllColumnsVisible = () => !e.getAllLeafColumns().some((a) => !(a.getIsVisible != null && a.getIsVisible())), e.getIsSomeColumnsVisible = () => e.getAllLeafColumns().some((a) => a.getIsVisible == null ? void 0 : a.getIsVisible()), e.getToggleAllColumnsVisibilityHandler = () => (a) => {
      var n;
      e.toggleAllColumnsVisible((n = a.target) == null ? void 0 : n.checked);
    };
  }
};
function vi(e, t) {
  return t ? t === "center" ? e.getCenterVisibleLeafColumns() : t === "left" ? e.getLeftVisibleLeafColumns() : e.getRightVisibleLeafColumns() : e.getVisibleLeafColumns();
}
const g8 = {
  createTable: (e) => {
    e._getGlobalFacetedRowModel = e.options.getFacetedRowModel && e.options.getFacetedRowModel(e, "__global__"), e.getGlobalFacetedRowModel = () => e.options.manualFiltering || !e._getGlobalFacetedRowModel ? e.getPreFilteredRowModel() : e._getGlobalFacetedRowModel(), e._getGlobalFacetedUniqueValues = e.options.getFacetedUniqueValues && e.options.getFacetedUniqueValues(e, "__global__"), e.getGlobalFacetedUniqueValues = () => e._getGlobalFacetedUniqueValues ? e._getGlobalFacetedUniqueValues() : /* @__PURE__ */ new Map(), e._getGlobalFacetedMinMaxValues = e.options.getFacetedMinMaxValues && e.options.getFacetedMinMaxValues(e, "__global__"), e.getGlobalFacetedMinMaxValues = () => {
      if (e._getGlobalFacetedMinMaxValues)
        return e._getGlobalFacetedMinMaxValues();
    };
  }
}, v8 = {
  getInitialState: (e) => ({
    globalFilter: void 0,
    ...e
  }),
  getDefaultOptions: (e) => ({
    onGlobalFilterChange: $a("globalFilter", e),
    globalFilterFn: "auto",
    getColumnCanGlobalFilter: (t) => {
      var a;
      const n = (a = e.getCoreRowModel().flatRows[0]) == null || (a = a._getAllCellsByColumnId()[t.id]) == null ? void 0 : a.getValue();
      return typeof n == "string" || typeof n == "number";
    }
  }),
  createColumn: (e, t) => {
    e.getCanGlobalFilter = () => {
      var a, n, r, s;
      return ((a = e.columnDef.enableGlobalFilter) != null ? a : !0) && ((n = t.options.enableGlobalFilter) != null ? n : !0) && ((r = t.options.enableFilters) != null ? r : !0) && ((s = t.options.getColumnCanGlobalFilter == null ? void 0 : t.options.getColumnCanGlobalFilter(e)) != null ? s : !0) && !!e.accessorFn;
    };
  },
  createTable: (e) => {
    e.getGlobalAutoFilterFn = () => _n.includesString, e.getGlobalFilterFn = () => {
      var t, a;
      const {
        globalFilterFn: n
      } = e.options;
      return ru(n) ? n : n === "auto" ? e.getGlobalAutoFilterFn() : (t = (a = e.options.filterFns) == null ? void 0 : a[n]) != null ? t : _n[n];
    }, e.setGlobalFilter = (t) => {
      e.options.onGlobalFilterChange == null || e.options.onGlobalFilterChange(t);
    }, e.resetGlobalFilter = (t) => {
      e.setGlobalFilter(t ? void 0 : e.initialState.globalFilter);
    };
  }
}, h8 = {
  getInitialState: (e) => ({
    expanded: {},
    ...e
  }),
  getDefaultOptions: (e) => ({
    onExpandedChange: $a("expanded", e),
    paginateExpandedRows: !0
  }),
  createTable: (e) => {
    let t = !1, a = !1;
    e._autoResetExpanded = () => {
      var n, r;
      if (!t) {
        e._queue(() => {
          t = !0;
        });
        return;
      }
      if ((n = (r = e.options.autoResetAll) != null ? r : e.options.autoResetExpanded) != null ? n : !e.options.manualExpanding) {
        if (a) return;
        a = !0, e._queue(() => {
          e.resetExpanded(), a = !1;
        });
      }
    }, e.setExpanded = (n) => e.options.onExpandedChange == null ? void 0 : e.options.onExpandedChange(n), e.toggleAllRowsExpanded = (n) => {
      n ?? !e.getIsAllRowsExpanded() ? e.setExpanded(!0) : e.setExpanded({});
    }, e.resetExpanded = (n) => {
      var r, s;
      e.setExpanded(n ? {} : (r = (s = e.initialState) == null ? void 0 : s.expanded) != null ? r : {});
    }, e.getCanSomeRowsExpand = () => e.getPrePaginationRowModel().flatRows.some((n) => n.getCanExpand()), e.getToggleAllRowsExpandedHandler = () => (n) => {
      n.persist == null || n.persist(), e.toggleAllRowsExpanded();
    }, e.getIsSomeRowsExpanded = () => {
      const n = e.getState().expanded;
      return n === !0 || Object.values(n).some(Boolean);
    }, e.getIsAllRowsExpanded = () => {
      const n = e.getState().expanded;
      return typeof n == "boolean" ? n === !0 : !(!Object.keys(n).length || e.getRowModel().flatRows.some((r) => !r.getIsExpanded()));
    }, e.getExpandedDepth = () => {
      let n = 0;
      return (e.getState().expanded === !0 ? Object.keys(e.getRowModel().rowsById) : Object.keys(e.getState().expanded)).forEach((s) => {
        const i = s.split(".");
        n = Math.max(n, i.length);
      }), n;
    }, e.getPreExpandedRowModel = () => e.getSortedRowModel(), e.getExpandedRowModel = () => (!e._getExpandedRowModel && e.options.getExpandedRowModel && (e._getExpandedRowModel = e.options.getExpandedRowModel(e)), e.options.manualExpanding || !e._getExpandedRowModel ? e.getPreExpandedRowModel() : e._getExpandedRowModel());
  },
  createRow: (e, t) => {
    e.toggleExpanded = (a) => {
      t.setExpanded((n) => {
        var r;
        const s = n === !0 ? !0 : !!(n != null && n[e.id]);
        let i = {};
        if (n === !0 ? Object.keys(t.getRowModel().rowsById).forEach((o) => {
          i[o] = !0;
        }) : i = n, a = (r = a) != null ? r : !s, !s && a)
          return {
            ...i,
            [e.id]: !0
          };
        if (s && !a) {
          const {
            [e.id]: o,
            ...l
          } = i;
          return l;
        }
        return n;
      });
    }, e.getIsExpanded = () => {
      var a;
      const n = t.getState().expanded;
      return !!((a = t.options.getIsRowExpanded == null ? void 0 : t.options.getIsRowExpanded(e)) != null ? a : n === !0 || n?.[e.id]);
    }, e.getCanExpand = () => {
      var a, n, r;
      return (a = t.options.getRowCanExpand == null ? void 0 : t.options.getRowCanExpand(e)) != null ? a : ((n = t.options.enableExpanding) != null ? n : !0) && !!((r = e.subRows) != null && r.length);
    }, e.getIsAllParentsExpanded = () => {
      let a = !0, n = e;
      for (; a && n.parentId; )
        n = t.getRow(n.parentId, !0), a = n.getIsExpanded();
      return a;
    }, e.getToggleExpandedHandler = () => {
      const a = e.getCanExpand();
      return () => {
        a && e.toggleExpanded();
      };
    };
  }
}, Bc = 0, Pc = 10, Qu = () => ({
  pageIndex: Bc,
  pageSize: Pc
}), m8 = {
  getInitialState: (e) => ({
    ...e,
    pagination: {
      ...Qu(),
      ...e?.pagination
    }
  }),
  getDefaultOptions: (e) => ({
    onPaginationChange: $a("pagination", e)
  }),
  createTable: (e) => {
    let t = !1, a = !1;
    e._autoResetPageIndex = () => {
      var n, r;
      if (!t) {
        e._queue(() => {
          t = !0;
        });
        return;
      }
      if ((n = (r = e.options.autoResetAll) != null ? r : e.options.autoResetPageIndex) != null ? n : !e.options.manualPagination) {
        if (a) return;
        a = !0, e._queue(() => {
          e.resetPageIndex(), a = !1;
        });
      }
    }, e.setPagination = (n) => {
      const r = (s) => Xn(n, s);
      return e.options.onPaginationChange == null ? void 0 : e.options.onPaginationChange(r);
    }, e.resetPagination = (n) => {
      var r;
      e.setPagination(n ? Qu() : (r = e.initialState.pagination) != null ? r : Qu());
    }, e.setPageIndex = (n) => {
      e.setPagination((r) => {
        let s = Xn(n, r.pageIndex);
        const i = typeof e.options.pageCount > "u" || e.options.pageCount === -1 ? Number.MAX_SAFE_INTEGER : e.options.pageCount - 1;
        return s = Math.max(0, Math.min(s, i)), {
          ...r,
          pageIndex: s
        };
      });
    }, e.resetPageIndex = (n) => {
      var r, s;
      e.setPageIndex(n ? Bc : (r = (s = e.initialState) == null || (s = s.pagination) == null ? void 0 : s.pageIndex) != null ? r : Bc);
    }, e.resetPageSize = (n) => {
      var r, s;
      e.setPageSize(n ? Pc : (r = (s = e.initialState) == null || (s = s.pagination) == null ? void 0 : s.pageSize) != null ? r : Pc);
    }, e.setPageSize = (n) => {
      e.setPagination((r) => {
        const s = Math.max(1, Xn(n, r.pageSize)), i = r.pageSize * r.pageIndex, o = Math.floor(i / s);
        return {
          ...r,
          pageIndex: o,
          pageSize: s
        };
      });
    }, e.setPageCount = (n) => e.setPagination((r) => {
      var s;
      let i = Xn(n, (s = e.options.pageCount) != null ? s : -1);
      return typeof i == "number" && (i = Math.max(-1, i)), {
        ...r,
        pageCount: i
      };
    }), e.getPageOptions = He(() => [e.getPageCount()], (n) => {
      let r = [];
      return n && n > 0 && (r = [...new Array(n)].fill(null).map((s, i) => i)), r;
    }, je(e.options, "debugTable", "getPageOptions")), e.getCanPreviousPage = () => e.getState().pagination.pageIndex > 0, e.getCanNextPage = () => {
      const {
        pageIndex: n
      } = e.getState().pagination, r = e.getPageCount();
      return r === -1 ? !0 : r === 0 ? !1 : n < r - 1;
    }, e.previousPage = () => e.setPageIndex((n) => n - 1), e.nextPage = () => e.setPageIndex((n) => n + 1), e.firstPage = () => e.setPageIndex(0), e.lastPage = () => e.setPageIndex(e.getPageCount() - 1), e.getPrePaginationRowModel = () => e.getExpandedRowModel(), e.getPaginationRowModel = () => (!e._getPaginationRowModel && e.options.getPaginationRowModel && (e._getPaginationRowModel = e.options.getPaginationRowModel(e)), e.options.manualPagination || !e._getPaginationRowModel ? e.getPrePaginationRowModel() : e._getPaginationRowModel()), e.getPageCount = () => {
      var n;
      return (n = e.options.pageCount) != null ? n : Math.ceil(e.getRowCount() / e.getState().pagination.pageSize);
    }, e.getRowCount = () => {
      var n;
      return (n = e.options.rowCount) != null ? n : e.getPrePaginationRowModel().rows.length;
    };
  }
}, Zu = () => ({
  top: [],
  bottom: []
}), y8 = {
  getInitialState: (e) => ({
    rowPinning: Zu(),
    ...e
  }),
  getDefaultOptions: (e) => ({
    onRowPinningChange: $a("rowPinning", e)
  }),
  createRow: (e, t) => {
    e.pin = (a, n, r) => {
      const s = n ? e.getLeafRows().map((l) => {
        let {
          id: d
        } = l;
        return d;
      }) : [], i = r ? e.getParentRows().map((l) => {
        let {
          id: d
        } = l;
        return d;
      }) : [], o = /* @__PURE__ */ new Set([...i, e.id, ...s]);
      t.setRowPinning((l) => {
        var d, c;
        if (a === "bottom") {
          var f, p;
          return {
            top: ((f = l?.top) != null ? f : []).filter((m) => !(o != null && o.has(m))),
            bottom: [...((p = l?.bottom) != null ? p : []).filter((m) => !(o != null && o.has(m))), ...Array.from(o)]
          };
        }
        if (a === "top") {
          var g, v;
          return {
            top: [...((g = l?.top) != null ? g : []).filter((m) => !(o != null && o.has(m))), ...Array.from(o)],
            bottom: ((v = l?.bottom) != null ? v : []).filter((m) => !(o != null && o.has(m)))
          };
        }
        return {
          top: ((d = l?.top) != null ? d : []).filter((m) => !(o != null && o.has(m))),
          bottom: ((c = l?.bottom) != null ? c : []).filter((m) => !(o != null && o.has(m)))
        };
      });
    }, e.getCanPin = () => {
      var a;
      const {
        enableRowPinning: n,
        enablePinning: r
      } = t.options;
      return typeof n == "function" ? n(e) : (a = n ?? r) != null ? a : !0;
    }, e.getIsPinned = () => {
      const a = [e.id], {
        top: n,
        bottom: r
      } = t.getState().rowPinning, s = a.some((o) => n?.includes(o)), i = a.some((o) => r?.includes(o));
      return s ? "top" : i ? "bottom" : !1;
    }, e.getPinnedIndex = () => {
      var a, n;
      const r = e.getIsPinned();
      if (!r) return -1;
      const s = (a = r === "top" ? t.getTopRows() : t.getBottomRows()) == null ? void 0 : a.map((i) => {
        let {
          id: o
        } = i;
        return o;
      });
      return (n = s?.indexOf(e.id)) != null ? n : -1;
    };
  },
  createTable: (e) => {
    e.setRowPinning = (t) => e.options.onRowPinningChange == null ? void 0 : e.options.onRowPinningChange(t), e.resetRowPinning = (t) => {
      var a, n;
      return e.setRowPinning(t ? Zu() : (a = (n = e.initialState) == null ? void 0 : n.rowPinning) != null ? a : Zu());
    }, e.getIsSomeRowsPinned = (t) => {
      var a;
      const n = e.getState().rowPinning;
      if (!t) {
        var r, s;
        return !!((r = n.top) != null && r.length || (s = n.bottom) != null && s.length);
      }
      return !!((a = n[t]) != null && a.length);
    }, e._getPinnedRows = (t, a, n) => {
      var r;
      return ((r = e.options.keepPinnedRows) == null || r ? (
        //get all rows that are pinned even if they would not be otherwise visible
        //account for expanded parent rows, but not pagination or filtering
        (a ?? []).map((i) => {
          const o = e.getRow(i, !0);
          return o.getIsAllParentsExpanded() ? o : null;
        })
      ) : (
        //else get only visible rows that are pinned
        (a ?? []).map((i) => t.find((o) => o.id === i))
      )).filter(Boolean).map((i) => ({
        ...i,
        position: n
      }));
    }, e.getTopRows = He(() => [e.getRowModel().rows, e.getState().rowPinning.top], (t, a) => e._getPinnedRows(t, a, "top"), je(e.options, "debugRows", "getTopRows")), e.getBottomRows = He(() => [e.getRowModel().rows, e.getState().rowPinning.bottom], (t, a) => e._getPinnedRows(t, a, "bottom"), je(e.options, "debugRows", "getBottomRows")), e.getCenterRows = He(() => [e.getRowModel().rows, e.getState().rowPinning.top, e.getState().rowPinning.bottom], (t, a, n) => {
      const r = /* @__PURE__ */ new Set([...a ?? [], ...n ?? []]);
      return t.filter((s) => !r.has(s.id));
    }, je(e.options, "debugRows", "getCenterRows"));
  }
}, b8 = {
  getInitialState: (e) => ({
    rowSelection: {},
    ...e
  }),
  getDefaultOptions: (e) => ({
    onRowSelectionChange: $a("rowSelection", e),
    enableRowSelection: !0,
    enableMultiRowSelection: !0,
    enableSubRowSelection: !0
    // enableGroupingRowSelection: false,
    // isAdditiveSelectEvent: (e: unknown) => !!e.metaKey,
    // isInclusiveSelectEvent: (e: unknown) => !!e.shiftKey,
  }),
  createTable: (e) => {
    e.setRowSelection = (t) => e.options.onRowSelectionChange == null ? void 0 : e.options.onRowSelectionChange(t), e.resetRowSelection = (t) => {
      var a;
      return e.setRowSelection(t ? {} : (a = e.initialState.rowSelection) != null ? a : {});
    }, e.toggleAllRowsSelected = (t) => {
      e.setRowSelection((a) => {
        t = typeof t < "u" ? t : !e.getIsAllRowsSelected();
        const n = {
          ...a
        }, r = e.getPreGroupedRowModel().flatRows;
        return t ? r.forEach((s) => {
          s.getCanSelect() && (n[s.id] = !0);
        }) : r.forEach((s) => {
          delete n[s.id];
        }), n;
      });
    }, e.toggleAllPageRowsSelected = (t) => e.setRowSelection((a) => {
      const n = typeof t < "u" ? t : !e.getIsAllPageRowsSelected(), r = {
        ...a
      };
      return e.getRowModel().rows.forEach((s) => {
        Dc(r, s.id, n, !0, e);
      }), r;
    }), e.getPreSelectedRowModel = () => e.getCoreRowModel(), e.getSelectedRowModel = He(() => [e.getState().rowSelection, e.getCoreRowModel()], (t, a) => Object.keys(t).length ? ed(e, a) : {
      rows: [],
      flatRows: [],
      rowsById: {}
    }, je(e.options, "debugTable", "getSelectedRowModel")), e.getFilteredSelectedRowModel = He(() => [e.getState().rowSelection, e.getFilteredRowModel()], (t, a) => Object.keys(t).length ? ed(e, a) : {
      rows: [],
      flatRows: [],
      rowsById: {}
    }, je(e.options, "debugTable", "getFilteredSelectedRowModel")), e.getGroupedSelectedRowModel = He(() => [e.getState().rowSelection, e.getSortedRowModel()], (t, a) => Object.keys(t).length ? ed(e, a) : {
      rows: [],
      flatRows: [],
      rowsById: {}
    }, je(e.options, "debugTable", "getGroupedSelectedRowModel")), e.getIsAllRowsSelected = () => {
      const t = e.getFilteredRowModel().flatRows, {
        rowSelection: a
      } = e.getState();
      let n = !!(t.length && Object.keys(a).length);
      return n && t.some((r) => r.getCanSelect() && !a[r.id]) && (n = !1), n;
    }, e.getIsAllPageRowsSelected = () => {
      const t = e.getPaginationRowModel().flatRows.filter((r) => r.getCanSelect()), {
        rowSelection: a
      } = e.getState();
      let n = !!t.length;
      return n && t.some((r) => !a[r.id]) && (n = !1), n;
    }, e.getIsSomeRowsSelected = () => {
      var t;
      const a = Object.keys((t = e.getState().rowSelection) != null ? t : {}).length;
      return a > 0 && a < e.getFilteredRowModel().flatRows.length;
    }, e.getIsSomePageRowsSelected = () => {
      const t = e.getPaginationRowModel().flatRows;
      return e.getIsAllPageRowsSelected() ? !1 : t.filter((a) => a.getCanSelect()).some((a) => a.getIsSelected() || a.getIsSomeSelected());
    }, e.getToggleAllRowsSelectedHandler = () => (t) => {
      e.toggleAllRowsSelected(t.target.checked);
    }, e.getToggleAllPageRowsSelectedHandler = () => (t) => {
      e.toggleAllPageRowsSelected(t.target.checked);
    };
  },
  createRow: (e, t) => {
    e.toggleSelected = (a, n) => {
      const r = e.getIsSelected();
      t.setRowSelection((s) => {
        var i;
        if (a = typeof a < "u" ? a : !r, e.getCanSelect() && r === a)
          return s;
        const o = {
          ...s
        };
        return Dc(o, e.id, a, (i = n?.selectChildren) != null ? i : !0, t), o;
      });
    }, e.getIsSelected = () => {
      const {
        rowSelection: a
      } = t.getState();
      return Bp(e, a);
    }, e.getIsSomeSelected = () => {
      const {
        rowSelection: a
      } = t.getState();
      return Mc(e, a) === "some";
    }, e.getIsAllSubRowsSelected = () => {
      const {
        rowSelection: a
      } = t.getState();
      return Mc(e, a) === "all";
    }, e.getCanSelect = () => {
      var a;
      return typeof t.options.enableRowSelection == "function" ? t.options.enableRowSelection(e) : (a = t.options.enableRowSelection) != null ? a : !0;
    }, e.getCanSelectSubRows = () => {
      var a;
      return typeof t.options.enableSubRowSelection == "function" ? t.options.enableSubRowSelection(e) : (a = t.options.enableSubRowSelection) != null ? a : !0;
    }, e.getCanMultiSelect = () => {
      var a;
      return typeof t.options.enableMultiRowSelection == "function" ? t.options.enableMultiRowSelection(e) : (a = t.options.enableMultiRowSelection) != null ? a : !0;
    }, e.getToggleSelectedHandler = () => {
      const a = e.getCanSelect();
      return (n) => {
        var r;
        a && e.toggleSelected((r = n.target) == null ? void 0 : r.checked);
      };
    };
  }
}, Dc = (e, t, a, n, r) => {
  var s;
  const i = r.getRow(t, !0);
  a ? (i.getCanMultiSelect() || Object.keys(e).forEach((o) => delete e[o]), i.getCanSelect() && (e[t] = !0)) : delete e[t], n && (s = i.subRows) != null && s.length && i.getCanSelectSubRows() && i.subRows.forEach((o) => Dc(e, o.id, a, n, r));
};
function ed(e, t) {
  const a = e.getState().rowSelection, n = [], r = {}, s = function(i, o) {
    return i.map((l) => {
      var d;
      const c = Bp(l, a);
      if (c && (n.push(l), r[l.id] = l), (d = l.subRows) != null && d.length && (l = {
        ...l,
        subRows: s(l.subRows)
      }), c)
        return l;
    }).filter(Boolean);
  };
  return {
    rows: s(t.rows),
    flatRows: n,
    rowsById: r
  };
}
function Bp(e, t) {
  var a;
  return (a = t[e.id]) != null ? a : !1;
}
function Mc(e, t, a) {
  var n;
  if (!((n = e.subRows) != null && n.length)) return !1;
  let r = !0, s = !1;
  return e.subRows.forEach((i) => {
    if (!(s && !r) && (i.getCanSelect() && (Bp(i, t) ? s = !0 : r = !1), i.subRows && i.subRows.length)) {
      const o = Mc(i, t);
      o === "all" ? s = !0 : (o === "some" && (s = !0), r = !1);
    }
  }), r ? "all" : s ? "some" : !1;
}
const Rc = /([0-9]+)/gm, w8 = (e, t, a) => Q1(rr(e.getValue(a)).toLowerCase(), rr(t.getValue(a)).toLowerCase()), C8 = (e, t, a) => Q1(rr(e.getValue(a)), rr(t.getValue(a))), x8 = (e, t, a) => Pp(rr(e.getValue(a)).toLowerCase(), rr(t.getValue(a)).toLowerCase()), S8 = (e, t, a) => Pp(rr(e.getValue(a)), rr(t.getValue(a))), _8 = (e, t, a) => {
  const n = e.getValue(a), r = t.getValue(a);
  return n > r ? 1 : n < r ? -1 : 0;
}, k8 = (e, t, a) => Pp(e.getValue(a), t.getValue(a));
function Pp(e, t) {
  return e === t ? 0 : e > t ? 1 : -1;
}
function rr(e) {
  return typeof e == "number" ? isNaN(e) || e === 1 / 0 || e === -1 / 0 ? "" : String(e) : typeof e == "string" ? e : "";
}
function Q1(e, t) {
  const a = e.split(Rc).filter(Boolean), n = t.split(Rc).filter(Boolean);
  for (; a.length && n.length; ) {
    const r = a.shift(), s = n.shift(), i = parseInt(r, 10), o = parseInt(s, 10), l = [i, o].sort();
    if (isNaN(l[0])) {
      if (r > s)
        return 1;
      if (s > r)
        return -1;
      continue;
    }
    if (isNaN(l[1]))
      return isNaN(i) ? -1 : 1;
    if (i > o)
      return 1;
    if (o > i)
      return -1;
  }
  return a.length - n.length;
}
const Js = {
  alphanumeric: w8,
  alphanumericCaseSensitive: C8,
  text: x8,
  textCaseSensitive: S8,
  datetime: _8,
  basic: k8
}, A8 = {
  getInitialState: (e) => ({
    sorting: [],
    ...e
  }),
  getDefaultColumnDef: () => ({
    sortingFn: "auto",
    sortUndefined: 1
  }),
  getDefaultOptions: (e) => ({
    onSortingChange: $a("sorting", e),
    isMultiSortEvent: (t) => t.shiftKey
  }),
  createColumn: (e, t) => {
    e.getAutoSortingFn = () => {
      const a = t.getFilteredRowModel().flatRows.slice(10);
      let n = !1;
      for (const r of a) {
        const s = r?.getValue(e.id);
        if (Object.prototype.toString.call(s) === "[object Date]")
          return Js.datetime;
        if (typeof s == "string" && (n = !0, s.split(Rc).length > 1))
          return Js.alphanumeric;
      }
      return n ? Js.text : Js.basic;
    }, e.getAutoSortDir = () => {
      const a = t.getFilteredRowModel().flatRows[0];
      return typeof a?.getValue(e.id) == "string" ? "asc" : "desc";
    }, e.getSortingFn = () => {
      var a, n;
      if (!e)
        throw new Error();
      return ru(e.columnDef.sortingFn) ? e.columnDef.sortingFn : e.columnDef.sortingFn === "auto" ? e.getAutoSortingFn() : (a = (n = t.options.sortingFns) == null ? void 0 : n[e.columnDef.sortingFn]) != null ? a : Js[e.columnDef.sortingFn];
    }, e.toggleSorting = (a, n) => {
      const r = e.getNextSortingOrder(), s = typeof a < "u" && a !== null;
      t.setSorting((i) => {
        const o = i?.find((g) => g.id === e.id), l = i?.findIndex((g) => g.id === e.id);
        let d = [], c, f = s ? a : r === "desc";
        if (i != null && i.length && e.getCanMultiSort() && n ? o ? c = "toggle" : c = "add" : i != null && i.length && l !== i.length - 1 ? c = "replace" : o ? c = "toggle" : c = "replace", c === "toggle" && (s || r || (c = "remove")), c === "add") {
          var p;
          d = [...i, {
            id: e.id,
            desc: f
          }], d.splice(0, d.length - ((p = t.options.maxMultiSortColCount) != null ? p : Number.MAX_SAFE_INTEGER));
        } else c === "toggle" ? d = i.map((g) => g.id === e.id ? {
          ...g,
          desc: f
        } : g) : c === "remove" ? d = i.filter((g) => g.id !== e.id) : d = [{
          id: e.id,
          desc: f
        }];
        return d;
      });
    }, e.getFirstSortDir = () => {
      var a, n;
      return ((a = (n = e.columnDef.sortDescFirst) != null ? n : t.options.sortDescFirst) != null ? a : e.getAutoSortDir() === "desc") ? "desc" : "asc";
    }, e.getNextSortingOrder = (a) => {
      var n, r;
      const s = e.getFirstSortDir(), i = e.getIsSorted();
      return i ? i !== s && ((n = t.options.enableSortingRemoval) == null || n) && // If enableSortRemove, enable in general
      (!(a && (r = t.options.enableMultiRemove) != null) || r) ? !1 : i === "desc" ? "asc" : "desc" : s;
    }, e.getCanSort = () => {
      var a, n;
      return ((a = e.columnDef.enableSorting) != null ? a : !0) && ((n = t.options.enableSorting) != null ? n : !0) && !!e.accessorFn;
    }, e.getCanMultiSort = () => {
      var a, n;
      return (a = (n = e.columnDef.enableMultiSort) != null ? n : t.options.enableMultiSort) != null ? a : !!e.accessorFn;
    }, e.getIsSorted = () => {
      var a;
      const n = (a = t.getState().sorting) == null ? void 0 : a.find((r) => r.id === e.id);
      return n ? n.desc ? "desc" : "asc" : !1;
    }, e.getSortIndex = () => {
      var a, n;
      return (a = (n = t.getState().sorting) == null ? void 0 : n.findIndex((r) => r.id === e.id)) != null ? a : -1;
    }, e.clearSorting = () => {
      t.setSorting((a) => a != null && a.length ? a.filter((n) => n.id !== e.id) : []);
    }, e.getToggleSortingHandler = () => {
      const a = e.getCanSort();
      return (n) => {
        a && (n.persist == null || n.persist(), e.toggleSorting == null || e.toggleSorting(void 0, e.getCanMultiSort() ? t.options.isMultiSortEvent == null ? void 0 : t.options.isMultiSortEvent(n) : !1));
      };
    };
  },
  createTable: (e) => {
    e.setSorting = (t) => e.options.onSortingChange == null ? void 0 : e.options.onSortingChange(t), e.resetSorting = (t) => {
      var a, n;
      e.setSorting(t ? [] : (a = (n = e.initialState) == null ? void 0 : n.sorting) != null ? a : []);
    }, e.getPreSortedRowModel = () => e.getGroupedRowModel(), e.getSortedRowModel = () => (!e._getSortedRowModel && e.options.getSortedRowModel && (e._getSortedRowModel = e.options.getSortedRowModel(e)), e.options.manualSorting || !e._getSortedRowModel ? e.getPreSortedRowModel() : e._getSortedRowModel());
  }
}, $8 = [
  W6,
  p8,
  l8,
  u8,
  Y6,
  X6,
  g8,
  //depends on ColumnFaceting
  v8,
  //depends on ColumnFiltering
  A8,
  i8,
  //depends on RowSorting
  h8,
  m8,
  y8,
  b8,
  c8
];
function I8(e) {
  var t, a;
  process.env.NODE_ENV !== "production" && (e.debugAll || e.debugTable) && console.info("Creating Table Instance...");
  const n = [...$8, ...(t = e._features) != null ? t : []];
  let r = {
    _features: n
  };
  const s = r._features.reduce((p, g) => Object.assign(p, g.getDefaultOptions == null ? void 0 : g.getDefaultOptions(r)), {}), i = (p) => r.options.mergeOptions ? r.options.mergeOptions(s, p) : {
    ...s,
    ...p
  };
  let l = {
    ...{},
    ...(a = e.initialState) != null ? a : {}
  };
  r._features.forEach((p) => {
    var g;
    l = (g = p.getInitialState == null ? void 0 : p.getInitialState(l)) != null ? g : l;
  });
  const d = [];
  let c = !1;
  const f = {
    _features: n,
    options: {
      ...s,
      ...e
    },
    initialState: l,
    _queue: (p) => {
      d.push(p), c || (c = !0, Promise.resolve().then(() => {
        for (; d.length; )
          d.shift()();
        c = !1;
      }).catch((g) => setTimeout(() => {
        throw g;
      })));
    },
    reset: () => {
      r.setState(r.initialState);
    },
    setOptions: (p) => {
      const g = Xn(p, r.options);
      r.options = i(g);
    },
    getState: () => r.options.state,
    setState: (p) => {
      r.options.onStateChange == null || r.options.onStateChange(p);
    },
    _getRowId: (p, g, v) => {
      var m;
      return (m = r.options.getRowId == null ? void 0 : r.options.getRowId(p, g, v)) != null ? m : `${v ? [v.id, g].join(".") : g}`;
    },
    getCoreRowModel: () => (r._getCoreRowModel || (r._getCoreRowModel = r.options.getCoreRowModel(r)), r._getCoreRowModel()),
    // The final calls start at the bottom of the model,
    // expanded rows, which then work their way up
    getRowModel: () => r.getPaginationRowModel(),
    //in next version, we should just pass in the row model as the optional 2nd arg
    getRow: (p, g) => {
      let v = (g ? r.getPrePaginationRowModel() : r.getRowModel()).rowsById[p];
      if (!v && (v = r.getCoreRowModel().rowsById[p], !v))
        throw process.env.NODE_ENV !== "production" ? new Error(`getRow could not find row with ID: ${p}`) : new Error();
      return v;
    },
    _getDefaultColumnDef: He(() => [r.options.defaultColumn], (p) => {
      var g;
      return p = (g = p) != null ? g : {}, {
        header: (v) => {
          const m = v.header.column.columnDef;
          return m.accessorKey ? m.accessorKey : m.accessorFn ? m.id : null;
        },
        // footer: props => props.header.column.id,
        cell: (v) => {
          var m, y;
          return (m = (y = v.renderValue()) == null || y.toString == null ? void 0 : y.toString()) != null ? m : null;
        },
        ...r._features.reduce((v, m) => Object.assign(v, m.getDefaultColumnDef == null ? void 0 : m.getDefaultColumnDef()), {}),
        ...p
      };
    }, je(e, "debugColumns", "_getDefaultColumnDef")),
    _getColumnDefs: () => r.options.columns,
    getAllColumns: He(() => [r._getColumnDefs()], (p) => {
      const g = function(v, m, y) {
        return y === void 0 && (y = 0), v.map((x) => {
          const b = U6(r, x, y, m), C = x;
          return b.columns = C.columns ? g(C.columns, b, y + 1) : [], b;
        });
      };
      return g(p);
    }, je(e, "debugColumns", "getAllColumns")),
    getAllFlatColumns: He(() => [r.getAllColumns()], (p) => p.flatMap((g) => g.getFlatColumns()), je(e, "debugColumns", "getAllFlatColumns")),
    _getAllFlatColumnsById: He(() => [r.getAllFlatColumns()], (p) => p.reduce((g, v) => (g[v.id] = v, g), {}), je(e, "debugColumns", "getAllFlatColumnsById")),
    getAllLeafColumns: He(() => [r.getAllColumns(), r._getOrderColumnsFn()], (p, g) => {
      let v = p.flatMap((m) => m.getLeafColumns());
      return g(v);
    }, je(e, "debugColumns", "getAllLeafColumns")),
    getColumn: (p) => {
      const g = r._getAllFlatColumnsById()[p];
      return process.env.NODE_ENV !== "production" && !g && console.error(`[Table] Column with id '${p}' does not exist.`), g;
    }
  };
  Object.assign(r, f);
  for (let p = 0; p < r._features.length; p++) {
    const g = r._features[p];
    g == null || g.createTable == null || g.createTable(r);
  }
  return r;
}
function E8() {
  return (e) => He(() => [e.options.data], (t) => {
    const a = {
      rows: [],
      flatRows: [],
      rowsById: {}
    }, n = function(r, s, i) {
      s === void 0 && (s = 0);
      const o = [];
      for (let d = 0; d < r.length; d++) {
        const c = Ep(e, e._getRowId(r[d], d, i), r[d], d, s, void 0, i?.id);
        if (a.flatRows.push(c), a.rowsById[c.id] = c, o.push(c), e.options.getSubRows) {
          var l;
          c.originalSubRows = e.options.getSubRows(r[d], d), (l = c.originalSubRows) != null && l.length && (c.subRows = n(c.originalSubRows, s + 1, c));
        }
      }
      return o;
    };
    return a.rows = n(t), a;
  }, je(e.options, "debugTable", "getRowModel", () => e._autoResetPageIndex()));
}
function T8() {
  return (e) => He(() => [e.getState().expanded, e.getPreExpandedRowModel(), e.options.paginateExpandedRows], (t, a, n) => !a.rows.length || t !== !0 && !Object.keys(t ?? {}).length || !n ? a : B8(a), je(e.options, "debugTable", "getExpandedRowModel"));
}
function B8(e) {
  const t = [], a = (n) => {
    var r;
    t.push(n), (r = n.subRows) != null && r.length && n.getIsExpanded() && n.subRows.forEach(a);
  };
  return e.rows.forEach(a), {
    rows: t,
    flatRows: e.flatRows,
    rowsById: e.rowsById
  };
}
function P8(e, t, a) {
  return a.options.filterFromLeafRows ? D8(e, t, a) : M8(e, t, a);
}
function D8(e, t, a) {
  var n;
  const r = [], s = {}, i = (n = a.options.maxLeafRowFilterDepth) != null ? n : 100, o = function(l, d) {
    d === void 0 && (d = 0);
    const c = [];
    for (let p = 0; p < l.length; p++) {
      var f;
      let g = l[p];
      const v = Ep(a, g.id, g.original, g.index, g.depth, void 0, g.parentId);
      if (v.columnFilters = g.columnFilters, (f = g.subRows) != null && f.length && d < i) {
        if (v.subRows = o(g.subRows, d + 1), g = v, t(g) && !v.subRows.length) {
          c.push(g), s[g.id] = g, r.push(g);
          continue;
        }
        if (t(g) || v.subRows.length) {
          c.push(g), s[g.id] = g, r.push(g);
          continue;
        }
      } else
        g = v, t(g) && (c.push(g), s[g.id] = g, r.push(g));
    }
    return c;
  };
  return {
    rows: o(e),
    flatRows: r,
    rowsById: s
  };
}
function M8(e, t, a) {
  var n;
  const r = [], s = {}, i = (n = a.options.maxLeafRowFilterDepth) != null ? n : 100, o = function(l, d) {
    d === void 0 && (d = 0);
    const c = [];
    for (let p = 0; p < l.length; p++) {
      let g = l[p];
      if (t(g)) {
        var f;
        if ((f = g.subRows) != null && f.length && d < i) {
          const m = Ep(a, g.id, g.original, g.index, g.depth, void 0, g.parentId);
          m.subRows = o(g.subRows, d + 1), g = m;
        }
        c.push(g), r.push(g), s[g.id] = g;
      }
    }
    return c;
  };
  return {
    rows: o(e),
    flatRows: r,
    rowsById: s
  };
}
function R8() {
  return (e) => He(() => [e.getPreFilteredRowModel(), e.getState().columnFilters, e.getState().globalFilter], (t, a, n) => {
    if (!t.rows.length || !(a != null && a.length) && !n) {
      for (let p = 0; p < t.flatRows.length; p++)
        t.flatRows[p].columnFilters = {}, t.flatRows[p].columnFiltersMeta = {};
      return t;
    }
    const r = [], s = [];
    (a ?? []).forEach((p) => {
      var g;
      const v = e.getColumn(p.id);
      if (!v)
        return;
      const m = v.getFilterFn();
      if (!m) {
        process.env.NODE_ENV !== "production" && console.warn(`Could not find a valid 'column.filterFn' for column with the ID: ${v.id}.`);
        return;
      }
      r.push({
        id: p.id,
        filterFn: m,
        resolvedValue: (g = m.resolveFilterValue == null ? void 0 : m.resolveFilterValue(p.value)) != null ? g : p.value
      });
    });
    const i = (a ?? []).map((p) => p.id), o = e.getGlobalFilterFn(), l = e.getAllLeafColumns().filter((p) => p.getCanGlobalFilter());
    n && o && l.length && (i.push("__global__"), l.forEach((p) => {
      var g;
      s.push({
        id: p.id,
        filterFn: o,
        resolvedValue: (g = o.resolveFilterValue == null ? void 0 : o.resolveFilterValue(n)) != null ? g : n
      });
    }));
    let d, c;
    for (let p = 0; p < t.flatRows.length; p++) {
      const g = t.flatRows[p];
      if (g.columnFilters = {}, r.length)
        for (let v = 0; v < r.length; v++) {
          d = r[v];
          const m = d.id;
          g.columnFilters[m] = d.filterFn(g, m, d.resolvedValue, (y) => {
            g.columnFiltersMeta[m] = y;
          });
        }
      if (s.length) {
        for (let v = 0; v < s.length; v++) {
          c = s[v];
          const m = c.id;
          if (c.filterFn(g, m, c.resolvedValue, (y) => {
            g.columnFiltersMeta[m] = y;
          })) {
            g.columnFilters.__global__ = !0;
            break;
          }
        }
        g.columnFilters.__global__ !== !0 && (g.columnFilters.__global__ = !1);
      }
    }
    const f = (p) => {
      for (let g = 0; g < i.length; g++)
        if (p.columnFilters[i[g]] === !1)
          return !1;
      return !0;
    };
    return P8(t.rows, f, e);
  }, je(e.options, "debugTable", "getFilteredRowModel", () => e._autoResetPageIndex()));
}
function L8() {
  return (e) => He(() => [e.getState().sorting, e.getPreSortedRowModel()], (t, a) => {
    if (!a.rows.length || !(t != null && t.length))
      return a;
    const n = e.getState().sorting, r = [], s = n.filter((l) => {
      var d;
      return (d = e.getColumn(l.id)) == null ? void 0 : d.getCanSort();
    }), i = {};
    s.forEach((l) => {
      const d = e.getColumn(l.id);
      d && (i[l.id] = {
        sortUndefined: d.columnDef.sortUndefined,
        invertSorting: d.columnDef.invertSorting,
        sortingFn: d.getSortingFn()
      });
    });
    const o = (l) => {
      const d = l.map((c) => ({
        ...c
      }));
      return d.sort((c, f) => {
        for (let g = 0; g < s.length; g += 1) {
          var p;
          const v = s[g], m = i[v.id], y = m.sortUndefined, x = (p = v?.desc) != null ? p : !1;
          let b = 0;
          if (y) {
            const C = c.getValue(v.id), w = f.getValue(v.id), $ = C === void 0, B = w === void 0;
            if ($ || B) {
              if (y === "first") return $ ? -1 : 1;
              if (y === "last") return $ ? 1 : -1;
              b = $ && B ? 0 : $ ? y : -y;
            }
          }
          if (b === 0 && (b = m.sortingFn(c, f, v.id)), b !== 0)
            return x && (b *= -1), m.invertSorting && (b *= -1), b;
        }
        return c.index - f.index;
      }), d.forEach((c) => {
        var f;
        r.push(c), (f = c.subRows) != null && f.length && (c.subRows = o(c.subRows));
      }), d;
    };
    return {
      rows: o(a.rows),
      flatRows: r,
      rowsById: a.rowsById
    };
  }, je(e.options, "debugTable", "getSortedRowModel", () => e._autoResetPageIndex()));
}
/**
   * vue-table
   *
   * Copyright (c) TanStack
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   */
function Do() {
  return !0;
}
const O8 = Symbol("merge-proxy"), F8 = {
  get(e, t, a) {
    return t === O8 ? a : e.get(t);
  },
  has(e, t) {
    return e.has(t);
  },
  set: Do,
  deleteProperty: Do,
  getOwnPropertyDescriptor(e, t) {
    return {
      configurable: !0,
      enumerable: !0,
      get() {
        return e.get(t);
      },
      set: Do,
      deleteProperty: Do
    };
  },
  ownKeys(e) {
    return e.keys();
  }
};
function td(e) {
  return "value" in e ? e.value : e;
}
function ri() {
  for (var e = arguments.length, t = new Array(e), a = 0; a < e; a++)
    t[a] = arguments[a];
  return new Proxy({
    get(n) {
      for (let r = t.length - 1; r >= 0; r--) {
        const s = td(t[r])[n];
        if (s !== void 0) return s;
      }
    },
    has(n) {
      for (let r = t.length - 1; r >= 0; r--)
        if (n in td(t[r])) return !0;
      return !1;
    },
    keys() {
      const n = [];
      for (let r = 0; r < t.length; r++) n.push(...Object.keys(td(t[r])));
      return [...Array.from(new Set(n))];
    }
  }, F8);
}
const ad = L({
  props: ["render", "props"],
  setup: (e) => () => typeof e.render == "function" || typeof e.render == "object" ? ln(e.render, e.props) : e.render
});
function nm(e) {
  return ri(e, {
    data: u(e.data)
  });
}
function z8(e) {
  const t = ht(e.data), a = ri({
    state: {},
    // Dummy state
    onStateChange: () => {
    },
    // noop
    renderFallbackValue: null,
    mergeOptions(s, i) {
      return t ? {
        ...s,
        ...i
      } : ri(s, i);
    }
  }, t ? nm(e) : e), n = I8(a);
  if (t) {
    const s = rt(e.data);
    ye(s, () => {
      n.setState((i) => ({
        ...i,
        data: s.value
      }));
    }, {
      immediate: !0
    });
  }
  const r = N(n.initialState);
  return ot(() => {
    n.setOptions((s) => {
      var i;
      const o = new Proxy({}, {
        get: (l, d) => r.value[d]
      });
      return ri(s, t ? nm(e) : e, {
        // merge the initialState and `options.state`
        // create a new proxy on each `setOptions` call
        // and get the value from state on each property access
        state: ri(o, (i = e.state) != null ? i : {}),
        // Similarly, we'll maintain both our internal state and any user-provided
        // state.
        onStateChange: (l) => {
          l instanceof Function ? r.value = l(r.value) : r.value = l, e.onStateChange == null || e.onStateChange(l);
        }
      });
    });
  }), n;
}
const q8 = {
  slots: {
    root: "relative overflow-auto",
    base: "min-w-full overflow-clip",
    caption: "sr-only",
    thead: "relative",
    tbody: "divide-y divide-default [&>tr]:data-[selectable=true]:hover:bg-elevated/50 [&>tr]:data-[selectable=true]:focus-visible:outline-primary",
    tfoot: "relative",
    tr: "data-[selected=true]:bg-elevated/50",
    th: "px-4 py-3.5 text-sm text-highlighted text-left rtl:text-right font-semibold [&:has([role=checkbox])]:pe-0",
    td: "p-4 text-sm text-muted whitespace-nowrap [&:has([role=checkbox])]:pe-0",
    separator: "absolute z-[1] left-0 w-full h-px bg-(--ui-border-accented)",
    empty: "py-6 text-center text-sm text-muted",
    loading: "py-6 text-center"
  },
  variants: {
    pinned: {
      true: {
        th: "sticky bg-default/75 data-[pinned=left]:left-0 data-[pinned=right]:right-0",
        td: "sticky bg-default/75 data-[pinned=left]:left-0 data-[pinned=right]:right-0"
      }
    },
    sticky: {
      true: {
        thead: "sticky top-0 inset-x-0 bg-default/75 z-[1] backdrop-blur",
        tfoot: "sticky bottom-0 inset-x-0 bg-default/75 z-[1] backdrop-blur"
      },
      header: {
        thead: "sticky top-0 inset-x-0 bg-default/75 z-[1] backdrop-blur"
      },
      footer: {
        tfoot: "sticky bottom-0 inset-x-0 bg-default/75 z-[1] backdrop-blur"
      }
    },
    loading: {
      true: {
        thead: "after:absolute after:z-[1] after:h-px"
      }
    },
    loadingAnimation: {
      carousel: "",
      "carousel-inverse": "",
      swing: "",
      elastic: ""
    },
    loadingColor: {
      primary: "",
      secondary: "",
      success: "",
      info: "",
      warning: "",
      error: "",
      neutral: ""
    }
  },
  compoundVariants: [
    {
      loading: !0,
      loadingColor: "primary",
      class: {
        thead: "after:bg-primary"
      }
    },
    {
      loading: !0,
      loadingColor: "secondary",
      class: {
        thead: "after:bg-secondary"
      }
    },
    {
      loading: !0,
      loadingColor: "success",
      class: {
        thead: "after:bg-success"
      }
    },
    {
      loading: !0,
      loadingColor: "info",
      class: {
        thead: "after:bg-info"
      }
    },
    {
      loading: !0,
      loadingColor: "warning",
      class: {
        thead: "after:bg-warning"
      }
    },
    {
      loading: !0,
      loadingColor: "error",
      class: {
        thead: "after:bg-error"
      }
    },
    {
      loading: !0,
      loadingColor: "neutral",
      class: {
        thead: "after:bg-inverted"
      }
    },
    {
      loading: !0,
      loadingAnimation: "carousel",
      class: {
        thead: "after:animate-[carousel_2s_ease-in-out_infinite] rtl:after:animate-[carousel-rtl_2s_ease-in-out_infinite]"
      }
    },
    {
      loading: !0,
      loadingAnimation: "carousel-inverse",
      class: {
        thead: "after:animate-[carousel-inverse_2s_ease-in-out_infinite] rtl:after:animate-[carousel-inverse-rtl_2s_ease-in-out_infinite]"
      }
    },
    {
      loading: !0,
      loadingAnimation: "swing",
      class: {
        thead: "after:animate-[swing_2s_ease-in-out_infinite]"
      }
    },
    {
      loading: !0,
      loadingAnimation: "elastic",
      class: {
        thead: "after:animate-[elastic_2s_ease-in-out_infinite]"
      }
    }
  ],
  defaultVariants: {
    loadingColor: "primary",
    loadingAnimation: "carousel"
  }
}, V8 = ["data-pinned", "scope", "colspan", "rowspan"], N8 = ["data-selected", "data-selectable", "data-expanded", "role", "tabindex", "onClick", "onPointerenter", "onContextmenu"], H8 = ["data-pinned", "colspan", "rowspan"], j8 = ["colspan"], K8 = { key: 1 }, G8 = ["colspan"], U8 = { key: 2 }, W8 = ["colspan"], Y8 = ["data-pinned", "colspan", "rowspan"], Sj = /* @__PURE__ */ L({
  __name: "Table",
  props: /* @__PURE__ */ mt({
    as: {},
    data: {},
    columns: {},
    caption: {},
    meta: {},
    empty: {},
    sticky: { type: [Boolean, String] },
    loading: { type: Boolean },
    loadingColor: {},
    loadingAnimation: {},
    watchOptions: { default: () => ({
      deep: !0
    }) },
    globalFilterOptions: {},
    columnFiltersOptions: {},
    columnPinningOptions: {},
    columnSizingOptions: {},
    visibilityOptions: {},
    sortingOptions: {},
    groupingOptions: {},
    expandedOptions: {},
    rowSelectionOptions: {},
    rowPinningOptions: {},
    paginationOptions: {},
    facetedOptions: {},
    onSelect: {},
    onHover: {},
    onContextmenu: {},
    class: {},
    ui: {},
    state: {},
    onStateChange: {},
    renderFallbackValue: {},
    _features: {},
    autoResetAll: { type: Boolean },
    debugAll: { type: Boolean },
    debugCells: { type: Boolean },
    debugColumns: { type: Boolean },
    debugHeaders: { type: Boolean },
    debugRows: { type: Boolean },
    debugTable: { type: Boolean },
    defaultColumn: {},
    getRowId: {},
    getSubRows: {},
    initialState: {},
    mergeOptions: {}
  }, {
    globalFilter: { default: void 0 },
    globalFilterModifiers: {},
    columnFilters: { default: [] },
    columnFiltersModifiers: {},
    columnOrder: { default: [] },
    columnOrderModifiers: {},
    columnVisibility: { default: {} },
    columnVisibilityModifiers: {},
    columnPinning: { default: {} },
    columnPinningModifiers: {},
    columnSizing: { default: {} },
    columnSizingModifiers: {},
    columnSizingInfo: { default: {} },
    columnSizingInfoModifiers: {},
    rowSelection: { default: {} },
    rowSelectionModifiers: {},
    rowPinning: { default: {} },
    rowPinningModifiers: {},
    sorting: { default: [] },
    sortingModifiers: {},
    grouping: { default: [] },
    groupingModifiers: {},
    expanded: { type: [Boolean, Object], default: {} },
    expandedModifiers: {},
    pagination: { default: {} },
    paginationModifiers: {}
  }),
  emits: ["update:globalFilter", "update:columnFilters", "update:columnOrder", "update:columnVisibility", "update:columnPinning", "update:columnSizing", "update:columnSizingInfo", "update:rowSelection", "update:rowPinning", "update:sorting", "update:grouping", "update:expanded", "update:pagination"],
  setup(e, { expose: t }) {
    const a = e, n = Se(), { t: r } = it(), s = ue(), i = N(a.data ?? []), o = T(() => a.columns ?? Object.keys(i.value[0] ?? {}).map((z) => ({ accessorKey: z, header: H6(z) }))), l = T(() => a.meta ?? {}), d = T(() => W({ extend: W(q8), ...s.ui?.table || {} })({
      sticky: a.sticky,
      loading: a.loading,
      loadingColor: a.loadingColor,
      loadingAnimation: a.loadingAnimation
    })), c = T(() => {
      function z(G) {
        for (const Y of G)
          if ("footer" in Y || "columns" in Y && z(Y.columns))
            return !0;
        return !1;
      }
      return z(o.value);
    }), f = lt(e, "globalFilter"), p = lt(e, "columnFilters"), g = lt(e, "columnOrder"), v = lt(e, "columnVisibility"), m = lt(e, "columnPinning"), y = lt(e, "columnSizing"), x = lt(e, "columnSizingInfo"), b = lt(e, "rowSelection"), C = lt(e, "rowPinning"), w = lt(e, "sorting"), $ = lt(e, "grouping"), B = lt(e, "expanded"), I = lt(e, "pagination"), E = N(null), P = z8({
      ...Ui(a, "as", "data", "columns", "caption", "sticky", "loading", "loadingColor", "loadingAnimation", "class", "ui"),
      data: i,
      get columns() {
        return o.value;
      },
      meta: l.value,
      getCoreRowModel: E8(),
      ...a.globalFilterOptions || {},
      onGlobalFilterChange: (z) => R(z, f),
      ...a.columnFiltersOptions || {},
      getFilteredRowModel: R8(),
      onColumnFiltersChange: (z) => R(z, p),
      onColumnOrderChange: (z) => R(z, g),
      ...a.visibilityOptions || {},
      onColumnVisibilityChange: (z) => R(z, v),
      ...a.columnPinningOptions || {},
      onColumnPinningChange: (z) => R(z, m),
      ...a.columnSizingOptions || {},
      onColumnSizingChange: (z) => R(z, y),
      onColumnSizingInfoChange: (z) => R(z, x),
      ...a.rowSelectionOptions || {},
      onRowSelectionChange: (z) => R(z, b),
      ...a.rowPinningOptions || {},
      onRowPinningChange: (z) => R(z, C),
      ...a.sortingOptions || {},
      getSortedRowModel: L8(),
      onSortingChange: (z) => R(z, w),
      ...a.groupingOptions || {},
      onGroupingChange: (z) => R(z, $),
      ...a.expandedOptions || {},
      getExpandedRowModel: T8(),
      onExpandedChange: (z) => R(z, B),
      ...a.paginationOptions || {},
      onPaginationChange: (z) => R(z, I),
      ...a.facetedOptions || {},
      state: {
        get globalFilter() {
          return f.value;
        },
        get columnFilters() {
          return p.value;
        },
        get columnOrder() {
          return g.value;
        },
        get columnVisibility() {
          return v.value;
        },
        get columnPinning() {
          return m.value;
        },
        get expanded() {
          return B.value;
        },
        get rowSelection() {
          return b.value;
        },
        get sorting() {
          return w.value;
        },
        get grouping() {
          return $.value;
        },
        get rowPinning() {
          return C.value;
        },
        get columnSizing() {
          return y.value;
        },
        get columnSizingInfo() {
          return x.value;
        },
        get pagination() {
          return I.value;
        }
      }
    });
    function R(z, G) {
      G.value = typeof z == "function" ? z(G.value) : z;
    }
    function F(z, G) {
      if (!a.onSelect)
        return;
      const Y = z.target;
      Y.closest("button") || Y.closest("a") || (z.preventDefault(), z.stopPropagation(), a.onSelect(G, z));
    }
    function H(z, G) {
      a.onHover && a.onHover(z, G);
    }
    function j(z, G) {
      a.onContextmenu && (Array.isArray(a.onContextmenu) ? a.onContextmenu.forEach((Y) => Y(z, G)) : a.onContextmenu(z, G));
    }
    function K(z, G) {
      return typeof z == "function" ? z(G) : z;
    }
    return ye(
      () => a.data,
      () => {
        i.value = a.data ? [...a.data] : [];
      },
      a.watchOptions
    ), t({
      tableRef: E,
      tableApi: P
    }), (z, G) => (h(), k(u(U), {
      as: z.as,
      class: A(d.value.root({ class: [a.ui?.root, a.class] }))
    }, {
      default: _(() => [
        J("table", {
          ref_key: "tableRef",
          ref: E,
          class: A(d.value.base({ class: [a.ui?.base] }))
        }, [
          z.caption || n.caption ? (h(), M("caption", {
            key: 0,
            class: A(d.value.caption({ class: [a.ui?.caption] }))
          }, [
            S(z.$slots, "caption", {}, () => [
              ee(X(z.caption), 1)
            ])
          ], 2)) : D("", !0),
          J("thead", {
            class: A(d.value.thead({ class: [a.ui?.thead] }))
          }, [
            (h(!0), M(te, null, le(u(P).getHeaderGroups(), (Y) => (h(), M("tr", {
              key: Y.id,
              class: A(d.value.tr({ class: [a.ui?.tr] }))
            }, [
              (h(!0), M(te, null, le(Y.headers, (q) => (h(), M("th", {
                key: q.id,
                "data-pinned": q.column.getIsPinned(),
                scope: q.colSpan > 1 ? "colgroup" : "col",
                colspan: q.colSpan > 1 ? q.colSpan : void 0,
                rowspan: q.rowSpan > 1 ? q.rowSpan : void 0,
                class: A(d.value.th({
                  class: [
                    a.ui?.th,
                    K(q.column.columnDef.meta?.class?.th, q)
                  ],
                  pinned: !!q.column.getIsPinned()
                }))
              }, [
                S(z.$slots, `${q.id}-header`, O({ ref_for: !0 }, q.getContext()), () => [
                  q.isPlaceholder ? D("", !0) : (h(), k(u(ad), {
                    key: 0,
                    render: q.column.columnDef.header,
                    props: q.getContext()
                  }, null, 8, ["render", "props"]))
                ])
              ], 10, V8))), 128))
            ], 2))), 128)),
            J("tr", {
              class: A(d.value.separator({ class: [a.ui?.separator] }))
            }, null, 2)
          ], 2),
          J("tbody", {
            class: A(d.value.tbody({ class: [a.ui?.tbody] }))
          }, [
            S(z.$slots, "body-top"),
            u(P).getRowModel().rows?.length ? (h(!0), M(te, { key: 0 }, le(u(P).getRowModel().rows, (Y) => (h(), M(te, {
              key: Y.id
            }, [
              J("tr", {
                "data-selected": Y.getIsSelected(),
                "data-selectable": !!a.onSelect || !!a.onHover || !!a.onContextmenu,
                "data-expanded": Y.getIsExpanded(),
                role: a.onSelect ? "button" : void 0,
                tabindex: a.onSelect ? 0 : void 0,
                class: A(d.value.tr({
                  class: [
                    a.ui?.tr,
                    K(u(P).options.meta?.class?.tr, Y)
                  ]
                })),
                style: It(K(u(P).options.meta?.style?.tr, Y)),
                onClick: (q) => F(q, Y),
                onPointerenter: (q) => H(q, Y),
                onPointerleave: G[0] || (G[0] = (q) => H(q, null)),
                onContextmenu: (q) => j(q, Y)
              }, [
                (h(!0), M(te, null, le(Y.getVisibleCells(), (q) => (h(), M("td", {
                  key: q.id,
                  "data-pinned": q.column.getIsPinned(),
                  colspan: K(q.column.columnDef.meta?.colspan?.td, q),
                  rowspan: K(q.column.columnDef.meta?.rowspan?.td, q),
                  class: A(d.value.td({
                    class: [
                      a.ui?.td,
                      K(q.column.columnDef.meta?.class?.td, q)
                    ],
                    pinned: !!q.column.getIsPinned()
                  })),
                  style: It(K(q.column.columnDef.meta?.style?.td, q))
                }, [
                  S(z.$slots, `${q.column.id}-cell`, O({ ref_for: !0 }, q.getContext()), () => [
                    V(u(ad), {
                      render: q.column.columnDef.cell,
                      props: q.getContext()
                    }, null, 8, ["render", "props"])
                  ])
                ], 14, H8))), 128))
              ], 46, N8),
              Y.getIsExpanded() ? (h(), M("tr", {
                key: 0,
                class: A(d.value.tr({ class: [a.ui?.tr] }))
              }, [
                J("td", {
                  colspan: Y.getAllCells().length,
                  class: A(d.value.td({ class: [a.ui?.td] }))
                }, [
                  S(z.$slots, "expanded", { row: Y })
                ], 10, j8)
              ], 2)) : D("", !0)
            ], 64))), 128)) : z.loading && n.loading ? (h(), M("tr", K8, [
              J("td", {
                colspan: u(P).getAllLeafColumns().length,
                class: A(d.value.loading({ class: a.ui?.loading }))
              }, [
                S(z.$slots, "loading")
              ], 10, G8)
            ])) : (h(), M("tr", U8, [
              J("td", {
                colspan: u(P).getAllLeafColumns().length,
                class: A(d.value.empty({ class: a.ui?.empty }))
              }, [
                S(z.$slots, "empty", {}, () => [
                  ee(X(z.empty || u(r)("table.noData")), 1)
                ])
              ], 10, W8)
            ])),
            S(z.$slots, "body-bottom")
          ], 2),
          c.value ? (h(), M("tfoot", {
            key: 1,
            class: A(d.value.tfoot({ class: [a.ui?.tfoot] }))
          }, [
            J("tr", {
              class: A(d.value.separator({ class: [a.ui?.separator] }))
            }, null, 2),
            (h(!0), M(te, null, le(u(P).getFooterGroups(), (Y) => (h(), M("tr", {
              key: Y.id,
              class: A(d.value.tr({ class: [a.ui?.tr] }))
            }, [
              (h(!0), M(te, null, le(Y.headers, (q) => (h(), M("th", {
                key: q.id,
                "data-pinned": q.column.getIsPinned(),
                colspan: q.colSpan > 1 ? q.colSpan : void 0,
                rowspan: q.rowSpan > 1 ? q.rowSpan : void 0,
                class: A(d.value.th({
                  class: [
                    a.ui?.th,
                    K(q.column.columnDef.meta?.class?.th, q)
                  ],
                  pinned: !!q.column.getIsPinned()
                })),
                style: It(K(q.column.columnDef.meta?.style?.th, q))
              }, [
                S(z.$slots, `${q.id}-footer`, O({ ref_for: !0 }, q.getContext()), () => [
                  q.isPlaceholder ? D("", !0) : (h(), k(u(ad), {
                    key: 0,
                    render: q.column.columnDef.footer,
                    props: q.getContext()
                  }, null, 8, ["render", "props"]))
                ])
              ], 14, Y8))), 128))
            ], 2))), 128))
          ], 2)) : D("", !0)
        ], 2)
      ]),
      _: 3
    }, 8, ["as", "class"]));
  }
}), X8 = {
  slots: {
    root: "flex items-center gap-2",
    list: "relative flex p-1 group",
    indicator: "absolute transition-[translate,width] duration-200",
    trigger: [
      "group relative inline-flex items-center min-w-0 data-[state=inactive]:text-muted hover:data-[state=inactive]:not-disabled:text-default font-medium rounded-md disabled:cursor-not-allowed disabled:opacity-75",
      "transition-colors"
    ],
    leadingIcon: "shrink-0",
    leadingAvatar: "shrink-0",
    leadingAvatarSize: "",
    label: "truncate",
    trailingBadge: "shrink-0",
    trailingBadgeSize: "sm",
    content: "focus:outline-none w-full"
  },
  variants: {
    color: {
      primary: "",
      secondary: "",
      success: "",
      info: "",
      warning: "",
      error: "",
      neutral: ""
    },
    variant: {
      pill: {
        list: "bg-elevated rounded-lg",
        trigger: "grow",
        indicator: "rounded-md shadow-xs"
      },
      link: {
        list: "border-default",
        indicator: "rounded-full",
        trigger: "focus:outline-none"
      }
    },
    orientation: {
      horizontal: {
        root: "flex-col",
        list: "w-full",
        indicator: "left-0 w-(--reka-tabs-indicator-size) translate-x-(--reka-tabs-indicator-position)",
        trigger: "justify-center"
      },
      vertical: {
        list: "flex-col",
        indicator: "top-0 h-(--reka-tabs-indicator-size) translate-y-(--reka-tabs-indicator-position)"
      }
    },
    size: {
      xs: {
        trigger: "px-2 py-1 text-xs gap-1",
        leadingIcon: "size-4",
        leadingAvatarSize: "3xs"
      },
      sm: {
        trigger: "px-2.5 py-1.5 text-xs gap-1.5",
        leadingIcon: "size-4",
        leadingAvatarSize: "3xs"
      },
      md: {
        trigger: "px-3 py-1.5 text-sm gap-1.5",
        leadingIcon: "size-5",
        leadingAvatarSize: "2xs"
      },
      lg: {
        trigger: "px-3 py-2 text-sm gap-2",
        leadingIcon: "size-5",
        leadingAvatarSize: "2xs"
      },
      xl: {
        trigger: "px-3 py-2 text-base gap-2",
        leadingIcon: "size-6",
        leadingAvatarSize: "xs"
      }
    }
  },
  compoundVariants: [
    {
      orientation: "horizontal",
      variant: "pill",
      class: {
        indicator: "inset-y-1"
      }
    },
    {
      orientation: "horizontal",
      variant: "link",
      class: {
        list: "border-b -mb-px",
        indicator: "-bottom-px h-px"
      }
    },
    {
      orientation: "vertical",
      variant: "pill",
      class: {
        indicator: "inset-x-1",
        list: "items-center"
      }
    },
    {
      orientation: "vertical",
      variant: "link",
      class: {
        list: "border-s -ms-px",
        indicator: "-start-px w-px"
      }
    },
    {
      color: "primary",
      variant: "pill",
      class: {
        indicator: "bg-primary",
        trigger: "data-[state=active]:text-inverted focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-primary"
      }
    },
    {
      color: "secondary",
      variant: "pill",
      class: {
        indicator: "bg-secondary",
        trigger: "data-[state=active]:text-inverted focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-secondary"
      }
    },
    {
      color: "success",
      variant: "pill",
      class: {
        indicator: "bg-success",
        trigger: "data-[state=active]:text-inverted focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-success"
      }
    },
    {
      color: "info",
      variant: "pill",
      class: {
        indicator: "bg-info",
        trigger: "data-[state=active]:text-inverted focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-info"
      }
    },
    {
      color: "warning",
      variant: "pill",
      class: {
        indicator: "bg-warning",
        trigger: "data-[state=active]:text-inverted focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-warning"
      }
    },
    {
      color: "error",
      variant: "pill",
      class: {
        indicator: "bg-error",
        trigger: "data-[state=active]:text-inverted focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-error"
      }
    },
    {
      color: "neutral",
      variant: "pill",
      class: {
        indicator: "bg-inverted",
        trigger: "data-[state=active]:text-inverted focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-inverted"
      }
    },
    {
      color: "primary",
      variant: "link",
      class: {
        indicator: "bg-primary",
        trigger: "data-[state=active]:text-primary focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-primary"
      }
    },
    {
      color: "secondary",
      variant: "link",
      class: {
        indicator: "bg-secondary",
        trigger: "data-[state=active]:text-secondary focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-secondary"
      }
    },
    {
      color: "success",
      variant: "link",
      class: {
        indicator: "bg-success",
        trigger: "data-[state=active]:text-success focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-success"
      }
    },
    {
      color: "info",
      variant: "link",
      class: {
        indicator: "bg-info",
        trigger: "data-[state=active]:text-info focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-info"
      }
    },
    {
      color: "warning",
      variant: "link",
      class: {
        indicator: "bg-warning",
        trigger: "data-[state=active]:text-warning focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-warning"
      }
    },
    {
      color: "error",
      variant: "link",
      class: {
        indicator: "bg-error",
        trigger: "data-[state=active]:text-error focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-error"
      }
    },
    {
      color: "neutral",
      variant: "link",
      class: {
        indicator: "bg-inverted",
        trigger: "data-[state=active]:text-highlighted focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-inverted"
      }
    }
  ],
  defaultVariants: {
    color: "primary",
    variant: "pill",
    size: "md"
  }
}, _j = /* @__PURE__ */ L({
  __name: "Tabs",
  props: {
    as: {},
    items: {},
    color: {},
    variant: {},
    size: {},
    orientation: { default: "horizontal" },
    content: { type: Boolean, default: !0 },
    labelKey: { default: "label" },
    class: {},
    ui: {},
    defaultValue: { default: "0" },
    modelValue: {},
    activationMode: {},
    unmountOnHide: { type: Boolean, default: !0 }
  },
  emits: ["update:modelValue"],
  setup(e, { expose: t, emit: a }) {
    const n = e, r = a, s = Se(), i = ue(), o = Xe(tt(n, "as", "modelValue", "defaultValue", "orientation", "activationMode", "unmountOnHide"), r), l = T(() => W({ extend: W(X8), ...i.ui?.tabs || {} })({
      color: n.color,
      variant: n.variant,
      size: n.size,
      orientation: n.orientation
    })), d = N([]);
    return t({
      triggersRef: d
    }), (c, f) => (h(), k(u(_P), O(u(o), {
      class: l.value.root({ class: [n.ui?.root, n.class] })
    }), {
      default: _(() => [
        V(u(TP), {
          class: A(l.value.list({ class: n.ui?.list }))
        }, {
          default: _(() => [
            V(u(IP), {
              class: A(l.value.indicator({ class: n.ui?.indicator }))
            }, null, 8, ["class"]),
            S(c.$slots, "list-leading"),
            (h(!0), M(te, null, le(c.items, (p, g) => (h(), k(u(PP), {
              key: g,
              ref_for: !0,
              ref: (v) => d.value[g] = v,
              value: p.value || String(g),
              disabled: p.disabled,
              class: A(l.value.trigger({ class: [n.ui?.trigger, p.ui?.trigger] }))
            }, {
              default: _(() => [
                S(c.$slots, "leading", {
                  item: p,
                  index: g
                }, () => [
                  p.icon ? (h(), k(he, {
                    key: 0,
                    name: p.icon,
                    class: A(l.value.leadingIcon({ class: [n.ui?.leadingIcon, p.ui?.leadingIcon] }))
                  }, null, 8, ["name", "class"])) : p.avatar ? (h(), k(ft, O({
                    key: 1,
                    size: p.ui?.leadingAvatarSize || n.ui?.leadingAvatarSize || l.value.leadingAvatarSize()
                  }, { ref_for: !0 }, p.avatar, {
                    class: l.value.leadingAvatar({ class: [n.ui?.leadingAvatar, p.ui?.leadingAvatar] })
                  }), null, 16, ["size", "class"])) : D("", !0)
                ]),
                u(qe)(p, n.labelKey) || s.default ? (h(), M("span", {
                  key: 0,
                  class: A(l.value.label({ class: [n.ui?.label, p.ui?.label] }))
                }, [
                  S(c.$slots, "default", {
                    item: p,
                    index: g
                  }, () => [
                    ee(X(u(qe)(p, n.labelKey)), 1)
                  ])
                ], 2)) : D("", !0),
                S(c.$slots, "trailing", {
                  item: p,
                  index: g
                }, () => [
                  p.badge !== void 0 ? (h(), k(Ls, O({
                    key: 0,
                    color: "neutral",
                    variant: "outline",
                    size: p.ui?.trailingBadgeSize || n.ui?.trailingBadgeSize || l.value.trailingBadgeSize()
                  }, { ref_for: !0 }, typeof p.badge == "string" || typeof p.badge == "number" ? { label: p.badge } : p.badge, {
                    class: l.value.trailingBadge({ class: [n.ui?.trailingBadge, p.ui?.trailingBadge] })
                  }), null, 16, ["size", "class"])) : D("", !0)
                ])
              ]),
              _: 2
            }, 1032, ["value", "disabled", "class"]))), 128)),
            S(c.$slots, "list-trailing")
          ]),
          _: 3
        }, 8, ["class"]),
        c.content ? (h(!0), M(te, { key: 0 }, le(c.items, (p, g) => (h(), k(u(AP), {
          key: g,
          value: p.value || String(g),
          class: A(l.value.content({ class: [n.ui?.content, p.ui?.content, p.class] }))
        }, {
          default: _(() => [
            S(c.$slots, p.slot || "content", {
              item: p,
              index: g
            }, () => [
              ee(X(p.content), 1)
            ])
          ]),
          _: 2
        }, 1032, ["value", "class"]))), 128)) : D("", !0)
      ]),
      _: 3
    }, 16, ["class"]));
  }
}), J8 = {
  slots: {
    root: "flex gap-1.5",
    item: "group relative flex flex-1 gap-3",
    container: "relative flex items-center gap-1.5",
    indicator: "group-data-[state=completed]:text-inverted group-data-[state=active]:text-inverted text-muted",
    separator: "flex-1 rounded-full bg-elevated",
    wrapper: "w-full",
    date: "text-dimmed text-xs/5",
    title: "font-medium text-highlighted text-sm",
    description: "text-muted text-wrap text-sm"
  },
  variants: {
    orientation: {
      horizontal: {
        root: "flex-row w-full",
        item: "flex-col",
        separator: "h-0.5"
      },
      vertical: {
        root: "flex-col",
        container: "flex-col",
        separator: "w-0.5"
      }
    },
    color: {
      primary: {
        indicator: "group-data-[state=completed]:bg-primary group-data-[state=active]:bg-primary"
      },
      secondary: {
        indicator: "group-data-[state=completed]:bg-secondary group-data-[state=active]:bg-secondary"
      },
      success: {
        indicator: "group-data-[state=completed]:bg-success group-data-[state=active]:bg-success"
      },
      info: {
        indicator: "group-data-[state=completed]:bg-info group-data-[state=active]:bg-info"
      },
      warning: {
        indicator: "group-data-[state=completed]:bg-warning group-data-[state=active]:bg-warning"
      },
      error: {
        indicator: "group-data-[state=completed]:bg-error group-data-[state=active]:bg-error"
      },
      neutral: {
        indicator: "group-data-[state=completed]:bg-inverted group-data-[state=active]:bg-inverted"
      }
    },
    size: {
      "3xs": "",
      "2xs": "",
      xs: "",
      sm: "",
      md: "",
      lg: "",
      xl: "",
      "2xl": "",
      "3xl": ""
    },
    reverse: {
      true: ""
    }
  },
  compoundVariants: [
    {
      color: "primary",
      reverse: !1,
      class: {
        separator: "group-data-[state=completed]:bg-primary"
      }
    },
    {
      color: "secondary",
      reverse: !1,
      class: {
        separator: "group-data-[state=completed]:bg-secondary"
      }
    },
    {
      color: "success",
      reverse: !1,
      class: {
        separator: "group-data-[state=completed]:bg-success"
      }
    },
    {
      color: "info",
      reverse: !1,
      class: {
        separator: "group-data-[state=completed]:bg-info"
      }
    },
    {
      color: "warning",
      reverse: !1,
      class: {
        separator: "group-data-[state=completed]:bg-warning"
      }
    },
    {
      color: "error",
      reverse: !1,
      class: {
        separator: "group-data-[state=completed]:bg-error"
      }
    },
    {
      color: "primary",
      reverse: !0,
      class: {
        separator: "group-data-[state=active]:bg-primary group-data-[state=completed]:bg-primary"
      }
    },
    {
      color: "secondary",
      reverse: !0,
      class: {
        separator: "group-data-[state=active]:bg-secondary group-data-[state=completed]:bg-secondary"
      }
    },
    {
      color: "success",
      reverse: !0,
      class: {
        separator: "group-data-[state=active]:bg-success group-data-[state=completed]:bg-success"
      }
    },
    {
      color: "info",
      reverse: !0,
      class: {
        separator: "group-data-[state=active]:bg-info group-data-[state=completed]:bg-info"
      }
    },
    {
      color: "warning",
      reverse: !0,
      class: {
        separator: "group-data-[state=active]:bg-warning group-data-[state=completed]:bg-warning"
      }
    },
    {
      color: "error",
      reverse: !0,
      class: {
        separator: "group-data-[state=active]:bg-error group-data-[state=completed]:bg-error"
      }
    },
    {
      color: "neutral",
      reverse: !1,
      class: {
        separator: "group-data-[state=completed]:bg-inverted"
      }
    },
    {
      color: "neutral",
      reverse: !0,
      class: {
        separator: "group-data-[state=active]:bg-inverted group-data-[state=completed]:bg-inverted"
      }
    },
    {
      orientation: "horizontal",
      size: "3xs",
      class: {
        wrapper: "pe-4.5"
      }
    },
    {
      orientation: "horizontal",
      size: "2xs",
      class: {
        wrapper: "pe-5"
      }
    },
    {
      orientation: "horizontal",
      size: "xs",
      class: {
        wrapper: "pe-5.5"
      }
    },
    {
      orientation: "horizontal",
      size: "sm",
      class: {
        wrapper: "pe-6"
      }
    },
    {
      orientation: "horizontal",
      size: "md",
      class: {
        wrapper: "pe-6.5"
      }
    },
    {
      orientation: "horizontal",
      size: "lg",
      class: {
        wrapper: "pe-7"
      }
    },
    {
      orientation: "horizontal",
      size: "xl",
      class: {
        wrapper: "pe-7.5"
      }
    },
    {
      orientation: "horizontal",
      size: "2xl",
      class: {
        wrapper: "pe-8"
      }
    },
    {
      orientation: "horizontal",
      size: "3xl",
      class: {
        wrapper: "pe-8.5"
      }
    },
    {
      orientation: "vertical",
      size: "3xs",
      class: {
        wrapper: "-mt-0.5 pb-4.5"
      }
    },
    {
      orientation: "vertical",
      size: "2xs",
      class: {
        wrapper: "pb-5"
      }
    },
    {
      orientation: "vertical",
      size: "xs",
      class: {
        wrapper: "mt-0.5 pb-5.5"
      }
    },
    {
      orientation: "vertical",
      size: "sm",
      class: {
        wrapper: "mt-1 pb-6"
      }
    },
    {
      orientation: "vertical",
      size: "md",
      class: {
        wrapper: "mt-1.5 pb-6.5"
      }
    },
    {
      orientation: "vertical",
      size: "lg",
      class: {
        wrapper: "mt-2 pb-7"
      }
    },
    {
      orientation: "vertical",
      size: "xl",
      class: {
        wrapper: "mt-2.5 pb-7.5"
      }
    },
    {
      orientation: "vertical",
      size: "2xl",
      class: {
        wrapper: "mt-3 pb-8"
      }
    },
    {
      orientation: "vertical",
      size: "3xl",
      class: {
        wrapper: "mt-3.5 pb-8.5"
      }
    }
  ],
  defaultVariants: {
    size: "md",
    color: "primary"
  }
}, Q8 = ["data-state"], kj = /* @__PURE__ */ L({
  __name: "Timeline",
  props: /* @__PURE__ */ mt({
    as: {},
    items: {},
    size: {},
    color: {},
    orientation: { default: "vertical" },
    defaultValue: {},
    reverse: { type: Boolean },
    class: {},
    ui: {}
  }, {
    modelValue: {},
    modelModifiers: {}
  }),
  emits: ["update:modelValue"],
  setup(e) {
    const t = e, a = Se(), n = lt(e, "modelValue"), r = ue(), s = T(() => W({ extend: W(J8), ...r.ui?.timeline || {} })({
      orientation: t.orientation,
      size: t.size,
      color: t.color,
      reverse: t.reverse
    })), i = T(() => {
      const l = n.value ?? t.defaultValue;
      return typeof l == "string" ? t.items.findIndex((d) => d.value === l) ?? -1 : t.reverse ? l != null ? t.items.length - 1 - l : -1 : l ?? -1;
    });
    function o(l) {
      if (i.value !== -1)
        return l === i.value ? "active" : t.reverse ? l > i.value ? "completed" : void 0 : l < i.value ? "completed" : void 0;
    }
    return (l, d) => (h(), k(u(U), {
      as: l.as,
      "data-orientation": l.orientation,
      class: A(s.value.root({ class: [t.ui?.root, t.class] }))
    }, {
      default: _(() => [
        (h(!0), M(te, null, le(l.items, (c, f) => (h(), M("div", {
          key: c.value ?? f,
          class: A(s.value.item({ class: [t.ui?.item, c.ui?.item, c.class] })),
          "data-state": o(f)
        }, [
          J("div", {
            class: A(s.value.container({ class: [t.ui?.container, c.ui?.container] }))
          }, [
            V(ft, O({
              size: l.size,
              icon: c.icon
            }, { ref_for: !0 }, typeof c.avatar == "object" ? c.avatar : {}, {
              class: s.value.indicator({ class: [t.ui?.indicator, c.ui?.indicator] }),
              ui: { icon: "text-inherit", fallback: "text-inherit" }
            }), {
              default: _(() => [
                S(l.$slots, c.slot ? `${c.slot}-indicator` : "indicator", {
                  item: c
                })
              ]),
              _: 2
            }, 1040, ["size", "icon", "class"]),
            f < l.items.length - 1 ? (h(), k(u(Bf), {
              key: 0,
              class: A(s.value.separator({ class: [t.ui?.separator, c.ui?.separator] })),
              orientation: t.orientation
            }, null, 8, ["class", "orientation"])) : D("", !0)
          ], 2),
          J("div", {
            class: A(s.value.wrapper({ class: [t.ui?.wrapper, c.ui?.wrapper] }))
          }, [
            c.date ? (h(), M("div", {
              key: 0,
              class: A(s.value.date({ class: [t.ui?.date, c.ui?.date] }))
            }, [
              S(l.$slots, c.slot ? `${c.slot}-date` : "date", {
                item: c
              }, () => [
                ee(X(c.date), 1)
              ])
            ], 2)) : D("", !0),
            c.title || a.title ? (h(), M("div", {
              key: 1,
              class: A(s.value.title({ class: [t.ui?.title, c.ui?.title] }))
            }, [
              S(l.$slots, c.slot ? `${c.slot}-title` : "title", {
                item: c
              }, () => [
                ee(X(c.title), 1)
              ])
            ], 2)) : D("", !0),
            c.description || a.description ? (h(), M("div", {
              key: 2,
              class: A(s.value.description({ class: [t.ui?.description, c.ui?.description] }))
            }, [
              S(l.$slots, c.slot ? `${c.slot}-description` : "description", {
                item: c
              }, () => [
                ee(X(c.description), 1)
              ])
            ], 2)) : D("", !0)
          ], 2)
        ], 10, Q8))), 128))
      ]),
      _: 3
    }, 8, ["as", "data-orientation", "class"]));
  }
}), Z8 = {
  slots: {
    root: "relative isolate",
    item: "",
    listWithChildren: "ms-4.5 border-s border-default",
    itemWithChildren: "ps-1.5 -ms-px",
    link: "relative group w-full flex items-center text-sm before:absolute before:inset-y-px before:inset-x-0 before:z-[-1] before:rounded-md focus:outline-none focus-visible:outline-none focus-visible:before:ring-inset focus-visible:before:ring-2",
    linkLeadingIcon: "shrink-0",
    linkLabel: "truncate",
    linkTrailing: "ms-auto inline-flex gap-1.5 items-center",
    linkTrailingIcon: "shrink-0 transform transition-transform duration-200 group-data-expanded:rotate-180"
  },
  variants: {
    color: {
      primary: {
        link: "focus-visible:before:ring-primary"
      },
      secondary: {
        link: "focus-visible:before:ring-secondary"
      },
      success: {
        link: "focus-visible:before:ring-success"
      },
      info: {
        link: "focus-visible:before:ring-info"
      },
      warning: {
        link: "focus-visible:before:ring-warning"
      },
      error: {
        link: "focus-visible:before:ring-error"
      },
      neutral: {
        link: "focus-visible:before:ring-inverted"
      }
    },
    size: {
      xs: {
        link: "px-2 py-1 text-xs gap-1",
        linkLeadingIcon: "size-4",
        linkTrailingIcon: "size-4"
      },
      sm: {
        link: "px-2.5 py-1.5 text-xs gap-1.5",
        linkLeadingIcon: "size-4",
        linkTrailingIcon: "size-4"
      },
      md: {
        link: "px-2.5 py-1.5 text-sm gap-1.5",
        linkLeadingIcon: "size-5",
        linkTrailingIcon: "size-5"
      },
      lg: {
        link: "px-3 py-2 text-sm gap-2",
        linkLeadingIcon: "size-5",
        linkTrailingIcon: "size-5"
      },
      xl: {
        link: "px-3 py-2 text-base gap-2",
        linkLeadingIcon: "size-6",
        linkTrailingIcon: "size-6"
      }
    },
    selected: {
      true: {
        link: "before:bg-elevated"
      },
      false: {
        link: [
          "hover:not-disabled:text-highlighted hover:not-disabled:before:bg-elevated/50",
          "transition-colors before:transition-colors"
        ]
      }
    },
    disabled: {
      true: {
        link: "cursor-not-allowed opacity-75"
      }
    }
  },
  compoundVariants: [
    {
      color: "primary",
      selected: !0,
      class: {
        link: "text-primary"
      }
    },
    {
      color: "secondary",
      selected: !0,
      class: {
        link: "text-secondary"
      }
    },
    {
      color: "success",
      selected: !0,
      class: {
        link: "text-success"
      }
    },
    {
      color: "info",
      selected: !0,
      class: {
        link: "text-info"
      }
    },
    {
      color: "warning",
      selected: !0,
      class: {
        link: "text-warning"
      }
    },
    {
      color: "error",
      selected: !0,
      class: {
        link: "text-error"
      }
    },
    {
      color: "neutral",
      selected: !0,
      class: {
        link: "text-highlighted"
      }
    }
  ],
  defaultVariants: {
    color: "primary",
    size: "md"
  }
}, e4 = ["disabled"], Aj = /* @__PURE__ */ L({
  inheritAttrs: !1,
  __name: "Tree",
  props: {
    as: {},
    color: {},
    size: {},
    valueKey: { default: "value" },
    labelKey: { default: "label" },
    trailingIcon: {},
    expandedIcon: {},
    collapsedIcon: {},
    items: {},
    modelValue: {},
    defaultValue: {},
    multiple: { type: Boolean },
    class: {},
    ui: {},
    expanded: {},
    defaultExpanded: {},
    selectionBehavior: {},
    propagateSelect: { type: Boolean },
    disabled: { type: Boolean },
    bubbleSelect: { type: Boolean }
  },
  emits: ["update:expanded", "update:modelValue"],
  setup(e, { emit: t }) {
    const a = e, n = t, r = Se(), s = ue(), i = Xe(tt(a, "as", "modelValue", "defaultValue", "items", "multiple", "expanded", "disabled", "propagateSelect", "bubbleSelect"), n), [o, l] = /* @__PURE__ */ Lt(), d = T(() => W({ extend: W(Z8), ...s.ui?.tree || {} })({
      color: a.color,
      size: a.size
    }));
    function c(v) {
      return qe(v, a.labelKey);
    }
    function f(v) {
      return qe(v, a.valueKey) ?? qe(v, a.labelKey);
    }
    function p(v) {
      const m = v.defaultExpanded ? f(v) : null, y = v.children?.flatMap((x) => p(x)) ?? [];
      return [m, ...y].filter(Boolean);
    }
    const g = T(
      () => a.defaultExpanded ?? a.items?.flatMap((v) => p(v))
    );
    return (v, m) => (h(), M(te, null, [
      V(u(o), null, {
        default: _(({ items: y, level: x }) => [
          (h(!0), M(te, null, le(y, (b, C) => (h(), M("li", {
            key: `${x}-${C}`,
            class: A(x > 0 ? d.value.itemWithChildren({ class: [a.ui?.itemWithChildren, b.ui?.itemWithChildren] }) : d.value.item({ class: [a.ui?.item, b.ui?.item] }))
          }, [
            V(u(FD), {
              "as-child": "",
              level: x,
              value: b,
              onToggle: b.onToggle,
              onSelect: b.onSelect
            }, {
              default: _(({ isExpanded: w, isSelected: $ }) => [
                S(v.$slots, b.slot ? `${b.slot}-wrapper` : "item-wrapper", O({ ref_for: !0 }, { item: b, index: C, level: x, expanded: w, selected: $ }, {
                  item: b
                }), () => [
                  J("button", {
                    type: "button",
                    disabled: b.disabled || v.disabled,
                    class: A(d.value.link({ class: [a.ui?.link, b.ui?.link, b.class], selected: $, disabled: b.disabled || v.disabled }))
                  }, [
                    S(v.$slots, b.slot || "item", O({ ref_for: !0 }, { index: C, level: x, expanded: w, selected: $ }, {
                      item: b
                    }), () => [
                      S(v.$slots, b.slot ? `${b.slot}-leading` : "item-leading", O({ ref_for: !0 }, { index: C, level: x, expanded: w, selected: $ }, {
                        item: b
                      }), () => [
                        b.icon ? (h(), k(he, {
                          key: 0,
                          name: b.icon,
                          class: A(d.value.linkLeadingIcon({ class: [a.ui?.linkLeadingIcon, b.ui?.linkLeadingIcon] }))
                        }, null, 8, ["name", "class"])) : b.children?.length ? (h(), k(he, {
                          key: 1,
                          name: w ? v.expandedIcon ?? u(s).ui.icons.folderOpen : v.collapsedIcon ?? u(s).ui.icons.folder,
                          class: A(d.value.linkLeadingIcon({ class: [a.ui?.linkLeadingIcon, b.ui?.linkLeadingIcon] }))
                        }, null, 8, ["name", "class"])) : D("", !0)
                      ]),
                      c(b) || r[b.slot ? `${b.slot}-label` : "item-label"] ? (h(), M("span", {
                        key: 0,
                        class: A(d.value.linkLabel({ class: [a.ui?.linkLabel, b.ui?.linkLabel] }))
                      }, [
                        S(v.$slots, b.slot ? `${b.slot}-label` : "item-label", O({ ref_for: !0 }, { item: b, index: C, level: x, expanded: w, selected: $ }, {
                          item: b
                        }), () => [
                          ee(X(c(b)), 1)
                        ])
                      ], 2)) : D("", !0),
                      b.trailingIcon || b.children?.length || r[b.slot ? `${b.slot}-trailing` : "item-trailing"] ? (h(), M("span", {
                        key: 1,
                        class: A(d.value.linkTrailing({ class: [a.ui?.linkTrailing, b.ui?.linkTrailing] }))
                      }, [
                        S(v.$slots, b.slot ? `${b.slot}-trailing` : "item-trailing", O({ ref_for: !0 }, { item: b, index: C, level: x, expanded: w, selected: $ }, {
                          item: b
                        }), () => [
                          b.trailingIcon ? (h(), k(he, {
                            key: 0,
                            name: b.trailingIcon,
                            class: A(d.value.linkTrailingIcon({ class: [a.ui?.linkTrailingIcon, b.ui?.linkTrailingIcon] }))
                          }, null, 8, ["name", "class"])) : b.children?.length ? (h(), k(he, {
                            key: 1,
                            name: v.trailingIcon ?? u(s).ui.icons.chevronDown,
                            class: A(d.value.linkTrailingIcon({ class: [a.ui?.linkTrailingIcon, b.ui?.linkTrailingIcon] }))
                          }, null, 8, ["name", "class"])) : D("", !0)
                        ])
                      ], 2)) : D("", !0)
                    ])
                  ], 10, e4)
                ]),
                b.children?.length && w ? (h(), M("ul", {
                  key: 0,
                  class: A(d.value.listWithChildren({ class: [a.ui?.listWithChildren, b.ui?.listWithChildren] }))
                }, [
                  V(u(l), {
                    items: b.children,
                    level: x + 1
                  }, null, 8, ["items", "level"])
                ], 2)) : D("", !0)
              ]),
              _: 2
            }, 1032, ["level", "value", "onToggle", "onSelect"])
          ], 2))), 128))
        ]),
        _: 3
      }),
      V(u(MD), O({ ...u(i), ...v.$attrs }, {
        class: d.value.root({ class: [a.ui?.root, a.class] }),
        "get-key": f,
        "default-expanded": g.value,
        "selection-behavior": v.selectionBehavior
      }), {
        default: _(() => [
          V(u(l), {
            items: v.items,
            level: 0
          }, null, 8, ["items"])
        ]),
        _: 1
      }, 16, ["class", "default-expanded", "selection-behavior"])
    ], 64));
  }
});
export {
  n4 as UAccordion,
  r4 as UAlert,
  s4 as UApp,
  i4 as UAuthForm,
  ft as UAvatar,
  ML as UAvatarGroup,
  Ls as UBadge,
  o4 as UBanner,
  NL as UBlogPost,
  l4 as UBlogPosts,
  u4 as UBreadcrumb,
  Je as UButton,
  d4 as UCalendar,
  c4 as UCard,
  f4 as UCarousel,
  LO as UChangelogVersion,
  y4 as UChangelogVersions,
  Nh as UChatMessage,
  b4 as UChatMessages,
  w4 as UChatPalette,
  C4 as UChatPrompt,
  x4 as UChatPromptSubmit,
  x0 as UCheckbox,
  S4 as UCheckboxGroup,
  Rs as UChip,
  _4 as UCollapsible,
  P4 as UColorPicker,
  oH as UCommandPalette,
  Os as UContainer,
  D4 as UContextMenu,
  P1 as UContextMenuContent,
  M4 as UDashboardGroup,
  R4 as UDashboardNavbar,
  L4 as UDashboardPanel,
  R1 as UDashboardResizeHandle,
  O4 as UDashboardSearch,
  F4 as UDashboardSearchButton,
  z4 as UDashboardSidebar,
  q4 as UDashboardSidebarCollapse,
  D1 as UDashboardSidebarToggle,
  V4 as UDashboardToolbar,
  N1 as UDrawer,
  N4 as UDropdownMenu,
  H1 as UDropdownMenuContent,
  H4 as UError,
  j4 as UFieldGroup,
  K4 as UFileUpload,
  G4 as UFooter,
  U4 as UFooterColumns,
  yL as UForm,
  _L as UFormField,
  W4 as UHeader,
  he as UIcon,
  pl as UInput,
  Y4 as UInputMenu,
  X4 as UInputNumber,
  J4 as UInputTags,
  eo as UKbd,
  Wt as ULink,
  ha as ULinkBase,
  Q4 as UMain,
  u6 as UMarquee,
  Ip as UModal,
  Z4 as UNavigationMenu,
  aL as UOverlayProvider,
  ej as UPage,
  tj as UPageAnchors,
  aj as UPageAside,
  nj as UPageBody,
  rj as UPageCTA,
  sj as UPageCard,
  ij as UPageColumns,
  x6 as UPageFeature,
  oj as UPageGrid,
  lj as UPageHeader,
  uj as UPageHero,
  dj as UPageLinks,
  cj as UPageList,
  fj as UPageLogos,
  pj as UPageSection,
  gj as UPagination,
  BL as UPinInput,
  c6 as UPopover,
  M6 as UPricingPlan,
  vj as UPricingPlans,
  hj as UPricingTable,
  WR as UProgress,
  mj as URadioGroup,
  yj as USelect,
  EL as USelectMenu,
  sL as USeparator,
  bj as USkeleton,
  L1 as USlideover,
  wj as USlider,
  Cj as UStepper,
  xj as USwitch,
  Sj as UTable,
  _j as UTabs,
  V5 as UTextarea,
  kj as UTimeline,
  XR as UToast,
  ZR as UToaster,
  au as UTooltip,
  Aj as UTree,
  _0 as UUser,
  ue as useAppConfig
};